{"version":3,"sources":["hooks/useNavigationKeyActions.js","components/widgets/inputs/index.js","components/widgets/modal/render/orderDetail/detailGenerator.js","components/withKeyActions.js","components/widgets/cropimg/Cropper/BarSlider.js","components/widgets/cropimg/Cropper/CropperIMG.js","components/widgets/cropimg/Cropper/do-img-crop.js","components/widgets/cropimg/index.js","components/widgets/modal/render/orderDetail/paymentProof.js","components/widgets/modal/render/orderDetail/orderStatus.js","components/widgets/modal/render/orderDetail/confirmationCounter.js","components/widgets/modal/render/orderDetail/inProcessOrder.js","components/widgets/modal/render/orderDetail/infoComponent.js","components/widgets/modal/render/orderDetail/index.js","components/widgets/items/new-items-layout.js","components/wallets/views/viewAmount.js","components/withdrawAccounts/new/views/1method.js","components/wallets/deposit/views/modality.js","components/wallets/deposit/flows/index.js","components/wallets/deposit/depositLayout.js","components/widgets/toast/messages/index.js","components/wallets/deposit/depositContainer.js"],"names":["DEFAULT_ARGS","modalRestriction","prev","next","default","originalLength","useNavigationKeyActions","config","valuesAsProps","uniqueIdForElement","loader","items","currentSelection","setCurrentSelection","useState","isModalVisible","useSelector","state","form","isModalRenderShowing","ui","modal","render","useEffect","length","el","document","getElementById","focus","window","innerWidth","KEY_CODES_META","onkeydown","onkeyup","onkeypress","event","currentSelectionIsDownZero","elementId","keyCode","Math","max","min","newSelection","useItemsInteractions","props","keyActions","suprKeyAction","enterKeyAction","isSelected","setIsSelected","element","focusedId","onfocus","number","onblur","blur","stopPropagation","preventDefault","uniqid","setFocus","IconSwitch","loadable","CountryUrl","Environtment","InputForm","clase","disabled","address","focusAction","status","addressVerify","unFocusAction","state_item","autoFocus","className","style","display","label","active","type","placeholder","onChange","actualizarEstado","onFocus","onBlur","name","value","onKeyPress","handleKeyPress","autoComplete","icon","color","size","InputFormAuth","verifying","error","handleFocus","handleBlur","border","defaultValue","Component","InputDepositForm","placeHolder","finalValue","componentDidMount","this","setState","componentWillReceiveProps","number_format","actualizar","fontSize","InputCountryPrefix","toggleSection","search_result","open","update","clean_search_result","onClick","src","flag","alt","width","height","prefix","InputKycBasic","kyc","handleSubmit","step","_onFocus","search_results","Array","isArray","id","open_sect","top","map","item","inputProps","ui_type","console","log","pattern","classNames","onSubmit","data_state","colorMessage","message","moment","locale","DetailGenerator","order","title","TitleSuffix","theme","orders","setOrders","deposit_providers","tx_path","UseTxState","formatCurrency","useFormatCurrency","formatOrderText","async","itemText","currency","spent","to_spend_currency","bought","to_buy_currency","getState","format","amount","confirmations","cost","currency_type","depositProviderInfo","deposit_provider_id","depositProvider","depositAccount","ui_name","account","account_id","bussines_name","nit","created_at","amount_neto","inProcesOrder","transOrders","orderItem","Object","entries","ui_items","push","init","Container","TitleContainer","Title","indx","ItemContainer","LeftText","MiddleSection","RightText","fill","Text","styled","p","div","span","OnlySkeletonAnimation","section","device","tablet","withKeyActions","AsComponent","idCancel","useKeyActionAsClick","eventName","idAccept","BarSlider","CropperIMG","image","onCropComplete","crop","setChange","x","y","zoom","setZoom","deg","setDeg","cropAreaStyle","minWidth","minHeight","rotation","onRotationChange","aspect","onCropChange","onZoomChange","_","croppedAreaPixels","e","currentTarget","newDeg","getRadianAngle","degreeValue","PI","createImage","url","Promise","resolve","reject","Image","addEventListener","setAttribute","CropImg","React","imageSrc","imgRotation","croppedImage","current_zoom","showCroppedImage","img","cropArea","action","isAppLoading","pixelCrop","canvas","createElement","ctx","getContext","safeArea","sqrt","translate","rotate","drawImage","data","getImageData","putImageData","UrlToImg","toBlob","file","URL","createObjectURL","base64","toDataURL","urlImg","getCroppedImg","subirImg","cancelCroppedImg","cancelarSubidaImg","_id","siguiente","connect","dispatch","bindActionCreators","actions","PaymentProof","payload","coinsendaServices","currencies","currentOrder","imgProof","setImgProof","txId","setTxId","urlExplorer","setUrlExplorer","getPaymentProof","paymentProof","proof_of_payment","raw","QRCode","node_url","proof","PP","getDepositById","updateOrder","update_item_state","getData","PaymentProofContainer","LoaderContainer","justify","ProofContainer","HoverProof","IconContainer","copy","FiatPaymentProofZoom","StatusItem","skeleton","activated","toString","Status","Indicator","Description","Skeleton","StatusTitle","ui_text","DateStatusText","updated_at","OrderStatus","movil","orderState","setOrderState","skeletons","prop","api","completed","OrderStatusContainer","TopSectionStatus","orderStatus","SubTitle","description","StatusContainer","index","ConfirmationCounter","total","draw","c","clearInterval","draw_interval","tasaPercent","beginPath","arc","lineWidth","strokeStyle","stroke","prevProps","setInterval","total_confirmations","AbsoluteContainer2","RelativeContainer","AbsoluteContainer","ContCanvasConfirmation","ConfirmationContainer","TextContainer","Canvas","InProcessOrder","onErrorCatch","FiatOrder","CryptoOrder","isTabletOrMovilViewport","useViewport","InProcessOrderContainer","OrderContainer","TopSection","getTitle","Currency","DateIdContainter","DateText","GetIcon","BottomSectionContainer","UploadComponent","BottomSection","colorState","onDrag","setOnDrag","imgSrc","setImgSrc","toBigNumber","toastMessage","useToastMessage","goFileLoader","target","files","img_compressor","dataBase64","readFile","includesAnyImageMime","split","alert","user","globalState","modelData","orderAmount","limitAmount","BIOMETRIC_FIAT_LITMIT_AMOUNT","security_center","transactionSecurity","biometric","enabled","isGreaterThanOrEqualTo","Element","BiometricKyc","renderModal","orderData","confirmation","confirmDepositOrder","onDragOver","DropZoneComponent","dragLeave","DropZoneContainer","onDragLeave","capture","accept","unButtom","idForFileUpload","UploadContainer","UploadMiddle","UploadTextMiddle","UploadText","Buttom","coloIcon","RenderIcon","AiOutlineClockCircle","Section","laptop","tabletL","ReferralInfo","MAIN_COLOR","WithdrawFiatInfo","order_id","useParams","withdraw_account_id","withdrawAccount","withdraw_accounts","WithdrawAccountCont","IconCont","bank_name","DataContainer","toLowerCase","account_type","account_number","GetInfoComponentToRender","info","targetKey","is_referral","toRender","targetElement","querySelector","innerHTML","component","OrderSupervisor","on_click","forceClose","dataset","close_modal","includes","OrderDetail","isMovilViewport","TitleText","textState","ConsolidatedOrder","Layout","OrderIcon","DateTitle","CircleIconContainer","ContBackTopSection","BackTopSection","InfoComponent","consolidatedOrder","TotalAmount","code","Icon","i","backTopSection","h3","orderStateColors","swing_in_bottom_bck","timerId","NewItemsLayout","actives","primarySelect","itemType","pair_id","handleClick","specialMode","doSelectionForItem","clearTimeout","setTimeout","_handleClick","_activated","getCdnPath","memo","ViewAmountComponent","statusInput","ui_currency_name","minAmount","min_amount","getMinAmount","withdrawProviders","withdraw_account_list","wProvider","forEach","_wProvider","provider_type","provider","_wAccount","costs","same_bank","fixed","pp","parseInt","init_config","get_ui_name_currency","actualizarAmount","replace","updateAmountOnState","load_amount","operation_type","available","componentWillUnmount","atributos","buttonValidation","service","toUpperCase","parseFloat","mainCtaId","MethodView","select_method","item_active","withdraw","movil_viewport","alignSelf","marginTop","filter","key","idForAcceptButtonInDepositView","ModalityView","update_service_mode","service_mode","buttonActive","create_deposit_order","TransferFlow","deposit_way","deposit_service","service_modes","Success","CashFlow","short_bank_name","update_local_state","cash_payment","finalizar","final","finalButton","new_ticket","deposit_order","xmlns","strokeWidth","cx","cy","r","d","zIndex","toggleModal","DepositLayout","type_currency","select_deposit_way","payment_method","SavePayment","DepositContainer","current_wallet","short_currency_name","itemActive","msgLoader","wallets_list","cost_id","match","params","deposit_provider_list","currentDepositProvider","update_control_form","searchMatch","search","UpdateFormControl","update_form","UpdateForm","select_currency","itemName","short_name","primerDeposito","wallets","res","getWalletsByUser","handleError","entities","current_wallets","services","matchNormalizeWallet","crearWallet","CurrentForm","unica_wallet","pop","to_deposit_wallet","msg","CleanForm","body","userId","country","settings","current_country","is_token","new_wallet","createWallet","id_wallet","history","maxDepositAmount","max_amount","decimalAmount","BigNumber","isLessThan","short","ppp","IncreaseStep","current","add_new_transaction_animation","deposit_provider","dep_prov","deposits","get_deposits","response","createDeposit","ReduceStep","new_deposit_model","unique_id","type_order","count","new_deposit","ModalView","success_sound","current_section_params","currentFilter","to_deposit_crypto","wallet","guardarMetodo","toast","position","POSITION","BOTTOM_RIGHT","pauseOnFocusLoss","draggablePercent","bodyClassName","progressClassName","toastId","autoClose","location","pathname","componentDidUpdate","route","coins","deposit","form_deposit","localCurrency","pairs","form_control_deposit","isLoading","search_deposit","globalServices","redux_route","menu_item_active","storage","activity_for_account","withCoinsendaServices","withRouter"],"mappings":"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","file":"static/js/67.1fed9e6a.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst DEFAULT_ARGS = {\n  modalRestriction: true,\n  prev: 37,\n  next: 39,\n  default: 0,\n  originalLength: false,\n};\n\n/**\n * useNavigationKeyActions simula la navegacion entre un grupo de objetos en el DOM.\n *\n * @param {Object} config representa la configuracion y datos del hook\n * @param {Array} config.items items representativos entre los cuales se navegara por medio de key event\n * @param {Boolean} config.loader indentifica cuando el componente esta listo para ejecutar la accion de navegar\n * @param {String} config.uniqueIdForElement id que identificara los elementos navegables\n * @param {Boolean} config.modalRestriction restringe el uso de esta funcion en modales, por defecto es true\n * @param {Event.keyCode|Number} config.prev representa el keyCode a ser referenciendo como previo o anterior,\n * por defecto es 37\n * @param {Event.keyCode|Number} config.next representa el keyCode a ser referenciendo siguiente,\n * por defecto es 39\n * @param {Number} config.default numero del elemento a seleccionar por default, por defecto es el Elmento 0\n * @return _setCurrentSelection\n *\n * @example\n * const setCurrentElement = useNavigationKeyActions({ items: [...n], loader: subscription(), uniqueIdForElement: \"my-uniqueIdForElement-\" })\n * @see useItemsInteractions\n * @see window.onkeydown\n */\nexport default function useNavigationKeyActions(config) {\n  const valuesAsProps = { ...DEFAULT_ARGS, ...config };\n  const { modalRestriction, uniqueIdForElement, loader, items } = valuesAsProps;\n  const [currentSelection, setCurrentSelection] = useState(-1);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let isModalVisible = modalRestriction && useSelector((state) => state.form.isModalVisible);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let isModalRenderShowing = modalRestriction && useSelector((state) => state.ui.modal.render);\n\n  useEffect(() => {\n    if (items && items.length > 0 && !loader) {\n      if (isModalVisible) return;\n      const el = document.getElementById(\n        `${uniqueIdForElement}${valuesAsProps.default}`\n      );\n      el && el.focus();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [items, loader]);\n\n  useEffect(() => {\n    if (modalRestriction && (isModalRenderShowing || isModalVisible)) {\n      setCurrentSelection(-1);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isModalRenderShowing, isModalVisible]);\n\n  useEffect(() => {\n    // this is for mobile\n    if (window.innerWidth < 900) {\n      window.KEY_CODES_META = null;\n      window.onkeydown = null;\n      window.onkeyup = null;\n      window.onkeypress = null;\n      return () => null;\n    } else {\n      window.onkeydown = (event) => {\n        if (\n          !isModalRenderShowing &&\n          !isModalVisible &&\n          items &&\n          items.length > 0\n        ) {\n          if (isModalVisible) return;\n          const length = valuesAsProps.originalLength\n            ? items.length\n            : items.length - 1;\n          const currentSelectionIsDownZero = currentSelection < 0;\n          let elementId = 0;\n          let el = null;\n          if (event.keyCode === valuesAsProps.prev) {\n            elementId = currentSelectionIsDownZero\n              ? length\n              : currentSelection - 1;\n            el = document.getElementById(\n              `${uniqueIdForElement}${Math.max(0, elementId)}`\n            );\n          }\n          if (event.keyCode === valuesAsProps.next) {\n            elementId = currentSelectionIsDownZero ? 0 : currentSelection + 1;\n            el = document.getElementById(\n              `${uniqueIdForElement}${Math.min(length, elementId)}`\n            );\n          }\n          if (event.keyCode === 13) {\n            elementId = currentSelectionIsDownZero ? 0 : currentSelection;\n            el = document.getElementById(\n              `${uniqueIdForElement}${Math.min(length, elementId)}`\n            );\n          }\n          if (el) {\n            el.focus();\n            // event.preventDefault()\n            // event.stopPropagation()\n          }\n        }\n      };\n    }\n\n    return () => {\n      window.onkeydown = false;\n    };\n    \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    window.onkeydown,\n    isModalVisible,\n    items,\n    loader,\n    isModalRenderShowing,\n    currentSelection,\n  ]);\n\n  const _setCurrentSelection = (newSelection) => {\n    if (currentSelection !== newSelection) {\n      setCurrentSelection(newSelection);\n    }\n  };\n  return [_setCurrentSelection];\n}\n\n/**\n * useItemsInteractions contiene toda las interacciones del elemento, como seleccionarlo como puntero actual hasta\n * las acciones que presenta cuando el seleccionado.\n *\n * @param {Object} props properties heredadas del componente que usara este hook\n * @param {Function} props.setCurrentSelection function retornada de useNavigationKeyActions usada para seleccionar\n * el elemento como puntero actual\n * @param {Number} props.number number index del elemento en el array\n * @param {String} props.focusedId id referencial del elemento en el DOM\n *\n * @param {Object} keyActions restringe el uso de esta funcion en modales, por defecto es true\n * @param {Function} keyActions.suprKeyAction accion al presionar la tecla suprimir\n * @param {Function} keyActions.enterKeyAction accion al presionar la tecla enter\n * @param {Boolean} modalRestriction restringe este hook en modales\n * @return {[Boolean, Function]} [isSelected, setFocus]\n *\n * @example\n * const setCurrentElement = useItemsInteractions(props, {...}, false)\n * @see useNavigationKeyActions\n * @see Element.onkeydown\n */\nexport function useItemsInteractions(\n  props,\n  keyActions,\n  modalRestriction = true\n) {\n  const { suprKeyAction, enterKeyAction } = keyActions;\n  const [isSelected, setIsSelected] = useState(false);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const isModalVisible = modalRestriction && useSelector((state) => state.form.isModalVisible);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const isModalRenderShowing = modalRestriction && useSelector((state) => state.ui.modal.render);\n\n  useEffect(() => {\n    // this is for mobile\n    if (window.innerWidth < 900) {\n      window.KEY_CODES_META = null;\n      window.onkeydown = null;\n      window.onkeyup = null;\n      window.onkeypress = null;\n      return () => null;\n    } else {\n      const element = document.getElementById(props.focusedId);\n      if (element) {\n        element.onfocus = () => {\n          setIsSelected(true);\n          props.setCurrentSelection(props.number);\n        };\n\n        element.onblur = () => {\n          setIsSelected(false);\n        };\n\n        element.onkeydown = (event) => {\n          element.blur();\n          if (isModalVisible || isModalRenderShowing) return;\n          if (event.keyCode === 46) {\n            event.stopPropagation();\n            suprKeyAction(() => element.focus());\n          }\n          if (event.keyCode === 13) {\n            enterKeyAction();\n            event.stopPropagation();\n            event.preventDefault();\n          }\n        };\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isModalVisible, props.uniqid]);\n\n  const setFocus = () => {\n    const element = document.getElementById(props.focusedId);\n    element && element.focus();\n  };\n\n  return [isSelected, setFocus];\n}\n","import React, { Component } from \"react\";\nimport loadable from \"@loadable/component\";\nimport { number_format } from \"../../../utils\";\nimport { SimpleLoader } from \"../loaders\";\nimport Environtment from \"../../../environment\";\n// import MaskedInput from \"react-text-mask\";\n// import createAutoCorrectedDatePipe from \"text-mask-addons/dist/createAutoCorrectedDatePipe\";\nimport useKeyActionAsClick from \"../../../hooks/useKeyActionAsClick\";\nimport { getCdnPath } from '../../../environment'\nimport \"./inputStyles.css\";\n\nconst IconSwitch = loadable(() => import(\"../icons/iconSwitch\"));\nconst NumberInput = loadable(() => import(\"./numberInput\"));\n\n// const autoCorrectedDatePipe = createAutoCorrectedDatePipe(\"dd/mm/yyyy\");\nconst { CountryUrl } = Environtment;\n\nexport const InputFormConverter = (props) => {\n  return (\n    <div className=\"contInputFormConverter\">\n      {props.icon && (\n        <div className={`iconConverterContainer iConver ${props.iconPosition}`}>\n          <div className=\"contIconvert\">\n            <IconSwitch icon={props.icon} size={25} />\n          </div>\n          <p className=\"currencyNameConv fuente\">{props.currency_short_name}</p>\n        </div>\n      )}\n      <input\n        className={`inputElement ${props.iconPosition}`}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={props.onChange}\n        value={props.value}\n        // onFocus={props.focusAction}\n        // onBlur={unFocusAction}\n        name={props.name}\n        // defaultValue={props.value}\n        // disabled={disabled}\n      />\n    </div>\n  );\n};\n\nexport const InputForm = (props) => {\n  const {\n    clase,\n    disabled,\n    address,\n    focusAction,\n    status,\n    addressVerify,\n    unFocusAction,\n    state_item,\n    autoFocus,\n  } = props;\n  return (\n    <div className={`${!clase ? \"containerInputComponent\" : clase}`}>\n      <p\n        className=\"labelText fuente\"\n        style={{ display: !props.label ? \"none\" : \"initial\" }}\n      >\n        {props.label}\n      </p>\n      <div\n        className={`inputContainer ${\n          props.active ? \"inputActivado\" : \"\"\n        } ${state_item}`}\n      >\n        <input\n          className={`inputElement ${\n            props.active ? \"inputActivado\" : \"\"\n          } ${addressVerify}`}\n          type={props.type}\n          placeholder={props.placeholder}\n          onChange={props.actualizarEstado}\n          onFocus={focusAction}\n          onBlur={unFocusAction}\n          name={props.name}\n          value={props.value}\n          onKeyPress={\n            props.name === \"account_number\" ? props.handleKeyPress : null\n          }\n          disabled={disabled}\n          autoFocus={autoFocus}\n          autoComplete=\"off\"\n        />\n        {address && (\n          <div className=\"contIconAddress\">\n            <IconSwitch\n              icon={addressVerify === \"Verify\" ? \"verify\" : \"wallet\"}\n              color={addressVerify === \"Verify\" ? \"#4caf50\" : \"gray\"}\n              size={25}\n            />\n          </div>\n        )}\n      </div>\n      {(props.type === \"number\" || props.type === \"password\") && (\n        <p className=\"statusInput\">{status}</p>\n      )}\n    </div>\n  );\n};\n\nexport const InputFormAuth = (props) => {\n  const {\n    clase,\n    label,\n    active,\n    type,\n    placeholder,\n    actualizarEstado,\n    name,\n    value,\n    handleKeyPress,\n    status,\n    verifying,\n    error,\n    handleFocus,\n    handleBlur,\n    disabled,\n  } = props;\n\n  // console.log(`${}`)\n  // <SimpleLoader/>\n\n  return (\n    <div\n      className={`${!clase ? \"containerInputComponent AuthInputComp\" : clase}`}\n    >\n      <p\n        className=\"labelText fuente\"\n        style={{ display: !label ? \"none\" : \"initial\" }}\n      >\n        {label}\n      </p>\n      <div\n        // className={`inputContainer ${active ? 'inputActivado' : '' }`}\n        className=\"inputContainer inputAuths\"\n        style={{\n          border:\n            verifying && !active\n              ? \"1px solid #039aff\"\n              : active\n              ? \"1px solid #59b200\"\n              : error\n              ? \"1px solid red\"\n              : \"1px solid #50667a61\",\n        }}\n      >\n        {!verifying ? (\n          <input\n            className={`inputElement TwoFactorTypo fuente2`}\n            style={{ color: active ? \"#59b200\" : \"gray\" }}\n            type={type}\n            placeholder={placeholder}\n            onChange={actualizarEstado}\n            name={name}\n            defaultValue={value}\n            onKeyPress={name === \"account_number\" ? handleKeyPress : null}\n            onFocus={handleFocus ? handleFocus : null}\n            onBlur={handleBlur ? handleBlur : null}\n            disabled={disabled}\n            autoFocus={true}\n          />\n        ) : (\n          <div className=\"AuthLoader\">\n            <SimpleLoader />\n          </div>\n        )}\n      </div>\n      <p\n        className=\"statusInput fuente\"\n        style={{\n          color:\n            verifying && !active\n              ? \"#039aff\"\n              : active\n              ? \"#59b200\"\n              : error\n              ? \"red\"\n              : \"#50667a61\",\n        }}\n      >\n        <i\n          className=\"fas fa-check\"\n          style={{ display: active ? \"initial\" : \"none\" }}\n        ></i>\n        {status}\n      </p>\n    </div>\n  );\n};\n\nexport class ReadReceiveCoin extends Component {\n  render() {\n    const {\n      secondary_value,\n      placeholder,\n      secondary_coin,\n      isReadOnly,\n      active,\n      actualizarEstado,\n      name,\n      primary_value,\n      selectPair,\n      totalValue,\n    } = this.props;\n\n    return (\n      <>\n        {/* <div className={`${!clase ? 'containerInputComponent' : clase}`}> */}\n        <div className={`inputContainer ${active ? \"inputActivado\" : \"\"}`}>\n          {!secondary_value ? (\n            <div className=\"ReadReceiveCoinLoader\">\n              <SimpleLoader />\n            </div>\n          ) : (\n            <>\n              <div\n                className=\"coinBalance2 fuente2\"\n                onClick={() => selectPair(false)}\n              >\n                <div className=\"coinB2\">\n                  <i className=\"fas fa-angle-down\"></i>\n                  <p>{secondary_coin}</p>\n                  {secondary_coin && (\n                    <img\n                      src={`${getCdnPath('assets')}coins/${secondary_coin}.png`}\n                      alt=\"\"\n                      width=\"30\"\n                    />\n                  )}\n                </div>\n              </div>\n              {!isReadOnly ? (\n                <input\n                  className={`inputElement ${active ? \"inputActivado\" : \"\"}`}\n                  type=\"number\"\n                  placeholder={placeholder}\n                  onChange={actualizarEstado}\n                  name={name}\n                  value={primary_value}\n                />\n              ) : (\n                <p\n                  className=\"read_only\"\n                  style={{ color: active ? \"#3A7BD5\" : \"gray\" }}\n                >\n                  {\" \"}\n                  {totalValue} {totalValue ? secondary_coin : \"0\"}{\" \"}\n                </p>\n              )}\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport const InputFormCoin = (props) => {\n  const {\n    saldoDisponible,\n    coin,\n    value,\n    placeholder,\n    getMaxAvailable,\n    secondary_value,\n    handleChange,\n    useFiatInput,\n    active,\n    label,\n    name,\n    handleKeyPress,\n  } = props;\n\n  const isMovilViewport = window.innerWidth < 768;\n  return (\n    <>\n      {/* <div className={`${!clase ? 'containerInputComponent' : clase}`}> */}\n      <div>\n        <p\n          className=\"labelText fuente\"\n          style={{ display: !label ? \"none\" : \"initial\" }}\n        >\n          {label}\n        </p>\n        <div\n          className={`InputFormCoin inputContainer ${\n            active ? \"inputActivado\" : \"\"\n          }`}\n        >\n          <div\n            className=\"coinBalance fuente2\"\n            onClick={!secondary_value ? null : getMaxAvailable}\n          >\n            <p>\n              {!isMovilViewport && \"Saldo disponible \"}\n              {saldoDisponible > 0\n                ? useFiatInput\n                  ? `${number_format(saldoDisponible)}`\n                  : `${saldoDisponible}`\n                : \"0\"}{\" \"}\n              {coin}\n            </p>\n            {coin && (\n              <img\n                src={`${getCdnPath('assets')}coins/${coin}.png`}\n                alt=\"\"\n                width=\"30\"\n              />\n            )}\n          </div>\n          {useFiatInput ? (\n            <NumberInput\n              type=\"text\"\n              autoComplete=\"off\"\n              onChange={handleChange}\n              placeholder={placeholder}\n              name={name}\n              className={`inputElement ${active ? \"inputActivado\" : \"\"}`}\n              value={value}\n              max_available={saldoDisponible}\n            />\n          ) : (\n            <input\n              className={`inputElement ${active ? \"inputActivado\" : \"\"}`}\n              type=\"number\"\n              placeholder={placeholder}\n              onChange={handleChange}\n              name={name}\n              value={value}\n              onKeyPress={name === \"account_number\" ? handleKeyPress : null}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport class InputDepositForm extends Component {\n  state = {\n    placeHolder: window.innerWidth > 768 ? \"Escribe la cantidad\" : \"Cantidad\",\n    finalValue: \"\",\n  };\n\n  componentDidMount() {\n    this.setState({\n      finalValue: this.state.placeHolder,\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    // console.log('InputDepositForm / componentWillReceiveProps -', isNaN(props.value))\n    const { value } = props;\n\n    if (value) {\n      this.setState({\n        finalValue: number_format(value),\n      });\n    } else {\n      this.setState({\n        finalValue: this.state.placeHolder,\n      });\n    }\n  }\n\n  render() {\n    const { actualizar, handleKeyPress, value, name, autoFocus } = this.props;\n    const { finalValue } = this.state;\n    const style = {\n      fontSize:\n        finalValue.length < 10\n          ? \"90px\"\n          : finalValue.length < 15\n          ? \"60px\"\n          : \"40px\",\n    };\n\n    return (\n      <div className=\"containerInputComponent with-adapt\">\n        <input\n          className={`inputElement2 signoPesos fuente2 width-adapt-child`}\n          type=\"text\"\n          style={style}\n          placeholder={`$ ${finalValue}`}\n          onChange={actualizar}\n          name={name}\n          autoFocus={autoFocus}\n          value={value ? `$ ${finalValue}` : \"\"}\n          onKeyPress={handleKeyPress}\n        />\n      </div>\n    );\n  }\n}\n\nexport const InputCountryPrefix = (props) => {\n  const {\n    toggleSection,\n    search_result,\n    open,\n    update,\n    clean_search_result,\n    autoFocus,\n  } = props;\n\n  // @Param search_result:object  => modelo que almacena la información del país (imagen, prefijo)\n  // code: \"colombia\"\n  // flag: \"https://restcountries.eu/data/col.svg\"\n  // id: 1\n  // name: \"Colombia\"\n  // prefix: \"57\"\n\n  // @Param open:boolean => Define si esta desplegado el componente o contraido\n\n  // console.log('||||InputCountryPrefix', search_result && search_result.prefix)\n\n  return (\n    <div\n      className={`PhoneamEsta ${open ? \"openS\" : \"\"}`}\n      onClick={open ? null : toggleSection}\n    >\n      <div className=\"inputPhone\">\n        {search_result && (\n          <img\n            src={`${CountryUrl}${search_result.flag}`}\n            alt=\"\"\n            className=\"PhoneamEsta_img\"\n            width={20}\n            height={20}\n          />\n        )}\n        <p className=\"fuentePrin PhoneamEsta_p\">\n          + {search_result ? search_result.prefix[0] : \"--\"}\n        </p>\n        <div\n          className={`inputComponentPhone ${open ? \"openS\" : \"\"} ${\n            search_result ? \"search_result\" : \"\"\n          }`}\n        >\n          {search_result ? (\n            <p className={`search_result_kyc ${open ? \"openS\" : \"\"}`}>\n              {search_result.name}\n              <i\n                className=\"fas fa-times cerratelo\"\n                onClick={clean_search_result}\n              ></i>\n            </p>\n          ) : (\n            <input\n              type=\"text\"\n              className=\"inputElement3\"\n              autoFocus={autoFocus}\n              placeholder=\"Escribe el país del indicativo.\"\n              onChange={update}\n              // name=\"findbar_name\"\n              name=\"country_prefix\"\n            />\n          )}\n        </div>\n      </div>\n      <i\n        className={`fas fa-chevron-down PhoneamEsta_icon ${open ? \"anim\" : \"\"}`}\n        onClick={toggleSection}\n      ></i>\n      <span className=\"linePhone\"></span>\n    </div>\n  );\n};\n\nexport const InputKycBasic = (props) => {\n  const {\n    kyc,\n    update,\n    handleSubmit,\n    state,\n    step,\n    toggleSection,\n    _onFocus,\n    search_results,\n    clean_search_result,\n  } = props;\n\n  let search_result = Array.isArray(search_results) && search_results[0];\n  \n\n  return (\n    <div\n      id=\"kycPrime\"\n      className={`containerInputComponent2 ${state.open_sect ? \"openS\" : \"\"}`}\n    >\n      {/* <div id=\"kycPrime\" className={`containerInputComponent2`}> */}\n\n      <div className=\"inputLabelsCont\">\n        <div className=\"InputCarous\" style={{ top: `-${(step - 1) * 40}px` }}>\n          {kyc.map((item) => {\n            return (\n              <p key={item.id} className=\"labelText2 fuente\">\n                {item.label}\n              </p>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className={`inputContainer3 ${state.active ? \"inputActivado\" : \"\"}`}>\n        {kyc.map((item) => {\n          const isDateInput = state.ui_type === \"date\";\n          let inputProps = {}\n          if(isDateInput){\n            console.log('|||||||||||| isDateInput ====> ', state)\n            inputProps = {\n              min:\"1940-01-01\",\n              max:\"2003-12-12\",\n              pattern:/\\d{4}-\\d{2}-\\d{2}/,\n              autoFocus:true\n            }\n          }\n          const classNames = `inputElement3 ${state.active ? \"inputActivado\" : \"\"} ${state.ui_type === \"phone\" ? \"phone\" : \"\"}`;\n          return (\n            step === item.id && (\n              <form onSubmit={handleSubmit} key={item.id} id={`${state.ui_type === \"phone\" ? \"phone\" : \"\"}`}>\n                {state.ui_type === \"phone\" && (\n                  <InputCountryPrefix\n                    open={state.open_sect}\n                    autoFocus={true}\n                    search_result={search_result}\n                    {...props}\n                  />\n                )}\n\n                {/* {isDateInput && (\n                  <MaskedInput\n                    mask={[/\\d/, /\\d/, \"/\", /\\d/, /\\d/, \"/\", /\\d/, /\\d/, /\\d/, /\\d/,]}\n                    className={classNames}\n                    placeholder={item.placeholder}\n                    guide={true}\n                    name={item.name}\n                    autoFocus={true}\n                    pipe={autoCorrectedDatePipe}\n                    onChange={(e) => {\n                      e.persist();\n                      update(e);\n                    }}\n                  />\n                )} */}\n\n                {/* cuando se confirma deposito, consulto tx security si hay scope para confirmación de deposito */}\n                {/* type biometric user id */}\n                {/* identity service  */}\n                {/* biometric data */}\n\n                {search_result && state.ui_type === \"select\" ? (\n                  <p className={`search_result_kyc openS`}>\n                    {search_result.name}\n                    <i className=\"fas fa-times cerratelo\"  onClick={clean_search_result} ></i>\n                  </p>\n                ) : (\n                  (\n                    <input\n                      key={item.id}\n                      autoFocus={true}\n                      className={classNames}\n                      type={\n                        state.ui_type === \"phone\"\n                          ? \"text\"\n                          : state.ui_type === \"select\"\n                          ? \"text\"\n                          : state.ui_type\n                      }\n                      placeholder={\n                        state.data_state[item.name]\n                          ? state.data_state[item.name]\n                          : item.placeholder\n                      }\n                      onChange={update}\n                      name={item.name}\n                      value={state.data_state[item.name]}\n                      onFocus={_onFocus}\n                      {...inputProps}\n                    />\n                  )\n                )}\n              </form>\n            )\n          );\n        })}\n\n        <div className=\"InputProgressBar\">\n          <div\n            className=\"InputProgressed\"\n            style={{ width: step < 2 ? 0 : `${(step * 100) / kyc.length}%` }}\n          ></div>\n        </div>\n\n        <div\n          className={`ctaInputKyc ${state.open_sect ? \"openPhone\" : \"\"}`}\n          onClick={state.open_sect ? toggleSection : handleSubmit}\n        >\n          <div className=\"contCtaKyc\">\n            <i className=\"fas fa-arrow-right arrowcito backInputKyc\"></i>\n            <i\n              className={` ${\n                state.ui_type === \"phone\" ? \"fas fa-mobile-alt\" : \"fas fa-check\"\n              } frontInputKyc`}\n            ></i>\n          </div>\n        </div>\n      </div>\n      <div className=\"InputContainerT\">\n        <p\n          className=\"fuente Inputmsg\"\n          style={{ color: `${state.colorMessage}` }}\n        >\n          {state.message}\n        </p>\n        <p className=\"fuente2 InputStep\">\n          {step}/{kyc.length}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport const InputCountry = (props) => {\n  const {\n    handleSubmit,\n    update_country,\n    country_match,\n    reset_data,\n    disabled,\n    active,\n    loader,\n  } = props;\n\n  const idNextButton = useKeyActionAsClick(\n    true,\n    \"id-next-subfix-button\",\n    13,\n    false,\n    \"onkeydown\"\n  );\n\n  return (\n    <div id=\"kycPrime\" className=\"containerInputComponent3\">\n      <div className=\"inputLabelsCont\">\n        <div className=\"InputCarous\">\n          <p className=\"labelText3 fuente \">\n            Elige el país desde el que operarás\n          </p>\n        </div>\n      </div>\n\n      <div className={`inputContainer3 ${active ? \"inputActivado\" : \"\"}`}>\n        {loader && (\n          <div className=\"inputCountryLoader\">\n            <SimpleLoader loader={2} />\n          </div>\n        )}\n\n        {country_match ? (\n          <div className=\"country_selected\">\n            <IconSwitch icon={country_match.value} size={25} />\n            <p className=\"fuente\">{country_match.ui_name}</p>\n            <i className=\"fas fa-times cerratelo\" onClick={reset_data}></i>\n          </div>\n        ) : (\n          <form onSubmit={handleSubmit}>\n            <input\n              className={`inputElement3 ${active ? \"inputActivado\" : \"\"}`}\n              type=\"text\"\n              placeholder=\"Ej: Colombia\"\n              onChange={update_country}\n              name=\"country\"\n              disabled={disabled}\n              // defaultValue=\"\"\n            />\n          </form>\n        )}\n\n        <div className=\"InputProgressBar countryppp\">\n          {/* <div className=\"InputProgressed\" style={{ width: step<2 ? 0 : `${(((step*100))/kyc.length)}%` }} ></div> */}\n          <div\n            className=\"InputProgressed\"\n            style={{ width: country_match ? \"100%\" : \"0\" }}\n          ></div>\n        </div>\n\n        <i\n          id={idNextButton}\n          className={`fas fa-arrow-right arrowcito2 ${\n            country_match ? \"aparecer\" : \"\"\n          }`}\n          onClick={country_match ? handleSubmit : null}\n        ></i>\n      </div>\n      <div className=\"InputContainerT\">\n        {/* <p className=\"fuente Inputmsg\" style={{ color: `${colorMessage}` }} >{message}</p> */}\n        {/* <p className=\"fuente2 InputStep\" >{step}/{kyc.length}</p> */}\n      </div>\n    </div>\n  );\n};\n\nexport default InputForm;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { OnlySkeletonAnimation } from \"../../../loaders/skeleton\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport { useFormatCurrency } from \"../../../../hooks/useFormatCurrency\";\nimport { getState } from \"./\";\nimport { device } from \"../../../../../const/const\";\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nmoment.locale(\"es\");\n\nconst DetailGenerator = ({ order, title, TitleSuffix, theme }) => {\n  const [orders, setOrders] = useState([]);\n  const { deposit_providers, tx_path } = UseTxState();\n  const [, formatCurrency] = useFormatCurrency();\n\n  const formatOrderText = async (itemText) => {\n    // console.log(itemText, tx_path)\n    switch (itemText[0]) {\n      case \"to_spend_currency\":\n        return [\"Moneda gastada:\", itemText[1].currency];\n      case \"to_buy_currency\":\n        return [\"Moneda adquirida:\", itemText[1].currency];\n      case \"currency\":\n        return [\"Divisa:\", itemText[1].currency];\n      case \"spent\":\n        return [\n          \"Cantidad gastada:\",\n          await formatCurrency(order.spent, order.to_spend_currency),\n        ];\n      case \"bought\":\n        return [\n          \"Cantidad adquirida:\",\n          await formatCurrency(order.bought, order.to_buy_currency),\n        ];\n      case \"state\":\n        return [\"Estado:\", getState(itemText[1])];\n      case \"price_percent\":\n        return [\"Comisión:\", itemText[1]];\n      case \"id\":\n        return [\"Número de orden:\", itemText[1]];\n      case \"created_at\":\n        return [\"Creado en:\", moment(itemText[1]).format(\"LL\")];\n      case \"updated_at\":\n        return [\"Actualizado en:\", moment(itemText[1]).format(\"LL\")];\n      case \"expiration_date\":\n        return [\"Expira en:\", moment(itemText[1]).format(\"LL\")];\n      case \"amount\":\n        return [\n          \"Cantidad:\",\n          await formatCurrency(order.amount, order.currency),\n        ];\n      // case \"amount_neto\":\n      //   return [\n      //     \"Cantidad neta:\",\n      //     await formatCurrency(order.amount_neto, order.currency),\n      //   ];\n      case \"confirmations\":\n        return [\"Confirmations:\", order.confirmations];\n      case \"cost\":\n        return [`Costo ${tx_path === 'withdraws' ? 'retiro' : 'depósito'}:`, order.cost];\n      case \"sent\":\n        return [\"Operación:\", itemText[1] ? \"Debitado\" : \"-- Sin debitar --\"];\n\n      case \"referral\":\n      case \"amount_neto\":\n      case \"to_buy_symbol\":\n      case \"to_spend_symbol\":\n      case \"need_referral_process\":\n      case \"referrer_payment_info\":\n      case \"fee\":\n      case \"tax\":\n      case \"withdraw_provider\":\n      case \"withdraw_account\":\n      case \"metadata\":\n      case \"withdraw_account_id\":\n      case \"withdraw_provider_id\":\n      case \"account_to\":\n      case \"account_from\":\n      case \"type\":\n      case \"pair_id\":\n      case \"taged\":\n      case \"action_price\":\n      case \"country\":\n      case \"userId\":\n      case \"user\":\n      case \"cost_struct\":\n      case \"fee_struct\":\n      case \"info\":\n      case \"tax_struct\":\n      case \"account_id\":\n      case \"locked\":\n      case \"currency_type\":\n      case \"cost_id\":\n      case \"deposit_provider_id\":\n      case \"type_order\":\n      case \"activeTrade\":\n      case \"paymentProof\":\n      case \"withdraw_proof\":\n      case \"requestedFundsOrigin\":\n      case \"proof\":\n      case \"comment\":\n      case \"provider_type\":\n      case \"visible\":\n      case \"inscribed\":\n      case \"inscriptions\":\n      case \"used_counter\":\n        return;\n      default:\n        return itemText;\n    }\n  };\n\n  const inProcesOrder = async (order) => {\n    switch (order.currency_type) {\n      case \"fiat\":\n        let depositProviderInfo = [];\n        if (deposit_providers && deposit_providers[order.deposit_provider_id]) {\n          const depositProvider = deposit_providers[order.deposit_provider_id];\n          depositProviderInfo = [\n            [\n              \"Entidad de depósito:\",\n              `${depositProvider.depositAccount.ui_name}`,\n            ],\n            [\n              `${depositProvider.depositAccount.account.type.ui_name}`,\n              `${depositProvider.depositAccount.account.type.type}`,\n            ],\n            [\n              `${depositProvider.depositAccount.account.account_id.ui_name}`,\n              `${depositProvider.depositAccount.account.account_id.account_id}`,\n            ],\n            [\n              `${depositProvider.depositAccount.account.bussines_name.ui_name}`,\n              `${depositProvider.depositAccount.account.bussines_name.bussines_name}`,\n            ],\n            [\n              `${depositProvider.depositAccount.account.nit.ui_name}`,\n              `${depositProvider.depositAccount.account.nit.nit}`,\n            ],\n          ];\n        }\n        // console.log('deposit_providers', order)\n        const amount = await formatCurrency(order.amount, order.currency);\n        // const amount_neto = await formatCurrency(\n        //   order.amount_neto,\n        //   order.currency\n        // );\n\n        setOrders([\n          ...depositProviderInfo,\n          // [\n          //   \"Comisión:\",\n          //   `${order.fee_struct && `${order.fee_struct.percent}%`} ~ ${\n          //     order.fee\n          //   }`,\n          // ],\n          // [\"Impuesto:\", `~ ${order.tax}`],\n          [\"Cantidad acreditada:\", `~ $${amount}`],\n          [\"Total a depositar:\", `~ $${amount}`],\n        ]);\n        break;\n      case \"crypto\":\n        setOrders([\n          [\"Número de orden:\", order.id],\n          [\"Estado:\", getState(order.state)],\n          [\"Divisa:\", `${order.currency.currency}`],\n          [\"Orden creada en:\", moment(order.created_at).format(\"LL\")],\n          [\"Confirmaciones:\", order.confirmations],\n          [\n            \"Cantidad acreditada:\",\n            await formatCurrency(order.amount, order.currency),\n          ],\n          [\"Costo de operación:\", order.cost],\n          [\n            \"Total depósito:\",\n            await formatCurrency(order.amount_neto, order.currency),\n          ],\n        ]);\n        break;\n      default:\n    }\n  };\n\n  useEffect(() => {\n    // the order is converted to an array and formatted\n    if (!order) {\n      return;\n    }\n    const init = async () => {\n      if (\n        (order.state === \"pending\" || order.state === \"confirmed\") &&\n        tx_path === \"deposits\"\n      ) {\n        return await inProcesOrder(order);\n      }\n      const transOrders = [];\n      for (let orderItem of Object.entries(order)) {\n        const ui_items = await formatOrderText(orderItem);\n        // console.log(ui_items)\n        if (ui_items) {\n          transOrders.push(ui_items);\n        }\n      }\n      setOrders(transOrders);\n    };\n    init();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [deposit_providers]);\n\n  // console.log(order, orders)\n\n  return (\n    <Container className={`${title ? \"withTitle\" : \"\"} ${theme}`}>\n      {title && (\n        <TitleContainer\n          className={`${TitleSuffix ? \"titleSuffix\" : \"\"} ${order.state}`}\n        >\n          <Title className=\"fuente\">{title}</Title>\n          {TitleSuffix && <TitleSuffix />}\n        </TitleContainer>\n      )}\n      {orders && orders.length\n        ? orders.map((item, indx) => {\n            return (\n              <ItemContainer\n                key={indx}\n                className={`${\n                  orders.length === indx + 1 &&\n                  order.state &&\n                  tx_path === \"deposits\" &&\n                  order.state\n                }`}\n              >\n                <LeftText className=\"fuente\">{item[0]}</LeftText>\n                <MiddleSection />\n                <RightText className=\"fuente2\">{item[1]}</RightText>\n              </ItemContainer>\n            );\n          })\n        : new Array(10).fill(\"1\").map((item, indx) => {\n            return (\n              <ItemContainer className=\"skeleton\" key={indx}>\n                <LeftText>skeleton --</LeftText>\n                <MiddleSection />\n                <RightText>skeleton -------- </RightText>\n              </ItemContainer>\n            );\n          })}\n    </Container>\n  );\n};\n\nexport default DetailGenerator;\n\nconst Text = styled.p`\n  width: auto;\n  margin: 0;\n  font-size: 14px;\n`;\n\n// const TotalAmountContainer = styled.div`\n//   width: 100%;\n//   height: 50px;\n//   margin-top: 10px;\n//   border-top: 1px solid #bfbfbf;\n//   display: flex;\n//   justify-content: space-between;\n// `;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  &.titleSuffix {\n    justify-content: space-between;\n  }\n  &.pending p {\n    color: #ff8660;\n  }\n  &.confirmed p {\n    color: #1cb179;\n  }\n`;\n\nconst Title = styled(Text)`\n  font-size: 17px;\n  font-weight: bold;\n`;\nconst RightText = styled(Text)`\n  text-align: right;\n  padding-left: 15px;\n  text-transform: capitalize;\n  white-space: nowrap;\n  max-width: 350px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst LeftText = styled(Text)`\n  text-align: left;\n  padding-right: 15px;\n  font-weight: bold;\n`;\nconst MiddleSection = styled.span`\n  border-bottom: 1px dotted;\n  opacity: 0.15;\n`;\n\nconst ItemContainer = styled.div`\n  width: 100%;\n  height: 20px;\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n\n  &.skeleton {\n    ${OnlySkeletonAnimation}\n    ${RightText}, ${LeftText} {\n      background: gray;\n      height: 16px;\n      border-radius: 3px;\n      opacity: 0.5;\n    }\n  }\n\n  &.pending,\n  &.confirmed {\n    height: 50px;\n    margin-top: 10px;\n    border-top: 1px solid #bfbfbf;\n    align-items: center;\n    ${RightText}, ${LeftText} {\n      font-size: 18px;\n      color: #383838;\n    }\n    ${RightText} {\n      font-size: 20px;\n      font-weight: bold;\n    }\n  }\n`;\n\nconst Container = styled.section`\n  width: calc(100% - 70px);\n  height: calc(100% - 50px);\n  display: grid;\n  grid-template-rows: repeat(auto-fill, 20px);\n  row-gap: 7px;\n  padding: 25px 35px;\n\n  @media ${device.tablet} {\n    padding: 25px 20px;\n    width: calc(100% - 40px);\n  }\n\n  &.withTitle {\n    height: calc(100% - 95px);\n    padding-top: 70px;\n    grid-template-rows: 70px repeat(auto-fill, 20px);\n  }\n\n  ${Text}, ${MiddleSection} {\n    color: gray;\n  }\n\n  &.darkTheme {\n    p {\n      color: white;\n    }\n  }\n`;\n\n//\n","import React from \"react\";\nimport useKeyActionAsClick from \"../hooks/useKeyActionAsClick\";\n\nexport default function withKeyActions(AsComponent) {\n  return function (props) {\n    const idCancel = useKeyActionAsClick(\n      true,\n      `cancel-button-${props.eventName}`,\n      8,\n      true,\n      props.eventName,\n      true\n    );\n    const idAccept = useKeyActionAsClick(\n      true,\n      `accept-button-${props.eventName}`,\n      13,\n      false,\n      props.eventName,\n      true\n    );\n\n    return <AsComponent idCancel={idCancel} idAccept={idAccept} {...props} />;\n  };\n}\n","import React from \"react\";\nimport \"./bar-slider-styles.css\";\n\nexport default function BarSlider({ ...props }) {\n  return <input type=\"range\" {...props} />;\n}\n","import React, { useState } from \"react\";\nimport Cropper from \"react-easy-crop\";\nimport BarSlider from \"./BarSlider\";\nimport { AiOutlineMinus } from \"react-icons/ai\";\nimport { FiRotateCcw, FiPlus } from \"react-icons/fi\";\n\nconst MAX_ZOOM = 3;\nconst MIN_ZOOM = 0.5;\nconst ASPECT = 4 / 3;\nconst SLIDER_STEP = 0.05;\n\nexport default function CropperIMG({ image, onCropComplete }) {\n  const [crop, setChange] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n  const [deg, setDeg] = useState(360);\n\n  return (\n    <>\n      <div className=\"crop-container\">\n        <Cropper\n          image={image}\n          style={{\n            cropAreaStyle: {\n              minWidth: 256,\n              minHeight: 192,\n            },\n          }}\n          rotation={deg}\n          onRotationChange={setDeg}\n          crop={crop}\n          aspect={ASPECT}\n          zoom={zoom}\n          onCropChange={setChange}\n          onZoomChange={setZoom}\n          onCropComplete={(_, croppedAreaPixels) =>\n            onCropComplete(croppedAreaPixels, deg)\n          }\n        />\n      </div>\n      <div className=\"crop-controls\">\n        <div>\n          <AiOutlineMinus\n            color=\"gray\"\n            size={20}\n            onClick={() => zoom > 0.1 && setZoom(zoom - 0.3)}\n          />\n          <BarSlider\n            value={zoom}\n            onChange={(e) => setZoom(e.currentTarget.value)}\n            step={SLIDER_STEP}\n            min={MIN_ZOOM}\n            max={MAX_ZOOM}\n          />\n          <FiPlus\n            color=\"gray\"\n            size={20}\n            onClick={() => zoom < 7 && setZoom(zoom + 0.3)}\n          />\n        </div>\n        <div>\n          <FiRotateCcw\n            color=\"gray\"\n            size={20}\n            onClick={() => {\n              const newDeg = deg - 90;\n              setDeg(newDeg < 0 ? 360 : newDeg);\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","function getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180;\n}\n\nexport const createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener(\"load\", () => resolve(image));\n    image.addEventListener(\"error\", (error) => reject(error));\n    image.setAttribute(\"crossOrigin\", \"anonymous\");\n    image.src = url;\n  });\n\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc);\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  if (!ctx) {\n    return null;\n  }\n\n  const maxSize = Math.max(image.width, image.height);\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\n\n  canvas.width = safeArea;\n  canvas.height = safeArea;\n\n  ctx.translate(safeArea / 2, safeArea / 2);\n  ctx.rotate(getRadianAngle(rotation));\n  ctx.translate(-safeArea / 2, -safeArea / 2);\n\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  );\n  const data = ctx.getImageData(0, 0, safeArea, safeArea);\n\n  canvas.width = pixelCrop.width;\n  canvas.height = pixelCrop.height;\n\n  ctx.putImageData(\n    data,\n    0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x,\n    0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y\n  );\n\n  const UrlToImg = new Promise((resolve, reject) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file));\n    }, \"image/jpeg\");\n  });\n\n  return {\n    base64: canvas.toDataURL(\"image/jpeg\"),\n    urlImg: UrlToImg,\n  };\n}\n","import React, { Fragment } from \"react\";\nimport { ButtonForms } from \"../buttons/buttons\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport actions from \"../../../actions\";\nimport CropperIMG from \"./Cropper/CropperIMG\";\nimport \"./styles.css\";\nimport getCroppedImg from \"./Cropper/do-img-crop\";\nimport withKeyActions from \"../../withKeyActions\";\n\nclass CropImg extends React.Component {\n  state = {\n    imageSrc: this.props.imageSrc || null,\n    crop: { x: 0, y: 0 },\n    zoom: 1,\n    aspect: 4 / 3,\n    croppedAreaPixels: null,\n    imgRotation: 0,\n    croppedImage: null,\n  };\n\n  onCropChange = (crop) => {\n    this.setState({ crop });\n  };\n\n  onCropComplete = (croppedAreaPixels, imgRotation) => {\n    // console.log(croppedArea, croppedAreaPixels)\n    this.setState({ croppedAreaPixels, imgRotation });\n  };\n\n  onZoomChange = (zoom) => {\n    let current_zoom = this.state.zoom;\n\n    if (zoom > current_zoom && zoom <= 3) {\n      current_zoom += 0.06;\n    } else {\n      current_zoom = zoom;\n    }\n\n    // if(zoom<current_zoom){\n    //   current_zoom -= 0.06\n    // }\n\n    this.setState({ zoom: current_zoom });\n  };\n\n  // onFileChange = async e => {\n  //   if (e.target.files && e.target.files.length > 0) {\n  //     const imageDataUrl = await readFile(e.target.files[0])\n  //\n  //     this.setState({\n  //       imageSrc: imageDataUrl,\n  //       crop: { x: 0, y: 0 },\n  //       zoom: 1,\n  //     })\n  //   }\n  // }\n\n  showCroppedImage = async (img, cropArea, rotation) => {\n\n    await this.props.action.isAppLoading(true);\n    const croppedImage = await getCroppedImg(\n      this.state.imageSrc,\n      this.state.croppedAreaPixels,\n      this.state.imgRotation\n    );\n    if (!croppedImage) {\n      return this.props.action.isAppLoading(false);\n    }\n\n    const { urlImg } = croppedImage;\n\n    await this.setState({ croppedImage: urlImg });\n    this.props.subirImg(croppedImage);\n    // await this.props.action.isAppLoading(false)\n  };\n\n  cancelCroppedImg = () => {\n    this.setState({\n      croppedImage: null,\n    });\n    this.props.cancelarSubidaImg();\n  };\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      imageSrc: props.imageSrc,\n    });\n  }\n\n  render() {\n    // console.log('DESDE CROP IMG COMPONENT_______', this.state, this.props)\n    return (\n      <div className=\"App\">\n        {this.state.imageSrc && (\n          <Fragment>\n            <CropperIMG\n              onCropComplete={this.onCropComplete}\n              image={this.state.imageSrc}\n            />\n            <div className=\"ImgCropcontrols\">\n              <ButtonForms\n                _id={this.props.idCancel}\n                active={true}\n                type=\"secundary\"\n                siguiente={this.cancelCroppedImg}\n              >\n                Cancelar\n              </ButtonForms>\n              {/* <img src={this.state.croppedImage} alt=\"\" width=\"40\"/> */}\n\n              <ButtonForms\n                _id={this.props.idAccept}\n                active={true}\n                type=\"primary\"\n                siguiente={this.showCroppedImage}\n              >\n                Guardar\n              </ButtonForms>\n            </div>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(withKeyActions(CropImg));\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport CropImg from \"../../../cropimg\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport QRCode from \"qrcode\";\nimport SimpleLoader from \"../../../loaders\";\nimport { MdContentCopy } from \"react-icons/md\";\nimport { BsUpload } from \"react-icons/bs\";\nimport { copy } from \"../../../../../utils\";\nimport useToastMessage from \"../../../../../hooks/useToastMessage\";\nimport Zoom from \"react-medium-image-zoom\";\nimport \"react-medium-image-zoom/dist/styles.css\";\n\nconst PaymentProofComponent = ({ imgSrc, setImgSrc, order_id }) => {\n  const [activeSection, setActiveSection] = useState(true);\n  const { coinsendaServices, actions } = UseTxState();\n  const [toastMessage] = useToastMessage();\n\n  const subirImg = async ({ base64 }) => {\n    setImgSrc(base64);\n    setActiveSection(null);\n    actions.isAppLoading(true);\n    let confirmation = await coinsendaServices.confirmDepositOrder(\n      order_id,\n      base64\n    );\n    if (!confirmation) {\n      actions.isAppLoading(false);\n      toastMessage(\"El deposito No se ha confirmado\", \"error\");\n      setImgSrc(null);\n    }\n  };\n\n  const cancelarSubidaImg = () => {\n    setActiveSection(null);\n    setImgSrc(null);\n  };\n\n  useEffect(() => {\n    let element = document.getElementById(\"close-button-with-OtherModalLayout\");\n    if (activeSection) {\n      if (element) {\n        element.scrollTo(0, 0);\n        element.classList.add(\"inactive\");\n      }\n    }\n    return () => {\n      if (element) {\n        element.classList.remove(\"inactive\");\n      }\n    };\n  }, [activeSection]);\n\n  return (\n    <OverflowContainer>\n      <Container className={`${activeSection ? \"activated\" : \"\"}`}>\n        <CropImg\n          imageSrc={imgSrc}\n          subirImg={subirImg}\n          cancelarSubidaImg={cancelarSubidaImg}\n        />\n      </Container>\n    </OverflowContainer>\n  );\n};\n\n// const CropEdit = styled.div`\n//   width: 100%;\n//   height: 50px;\n//   background: #f5f5f5;\n//   border-radius: 4px;\n//   box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.1);\n// `;\n\n// const ImgContainer = styled.div`\n//   width: 100%;\n//   max-width: 550px;\n//   background: rgba(255, 255, 255, 0.4);\n//   border-radius: 6px;\n// `;\n\nconst OverflowContainer = styled.section`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  z-index: 3;\n  display: grid;\n  overflow: hidden;\n\n  @media (max-width: 768px) {\n    height: 100vh;\n  }\n`;\n\nconst Container = styled.div`\n  padding: 50px;\n  background: #232c35;\n  transition: 0.3s;\n  transform: translateX(100%);\n  display: grid;\n  grid-template-rows: 1fr;\n  row-gap: 20px;\n  justify-items: center;\n\n  .App {\n    height: 100% !important;\n    width: 100%;\n  }\n\n  .ImgCropcontrols {\n    background: transparent !important;\n  }\n\n  &.activated {\n    animation-name: activated;\n    animation-duration: 0.8s;\n    animation-fill-mode: forwards;\n  }\n\n  @keyframes activated {\n    0% {\n      transform: translateX(100%);\n    }\n    50% {\n      transform: translateX(100%);\n    }\n    100% {\n      transform: translateX(0%);\n    }\n  }\n`;\n\nexport default PaymentProofComponent;\n\nexport const PaymentProof = ({ payload }) => {\n  // console.log('PaymentProof', payload)\n  const {\n    // primary_path,\n    coinsendaServices,\n    actions,\n    currencies,\n    currentOrder,\n    loader,\n    tx_path,\n  } = UseTxState();\n  const [imgProof, setImgProof] = useState(payload);\n  const [txId, setTxId] = useState();\n  const [urlExplorer, setUrlExplorer] = useState();\n\n  const getPaymentProof = async (currentOrder) => {\n    // alert('getpayment')\n    if (currentOrder.paymentProof) {\n      // alert('tiene pp')\n      const { proof_of_payment } = currentOrder.paymentProof;\n      // console.log(`${currencies[currentOrder.currency.currency].node_url}tx/${proof_of_payment.proof}`)\n      setImgProof(\n        currentOrder.currency_type === \"fiat\"\n          ? `data:image/png;base64, ${proof_of_payment.raw}`\n          : await QRCode.toDataURL(\n              `${currencies[currentOrder.currency.currency].node_url}tx/${\n                proof_of_payment.proof\n              }`\n            )\n      );\n      if (currentOrder.currency_type === \"crypto\") {\n        setTxId(proof_of_payment.proof);\n        setUrlExplorer(\n          `${currencies[currentOrder.currency.currency].node_url}tx/${\n            proof_of_payment.proof\n          }`\n        );\n      }\n    } else if (currentOrder.proof) {\n      setImgProof(\n        await QRCode.toDataURL(\n          `${currencies[currentOrder.currency.currency].node_url}tx/${\n            currentOrder.proof\n          }`\n        )\n      );\n      setTxId(currentOrder.proof);\n      setUrlExplorer(\n        `${currencies[currentOrder.currency.currency].node_url}tx/${\n          currentOrder.proof\n        }`\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (\n      !currentOrder.paymentProof &&\n      currentOrder.state !== \"pending\" &&\n      tx_path === \"deposits\"\n    ) {\n      const getData = async () => {\n        const PP = await coinsendaServices.getDepositById(currentOrder.id);\n        if (!PP) {\n          return;\n        }\n        // const { proof_of_payment } = PP.paymentProof;\n\n        let updateOrder = {\n          [PP.id]: { ...PP },\n        };\n        actions.update_item_state(updateOrder, \"deposits\");\n        getPaymentProof(PP);\n      };\n      getData();\n    } else {\n      getPaymentProof(currentOrder);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (imgProof !== payload) {\n      setImgProof(payload);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [payload]);\n\n  const openBlockchain = () => {\n    window.open(urlExplorer, \"_blank\");\n  };\n\n  // console.log('Payment Proof ==> ', currentOrder.currency_type)\n  return (\n    <>\n      <PaymentProofContainer\n        className={`paymentProofCont ${currentOrder.currency_type} ${currentOrder.state}`}\n      >\n        {(!imgProof || loader) && (\n          <LoaderContainer>\n            <SimpleLoader loader={2} justify=\"center\" color=\"#206f65\" />\n          </LoaderContainer>\n        )}\n\n        {imgProof && (\n          <ProofContainer>\n            <Zoom>\n              <img src={imgProof} width=\"100%\" height=\"90px\" alt=\"\" />\n            </Zoom>\n            {currentOrder.currency_type === \"crypto\" && (\n              <HoverProof>\n                <IconContainer\n                  className=\"tooltip\"\n                  data-copy={txId}\n                  onClick={copy}\n                >\n                  <MdContentCopy size={16} />\n                  <span className=\"tooltiptext fuente\">Copiar</span>\n                </IconContainer>\n\n                <IconContainer className=\"tooltip\" onClick={openBlockchain}>\n                  <BsUpload size={20} />\n                  <span className=\"tooltiptext fuente\">Ver en Blockchain</span>\n                </IconContainer>\n              </HoverProof>\n            )}\n          </ProofContainer>\n        )}\n      </PaymentProofContainer>\n\n      {/* {imgProof && (\n      <FiatPaymentProofZoom state={currentOrder.state}>\n        <ProofCont>\n          <img src={imgProof} width=\"100%\" alt=\"\" />\n        </ProofCont>\n      </FiatPaymentProofZoom>\n    )} */}\n    </>\n  );\n};\n\n// const ProofCont = styled.div`\n//   width: 90%;\n//   height: 90%;\n//   justify-self: center;\n//   align-self: center;\n//   display: grid;\n//   align-items: center;\n//   overflow: hidden;\n//   img {\n//     border-radius: 4px;\n//   }\n// `;\n\nconst FiatPaymentProofZoom = styled.div`\n  position: absolute;\n  width: calc(100% - 20px);\n  height: ${(props) =>\n    props.state === \"confirmed\" ? \"calc(100% - 230px)\" : \"calc(100% - 170px)\"};\n  background: #eeeeee;\n  top: 10px;\n  justify-self: center;\n  border-radius: 3px;\n  display: none;\n`;\n\nconst PaymentProofContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 4px;\n  align-self: center;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  max-height: 100px;\n  max-width: 110px;\n  position: relative;\n  justify-self: start;\n\n  img {\n    border-radius: 3px;\n    max-width: 100px;\n    min-width: 90%;\n  }\n  &.accepted,\n  &.confirmed {\n    background: #206f65;\n    padding: 0 5px;\n  }\n  &.rejected,\n  &.canceled {\n    background: gray;\n    opacity: 0.5;\n  }\n\n  &.fiat.accepted:hover\n    ~ ${FiatPaymentProofZoom},\n    &.fiat.confirmed:hover\n    ~ ${FiatPaymentProofZoom} {\n    display: grid;\n  }\n\n  &.fiat {\n    cursor: pointer;\n  }\n`;\n\nconst LoaderContainer = styled.div`\n  width: 90%;\n  height: 90%;\n  background: white;\n  opacity: 0.6;\n  border-radius: 3px;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  position: absolute;\n  justify-self: center;\n  align-self: center;\n  z-index: 1;\n`;\n\n\n\nconst HoverProof = styled.div`\n  position: absolute;\n  height: 100%;\n  width: calc(100% - 20px);\n  top: 0;\n  transition: 0.15s !important;\n  align-items: baseline;\n  display: grid;\n  padding: 0 10px;\n  justify-items: center;\n  grid-template-columns: repeat(2, 1fr);\n  transform: translateX(100%);\n`;\n\nconst ProofContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n\n  :hover ${HoverProof} {\n    opacity: 1;\n  }\n  button {\n    cursor: pointer;\n  }\n`;\n\nconst IconContainer = styled.div`\n  cursor: pointer;\n  width: 30px;\n  height: 30px;\n  border-radius: 3px;\n  border: 1px solid gray;\n  display: grid !important;\n  align-items: center;\n  justify-items: center;\n  position: relative;\n  align-self: flex-start;\n\n  ::after {\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n  }\n\n  .tooltiptext {\n    padding-left: 4px !important;\n    padding-right: 4px !important;\n    width: auto !important;\n    min-width: 60px !important;\n  }\n\n  i,\n  svg {\n    color: gray;\n  }\n\n  :hover {\n    i,\n    svg {\n      color: #0c96fa;\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport api, { orderStatus } from \"./rest.json\";\nimport { OnlySkeletonAnimation } from \"../../../loaders/skeleton\";\nimport styled from \"styled-components\";\nimport { device } from \"../../../../../const/const\";\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nmoment.locale(\"es\");\n\nconst OrderStatus = ({ order, movil }) => {\n  const [orderState, setOrderState] = useState();\n  const { currentOrder, tx_path } = UseTxState();\n\n  const skeletons = new Array(4).fill([\"created\"]);\n\n  useEffect(() => {\n    let orders = {};\n    for (let prop in api[tx_path]) {\n      orders = {\n        ...orders,\n        [prop]: {\n          ...api[tx_path][prop],\n          completed: currentOrder.state === prop,\n        },\n      };\n    }\n    // console.log(orders, api[tx_path])\n    setOrderState(Object.entries(orders));\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentOrder.state]);\n\n  // console.log('|||||||||||||||| OrderSupervisor ::', order)\n\n  return (\n    <OrderStatusContainer>\n      <TopSectionStatus>\n        <Text className=\"fuente\">\n          {orderStatus[tx_path][order.state][order.currency_type].title}\n        </Text>\n        <SubTitle className=\"fuente\">\n          {orderStatus[tx_path][order.state][order.currency_type].description}\n        </SubTitle>\n      </TopSectionStatus>\n      {!movil && (\n        <StatusContainer>\n          {orderState\n            ? orderState.map((state, index) => {\n                return (\n                  <StatusItem\n                    state={state}\n                    order={currentOrder}\n                    key={index}\n                    active={state[1].completed}\n                    className={`\n                  ${\n                    orderState.length === index + 1\n                      ? \"statusStep finalStep\"\n                      : \"statusStep\"\n                  }\n                  ${state[1].completed ? \"activeStep\" : \"\"}\n                  `}\n                  />\n                );\n              })\n            : skeletons.map((state, index) => {\n                return (\n                  <StatusItem\n                    state={state}\n                    key={index}\n                    className={`${\n                      skeletons.length === index + 1\n                        ? \"statusStep finalStep\"\n                        : \"statusStep\"\n                    } skeleton`}\n                    skeleton\n                  />\n                );\n              })}\n        </StatusContainer>\n      )}\n    </OrderStatusContainer>\n  );\n};\n\nconst StatusItem = ({ className, state, order, active, skeleton }) => {\n  const activated = active && active.toString();\n  // console.log((state[0] === \"confirmed\" && (order.state === 'pending' || order.state === 'confirmed')), state )\n\n  return (\n    <Status className={`status ${className}`}>\n      <Indicator className={className} />\n      <Description>\n        {skeleton ? (\n          <Skeleton />\n        ) : (\n          <>\n            <StatusTitle className=\"fuente\" active={activated}>\n              {state[1].ui_text[order.currency_type] || state[1].ui_text}\n            </StatusTitle>\n            <DateStatusText className=\"fuente2\" active={activated}>\n              {active && order.state === \"pending\"\n                ? \"Pendiente\"\n                : active\n                ? \"En proceso...\"\n                : state[0] === \"created\"\n                ? moment(order.created_at).format(\"LL\")\n                : state[0] === \"pending\"\n                ? moment(order.updated_at).format(\"LL\")\n                : state[0] === \"confirmed\" && order.state === \"confirmed\"\n                ? moment(order.updated_at).format(\"LL\")\n                : \"\"}\n            </DateStatusText>\n          </>\n        )}\n      </Description>\n    </Status>\n  );\n};\n\nexport default OrderStatus;\n\nexport const Text = styled.p`\n  margin: 0;\n`;\n\nconst OrderStatusContainer = styled.div`\n  background: #f5f5f5;\n  box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.05);\n  display: grid;\n  grid-template-rows: auto 1fr;\n  row-gap: 25px;\n  padding: 30px 40px;\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n\n  @media ${device.tablet} {\n    grid-template-rows: 1fr;\n    padding: 25px 20px;\n  }\n`;\nconst TopSectionStatus = styled.div`\n  display: grid;\n  row-gap: 10px;\n  height: auto;\n`;\n\nconst SubTitle = styled(Text)`\n  font-size: 13px;\n  color: gray;\n`;\n\nconst StatusContainer = styled.div`\n  padding: 45px 0;\n  display: grid;\n  grid-template-rows: repeat(auto-fill, 70px);\n  row-gap: 10px;\n`;\n\nconst Status = styled.div`\n  height: 70px;\n  padding: 0 20px;\n  display: grid;\n  align-items: center;\n  grid-template-columns: 20px 1fr;\n\n  &.activeStep ~ .status .statusStep {\n    background: #dadada;\n    ::after {\n      background: #dadada;\n    }\n  }\n\n  &.activeStep .statusStep {\n    ::after {\n      background: #dadada;\n    }\n  }\n`;\n\nconst Indicator = styled.div`\n  justify-self: center;\n  width: 14px;\n  height: 14px;\n  background: #0198ff;\n  border-radius: 50%;\n  position: relative;\n  z-index: 2;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  border: 2px solid #f5f5f5;\n\n  &.activeStep {\n    width: 14px;\n    height: 14px;\n    border: 2px solid #0198ff;\n    background: transparent !important;\n    position: relative;\n    ::after {\n      top: 16px !important;\n    }\n    ::before {\n      content: \"\";\n      width: 6px;\n      height: 6px;\n      background: #0198ff;\n      border-radius: 50%;\n    }\n  }\n\n  &.statusStep::after {\n    content: \"\";\n    width: 2px;\n    height: 64px;\n    background: #0198ff;\n    position: absolute;\n    -webkit-align-self: center;\n    align-self: start;\n    top: 14px;\n    z-index: 1;\n  }\n\n  &.statusStep.finalStep::after {\n    display: none;\n  }\n\n  &.skeleton {\n    background: #c1c1c1;\n    ::after {\n      background: #c1c1c1;\n    }\n  }\n`;\nconst Description = styled.div`\n  padding-left: 20px;\n  display: grid;\n  row-gap: 5px;\n  p {\n    margin: 0;\n  }\n`;\n\nconst Skeleton = styled.div`\n  width: 100%;\n  height: 16px;\n  background: #c1c1c1;\n  border-radius: 3px;\n  ${OnlySkeletonAnimation}\n`;\n\nconst StatusTitle = styled(Text)`\n  font-size: 14px;\n  color: ${(props) => (props.active === \"true\" ? \"#0198FF\" : \"gray\")};\n`;\n\nconst DateStatusText = styled(Text)`\n  font-size: 12px;\n  color: ${(props) => (props.active === \"true\" ? \"#0198FF\" : \"#adadad\")};\n`;\n\n//\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nexport default class ConfirmationCounter extends Component {\n  state = {\n    ctx: null,\n    total: 6,\n    loader: true,\n    color: \"#159e8c\",\n  };\n\n  draw_interval;\n\n  // init_draw = async props => {\n  //   let c = document.getElementById(\"myCanvas\")\n  //   await this.setState({\n  //     ctx: c.getContext(\"2d\")\n  //   })\n  //\n\n  draw = async (amount) => {\n    // const {\n    //   ctx\n    // } = this.state\n    await this.setState({ loader: false });\n    let c = document.getElementById(\"myCanvas\");\n    if (!c) {\n      return false;\n    }\n    const ctx = c.getContext(\"2d\");\n    clearInterval(this.draw_interval);\n    let tasaPercent = (100 * amount) / this.state.total;\n    ctx.beginPath();\n    ctx.arc(150, 63, 58, 0, ((2 * Math.PI) / 100) * tasaPercent);\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"#1cb179\";\n    ctx.stroke();\n    // ctx.closePath()\n  };\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.confirmations !== prevProps.confirmations) {\n      await this.setState({ loader: true });\n      this.draw(this.props.confirmations);\n    }\n  }\n\n  async componentDidMount() {\n    await this.setState({ loader: true });\n    this.draw_interval = setInterval(() => {\n      this.draw(this.props.confirmations);\n    }, 250);\n  }\n\n  render() {\n    const { confirmations, total_confirmations } = this.props;\n\n    // const { color } = this.state;\n\n    return (\n      <AbsoluteContainer2>\n        <RelativeContainer>\n          <AbsoluteContainer>\n            <ContCanvasConfirmation>\n              <ConfirmationContainer>\n                <TextContainer>\n                  <p className=\"fuente2\">\n                    {confirmations}\n                    <span>\n                      / {total_confirmations ? total_confirmations : \"6\"}\n                    </span>\n                  </p>\n                </TextContainer>\n              </ConfirmationContainer>\n              {!this.state.loader && (\n                <Canvas id=\"myCanvas\" width=\"300\" height=\"125\" />\n              )}\n            </ContCanvasConfirmation>\n          </AbsoluteContainer>\n        </RelativeContainer>\n      </AbsoluteContainer2>\n    );\n  }\n}\n\nconst AbsoluteContainer = styled.div`\n  position: absolute;\n`;\n\nconst AbsoluteContainer2 = styled(AbsoluteContainer)`\n  right: 0;\n  transform: scale(0.9);\n`;\n\nconst RelativeContainer = styled.div`\n  width: 130px;\n  height: 170px;\n  position: relative;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n`;\n\nconst ConfirmationContainer = styled.div`\n  width: 80px;\n  height: 50%;\n  position: absolute;\n  align-self: center;\n  justify-self: center;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  p {\n    font-size: 30px;\n    margin: 0;\n  }\n`;\n\nconst TextContainer = styled.div`\n  width: 80px;\n  height: 50%;\n  position: absolute;\n  align-self: center;\n  justify-self: center;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  p {\n    font-size: 30px;\n    color: #1cb179;\n    margin: 0;\n  }\n  span {\n    color: #1cb179;\n    margin-left: 5px;\n    font-size: 18px;\n  }\n`;\n\n// const CounterText = styled.article`\n//   color: ${(props) => (props.color ? `${props.color} !important` : \"red\")};\n//   font-size: 40px !important;\n//   margin: 0 !important;\n//   padding: 0 !important;\n//   align-self: center !important;\n// `;\n\nconst ContCanvasConfirmation = styled.section`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n`;\n\nconst Canvas = styled.canvas`\n  transform: rotate(-90deg);\n  transition: 0.3s;\n`;\n\n//\n","import React, { useState, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlineUpload } from \"react-icons/ai\";\n// import PaymentProofComponent, { PaymentProof } from \"./paymentProof\";\nimport { PaymentProof } from \"./paymentProof\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport SimpleLoader from \"../../../loaders\";\n// import QRCode from \"qrcode\";\nimport { readFile, img_compressor, includesAnyImageMime } from \"../../../../../utils\";\nimport OrderStatus from \"./orderStatus\";\nimport DetailGenerator from \"./detailGenerator\";\nimport { OnlySkeletonAnimation } from \"../../../loaders/skeleton\";\nimport IconSwitch from \"../../../icons/iconSwitch\";\nimport { AiOutlineClockCircle } from \"react-icons/ai\";\nimport ConfirmationCounter from \"./confirmationCounter\";\nimport useViewport from \"../../../../../hooks/useWindowSize\";\nimport { device, BIOMETRIC_FIAT_LITMIT_AMOUNT } from \"../../../../../const/const\";\nimport { IconClose } from \"../../../shared-styles\";\nimport useToastMessage from \"../../../../../hooks/useToastMessage\";\nimport { useFormatCurrency } from \"../../../../hooks/useFormatCurrency\";\nimport { BottomSection } from './'\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nimport useKeyActionAsClick from \"../../../../../hooks/useKeyActionAsClick\";\nmoment.locale(\"es\");\n \n// const orderModel = {\n//   created_at: new Date(),\n//   updated_at: new Date(),\n//   state: \"pending\",\n//   currency_type: \"fiat\",\n// };\n\nconst InProcessOrder = ({ onErrorCatch }) => {\n  const { currentOrder } = UseTxState();\n\n  if (!currentOrder || !currentOrder.currency) return onErrorCatch();\n\n  return (\n    <>\n      {currentOrder.currency_type === \"fiat\" ? (\n        <FiatOrder order={currentOrder} />\n      ) : (\n        <CryptoOrder order={currentOrder} tx_path />\n      )}\n    </>\n  );\n};\n\nexport default InProcessOrder;\n\nconst CryptoOrder = ({ order }) => {\n  const { tx_path, currencies } = UseTxState();\n  const { isTabletOrMovilViewport } = useViewport();\n\n  return (\n    <InProcessOrderContainer>\n      <IconClose theme=\"dark\" size={20} />\n      <OrderContainer>\n        <TopSection>\n          <IconSwitch\n            className=\"TitleIconOrder\"\n            size={35}\n            icon={order.currency.currency || \"cop\"}\n          />\n          <TitleContainer>\n            <Text className=\"fuente\">{getTitle(tx_path)}</Text>\n            <Currency className=\"fuente\">{order.currency.currency}</Currency>\n          </TitleContainer>\n          <DateIdContainter>\n            <Text className=\"fuente2\">#{order.id}</Text>\n            <DateText className=\"fuente2\">\n              {moment(order.updated_at).format(\"LL\")}\n            </DateText>\n          </DateIdContainter>\n        </TopSection>\n\n        {isTabletOrMovilViewport && <OrderStatus order={order} movil />}\n\n        <MiddleSection state={order.state}>\n          <DetailGenerator\n            order={order}\n            title={`${getState(order)}`}\n            TitleSuffix={() => <GetIcon order={order} />}\n          />\n        </MiddleSection>\n\n        {\n          tx_path === \"deposits\" ? (\n            <BottomSectionContainer className={`crypto`}>\n              <UploadComponent />\n              <ConfirmationCounter\n                confirmations={order.confirmations}\n                total_confirmations={\n                  currencies[order.currency.currency].confirmations\n                }\n              />\n            </BottomSectionContainer>)\n          :\n            <BottomSection colorState={\"gray\"} currentOrder={order} tx_path={tx_path} />\n        }\n      </OrderContainer>\n\n      {!isTabletOrMovilViewport && <OrderStatus order={order} />}\n    </InProcessOrderContainer>\n  );\n};\n\nconst FiatOrder = ({ order }) => {\n  const [onDrag, setOnDrag] = useState(false);\n  const [imgSrc, setImgSrc] = useState(false);\n  const { actions, tx_path, coinsendaServices } = UseTxState();\n  const { isTabletOrMovilViewport } = useViewport();\n  const [ , , toBigNumber ] = useFormatCurrency()\n  const [toastMessage] = useToastMessage();\n\n  const dragOver = (event) => {\n    event.preventDefault();\n    if (!onDrag) {\n      setOnDrag(!onDrag);\n    }\n  };\n\n  const dragLeave = (event) => {\n    event.preventDefault();\n    if (onDrag) {\n      setOnDrag(!onDrag);\n    } \n  };\n\n  const goFileLoader = async (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      setOnDrag(false);\n      const data = e.target.files[0];\n      const file = await img_compressor(data, 0.25);\n      const dataBase64 = await readFile(file);\n      const isAnImage = includesAnyImageMime(dataBase64.split(\",\")[1])\n      if(!isAnImage){\n        return alert('Solo se aceptan imagenes')\n      }\n      setImgSrc(dataBase64);\n      actions.isAppLoading(true);\n\n      const { user } = coinsendaServices.globalState.modelData\n      const orderAmount = await toBigNumber(order.amount, order.currency)\n      const limitAmount = await toBigNumber(BIOMETRIC_FIAT_LITMIT_AMOUNT, order.currency)\n      \n      if(user.security_center?.transactionSecurity?.biometric?.enabled && orderAmount.isGreaterThanOrEqualTo(limitAmount)){\n        const Element = await import(\"../../../../forms/widgets/biometricKycComponent/init\");\n        if(!Element) return;\n        const BiometricKyc = Element.default\n        return actions.renderModal(() => <BiometricKyc orderData={{order, paymentProof:dataBase64}} />);\n      }\n\n      // cropImgOFf\n      // activate oncomment line ><167\n      let confirmation = await coinsendaServices.confirmDepositOrder(\n        order.id,\n        dataBase64\n      );\n      if (!confirmation || !confirmation.data) {\n        actions.isAppLoading(false);\n        toastMessage(\"El depósito No se ha confirmado\", \"error\");\n        setImgSrc(null);\n      }\n    }\n  };\n\n  console.log('|||||||||||||||| FiatOrderDespoit ::', tx_path)\n  // debugger\n\n\n  return (\n    <InProcessOrderContainer>\n      <IconClose theme=\"dark\" size={20} />\n\n      <OrderContainer onDragOver={dragOver}>\n        {onDrag && !imgSrc && order.state === \"pending\" && (\n          <DropZoneComponent\n            dragLeave={dragLeave}\n            goFileLoader={goFileLoader}\n          />\n        )} \n        {/* {imgSrc && order.state === \"pending\" && (\n          <PaymentProofComponent\n            order_id={order.id} \n            imgSrc={imgSrc}\n            setImgSrc={setImgSrc}\n          />\n        )} */}\n\n        <TopSection>\n          <IconSwitch\n            className=\"TitleIconOrder\"\n            size={35}\n            icon={order.currency.currency || \"cop\"}\n          />\n          <TitleContainer>\n            <Text className=\"fuente\">{getTitle(tx_path)}</Text>\n            <Currency className=\"fuente\">{order.currency.currency}</Currency>\n          </TitleContainer>\n          <DateIdContainter>\n            <Text className=\"fuente2\">#{order.id}</Text>\n            <DateText className=\"fuente2\">\n              {moment(order.updated_at).format(\"LL\")}\n            </DateText>\n          </DateIdContainter>\n        </TopSection>\n\n        {isTabletOrMovilViewport && <OrderStatus order={order} movil />}\n\n        <MiddleSection state={order.state}>\n          <DetailGenerator\n            order={order}\n            title={`${getState(order)}`}\n            TitleSuffix={() => <GetIcon order={order} />}\n          />\n        </MiddleSection>\n\n        {\n          tx_path === \"deposits\" ? (\n          <BottomSectionContainer>\n            <UploadComponent\n              imgSrc={imgSrc}\n              goFileLoader={goFileLoader}\n              setImgSrc={setImgSrc}\n            />\n          </BottomSectionContainer>)\n          :\n          <BottomSection colorState={\"gray\"} currentOrder={order} tx_path={tx_path} />\n        }\n\n      </OrderContainer>\n\n      {!isTabletOrMovilViewport && <OrderStatus order={order} />}\n    </InProcessOrderContainer>\n  );\n};\n\nconst DropZoneComponent = ({ dragLeave, goFileLoader }) => {\n  return (\n    <DropZoneContainer>\n      <input\n        id=\"TFileUpload\"\n        type=\"file\"\n        // accept=\"image/png,image/jpeg\"\n        onChange={goFileLoader}\n        onDragLeave={dragLeave}\n        capture=\"user\" \n        accept=\"image/*\"\n      />\n      <UploadComponent\n        unButtom\n        title=\"Suelta aquí el archivo que quieres subir...\"\n      />\n    </DropZoneContainer>\n  );\n};\n\nconst UploadComponent = ({ unButtom, title, goFileLoader, imgSrc, ...props}) => {\n  const { currentOrder } = UseTxState();\n  const idForFileUpload = useKeyActionAsClick(\n    true,\n    \"TFileUpload\",\n    13,\n    true,\n    \"onkeyup\",\n    true\n  );\n\n  return (\n    <UploadContainer\n      className={`${\n        imgSrc || currentOrder.state === \"confirmed\" ? \"loaded\" : \"unload\"\n      }`}\n    >\n      {!imgSrc && currentOrder.state !== \"confirmed\" ? (\n        <Fragment>\n          <AiOutlineUpload size={45} color=\"gray\" />\n          <UploadText className=\"fuente\">\n            {title || \"Arrastra el archivo que quieres subir\"}\n          </UploadText>\n          {!unButtom && (\n            <Fragment>\n              <UploadMiddle>\n                <UploadTextMiddle className=\"fuente\">\n                  o selecciona un archivo\n                </UploadTextMiddle>\n                <hr />\n              </UploadMiddle>\n\n              <Buttom>\n                <input\n                  id={idForFileUpload}\n                  type=\"file\"\n                  accept=\"image/png,image/jpeg\"\n                  onChange={goFileLoader}\n                />\n                <Text style={{ color: \"white\" }} className=\"fuente\">\n                  Subir comprobante\n                </Text>\n              </Buttom>\n            </Fragment>\n          )}\n        </Fragment>\n      ) : (\n        <Fragment>\n          <UploadMiddle className=\"titleSection payment fuente\">\n            <UploadTextMiddle className=\"titleSection\">\n              Comprobante de pago\n            </UploadTextMiddle>\n            <hr />\n          </UploadMiddle>\n          <PaymentProof payload={imgSrc} />\n        </Fragment>\n      )}\n    </UploadContainer>\n  );\n};\n\nconst getTitle = (tx_path) => {\n  return tx_path === \"deposits\" ? \"Depósito\" : \"Retiro\";\n};\n\nconst GetIcon = ({ order }) => {\n  const coloIcon = order.state === \"pending\" ? \"#ff8660\" : \"#1cb179\";\n  const RenderIcon =\n    order.state === \"pending\"\n      ? AiOutlineClockCircle\n      : order.state === \"confirmed\" &&\n        (() => <SimpleLoader loader={2} color={coloIcon} justify=\"center\" />);\n\n  return (\n    <IconContainer>\n      <RenderIcon size={25} color={coloIcon} />\n    </IconContainer>\n  );\n};\n\nconst getState = ({ state, currency_type }) => {\n  switch (currency_type) {\n    case \"fiat\":\n      return state === \"pending\"\n        ? \"Pendiente\"\n        : state === \"confirmed\" && currency_type === \"fiat\"\n        ? \"Procesando...\"\n        : \"En proceso de aceptación...\";\n    case \"crypto\":\n      return state === \"pending\" ? \"Pendiente\" : \"Confirmando en blockchain...\";\n    default:\n  }\n};\n\nconst IconContainer = styled.div`\n  position: relative;\n  width: 25px;\n  height: 25px;\n  display: grid;\n`;\n\nconst DropZoneContainer = styled.section`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.85);\n  z-index: 3;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  ${\"\" /* border: 5px solid #0198FF; */}\n\n  svg {\n    fill: #0198ff;\n  }\n  p {\n    color: #0198ff;\n  }\n`;\n\n// const ImgContainer = styled.div`\n//   width: 80px;\n//   height: 55px;\n//   position: relative;\n//   border: 3px solid #0198ff;\n//   border-radius: 4px;\n//   background: white;\n//   display: grid;\n//   align-items: center;\n//   &.loader::after {\n//     content: \"\";\n//     width: 100%;\n//     position: absolute;\n//     height: 100%;\n//     background: rgba(255, 255, 255, 0.8);\n//   }\n//   .lds-roller {\n//     z-index: 2;\n//   }\n// `;\n\n// const Img = styled.img`\n//   width: 80px;\n//   height: 55px;\n//   border-radius: 3px;\n// `;\n\n// const ProgressBar = styled.span`\n//   height: 4px;\n//   width: 100%;\n//   background: #c5c5c5;\n//   transition: 0.3s;\n//   position: relative;\n//   ::after {\n//     content: \"\";\n//     width: ${(props) => props.progresed};\n//     background: #0198ff;\n//     height: 100%;\n//     position: absolute;\n//     transition: 3s;\n//     left: 0;\n//     top: 0;\n//   }\n// `;\n\nexport const Text = styled.p`\n  margin: 0;\n`;\n\n// const PaymentTitle = styled(Text)`\n//   text-align: center;\n//   font-size: 14px;\n//   color: gray;\n// `;\n\n// const PaymentProofDetail = styled.div`\n//   width: 100%;\n//   display: grid;\n//   grid-template-rows: auto auto auto;\n//   row-gap: 10px;\n//   justify-items: center;\n//   align-items: center;\n//   padding-top: 40px;\n// `;\n\nconst Buttom = styled.div`\n  width: 320px;\n  height: 45px;\n  border-radius: 6px;\n  border: 2px solid #0198ff;\n  background: #0198ff;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  cursor: pointer;\n  position: relative;\n`;\n\nexport const UploadTextMiddle = styled(Text)`\n  z-index: 2;\n  font-size: 12px;\n  width: 150px;\n  background: #eeeeee;\n  text-align: center;\n  color: gray;\n\n  &.titleSection {\n    font-size: 15px;\n    width: auto;\n    padding: 0 20px;\n    align-self: center;\n    justify-self: baseline;\n  }\n\n  &.consolidatedStyle{\n    background:white;\n    margin-left:20px;\n  }\n`;\n\nexport const UploadMiddle = styled.div`\n  font-size: 14px;\n  position: relative;\n  display: grid;\n  width: 100%;\n  justify-items: center;\n  max-width: 320px;\n  hr{\n    position: absolute;\n    width: 100%;\n    align-self: center;\n  }\n\n  &.titleSection{\n    max-width: inherit;\n    position: absolute;\n    align-self: start;\n    hr{\n      border-top: 1px solid;\n      color: #c5c5c5;\n      position: absolute;\n      width: 80%;\n      right: 0;\n    }\n  }\n  &.payment{\n    p{\n      padding-left: 0 !important;\n    }\n    position: relative !important;\n  }\n\n  &.swaps{\n    hr{\n      width: 98%;\n    }\n  }\n}\n`;\n\nconst UploadText = styled(Text)`\n  font-size: 16px;\n  color: gray;\n`;\n\nconst UploadContainer = styled.section`\n  display: grid;\n  justify-items: center;\n  row-gap: 12px;\n  width: 100%;\n  min-height: 170px;\n  height: auto;\n  &.loaded {\n    grid-template-rows: auto 1fr;\n  }\n  &.unload {\n    grid-template-columns: 1fr;\n    max-width: 400px;\n    grid-template-rows: repeat(4, auto);\n  }\n`;\n\nexport const Section = styled.div``;\n\nconst BottomSectionContainer = styled(Section)`\n  height: auto;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n\n  &.crypto {\n    position: relative;\n  }\n`;\n\nconst DateIdContainter = styled.div`\n  display: flex;\n  grid-area: dateIdContainter;\n  ${Text} {\n    font-size: 12px;\n    color: gray;\n  }\n`;\n\nconst DateText = styled(Text)`\n  margin-left: 9px !important;\n  padding-left: 7px;\n  border-left: 1px solid gray;\n`;\n\nconst TitleContainer = styled.div`\n  margin: 0;\n  display: flex;\n  align-items: center;\n  grid-area: titleContainer;\n  ${Text} {\n    font-size: 20px;\n  }\n`;\n\nconst Currency = styled(Text)`\n  margin-left: 7px !important;\n  text-transform: uppercase;\n`;\n\n// const Icon = styled.span`\n//   width: 35px;\n//   height: 35px;\n//   border-radius: 50%;\n//   background: #c3c3c3;\n//   grid-area: icon;\n//   ${\"\" /* box-shadow: 0px 0px 5px 3px rgba(0,0,0,0.1); */}\n// `;\n\nconst MiddleSection = styled(Section)`\n  background: white;\n  border-radius: 4px;\n  position: relative;\n  overflow: hidden;\n  ::after {\n    content: \"\";\n    position: absolute;\n    height: 7px;\n    background: ${(props) =>\n      props.state === \"pending\" ? \"#ff8660\" : \"#1cb179\"};\n    top: 0;\n    width: 100%;\n    ${(props) => props.state === \"confirmed\" && OnlySkeletonAnimation}\n  }\n  .withTitle {\n    padding-top: 55px !important;\n  }\n`;\n\nconst TopSection = styled(Section)`\n  display: grid;\n  align-items: center;\n  grid-template-rows: auto auto;\n  column-gap: 12px;\n  row-gap: 5px;\n  grid-template-columns: auto 1fr;\n  grid-template-areas:\n    \"icon titleContainer\"\n    \"icon dateIdContainter\";\n  span {\n    margin-right: 15px;\n  }\n\n  .TitleIconOrder {\n    grid-area: icon;\n  }\n`;\n\n// const Container = styled.section`\n//   width: 100vw;\n//   height: 100vh;\n//   background: #000000ba;\n//   display: grid;\n//   align-items: center;\n//   justify-items: center;\n// `;\n\nconst OrderContainer = styled.div`\n  background: #eeeeee;\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  row-gap: 30px;\n  position: relative;\n  border-top-left-radius: 6px;\n  border-bottom-left-radius: 6px;\n\n  @media ${device.tablet} {\n    grid-template-rows: auto auto 1fr auto;\n  }\n`;\n\nconst InProcessOrderContainer = styled.section`\n  #TFileUpload {\n    position: absolute;\n    z-index: 4;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    cursor: pointer;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  ${OrderContainer} {\n    padding: 30px 40px;\n  }\n\n  position: relative;\n  width: 1000px;\n  height: auto;\n  min-height: 750px;\n  background: white;\n  display: grid;\n  border-radius: 6px;\n  box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.1);\n  grid-template-columns: 1fr 400px;\n\n  @media ${device.laptop} {\n    width: 100%;\n  }\n\n  @media ${device.tabletL} {\n    grid-template-columns: 1fr;\n    position: absolute;\n    top: 10px;\n  }\n\n  @media ${device.tablet} {\n    ${OrderContainer} {\n      padding: 30px 15px;\n    }\n  }\n`;\n","import { useEffect } from \"react\";\nimport { PaymentProof } from \"./paymentProof\";\nimport loadable from \"@loadable/component\";\nimport { Icon, IconContainer } from '../../../../referrals/shareStyles'\nimport { MAIN_COLOR } from '../../../../../const/const'\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport styled from 'styled-components'\n\n\nconst ReferralInfo = () => {\n    const IconSwitch = loadable(() => import(\"../../../icons/iconSwitch\"));\n    return(\n      <IconContainer>\n        <Icon>\n          <IconSwitch color={MAIN_COLOR}  size={40} icon=\"referral\" />\n        </Icon>\n      </IconContainer>\n    )\n}\n  \n  \n  const WithdrawFiatInfo = () => {\n\n    const IconSwitch = loadable(() => import(\"../../../icons/iconSwitch\"));\n    const { tx_path, order_id } = useParams();\n    const modelData = useSelector(({ modelData }) => modelData);\n    const { withdraw_account_id } = modelData[tx_path][order_id]\n    const withdrawAccount = modelData?.withdraw_accounts && modelData?.withdraw_accounts[withdraw_account_id]\n\n    return(\n        <WithdrawAccountCont className={`${!withdrawAccount ? 'unAvalaible' : ''}`}>\n          <IconCont>\n            {\n                withdrawAccount && <IconSwitch size={45} icon={withdrawAccount?.bank_name?.value} />\n            }\n          </IconCont>\n          <DataContainer>\n            <p className=\"fuente\">{!withdrawAccount ? 'Cuenta no disponible' : withdrawAccount?.bank_name?.ui_name?.toLowerCase()}</p>\n            <p className=\"fuente accountType\">{!withdrawAccount ? '' : withdrawAccount?.account_type?.ui_name}</p>\n            <p className=\"fuente2\">{!withdrawAccount ? '' : `No. ${withdrawAccount?.account_number?.value}`}</p>\n            \n          </DataContainer>\n        </WithdrawAccountCont>\n    )\n  }\n\n  export const IconCont = styled.div`\n    height:80px;\n    width:80px;\n    border-radius:6px;\n    position: relative;\n    display: grid;\n    background:#d8d8d8;\n    border-radius:6px;\n\n    .iconSty{\n        position: absolute;\n        justify-self: center;\n        align-self: center; \n    }\n  `\n\n  export const WithdrawAccountCont = styled.div`\n    width:auto;\n    height:80px;\n    display:grid;\n    grid-template-columns:auto 1fr;\n    column-gap: 12px;\n\n    &.unAvalaible{\n       ${IconCont}{\n            background:#c4c4c4;\n        }\n       .fuente{\n        font-size:14px;\n       }\n    }\n  ` \n \n  export const DataContainer = styled.div`\n    height:100%;\n    width:auto;\n    display: grid;\n    grid-template-rows: 20px 18px auto;\n    row-gap: 5px;\n    .accountType{\n        font-size:12px;\n    }\n    .fuente2{\n      font-size:12px;\n    }\n    p{\n      text-transform: capitalize;\n      color:gray;\n      margin:0;\n    }\n  `\n\n\n  \n  \n  const GetInfoComponentToRender = (order) => {\n  \n    const { tx_path, info } = order\n    const targetKey = info?.is_referral ? 'is_referral' : order?.currency_type\n\n\n    const toRender = {\n      \"deposits\":{\n        \"is_referral\":{\n            \"title\":\"Depósito por referido\",\n            \"component\":ReferralInfo\n        }        \n      },\n      \"withdraws\":{\n        \"fiat\":{\n            \"title\":\"Info cuenta de retiro\",\n            \"component\":WithdrawFiatInfo\n        }\n      },\n      \"swaps\":{\n        \"title\":\"\",\n        \"component\":() => (<div></div>)\n      }\n    }\n    \n    useEffect(()=> {\n       const title = tx_path === 'swaps' ? '' : toRender[tx_path][targetKey]?.title || 'Comprobante de pago'\n       const targetElement = document.querySelector('#titleInfoComponent')\n       if(targetElement){\n         targetElement.innerHTML = title\n       }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    if(tx_path === 'swaps'){\n      return toRender[tx_path]?.component\n    }\n  \n    return toRender[tx_path][targetKey]?.component ||  PaymentProof\n  }\n\n\n  export default GetInfoComponentToRender","import React from \"react\";\nimport OtherModalLayout from \"../../otherModalLayout\";\nimport styled from \"styled-components\";\nimport {\n  swing_in_bottom_bck,\n  // socketIconContainerIntro,\n  backTopSection,\n} from \"../../../animations\";\nimport { orderStateColors, device } from \"../../../../../const/const\";\nimport IconSwitch from \"../../../icons/iconSwitch\";\n// import { useActions } from \"../../../../../hooks/useActions\";\nimport useViewport from \"../../../../../hooks/useWindowSize\";\nimport DetailGenerator from \"./detailGenerator\";\nimport { useFormatCurrency } from \"../../../../hooks/useFormatCurrency\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport InProcessOrder from \"./inProcessOrder\";\nimport { IconClose } from \"../../../shared-styles\";\nimport GetInfoComponentToRender from './infoComponent'\n// import useKeyActionAsClick from '../../../../../hooks/useKeyActionAsClick'\nimport { UploadTextMiddle, UploadMiddle } from './inProcessOrder'\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nmoment.locale(\"es\");\n\nconst OrderSupervisor = () => {\n\n  const { actions, currentOrder, tx_path } = UseTxState();\n\n  // const { isMovilViewport } = useViewport();\n\n  const cerrar = (e, forceClose) => {\n    if (e && (e.target.dataset.close_modal || forceClose)) {\n      actions.isAppLoading(false);\n      actions.renderModal(null);\n      // history.goBack()\n    }\n  };\n\n  // const idForCloseModal = useKeyActionAsClick(true, 'close-modal-button-orders', 27, true, 'onkeyup', true)\n\n  // useEffect(() => {\n  //   document.onkeyup = (event) => {\n  //     if (event.keyCode === 27) {\n  //       cerrar(event, true)\n  //       // event.preventDefault();\n  //     }\n  //   }\n  //\n  //   return () => {\n  //     document.onkeyup = false\n  //   }\n  // }, [document.onkeyup])\n\n  const closeAll = () => {\n    actions.renderModal(null);\n    return <div></div>;\n  };\n\n  if (!currentOrder || !currentOrder.state) {\n    actions.renderModal(null);\n    return <div></div>;\n  }\n\n  return (\n    <OtherModalLayout\n      id=\"close-button-with-OtherModalLayout\"\n      onkeydown={true}\n      on_click={cerrar}\n    >\n      {[\"accepted\", \"rejected\", \"canceled\"].includes(currentOrder.state) ? \n      <OrderDetail currentOrder={currentOrder} tx_path={tx_path}/>\n      :\n      (<InProcessOrder onErrorCatch={closeAll}/>)}\n    </OtherModalLayout>\n  );\n};\n\nexport default OrderSupervisor;\n\nexport const getState = (state) => {\n  return state === \"accepted\"\n    ? \"Aceptado\"\n    : state === \"confirmed\"\n    ? \"Confirmado\"\n    : state === \"pending\"\n    ? \"Pendiente\"\n    : state === \"rejected\"\n    ? \"Rechazado\"\n    : \"Cancelado\";\n};\n\nexport const OrderDetail = ({ currentOrder, tx_path }) => {\n  // const actions = useActions();\n  // const {\n    // tx_path,\n    // currencies,\n    // currentOrder,\n    // primary_path,\n    // history,\n  // } = UseTxState();\n  // console.log(currentOrder, currentOrder.id, tx_path, primary_path)\n  const { isMovilViewport } = useViewport();\n\n  // console.log('currentOrder', currentOrder)\n  // debugger\n\n  if(!currentOrder) return null;\n  const { state } = currentOrder;\n  const TitleText =\n    tx_path === \"deposits\"\n      ? \"Deposito\"\n      : tx_path === \"withdraws\"\n      ? \"Retiro\"\n      : tx_path === \"swaps\" && \"Intercambio\";\n\n  const textState =\n    state === \"accepted\"\n      ? \"Aceptado\"\n      : state === \"confirmed\"\n      ? \"Confirmado\"\n      : state === \"pending\"\n      ? \"Pendiente\"\n      : state === \"rejected\"\n      ? \"Rechazado\"\n      : \"Cancelado\";\n  const colorState =\n    state === \"accepted\"\n      ? \"#1cb179\"\n      : state === \"confirmed\"\n      ? \"#77b59d\"\n      : state === \"pending\"\n      ? \"#ff8660\"\n      : \"red\";\n\n      const ConsolidatedOrder = [\"accepted\", \"rejected\", \"canceled\"].includes(state)\n\n\n  return (\n    <Layout className={`layout3 ${(tx_path !== 'swaps' && (isMovilViewport && ConsolidatedOrder)) ? 'mobileInfoStyles' : ''}`} >\n      <IconClose theme=\"dark\" size={20} />\n\n      <TopSection state={currentOrder.state}>\n        <TitleContainer>\n          <OrderIcon className={`fa ${tx_path}`} />\n          <IconSwitch\n            className=\"TitleIconOrder\"\n            size={28}\n            icon={\n              (currentOrder.currency && currentOrder.currency.currency) || \"cop\"\n            }\n          />\n          <Title className=\"fuente\">{TitleText}</Title>\n          <DateTitle className=\"fuente2\">\n            Actualizado {moment(currentOrder.updated_at).format(\"LL\")}\n          </DateTitle>\n        </TitleContainer>\n\n        <CircleIconContainer>\n          <IconSwitch\n            size={isMovilViewport ? 25 : 45}\n            icon={state === \"accepted\" ? \"accepted2\" : state}\n            color={colorState}\n          />\n          <p className=\"fuente\" style={{ color: `${colorState}` }}>\n            {textState}\n          </p>\n        </CircleIconContainer>\n\n        <ContBackTopSection>\n          <BackTopSection />\n        </ContBackTopSection>\n      </TopSection>\n\n      <DetailGenerator\n        order={currentOrder}\n        title={`Detalle del ${TitleText}`}\n      />\n\n      <BottomSection colorState={colorState} currentOrder={currentOrder} tx_path={tx_path} />\n    </Layout>\n  );\n};\n\n\n\n\nexport const BottomSection = ({ currentOrder, tx_path, colorState }) => {\n  const { currencies } = UseTxState();\n\n  const [amount] = useFormatCurrency(\n    currentOrder.amount || currentOrder.bought,\n    currentOrder.currency\n  );\n  const { isMovilViewport } = useViewport();\n\n  // const textTotal =\n  //   tx_path === \"swaps\" && currentOrder.state === \"accepted\"\n  //     ? \"Saldo adquirido:\"\n  //     : currentOrder.state === \"accepted\"\n  //     ? \"Saldo acreditado:\"\n  //     : \"Saldo SIN acreditar:\";\n  const currency =\n    tx_path === \"swaps\"\n      ? currencies[currentOrder.to_buy_currency.currency]\n      : currencies[currentOrder.currency.currency];\n      \n  const InfoComponent = GetInfoComponentToRender({...currentOrder, tx_path})\n  const ConsolidatedOrder = [\"accepted\", \"rejected\", \"canceled\"].includes(currentOrder.state)\n\n  return (\n    <BottomSectionContainer>\n\n    <UploadMiddle className={`titleSection payment fuente ${tx_path}`}>\n       {/* Title gets from GetInfoComponentToRender */}\n      <UploadTextMiddle id=\"titleInfoComponent\" className={`titleSection ${ConsolidatedOrder ? 'consolidatedStyle' : ''}`}/>\n      <hr />\n    </UploadMiddle>\n\n\n      <Container consolidatedOrder={ConsolidatedOrder || ''} isMovilViewport={isMovilViewport || ''}>\n        <InfoComponent/>\n        <TotalAmount color={colorState} className={`${currentOrder.state}`}>\n          <p className=\"fuente saldo\">Cantidad</p>\n          <p className=\"fuente2 amount\">\n            {currentOrder.currency_type === \"fiat\" && \"$ \"}\n            {amount}{\" \"}\n            {currency && <span className=\"fuente\">{currency.code}</span>}\n          </p>\n        </TotalAmount>\n      </Container>\n    </BottomSectionContainer>\n  );\n};\n\nconst TotalAmount = styled.div`\n  width: auto;\n  height: 70px;\n  justify-self: end;\n  align-self: end;\n\n  &.rejected,\n  &.canceled {\n    .amount {\n      text-decoration: line-through;\n    }\n  }\n\n  p {\n    color: ${(props) => props.color};\n    margin: 0;\n    text-align: right;\n  }\n  & > p {\n    margin-bottom: 10px;\n  }\n  .amount {\n    font-size: 30px;\n    span {\n      font-size: 18px;\n    }\n  }\n  .saldo {\n    font-size: 16px;\n  }\n`;\n\nconst Container = styled.div`\n  width: ${props => !props.consolidatedOrder ? '100%' : 'calc(100% - 60px)'};\n  padding: ${props => !props.consolidatedOrder ? '0' : '0 30px'};\n  height: 100%;\n  display: grid;\n  grid-template-columns: ${props => props.isMovilViewport ? '1fr' : 'auto 1fr'};\n  grid-template-rows: ${props => props.isMovilViewport ? 'auto auto' : '1fr'};\n`;\n\n\n\nconst BottomSectionContainer = styled.section`\n  height: calc(200px - 40px);\n  width: 100%;\n  padding: 20px 0;\n  display: grid;\n  grid-template-rows: auto 1fr;\n  row-gap: 20px;\n`;\n\nconst TitleContainer = styled.div`\n  display: grid;\n  .TitleIconOrder {\n    grid-area: IconSwitch;\n  }\n  align-items: center;\n  column-gap: 15px;\n  row-gap: 4px;\n  align-self: center;\n  position: absolute;\n  left: 30px;\n  grid-template-columns: 25px 25px minmax(100px, 200px);\n  grid-template-areas:\n    \"OrderIcon IconSwitch Title\"\n    \"OrderIcon IconSwitch DateTitle\";\n`;\n\nconst DateTitle = styled.p`\n  font-size: 12px;\n  color: white;\n  grid-area: DateTitle;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  display: grid;\n  margin-left: 4px;\n`;\n\nconst Icon = styled.i``;\nconst OrderIcon = styled(Icon)`\n    margin-right: 10px;\n    font-size: 22px;\n    grid-area: OrderIcon;\n    color: white;\n    margin: 0;\n    display: grid !important;\n    justify-items: center;\n\n    &.swaps:before{\n       content: \"\\f079\";\n      }\n    }\n    &.withdraws:before{\n       content: \"\\f062\";\n      }\n    }\n    &.deposits:before{\n       content: \"\\f063\";\n      }\n    }\n\n  `;\n\nconst BackTopSection = styled.div`\n  width: 120%;\n  height: 120%;\n  position: absolute;\n  background-image: url(/static/media/back.fe9a1b62.png);\n  background-size: contain;\n  background-repeat: repeat;\n  background-position: right;\n  opacity: 0.05 !important;\n  animation: ${backTopSection};\n  animation-duration: 80s;\n  animation-iteration-count: infinite;\n  transform: scale(1.5);\n`;\n\nconst ContBackTopSection = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  overflow: hidden;\n`;\n\nconst CircleIconContainer = styled.div`\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  justify-self: end;\n  width: 90px;\n  height: 90px;\n  background: white;\n  border-radius: 50%;\n  align-self: flex-end;\n  position: relative;\n  transform: translate(-30px, 45px) !important;\n\n  p {\n    position: absolute;\n    margin: 0;\n    bottom: -3px;\n    font-size: 14px;\n    justify-self: center;\n  }\n\n  @media ${device.tablet} {\n    width: 60px;\n    height: 60px;\n    transform: translate(-20px, 45px) !important;\n    p {\n      bottom: -8px;\n    }\n  }\n`;\n\nconst Title = styled.h3`\n  text-align: left;\n  color: white;\n  margin: 0;\n  grid-area: Title;\n  font-size: 22px;\n  margin-left: 4px;\n`;\n\nconst TopSection = styled.section`\n  background: ${(props) =>\n    props.state ? orderStateColors[props.state] : \"gray\"};\n  width: 100%;\n  height: 100%;\n  display: grid;\n  position: relative;\n  border-top-right-radius: 6px;\n  border-top-left-radius: 6px;\n`;\n\nexport const Layout = styled.div`\n  width: 100%;\n  max-width: 550px;\n  height: auto;\n  min-height: 650px;\n  background: white;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  -webkit-transition: 0.3s;\n  transition: 0.3s;\n  border-radius: 11px;\n  position: relative;\n  grid-template-rows: 115px 1fr auto;\n\n  &.mobileInfoStyles{\n    grid-template-rows: 115px 1fr 300px;\n  }\n\n  -webkit-animation: ${swing_in_bottom_bck} 1s\n    cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n  animation: ${swing_in_bottom_bck} 1s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    both;\n`;\n","import React, { useEffect } from \"react\";\nimport loadable from \"@loadable/component\";\nimport { useItemsInteractions } from \"../../../hooks/useNavigationKeyActions\";\nimport { InputKeyActionHandler } from \"../accountList/styles\";\nimport { getCdnPath } from '../../../environment'\n\n\nconst IconSwitch = loadable(() => import(\"../icons/iconSwitch\"));\n\nlet timerId;\nfunction NewItemsLayout(props) {\n  const {\n    type,\n    actives,\n    name,\n    code,\n    placeholder,\n    primarySelect,\n    format,\n    itemType,\n    currency_type,\n    pair_id,\n    actualizarEstado,\n    handleClick,\n    specialMode = false,\n  } = props;\n\n  const doSelectionForItem = () => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      actualizarEstado && actualizarEstado(name, code, currency_type, pair_id);\n    }, 100);\n  };\n  const _handleClick = specialMode ? doSelectionForItem : handleClick;\n  const [isSelected, setFocus] = useItemsInteractions(\n    {...props, uniqid: pair_id},\n    { suprKeyAction: () => false, enterKeyAction: _handleClick },\n    false\n  );\n\n  useEffect(() => {\n    specialMode && actives && setFocus();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (!specialMode && isSelected && !actives) {\n      doSelectionForItem(false);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isSelected, actives]);\n\n  const _activated = specialMode ? isSelected : actives;\n\n  console.log('|||||||||||||||||||   NewItemsLayout =====> ', type, code)\n\n  return (\n    <div\n      id={`${primarySelect ? \"primarySelect\" : \"\"}`}\n      className={`${type === \"payment_method\" ? \"ILtuvieja\" : \"\"} `}\n    >\n      <InputKeyActionHandler\n        aria-label=\"itemFromList\"\n        name=\"itemFromList\"\n        autoComplete=\"off\"\n        id={props.focusedId}\n      />\n      <div\n        className={`item ${_activated ? \"itemSelection\" : \"\"}`}\n        onClick={!actives || itemType === \"banks\" ? doSelectionForItem : null}\n      >\n        {!format && code && type ? (\n          type === \"coins\" ||\n          type === \"payment_method\" ||\n          type === \"service_mode\" ? (\n            _activated ? (\n              <div title={name} id={code}>\n                <img\n                  className=\"itemSobre activaos\"\n                  src={`${getCdnPath('assets')}${type}/${code}2.png`}\n                  alt=\"\"\n                  width=\"60\"\n                />\n              </div>\n            ) : (\n              <div title={name} id={code}>\n                <img\n                  className=\"itemFuera\"\n                  src={`${getCdnPath('assets')}${type}/${code}.png`}\n                  width=\"60\"\n                  alt=\"\"\n                  id={code}\n                  title={name}\n                />\n                <img\n                  className=\"itemSobre\"\n                  src={`${getCdnPath('assets')}${type}/${code}2.png`}\n                  width=\"60\"\n                  alt=\"\"\n                  id={code}\n                  title={name}\n                />\n              </div>\n            )\n          ) : (\n            <img\n              className={`banquis ${_activated ? \"itemVisible\" : \"\"}`}\n              src={`${getCdnPath('assets')}${type}/${code}.png`}\n              alt=\"\"\n              id={code}\n              title={name}\n              width=\"85\"\n            />\n          )\n        ) : (\n          <IconSwitch icon={code} size={45} />\n        )}\n        {primarySelect ? (\n          <div id=\"primarySelectText\" className=\"primarySelectText\">\n            <p title={name}>{name}</p>\n            {placeholder &&\n              placeholder.map((item) => {\n                return (\n                  <p id=\"ILplaceholder2\" className=\"fuente\" key={item.id}>\n                    {item.name}\n                  </p>\n                );\n              })}\n          </div>\n        ) : (\n          <p title={name}>{name}</p>\n        )}\n      </div>\n      {placeholder && !primarySelect && (\n        <div className=\"placeHoldCont\">\n          {placeholder.map((item) => {\n            return (\n              <p className=\"ILplaceholder fuente\" key={item.id}>\n                {item.name}\n              </p>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(NewItemsLayout);\n","import React, { Component, Fragment } from \"react\";\nimport { ButtonForms } from \"../../widgets/buttons/buttons\";\nimport IconSwitch from \"../../widgets/icons/iconSwitch\";\nimport { InputDepositForm } from \"../../widgets/inputs\";\nimport {\n  handleKeyPress,\n  number_format,\n  get_ui_name_currency,\n} from \"../../../utils\";\n// import BigNumber from \"bignumber.js\";\n\nimport \"../deposit/deposit.css\";\n\nclass ViewAmountComponent extends Component {\n  state = {\n    statusInput: \"\",\n    ui_currency_name: \"\",\n    minAmount: this.props.min_amount || 20000,\n  };\n\n  handleKeyPress = (e) => {\n    let message = handleKeyPress(e);\n    return this.setState({ statusInput: message });\n  };\n\n  componentDidMount() {\n    this.init_config();\n  }\n\n  componentWillUnmount() {}\n\n  getMinAmount = async() => {\n    \n    const { withdrawProviders, withdraw_account_list } = this.props\n\n    let wProvider\n    let minAmount\n    let cost\n\n    if(!withdrawProviders) return this.state.minAmount;\n\n    await withdrawProviders.forEach(_wProvider => {\n      if(_wProvider.provider_type === 'bank'){\n        wProvider = _wProvider\n      }\n    });\n\n    minAmount = wProvider?.provider?.min_amount || '50000' \n\n    // minAmount = new BigNumber(wProvider.provider.min_amount)\n    if(!wProvider || !withdraw_account_list) return minAmount;\n\n    await withdraw_account_list.forEach(_wAccount => {\n      if(wProvider.name.includes(_wAccount?.bank_name?.value)){\n        // wProviderName validar el nombre del withdraw provider y el withdraw account\n        cost = wProvider.provider.costs.same_bank.fixed\n      }\n    });\n\n    if(!cost){\n      cost = wProvider.provider.costs.pp.fixed\n    }\n\n    const final = parseInt(minAmount) + parseInt(cost)\n\n\n    // return minAmount.plus(cost).toFormat()\n    return final\n    // withdrawProviders\n    // \n  }\n\n  init_config = async() => {\n    const { currency } = this.props;\n    let ui_currency_name = get_ui_name_currency(currency);\n    const minAmount = await this.getMinAmount()\n    this.setState({\n      ui_currency_name,\n      minAmount\n    });\n  };\n\n  actualizarAmount = ({ target }) => {\n    let amount = target.value.replace(/\\D/g, \"\");\n    // if (amount === 0 || amount === \"0\") return;\n    // amount = amount.substring(0, 15);\n    console.log('actualizarAmount', amount)\n    // target.value = amount;\n    this.props.updateAmountOnState(amount);\n  };\n\n  load_amount = () => {\n    const { operation_type, available } = this.props;\n\n    this.props.updateAmountOnState(\n      operation_type === \"deposit\" ? 20000 : available\n    );\n  };\n\n  render() {\n    const {\n      operation_type,\n      currency,\n      available,\n      amount,\n      handleSubmit,\n    } = this.props;\n\n    const { statusInput, minAmount } = this.state;\n\n    // let moneda =\n\n\n    const atributos = {\n      icon: currency,\n      size: 80,\n      // color:`${classic_view ? '#989898'  : !verify ? '#989898'  : '#1babec'}`,\n    };\n\n\n    // operation_type=\"withdraw\"\n    const buttonValidation = operation_type === \"withdraw\" ? this.props?.withdrawProviders?.length : true \n\n    // console.log('||||||||||| VIEW  AMOUNT  ||||||||||', parseFloat(available) > minAmount, parseFloat(available), minAmount, typeof(parseFloat(available)), typeof(minAmount))\n    return (\n      <div className=\"viewAmount DLstep\">\n        {currency && (\n          <Fragment>\n            <div className=\"DLcontain\">\n              <p className=\"fuente DLtitle2\">\n                Escribe la cantidad de {operation_type === \"deposit\" ? \"deposito\" : \"retiro\"}\n              </p>\n            </div>\n\n            <div className=\"DLcontain2\">\n              <IconSwitch {...atributos} />\n\n              <InputDepositForm\n                value={amount}\n                autoFocus={true}\n                actualizar={this.actualizarAmount}\n                name=\"amount\"\n                handleKeyPress={this.handleKeyPress}\n                service={number_format}\n              />\n\n              <div className=\"DLstatus\">\n                <p\n                  id=\"DLcop2\"\n                  className=\"fuente2 DLstitle DLcop DLcop2\"\n                  onClick={this.load_amount}\n                >\n                  {operation_type === \"deposit\" ? `Cantidad minima: $ ${number_format(minAmount)} ${currency.toUpperCase()}`\n                    : operation_type === \"withdraw\" && parseFloat(available) > minAmount ? `Disponible: ~$${number_format(available)} ${currency.toUpperCase()} | Minima: ~$${number_format(minAmount)} ${currency.toUpperCase()}`\n                    : `Disponible: ~$${number_format(available)} ${currency.toUpperCase()} | Minima: ~$${number_format(minAmount)} ${currency.toUpperCase()}`}\n                </p>\n                <p className=\"textStatus\">{statusInput}</p>\n              {/* <p className=\"fuente DLstitle DLcop\">{ui_currency_name}</p> */}\n              </div>\n            </div>\n\n            <ButtonForms\n              _id={this.props.mainCtaId}\n              type=\"primary\"\n              active={ \n                buttonValidation && (operation_type === \"deposit\" ? parseFloat(amount) >= parseFloat(minAmount) ? true : false\n                  : parseFloat(amount) >= parseFloat(minAmount) && parseFloat(amount) <= parseFloat(available) && parseFloat(amount) > 0\n                  ? true\n                  : false)\n              }\n              siguiente={handleSubmit}\n            >\n              Continuar\n            </ButtonForms>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ViewAmountComponent;\n","import React, { useEffect } from \"react\";\nimport useNavigationKeyActions from \"../../../../hooks/useNavigationKeyActions\";\nimport { ButtonForms } from \"../../../widgets/buttons/buttons\";\nimport NewItemsLayout from \"../../../widgets/items/new-items-layout\";\nimport \"./views.css\";\n\nconst MethodView = (props) => {\n  const {\n    items,\n    select_method,\n    item_active,\n    siguiente,\n    title,\n    // subtitle,\n    withdraw,\n  } = props;\n\n  let movil_viewport = window.innerWidth < 768;\n  const [setCurrentSelection] = useNavigationKeyActions({\n    items,\n    loader: false,\n    uniqueIdForElement: \"pay-method-item-\",\n    modalRestriction: false,\n  });\n\n  useEffect(() => {\n    select_method(\"Transferencia bancaria\", \"bankaccount\");\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div id=\"DLsteps\" className=\"DLsteps method\">\n      <div className=\"DLcontains\" style={{ alignSelf:\"baseline\", marginTop:'15px' }}>\n        <p className=\"fuente DLtitle2\">{title ? title : \"Title\"}</p>\n      </div>\n\n      <div\n        className={`${\n          !movil_viewport\n            ? \"DLItemSelectionContainers\"\n            : \"ItemSelectionContainerMovil\"\n        }`}\n      >\n        <div\n          className={`${\n            !movil_viewport\n              ? !withdraw\n                ? \"DLcontainerItems\"\n                : \"DLcontainerItems DLcontainerItems2\"\n              : \"containerItems\"\n          } chooseMethod`}\n        >\n          {items\n            .filter((item) => !withdraw && item.code !== \"debit\")\n            .map((item, index) => {\n              return (\n                <NewItemsLayout\n                  setCurrentSelection={setCurrentSelection}\n                  focusedId={`pay-method-item-${index}`}\n                  number={index}\n                  handleClick={siguiente}\n                  actualizarEstado={select_method}\n                  actives={item_active === item.code && true}\n                  primarySelect={movil_viewport}\n                  {...item}\n                  key={item.id}\n                />\n              );\n            })}\n        </div>\n      </div>\n\n      <ButtonForms\n        _id={props.idForAcceptButtonInDepositView}\n        type=\"primary\"\n        active={item_active ? true : false}\n        siguiente={siguiente}\n      >\n        Continuar\n      </ButtonForms>\n    </div>\n  );\n};\n\nexport default MethodView;\n","import React, { useEffect } from \"react\";\nimport useNavigationKeyActions from \"../../../../hooks/useNavigationKeyActions\";\nimport { ButtonForms } from \"../../../widgets/buttons/buttons\";\nimport NewItemsLayout from \"../../../widgets/items/new-items-layout\";\n\nconst ModalityView = (props) => {\n  const {\n    items,\n    update_service_mode,\n    service_mode,\n    buttonActive,\n    // deposit_service,\n    create_deposit_order,\n    title,\n    // subtitle,\n  } = props;\n  let movil_viewport = window.innerWidth < 768;\n\n  const [setCurrentSelection] = useNavigationKeyActions({\n    items,\n    loader: false,\n    uniqueIdForElement: \"modality-item-\",\n    modalRestriction: false,\n  });\n\n  useEffect(() => {\n    update_service_mode(\"Sucursal virtual\", \"app\");\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"DLstep modality\">\n      <div className=\"DLcontain\" style={{alignSelf: \"baseline\", marginTop: \"15px\"}}>\n        <p className=\"fuente DLtitle2\">\n          {title}\n        </p>\n      </div>\n\n      <div\n        className={`${\n          window.innerWidth > 768\n            ? \"DLItemSelectionContainer\"\n            : \"ItemSelectionContainerMovil\"\n        }`}\n      >\n        <div\n          className={`${\n            window.innerWidth > 768 ? \"DLcontainerItems\" : \"containerItems\"\n          } chooseMethod`}\n        >\n          {items.map((item, index) => {\n            return (\n              <NewItemsLayout\n                setCurrentSelection={setCurrentSelection}\n                focusedId={`modality-item-${index}`}\n                number={index}\n                handleClick={create_deposit_order}\n                primarySelect={movil_viewport}\n                actualizarEstado={update_service_mode}\n                actives={service_mode === item.code && true}\n                {...item}\n                key={item.id}\n              />\n            );\n          })}\n        </div>\n      </div>\n      <ButtonForms\n        type=\"primary\"\n        active={buttonActive}\n        siguiente={create_deposit_order}\n      >\n        Crear orden\n      </ButtonForms>\n    </div>\n  );\n};\n\nexport default ModalityView;\n","import React, { Fragment } from \"react\";\nimport { SimpleLoader } from \"../../../widgets/loaders\";\nimport {\n  ButtonSuccess,\n  ButtonSuccess2,\n} from \"../../../widgets/buttons/buttons\";\nimport { service_modes, cash_payment } from \"../../../api/ui/api.json\";\n// import proof from \"../../../../assets/proof.png\";\nimport ModalityView from \"../views/modality\";\n// import IconSwitch from \"../../../widgets/icons/iconSwitch\";\nimport DetailGenerator from \"../../../widgets/modal/render/orderDetail/detailGenerator\";\nimport { getCdnPath } from '../../../../environment'\n\nimport \"./flows.css\";\n\n// {/* ---------------------------------------------------------FLUJO TRANSFERENCIA BANCARIA.-------------------------------------------------------------------- */}\n\nexport const TransferFlow = (props) => {\n  const {\n    deposit_way,\n    deposit_service,\n    step,\n    buttonActive,\n    update_service_mode,\n    service_mode,\n    create_deposit_order,\n    idForAcceptButtonInDepositView,\n  } = props;\n\n  return (\n    <section className=\"DepositLayout\">\n      {/* {\n        (step === 3 && deposit_way === \"bankaccount\") &&\n        <div className=\"DLstep\">\n          <div className=\"DLcontain\">\n            <p className=\"fuente DLtitle2\" >Procesaré el deposito por medio</p>\n            <p className=\"fuente DLstitle\" >de la entidad Bancaria:</p>\n          </div>\n          {\n            !deposit_provider_list ?\n            <SimpleLoader label=\"cargando proveedores\"/>\n            :\n            <ItemSelectionContainer\n              items={deposit_provider_list}\n              type=\"banks\"\n              itemSelect={deposit_service}\n              actualizarEstado={actualizarEstado}\n              update_control_form={update_control_form}\n            />\n          }\n\n          <ButtonForms type=\"primary\" active={buttonActive} siguiente={siguiente}>Continuar</ButtonForms>\n        </div>\n      } */}\n\n      {step === 3 && deposit_way === \"bankaccount\" && (\n        <ModalityView\n          title=\"Elige el medio de pago\"\n          items={service_modes}\n          update_service_mode={update_service_mode}\n          service_mode={service_mode}\n          buttonActive={buttonActive}\n          deposit_service={deposit_service}\n          create_deposit_order={create_deposit_order}\n        />\n      )}\n\n      {step === 4 && deposit_way === \"bankaccount\" && (\n        <Success\n          idForAcceptButtonInDepositView={idForAcceptButtonInDepositView}\n          {...props}\n        />\n      )}\n    </section>\n  );\n};\n\nexport const CashFlow = (props) => {\n  // console.log('LAAAAAA NUEVA PROPIEDAD DE SERVICIOOOOOOOO------------------', props)\n\n  const {\n    deposit_way,\n    short_bank_name,\n    deposit_service,\n    step,\n    update_local_state,\n    buttonActive,\n    create_deposit_order,\n    idForAcceptButtonInDepositView,\n  } = props;\n\n  return (\n    <section className=\"DepositLayout\">\n      {step === 3 && deposit_way === \"cash\" && (\n        <ModalityView\n          title=\"Elige el medio de pago:\"\n          items={cash_payment}\n          update_service_mode={update_local_state}\n          service_mode={short_bank_name}\n          buttonActive={buttonActive}\n          deposit_service={deposit_service}\n          create_deposit_order={create_deposit_order}\n        />\n      )}\n\n      {step === 4 && deposit_way === \"cash\" && (\n        <Success\n          idForAcceptButtonInDepositView={idForAcceptButtonInDepositView}\n          {...props}\n        />\n      )}\n    </section>\n  );\n};\n\nconst Success = (props) => {\n  const {\n    loader,\n    deposit_way,\n    // deposit_service,\n    finalizar,\n    final,\n    finalButton,\n    step,\n    new_ticket,\n    idForAcceptButtonInDepositView,\n    deposit_order,\n  } = props;\n\n  // console.log('|||||||||||||| °°°°° MODALSUCCESS', deposit_order, props)\n\n  return (\n    <div\n      id=\"DLstep2\"\n      className={`DLstep ${\n        step === 4 || (step === 4 && deposit_way === \"cash\") ? \"DLstep2\" : \"\"\n      }`}\n    >\n      {\n        loader ? (\n          <Fragment>\n            <div></div>\n            <SimpleLoader label={`Creando orden de depósito`} />\n          </Fragment>\n        ) : (\n          // <section className={`stepFinish ${final ? 'cambiarGrid': ''}`}>\n          <Fragment>\n            {/* <span className=\"DLsave\" onClick={guardarMetodo}>\n              <i className=\"far fa-bookmark tooltip\" >\n              <span className=\"tooltiptext tooltiptexts fuente\">Guardar Medio de pago</span>\n              </i>\n            </span> */}\n\n            <div className={`succ nWCabeza ${final ? \"desaparece1\" : \"\"}`}>\n              <div className=\"icon icon--order-success svg\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"72px\"\n                  height=\"72px\"\n                  alt=\"\"\n                >\n                  <g fill=\"none\" stroke=\"white\" strokeWidth=\"3\">\n                    <circle cx=\"36\" cy=\"36\" r=\"35\"></circle>\n                    <path\n                      className=\"check\"\n                      d=\"M17.417,37.778l9.93,9.909l25.444-25.393\"\n                    ></path>\n                  </g>\n                </svg>\n              </div>\n              <p className=\"titleWhite fuente\"> Operación Exitosa</p>\n            </div>\n\n            <div className=\"asaras\">\n              <div\n                style={{ marginTop: \"-20%\", zIndex: 999 }}\n                className={`${\n                  final ? \"apareces1\" : \"\"\n                } nWbody2 Fbody2 FlowCont fuente DLmessage`}\n              >\n                <div className=\"FolowTexts\">\n                  <p className=\"fuente Fimportant\">¡IMPORTANTE!</p>\n                  <p className=\"Ftexto fuente \">\n                    Una vez realizado el depósito bancario debes confirmar la\n                    transacción con una fotografía del{\" \"}\n                    <strong> DESPRENDIBLE DE PAGO </strong>y adjuntarlas en la\n                    orden de pago\n                  </p>\n                  <img className=\"tocatoca\" src={`${getCdnPath('assets')}proof.png`} alt=\"\" width=\"34%\" />\n                </div>\n              </div>\n\n              <div\n                className={`nWbody2 DLbody2 Fbody2 eya fuente ${\n                  final ? \"desaparece1\" : \"\"\n                }`}\n              >\n                {/* <div className=\"nBitemSuccesss\">\n                  <p className=\"fuente\">Debes depositar por:</p>\n                  <div className=\"fuente\">\n                    <div className=\"DLicontainer\">\n                      {deposit_service}\n                      <IconSwitch\n                        icon={deposit_service.toLowerCase()}\n                        size={25}\n                      />\n                    </div>\n                  </div>\n                </div> */}\n\n                {new_ticket && (\n                  <DetailGenerator order={deposit_order} theme=\"darkTheme\" />\n                )}\n              </div>\n            </div>\n\n            <div id=\"nWcta\" className=\"nWcta\">\n              {finalButton ? (\n                <ButtonSuccess2\n                  id={idForAcceptButtonInDepositView}\n                  toggleModal={finalizar}\n                >\n                  Finalizar\n                </ButtonSuccess2>\n              ) : (\n                <ButtonSuccess\n                  id={idForAcceptButtonInDepositView}\n                  toggleModal={finalizar}\n                >\n                  Finalizar\n                </ButtonSuccess>\n              )}\n            </div>\n          </Fragment>\n        )\n        // </section>\n      }\n    </div>\n  );\n};\n","import React, { Fragment } from \"react\";\n// import ItemSelectionContainer from '../../widgets/items/ItemSelectionContainer'\nimport { payment_method } from \"../../api/ui/api.json\";\n// import ItemLayout from \"../../widgets/items/itemLayout\";\nimport { SimpleLoader } from \"../../widgets/loaders\";\n// import { ButtonForms } from \"../../widgets/buttons/buttons\";\nimport { TransferFlow, CashFlow } from \"./flows\";\n// import ItemWallet from \"../../widgets/accountList/items\";\nimport MethodView from \"../../withdrawAccounts/new/views/1method\";\nimport ViewAmountComponent from \"../views/viewAmount\";\nimport useKeyActionAsClick from \"../../../hooks/useKeyActionAsClick\";\n\nconst DepositLayout = (props) => {\n  const {\n    siguiente,\n    currency = 'cop',\n    amount,\n    deposit_way,\n    step,\n    type_currency,\n    loader,\n    updateAmountOnState,\n    select_deposit_way,\n    minAmount,\n  } = props;\n  const idForAcceptButtonInDepositView = useKeyActionAsClick(\n    true,\n    \"accept-deposit-view-modal\",\n    13,\n    false,\n    \"onkeyup\",\n    true\n  );\n\n  // console.log('|||||||||||| deposit Layout ===> ', currency)\n\n  return (\n    <section className=\"DepositLayout\">\n      {/* {!short_currency_name && step === 1 && (\n        <div className=\"DLstep\">\n          <p className=\"fuente DLtitle\">\n            ¿En que moneda deseas hacer el deposito?\n          </p>\n\n          <div className=\"ItemSelectionContainer2 ItemSelectionContainerMovil\">\n            <div className=\"containerItems\">\n              {coins ? (\n                coins.map((item) => {\n                  return (\n                    <ItemLayout\n                      actualizarEstado={select_currency}\n                      actives={itemActive === item.name && true}\n                      {...item}\n                      key={item.id}\n                    />\n                  );\n                })\n              ) : (\n                <div className=\"LoaderIt\">\n                  <SimpleLoader label=\"Obteniendo Activos\" />\n                </div>\n              )}\n            </div>\n          </div>\n          <ButtonForms\n            _id={idForAcceptButtonInDepositView}\n            type=\"primary\"\n            active={buttonActive}\n            siguiente={primerDeposito}\n          >\n            Continuar\n          </ButtonForms>\n        </div>\n      )} */}\n\n      {/* {type_currency === \"crypto\" && step === 1 && (\n        <Fragment>{loader && <SimpleLoader label={msgLoader} />}</Fragment>\n      )}\n\n      {\n        type_currency === \"crypto\" && step === 1 && wallets_list.length > 0 && (\n          <section className=\"DLwallet_list_container\">\n            <p className=\"DLtitle2\">\n              Elige la cuenta {currency} en la que deseas depositar:\n            </p>\n            <div className=\"DLwallet_list\">\n              {wallets_list.map((wallet) => {\n                return (\n                  <ItemWallet\n                    key={wallet.id}\n                    deposit={deposit}\n                    deposit_providers={deposit_providers}\n                    wallet={wallet}\n                    walletDetail={deposit}\n                  />\n                );\n              })}\n            </div>\n          </section>\n        )\n      } */}\n\n      {type_currency === \"fiat\" && step === 1 && (\n        <Fragment>\n          {loader ? (\n            <SimpleLoader label=\"Accediendo a la cuenta\" />\n          ) : (\n            <ViewAmountComponent\n              currency={currency}\n              mainCtaId={idForAcceptButtonInDepositView}\n              amount={amount}\n              updateAmountOnState={updateAmountOnState}\n              operation_type=\"deposit\"\n              handleSubmit={siguiente}\n              minAmount={minAmount}\n            />\n          )}\n        </Fragment>\n      )}\n\n      {type_currency === \"fiat\" && step === 2 && (\n        <MethodView\n          title=\"Elige el tipo de transacción\"\n          items={payment_method}\n          select_method={select_deposit_way}\n          item_active={deposit_way}\n          siguiente={siguiente}\n          idForAcceptButtonInDepositView={idForAcceptButtonInDepositView}\n        />\n      )}\n\n      {/* ---------------------------------------------------------FLUJO TRANSFERENCIA BANCARIA.-------------------------------------------------------------------- */}\n\n      {deposit_way === \"bankaccount\" && (\n        <TransferFlow\n          idForAcceptButtonInDepositView={idForAcceptButtonInDepositView}\n          {...props}\n        />\n      )}\n\n      {/* ---------------------------------------------------------FLUJO TARJETA DEBITO.-------------------------------------------------------------------- */}\n\n      {step === 3 && deposit_way === \"debit\" && (\n        <div className=\"DLstep\">\n          <p>DEBITO PSE</p>\n        </div>\n      )}\n\n      {/* ---------------------------------------------------------FLUJO DINERO EN EFECTIVO.-------------------------------------------------------------------- */}\n\n      {deposit_way === \"cash\" && (\n        <CashFlow\n          idForAcceptButtonInDepositView={idForAcceptButtonInDepositView}\n          {...props}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default DepositLayout;\n","import React from \"react\";\nimport { SimpleLoader } from \"../../loaders\";\nimport \"../toast.css\";\n\nexport const SavePayment = (props) => {\n  const { label, loader } = props;\n\n  return (\n    <div className=\"SavePayment\">\n      <p>{label}</p>\n      {loader ? (\n        <SimpleLoader />\n      ) : (\n        <i className=\"far fa-check-circle Msuccess\"></i>\n      )}\n    </div>\n  );\n};\n\nexport default SavePayment;\n","import React, { Component } from \"react\";\nimport DepositLayout from \"./depositLayout\";\nimport { connect } from \"react-redux\";\n// import { banks, coins } from '../../api/ui/api.json'\nimport { bindActionCreators } from \"redux\";\nimport actions from \"../../../actions\";\nimport { toast } from \"react-toastify\";\nimport * as globalServices from \"../../../utils\";\nimport \"./deposit.css\";\nimport { SavePayment } from \"../../widgets/toast/messages\";\nimport { withRouter } from \"react-router\";\nimport BigNumber from \"bignumber.js\";\nimport withCoinsendaServices from \"../../withCoinsendaServices\";\n\nclass DepositContainer extends Component {\n  state = {\n    type_currency: this.props.type_currency,\n    // currency:this.props.currency,\n    currency:\n      this.props.current_wallet && this.props.current_wallet.currency.currency,\n    short_currency_name: this.props.short_currency_name,\n    short_bank_name: this.props.short_bank_name,\n    amount: 0,\n    minAmount: null,\n    deposit_way: this.props.deposit_way,\n    deposit_service: this.props.deposit_service,\n    service_mode: this.props.service_mode,\n    itemActive: \"\",\n    statusInput: \"\",\n    final: false,\n    finalButton: false,\n    msgLoader: \"\",\n    wallets_list: [],\n    cost_id: this.props.cost_id,\n    account_id: this.props.match.params && this.props.match.params.account_id,\n    new_ticket: null,\n    deposit_provider_list: null,\n    currentDepositProvider: null,\n    deposit_order: null,\n  };\n\n  componentDidMount() {\n    this.props.action.CurrentForm(\"deposit\");\n    // this.serve_deposit_provider_views()\n    this.props.history.push(`?form=deposit_amount`);\n\n    // Aqui se selecciona el deposit provider actual\n    const { deposit_providers } = this.props;\n    // let deposit_provider = await deposit_providers.find(dep_prov => {\n    //   return dep_prov.provider.name === short_bank_name || (cost_id === \"en_efectivo\" &&  dep_prov.provider_type === 'bank')\n    // })\n    const currentDepositProvider =\n      deposit_providers &&\n      deposit_providers[this.props.current_wallet.dep_prov[0]];\n    this.setState({ currentDepositProvider });\n  }\n\n  componentWillUnmount() {\n    this.props.history.push(window.location.pathname);\n  }\n\n  componentDidUpdate(prevProps) {\n    // inserto las siguientes rutas para poder hacer seguimiento al funnel desde hotjar\n    if (prevProps.step === this.props.step) {\n      return;\n    }\n\n    let route;\n\n    if (this.props.step === 1) {\n      route = `?form=deposit_amount`;\n    }\n\n    if (this.props.step === 2) {\n      route = `?form=deposit_way_to_pay`;\n    }\n\n    if (this.props.step === 3) {\n      route = `?form=deposit_payment_method`;\n    }\n\n    if (this.props.step === 4) {\n      route = `?form=deposit_finish`;\n    }\n    // console.log('||||||||||||||||||||||||||||||| componentDidUpdate =?=> ')\n    this.props.history.push(route);\n  }\n\n  update_control_form = (searchMatch) => {\n    //esta función valida si tenemos un nombre item escrito y si tenemos un item coin/bank seleccionado, si cumple con esto, nos habilita el call to action para seguir hacia la proxima acción\n    // console.log('update_control_form SE ESTA ACTUALIZANDO: ', searchMatch)\n\n    if (this.props.search.length > 1) {\n      return this.props.action.UpdateFormControl(\"deposit\", false);\n    }\n\n    if (this.props.search.length === 1) {\n      // Valido si hay una coincidencia en la busqueda y un nombre para el item que se esta creando, doy luz verde para continuar hacia el siguiente paso del formulario\n      // console.log('esto es lo que pasa puto', this.props.search)\n      return this.props.action.UpdateFormControl(\"deposit\", true);\n    }\n\n    if (this.props.step === 3) {\n      if (this.state.deposit_service !== \"\") {\n        return this.props.action.UpdateFormControl(\"deposit\", true);\n      }\n    }\n\n    if (this.props.step === 4) {\n      if (this.state.service_mode !== \"\") {\n        return this.props.action.UpdateFormControl(\"deposit\", true);\n      }\n    }\n  };\n\n  update_form = () => {\n    this.props.action.UpdateForm(\"deposit\", this.state);\n  };\n\n  // PASO1, SI ES EL PRIMER DEPOSITO SELECCIONAMOS EL TIPO DE MONEDA LA CUAL DESEAMOS DEPOSITAR\n  select_currency = (itemName, short_name, currency_type) => {\n    this.setState({\n      itemActive: itemName,\n      currency: itemName,\n      short_currency_name: short_name,\n      type_currency: currency_type,\n    });\n    this.props.action.UpdateFormControl(\"deposit\", true);\n  };\n\n  // SI SE SELECIONA CRYPTO, Y NO HAY WALLET DE ESA CUENTA, SE CREA UNA NUEVA, SINO LISTAMOS LAS WALLETS Y LA QUE ELIJA, LO ENVIAREMOS A DEPOSIT DE ESA WALLET SINO SE CONTINÚA CON EL FLUJO DEPOSITO DE FIAT, Y  SE PREESTABLECE LA CANTIDAD MINIMA DE DEPOSITO QUE SON 20.MIL COP\n  primerDeposito = async () => {\n    let amountw = 20000;\n\n    // limitar cantidad de deposito limite por proveedor\n    if (true) {\n      console.log(this.state, this.props);\n    }\n\n    await this.setState({\n      amount: amountw,\n    });\n\n    const { type_currency } = this.state;\n\n    this.update_form(this.state);\n    // this.props.history.push(\"/wallets/deposit/5c04f873eb9c94511fd2edfa\")\n    // this.props.action.toggleModal()\n    // console.log('|||||||||||| PRIMER DEPOSITO', this.state.type_currency)\n\n    let wallets = this.props.wallets;\n\n    // 1.Consultamos si hay wallets en el estado\n    if (!wallets) {\n      this.setState({\n        msgLoader: \"Obteniendo tus billeteras\",\n      });\n\n      this.props.action.isAppLoading(true);\n      let res = await this.props.coinsendaServices.getWalletsByUser();\n      this.props.action.isAppLoading(false);\n      if (!res) {\n        return this.handleError(\"No se han podido consultar tus Billeteras\");\n      }\n      wallets = !res.entities.wallets ? [] : res.entities.wallets;\n    }\n\n    // 2. hay wallets disponibles sobre la moneda solicitada?\n    let current_wallets = await this.props.services.matchNormalizeWallet(\n      wallets,\n      this.state.currency\n    );\n    // 2.1 Si NO EXISTEN WALLETS en esta moneda, CREAMOS la wallet y entramos a this.wallet/deposit por medio de la ruta\n    if (!current_wallets || current_wallets.length < 1) {\n      await this.crearWallet();\n\n      return this.props.action.CurrentForm(\"deposit\");\n      // return alert('PERRO, no tenemos wallets todavía, ya mismo creamos una..')\n    }\n    // 2.2, si existe solamente una wallet entonces ingrese automaticamente al deposito de esta wallet\n    if (\n      current_wallets.length === 1 ||\n      (current_wallets.length >= 1 && type_currency === \"fiat\")\n    ) {\n      let unica_wallet = current_wallets.pop();\n      // return console.log(unica_wallet.id)\n      if (this.state.type_currency !== \"fiat\") {\n        this.props.action.toggleModal();\n      }\n      // this.props.action.toggleModal()\n      await this.to_deposit_wallet(unica_wallet.id);\n      return this.props.action.CurrentForm(\"deposit\");\n    }\n\n    // 3 Entonces muestre las wallets, para elegir en cual hacer el deposito...\n\n    this.setState({\n      wallets_list: current_wallets,\n    });\n    return console.log(\"Eureka\");\n  };\n\n  handleError = (msg) => {\n    this.props.toastMessage()(msg, \"error\");\n    this.props.action.toggleModal();\n    this.props.action.CleanForm(\"deposit\");\n  };\n\n  crearWallet = async () => {\n    this.props.action.isAppLoading(true);\n    this.setState({\n      msgLoader: `Creando billetera ${this.state.currency}`,\n    });\n\n    const body = {\n      data: {\n        userId: this.props.user.id,\n        name: `Mi nueva wallet ${this.state.currency}`,\n        description: \"description\",\n        country: this.props.user.settings.current_country,\n        currency: {\n          currency: this.state.currency,\n          is_token: false,\n        },\n      },\n    };\n\n    const new_wallet = await this.props.coinsendaServices.createWallet(body);\n\n    // setTimeout(()=>{\n    await this.props.coinsendaServices.getWalletsByUser();\n\n    this.props.action.isAppLoading(false);\n    this.to_deposit_wallet(new_wallet.account.id);\n    if (this.state.type_currency !== \"fiat\") {\n      this.props.action.CleanForm(\"deposit\");\n    }\n    let message = `¡Estas dentro de la nueva wallet ${this.state.currency}!`;\n    this.props.toastMessage()(message, \"success\");\n\n    // }, 1500)\n  };\n\n  to_deposit_wallet = (id_wallet) => {\n    return this.props.history.push(`/wallets/deposit/${id_wallet}`);\n  };\n\n  // PASO 1, DIGITAMOS EL MONTO DE FIAT QUE DESEAMOS COMPRAR\n  updateAmountOnState = async (amount) => {\n    // let amountw = await this.props.services.number_format(amount)\n    // verificamos que no supere el monto maximo permitido por el preveedor\n    const maxDepositAmount = this.state.currentDepositProvider && this.state.currentDepositProvider.provider.max_amount;\n    const decimalAmount = new BigNumber(amount);\n    if (!amount || decimalAmount.isLessThan(maxDepositAmount || '1000000000')) {\n      await this.setState({amount});\n    }\n    // this.props.action.UpdateFormControl('deposit', (!amount) ? false : (amount<20000) ? false : true)\n  };\n\n  // PASO 2, SELECCIONAMOS EL METODO DE PAGO....\n  select_deposit_way = async (payload, deposit_way) => {\n    await this.setState({\n      cost_id: deposit_way === \"cash\" ? \"en_efectivo\" : \"otros_medios\",\n      deposit_way: deposit_way,\n    });\n\n    this.props.action.UpdateFormControl(\"deposit\", true);\n    this.update_form();\n    // await this.serve_deposit_provider_views(deposit_way === 'cash' ? 'en_efectivo' : 'otros_medios')\n  };\n\n  update_service_mode = async (value, short) => {\n    await this.setState({\n      service_mode: short,\n    });\n    await this.update_form();\n    this.props.action.UpdateFormControl(\"deposit\", true);\n  };\n\n  // PASO 3, SELECCIONAMOS LA ENTIDAD BANCARIA POR LA CUAL PROCESAREMOS EL DEPOSITO....\n  actualizarEstado = async (event, ppp) => {\n    const { short_name, value } = event.target;\n    this.update_local_state(value, short_name);\n  };\n\n  update_local_state = async (value, short_name) => {\n    // console.log('Entidad bancaria',value, short_name)\n    await this.setState({\n      deposit_service: value,\n      short_bank_name: short_name,\n    });\n\n    this.update_form();\n    this.update_control_form();\n  };\n\n  siguiente = (event) => {\n    this.props.action.UpdateFormControl(\"deposit\", false);\n    this.update_form();\n    this.props.action.IncreaseStep(this.props.current);\n    // if(this.state.deposit_way === 'cash'){\n    //     return this.props.action.IncreaseStep(this.props.current)\n    // }\n\n    if (!this.state.deposit_provider_list) {\n      // return this.serve_deposit_provider_views()\n    }\n  };\n\n  componentWillReceiveProps(props) {\n    const { match } = props;\n\n    this.setState({\n      account_id: match.params && match.params.account_id,\n    });\n  }\n\n  finalizar = async () => {\n    if (this.state.final) {\n      this.props.action.CurrentForm(\"wallets\");\n      // programamos la animación del nuevo deposito creado\n      this.props.action.add_new_transaction_animation();\n      this.props.action.CleanForm(\"deposit\");\n      // console.log('||||||||||||||||||| FINISH HIM', this.state)\n      return this.props.history.push(\n        `/wallets/activity/${this.state.account_id}/deposits`\n      );\n    }\n\n    this.props.history.push(`?form=deposit_close`);\n\n    this.setState({\n      final: true,\n      finalButton: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        finalButton: false,\n      });\n    }, 7000);\n  };\n\n  create_deposit_order = async () => {\n    const { current_wallet, user, deposit_providers } = this.props;\n\n    const { amount, cost_id, deposit_service, service_mode } = this.state;\n\n    const deposit_provider =\n      deposit_providers && deposit_providers[current_wallet.dep_prov[0]];\n\n    this.siguiente();\n    this.props.action.isAppLoading(true);\n\n    if (!this.props.deposits) {\n      await this.props.coinsendaServices.get_deposits(\n        this.props.current_wallet.id\n      );\n    }\n\n    let response = await this.props.coinsendaServices.createDeposit(\n      current_wallet && current_wallet.currency,\n      amount,\n      current_wallet.id,\n      cost_id,\n      deposit_service,\n      user,\n      service_mode,\n      deposit_provider.id\n    );\n\n    if (!response) {\n      this.props.action.isAppLoading(false);\n      this.props.action.ReduceStep(this.props.current);\n      return this.props.toastMessage()(\n        \"No se ha podido crear la orden de depósito\",\n        \"error\"\n      );\n    }\n\n    let new_deposit_model = {\n      id: response.id,\n      unique_id: response.id,\n      type_order: \"deposit\",\n      ...response,\n    };\n\n    if (!current_wallet.count) {\n      await this.props.action.update_item_state(\n        { [current_wallet.id]: { ...current_wallet, count: 99 } },\n        \"wallets\"\n      );\n    }\n\n    // await this.props.action.get_deposit_list(user)\n    // await this.props.action.normalize_new_item(user, deposits, new_deposit_model, 'deposits')\n    // await this.props.action.update_activity_account(this.props.current_wallet.id, 'deposits')\n\n    // await this.props.action.update_pending_activity()\n    // console.log('=> deposits UPDATE', this.props.deposits)\n    // setTimeout(async()=>{\n    //   await this.props.services.serve_activity_list(action.get_deposit_list, user, current_wallet, 'deposits')\n    //   await this.props.action.update_activity_account(this.props.current_wallet.id, 'deposits')\n    //   await this.props.action.update_pending_activity()\n    // }, 5000)\n\n    // return console.log('DEPOSIT INFO RESPONSE', response, new_deposit_model)\n    let new_deposit = [\n      {\n        ui_name: \"Id depósito:\",\n        value: new_deposit_model.id,\n        id: 1,\n      },\n      {\n        ui_name: \"Cantidad depósito:\",\n        value: `$ ${this.props.services.number_format(\n          new_deposit_model.amount\n        )} ${new_deposit_model.currency.currency}`,\n        icon: new_deposit_model.currency.currency,\n        id: 2,\n      },\n      {\n        ui_name: \"Costo depósito:\",\n        value: `$ ${this.props.services.number_format(\n          new_deposit_model.cost\n        )} ${new_deposit_model.currency.currency}`,\n        id: 3,\n      },\n      {\n        ui_name: \"Total depósito:\",\n        value: `$ ${this.props.services.number_format(\n          new_deposit_model.amount_neto\n        )} ${new_deposit_model.currency.currency}`,\n        id: 4,\n      },\n      {\n        ui_name: \"Debes depositar a:\",\n        value: deposit_provider.provider.ui_name,\n        icon: deposit_provider.provider.name,\n        id: 5,\n      },\n      {\n        ui_name: deposit_provider.provider.account.account_id.ui_name,\n        value: deposit_provider.provider.account.account_id.account_id,\n        id: 6,\n      },\n      {\n        ui_name: deposit_provider.provider.account.type.ui_name,\n        value: deposit_provider.provider.account.type.type,\n        id: 7,\n      },\n      {\n        ui_name: deposit_provider.provider.account.bussines_name.ui_name,\n        value: deposit_provider.provider.account.bussines_name.bussines_name,\n        id: 8,\n      },\n    ];\n\n    // setTimeout(()=>{\n    this.props.action.isAppLoading(false);\n    // si la acción se lleva satisfactoriamente actualizamos el fondo del modal a un color verde\n    this.props.action.ModalView(\"modalSuccess\");\n    this.props.action.success_sound();\n\n    this.setState({\n      new_ticket: new_deposit,\n      deposit_order: response,\n    });\n    return this.props.action.current_section_params({\n      currentFilter: \"deposits\",\n    });\n    // }, 1500)\n  };\n\n  to_deposit_crypto = (wallet, history) => {\n    this.props.action.toggleModal();\n    return history.push(`wallets/deposit/${wallet.id}`);\n  };\n\n  // handleKeyPress = async(e) => {\n  //   let message = await this.props.services.handleKeyPress(e, this.props.current)\n  //   return this.setState({statusInput:message})\n  // }\n\n  guardarMetodo = () => {\n    toast(\"\", {\n      position: toast.POSITION.BOTTOM_RIGHT,\n      pauseOnFocusLoss: false,\n      draggablePercent: 60,\n      className: \"putito\",\n      bodyClassName: \"putitoText\",\n      progressClassName: \"putitoProgress\",\n      toastId: 2,\n      autoClose: false,\n    });\n\n    toast.update(2, {\n      render: <SavePayment loader={true} label=\"Guardando Medio de pago\" />,\n      autoClose: false,\n    });\n\n    setTimeout(() => {\n      toast.update(2, {\n        render: <SavePayment loader={false} label=\"Medio de pago Guardado\" />,\n        autoClose: 1500,\n      });\n    }, 3000);\n  };\n\n  // serve_deposit_provider_views = async dep_provs =>{\n  //   // @param dep_prov\n  //   // otros_medios\n  //   // en_efectivo\n  //   const{\n  //     deposit_providers\n  //   } = this.props\n  //   // console.log('||||===> deposit_providers', deposit_providers)\n  //   let deposit_provider_list = []\n  //\n  //   await deposit_providers.map(async dep_prov => {\n  //     if(dep_prov.currency_type !== 'fiat'){return false}\n  //     // console.log('serve_deposit_provider_views', dep_prov)\n  //     let new_item = {\n  //           code:dep_prov.provider.name,\n  //           id:dep_prov.id,\n  //           type:'bank',\n  //           name:dep_prov.provider.ui_name,\n  //           selection:false,\n  //           min_amount:dep_prov.provider.min_amount\n  //         }\n  //       // console.log('dep_prov', dep_prov)\n  //       await this.setState({minAmount:dep_prov.provider.min_amount})\n  //       deposit_provider_list.push(new_item)\n  //   })\n  //\n  //   // console.log('===============> deposit_provider_list', deposit_provider_list)\n  //\n  //   return this.setState({deposit_provider_list:deposit_provider_list.length<1 ? null : deposit_provider_list})\n  //\n  // }\n\n  render() {\n    // console.log('::: __PROPIEDADES_DEPOSITO__ ::', this.props.user)\n    // console.log('::: __ESTADO_DEPOSITO__ ::', this.state)\n\n    const { buttonActive, coins } = this.props;\n\n    console.log(\"::: Deposit Container ::\", this.props);\n\n    return (\n      <DepositLayout\n        buttonActive={buttonActive}\n        select_currency={this.select_currency}\n        siguiente={this.siguiente}\n        primerDeposito={this.primerDeposito}\n        updateAmountOnState={this.updateAmountOnState}\n        select_deposit_way={this.select_deposit_way}\n        actualizarEstado={this.actualizarEstado}\n        update_control_form={this.update_control_form}\n        update_service_mode={this.update_service_mode}\n        create_deposit_order={this.create_deposit_order}\n        finalizar={this.finalizar}\n        update_local_state={this.update_local_state}\n        // handleKeyPress={this.handleKeyPress}\n        guardarMetodo={this.guardarMetodo}\n        deposit={this.to_deposit_crypto}\n        coins={coins}\n        {...this.state}\n        {...this.props}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  // console.log('::: __ESTADO_DEPOSITO__ ::', state)\n  // const { firstDeposit } = props\n\n  const {\n    short_bank_name,\n    service_mode,\n    deposit_way,\n    step,\n    short_currency_name,\n    type_currency,\n    deposit_service,\n    cost_id,\n  } = state.form.form_deposit;\n\n  // const {\n  //   short_name\n  // } = state.ui.current_section.params\n\n  const { localCurrency, currency } = state.modelData.pairs;\n  // console.log('::: __ESTADO_DEPOSITO__ ::', state.ui.current_section.params.current_wallet)\n\n  const {\n    user,\n    deposit_providers,\n    wallets,\n    pairs,\n    // deposits,\n    currencies,\n  } = state.modelData;\n\n  // let deposit_providers_list = []\n  // user.deposit_providers.map(provider_id => {\n  //   if (deposit_providers[provider_id].currency_type !== 'fiat') { return false }\n  //   return deposit_providers_list.push(deposit_providers[provider_id])\n  // })\n\n  const { account_id } = props.match.params;\n\n  let current_wallet = wallets[account_id];\n  // console.log('_____________________DEPOSIT PROVIDER ITEM ITERATOR', props, deposit_providers_list)\n  // console.log('_____________________DEPOSIT PROVIDER ITEM ITERATOR', props)\n\n  return {\n    buttonActive: state.form.form_control_deposit,\n    step: step,\n    current: state.form.current,\n    short_currency_name: short_currency_name\n      ? short_currency_name\n      : localCurrency,\n    short_bank_name: short_bank_name,\n    currency,\n    deposit_service: deposit_service,\n    type_currency: type_currency,\n    cost_id: cost_id,\n    loader: state.isLoading.loader,\n    search: state.form.search_deposit,\n    deposit_way: deposit_way,\n    service_mode: service_mode,\n    services: globalServices,\n    redux_route: state.ui.menu_item_active,\n    wallets: wallets,\n    user: user,\n    localCurrency: pairs.localCurrency,\n    current_wallet,\n    deposits:\n      state.storage.activity_for_account[account_id] &&\n      state.storage.activity_for_account[account_id].deposits,\n    coins: currencies,\n    // deposit_providers: deposit_providers_list\n    deposit_providers,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withCoinsendaServices(withRouter(DepositContainer)));\n"],"sourceRoot":""}