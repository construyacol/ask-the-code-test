{"version":3,"sources":["components/wallets/views/withdrawFiat.js","components/wallets/views/withdraw.js"],"names":["FiatView","props","active_trade_operation","current_wallet","loader","current_section_params","toggleModal","dispatch","WithdrawViewState","idForMainButton","useKeyActionAsClick","movil_viewport","window","innerWidth","atributos","icon","size","color","opacity","id","className","currency","toUpperCase","formValidate","label","handleAction","e","currentFilter","WithdrawView","withdraws","coinsendaServices","useCoinsendaServices","useEffect","get_withdraws","currency_type"],"mappings":"qMAsEeA,MAhEGC,IAAW,IAAD,IAC1B,OACE,uBAAEC,EAAF,eAA0BC,EAA1B,OAA0CC,IAC1C,uBAAEC,EAAF,YAA0BC,GAC1BC,GACEC,cACEC,EAAkBC,aACtB,EACA,uBACA,IACA,EACA,WAGF,IAAIC,EAAiBC,OAAOC,WAAa,IAEzC,MAAMC,EAAY,CAChBC,KAAM,YACNC,KAAML,EAAiB,GAAK,IAC5BM,MAAO,yBACPC,QAAQ,IAQV,OACE,0BACEC,GAAG,GACHC,UAAS,qCACPT,EAAiB,QAAU,GADpB,iBAFX,UAME,qBAAKS,UAAU,kBAAf,SACE,cAAC,UAAD,IAAgBN,MAGlB,qBAAKM,UAAU,sBAAf,SACGlB,EACC,mBAAGkB,UAAU,gCAAb,+FAKA,oBAAGA,UAAU,SAAb,oBACS,sCAAOjB,QAAP,IAAOA,GAAP,UAAOA,EAAgBkB,gBAAvB,iBAAO,EAA0BA,gBAAjC,aAAO,EAAoCC,gBADpD,kEAMJ,cAAC,IAAD,CACElB,OAAQA,EAERe,GAAIV,EACJc,cAAerB,EACfsB,MAAM,qBACNC,aAnCgBC,IACpBnB,EAASF,EAAuB,CAAEsB,cAAe,eACjDpB,EAASD,YCHEsB,UAtBM,KACnB,OAAO,UAAEC,EAAF,eAAa1B,IAAoBK,eACjCsB,GAAqBC,cAS5B,OAPAC,qBAAU,KACHH,GACHC,EAAkBG,cAAc9B,EAAegB,MAGhD,IAGD,mCACoC,WAAjChB,EAAe+B,cACd,cAAC,IAAD,IAEA,cAAC,EAAD","file":"static/js/144.3e64ce31.chunk.js","sourcesContent":["import React from \"react\";\nimport useKeyActionAsClick from \"../../../hooks/useKeyActionAsClick\";\nimport WithdrawViewState from \"../../hooks/withdrawStateHandle\";\nimport ControlButton from \"../../widgets/buttons/controlButton\";\nimport IconSwitch from \"../../widgets/icons/iconSwitch\";\n\nconst FiatView = (props) => {\n  const [\n    { active_trade_operation, current_wallet, loader },\n    { current_section_params, toggleModal },\n    dispatch,\n  ] = WithdrawViewState();\n  const idForMainButton = useKeyActionAsClick(\n    true,\n    \"main-button-withdraw\",\n    13,\n    true,\n    \"onkeyup\"\n  );\n\n  let movil_viewport = window.innerWidth < 768;\n\n  const atributos = {\n    icon: \"withdraw2\",\n    size: movil_viewport ? 80 : 100,\n    color: \"var(--paragraph_color)\",\n    opacity:0.7\n  };\n\n  const handleSubmit = (e) => {\n    dispatch(current_section_params({ currentFilter: \"withdraws\" }));\n    dispatch(toggleModal());\n  };\n\n  return (\n    <section\n      id=\"\"\n      className={`DepositView itemWalletView ${\n        movil_viewport ? \"movil\" : \"\"\n      } withdrawView`}\n    >\n      <div className=\"contIcontSwitch\">\n        <IconSwitch {...atributos} />\n      </div>\n\n      <div className=\"contIcontSwitchCont\">\n        {active_trade_operation ? (\n          <p className=\"fuente active_trade_operation\">\n            Operación de intercambio en proceso, una vez finalice podrás hacer\n            retiros.\n          </p>\n        ) : (\n          <p className=\"fuente\">\n            Retira <span>{current_wallet?.currency?.currency?.toUpperCase()}</span> y recibe el saldo en cualquiera de tus cuentas de retiro.\n          </p>\n        )}\n      </div>\n\n      <ControlButton\n        loader={loader}\n        // loader={loader || Object.keys(withdraw_accounts).length === 0}\n        id={idForMainButton}\n        formValidate={!active_trade_operation}\n        label=\"Realizar un retiro\"\n        handleAction={handleSubmit}\n      />\n    </section>\n  );\n};\n\nexport default FiatView;\n","import React, { useEffect } from \"react\";\nimport WithdrawViewState from \"../../hooks/withdrawStateHandle\";\nimport { CriptoSupervisor } from \"./withdrawCripto\";\nimport { useCoinsendaServices } from \"../../../services/useCoinsendaServices\";\nimport FiatView from \"./withdrawFiat\";\n\nconst WithdrawView = () => {\n  const [{ withdraws, current_wallet }] = WithdrawViewState();\n  const [coinsendaServices] = useCoinsendaServices();\n\n  useEffect(() => {\n    if (!withdraws) {\n      coinsendaServices.get_withdraws(current_wallet.id);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {current_wallet.currency_type === \"crypto\" ? (\n        <CriptoSupervisor />\n      ) : (\n        <FiatView />\n      )}\n    </>\n  );\n};\n\nexport default WithdrawView;\n"],"sourceRoot":""}