{"version":3,"sources":["components/widgets/itemSettings/modal_views/authreq.js","components/widgets/twoFactorActivate/2fa.js"],"names":["AuthReq","props","buttonActive","setButtonActive","useState","loader","setLoader","status","setStatus","error","setError","valueState","setValueState","desaparecer","setDesaparecer","coinsendaServices","actions","useCoinsendaServices","ok_auth","payload","setTimeout","toggle_anim","authenticated","label","handleFocus","handleBlur","disabled","id","className","type","placeholder","name","actualizarEstado","async","value","p","target","length","isWithdraw2fa","res","isAppLoading","isTryToDisable2fa","disableTransactionSecutiry","addNewTransactionSecurity","success","active","verifying","connect","state","user","modelData","dispatch","action","bindActionCreators","qr","setQr","inputFocus","setInputFocus","private_key","setPrivate_key","success_screen","setSuccess_screen","switch_to_success","setSwitch_to_success","useEffect","code","getNew2faSecretCode","data","QRCode","toDataURL","init","TwoFactorActivateCont","title","cta_text","confetti","cta_secondary","cta_primary_text","user_name","siguiente","toggleModal","style","opacity","src","alt","width","QrLoader","icon","size","color","height","styled","div","skeleton"],"mappings":"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","file":"static/js/47.4ad3b6c2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { InputFormAuth } from \"../../inputs\";\nimport { useCoinsendaServices } from \"../../../../services/useCoinsendaServices\";\nimport \"./viewSettings.css\";\n\nconst AuthReq = (props) => {\n  const [buttonActive, setButtonActive] = useState();\n  const [loader, setLoader] = useState();\n  // const [verifying, setVerifying] = useState();\n  const [status, setStatus] = useState();\n  const [error, setError] = useState();\n  const [valueState, setValueState] = useState();\n  const [desaparecer, setDesaparecer] = useState();\n  const [ coinsendaServices ,actions ] = useCoinsendaServices();\n\n  const success = (value, res) => {\n    setButtonActive(true);\n    setStatus(\"Verificado con Éxito\");\n    setError(false);\n    setLoader(false);\n    setValueState(value);\n    return ok_auth(res);\n  };\n\n\n  const actualizarEstado = async (p) => {\n    const { value } = p.target; \n\n    if (value.length > 5) {\n      setLoader(true);\n      setButtonActive(false);\n      setStatus(\"Verificando...\");\n\n      if (props.isWithdraw2fa) {\n        return ok_auth(value);\n      }\n\n      let res;\n      actions.isAppLoading(true);\n      if (props.isTryToDisable2fa) {\n        res = await coinsendaServices.disableTransactionSecutiry(\"2fa\", value);\n      } else {\n        res = await coinsendaServices.addNewTransactionSecurity(\"2fa\", value);\n      }\n\n      actions.isAppLoading(false);\n\n      if (!res) {\n        setStatus(\"El código de verificación es incorrecto\");\n        setError(true);\n        return setLoader(false);\n      }\n\n\n      return success(value, res);\n    }\n\n    setStatus(\"\");\n    setButtonActive(false);\n    setLoader(false);\n    setError(false);\n  };\n\n  const ok_auth = (payload) => {\n    setTimeout(() => {\n      props.toggle_anim && props.toggle_anim();\n      setDesaparecer(props.toggle_anim && true);\n    }, 1200);\n\n    setTimeout(() => {\n      props.authenticated && props.authenticated(payload);\n    }, 1500);\n  };\n\n  const { label, handleFocus, handleBlur, disabled } = props;\n\n  // console.log(props)\n  // debugger\n\n  return (\n    <div id=\"authReq\" className={`${desaparecer ? \"desaparece\" : \"\"}`}>\n      <InputFormAuth\n        disabled={disabled}\n        type=\"number\"\n        label={label}\n        placeholder=\"CODIGO 2FA\"\n        name=\"auth\"\n        actualizarEstado={actualizarEstado}\n        active={buttonActive}\n        verifying={loader}\n        value={valueState}\n        status={status}\n        error={error}\n        handleFocus={handleFocus}\n        handleBlur={handleBlur}\n      />\n    </div>\n  );\n};\n\nexport default AuthReq;\n","import React, { useState, useEffect } from \"react\";\nimport IconSwitch from \"../icons/iconSwitch\";\nimport QRCode from \"qrcode\";\nimport AuthReq from \"../itemSettings/modal_views/authreq\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport actions from \"../../../actions\";\nimport SuccessComponentScreen from \"../success_screen/success_screen\";\nimport styled from \"styled-components\";\nimport { skeleton } from \"../loaders/skeleton\";\nimport { useCoinsendaServices } from \"../../../services/useCoinsendaServices\";\n\nimport \"./2fa.css\";\n\nconst OTP_TITLE = \"Coinsenda\";\n\nconst TwoFactorActivate = (props) => {\n  const [qr, setQr] = useState();\n  const [inputFocus, setInputFocus] = useState();\n  const [private_key, setPrivate_key] = useState();\n  const [success_screen, setSuccess_screen] = useState();\n  const [switch_to_success, setSwitch_to_success] = useState();\n  const [loader, setLoader] = useState(true);\n  const [coinsendaServices] = useCoinsendaServices();\n\n  const handleFocus = () => {\n    if (!private_key) {\n      return;\n    }\n    setInputFocus(true);\n  };\n\n  const handleBlur = () => {\n    setInputFocus(false);\n  };\n \n  const success_event = async (transactionSecurity) => {\n    props.action.isAppLoading(true);\n    setSuccess_screen(true);\n    setTimeout(() => {\n      props.action.isAppLoading(false);\n      setSwitch_to_success(true);\n    }, 500);\n  };\n\n  const finish_process = async () => {\n    props.action.toggleModal();\n  };\n\n  useEffect(() => {\n    const init = async () => {\n      const code = await coinsendaServices.getNew2faSecretCode();\n      if (!code) {\n        return;\n      }\n      const { data } = code;\n      setQr(\n        await QRCode.toDataURL(`otpauth://totp/${OTP_TITLE}?secret=${data}`)\n      );\n      setPrivate_key(data);\n      setLoader(false);\n    };\n    init();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <TwoFactorActivateCont\n      className={`TwoFactorActivate ${\n        !switch_to_success ? \"TwoFactorActivateOn\" : \"\"\n      } ${loader ? \"skeleton\" : \"\"}`}\n    >\n      {!switch_to_success ? (\n        <div\n          className={`TwoFactorActivate ${success_screen ? \"desaparecer\" : \"\"}`}\n        >\n          <div\n            className=\"TLayout layer1\"\n            style={{ opacity: inputFocus ? \"0.03\" : \"1\" }}\n          >\n            <div className=\"header2fa\"></div>\n            <div className=\"body2fa\">\n              <div className=\"bodySon\">\n                <p className=\"fuente\">\n                  Abre Google Authenticator y escanea el código QR\n                </p>\n                {qr && !loader ? (\n                  <img src={qr} alt=\"\" width=\"200px\" />\n                ) : (\n                  <QrLoader className=\"skeleton\"></QrLoader>\n                )}\n              </div>\n              <div className=\"footer2fa\"></div>\n            </div>\n          </div>\n\n          <div className=\"TLayout layer2\">\n            <div className=\"header2fa\">\n              <h3 className=\"fuente\">\n                Habilitar <span className=\"fuente2\">2FA</span>\n              </h3>\n              <IconSwitch icon=\"2auth\" size={75} color=\"#1babec\" />\n            </div>\n            <div className=\"body2fa\">\n              <div\n                className=\"bodySon\"\n                style={{ height: inputFocus ? \"10%\" : \"50%\" }}\n              ></div>\n              <div className=\"footer2fa\">\n                <div className=\"footer2faText\">\n                  <div\n                    className={`footer2faTextDes ${\n                      inputFocus ? \"desp\" : \"desaparecer\"\n                    }`}\n                  >\n                    <p className=\"fuente\">\n                      Recuerda que en caso de pérdida de tu dispositivo movil,\n                      solo podrás reactivar el 2FA con el código secreto{\" \"}\n                      <span className={`secretCode fuente2`}>\n                        {private_key}\n                      </span>{\" \"}\n                      escribelo en papel y guardalo, es tu responsabilidad\n                    </p>\n                  </div>\n                  <p\n                    className={`fuente ${\n                      inputFocus ? \"desaparecer\" : \"aparecer\"\n                    }`}\n                  >\n                    Ó ingresa el código secreto manualmente\n                  </p>\n                  <p\n                    className={`fuente2 secretCode ${\n                      private_key ? \"\" : \"skeleton text\"\n                    } ${inputFocus ? \"desaparecer\" : \"aparecer\"}`}\n                  >\n                    {private_key}\n                  </p>\n                </div>\n                <AuthReq\n                  handleFocus={handleFocus}\n                  handleBlur={handleBlur}\n                  authenticated={success_event}\n                  disabled={loader}\n                  {...props}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div\n          className={`TwoFactorActivate success ${\n            success_screen ? \"aparecer\" : \"\"\n          }`}\n        >\n          <SuccessComponentScreen\n            title=\"Segundo factor de autenticación activado\"\n            cta_text=\"El proceso de activación se ha realizado satisfactoriamente.\"\n            confetti={true}\n            cta_secondary={false}\n            cta_primary_text=\"Finalizar\"\n            user_name={props.user.name}\n            siguiente={finish_process}\n          />\n        </div>\n      )}\n    </TwoFactorActivateCont>\n  );\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nfunction mapStateToProps(state, props) {\n  const { user } = state.modelData;\n  return {\n    user,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TwoFactorActivate);\n\nconst TwoFactorActivateCont = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: grid;\n  justify-items: center;\n\n  .skeleton {\n    animation-name: ${skeleton};\n    animation-duration: 1s;\n    animation-iteration-count: infinite;\n    opacity: 0.5;\n  }\n  .skeleton.text {\n    width: 250px;\n    height: 25px;\n    background: #bfbfbf;\n    border-radius: 3px;\n    justify-self: center;\n  }\n`;\n\nconst QrLoader = styled.div`\n  width: 180px;\n  height: 160px;\n  background: #bfbfbf;\n  border-radius: 3px;\n`;\n"],"sourceRoot":""}