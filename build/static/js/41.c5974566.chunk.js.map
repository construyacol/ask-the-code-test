{"version":3,"sources":["components/widgets/panelAlert/panelAlertContainer.js"],"names":["connect","state","props","user","modelData","verification_state","ui","dispatch","action","bindActionCreators","actions","coinsendaServices","useCoinsendaServices","setState","useState","visible","message","icon","ctaText","background","useEffect","history","location","pathname","validate_state","async","getVerificationState","validate_kyc_basic","validate_kyc_advanced","play_video","className","id","style","onClick","freshChatTrack","size","color"],"mappings":"6IAAA,6EA0IeA,uBAff,SAAyBC,EAAOC,GAC9B,MAAM,KAAEC,GAASF,EAAMG,WACjB,mBAAEC,GAAuBJ,EAAMK,GACrC,MAAO,CACLH,KAAMA,EACNE,yBAIJ,SAA4BE,GAC1B,MAAO,CACLC,OAAQC,6BAAmBC,IAASH,MAIzBP,EAhIcE,IAC3B,MAAOS,GAAqBC,eACrBX,EAAOY,GAAYC,mBAAS,CACjCC,SAAS,EACTC,QAAS,GACTC,KAAM,GACNC,QAAS,GACTC,WAAY,QACZX,OAAQ,OAGVY,qBAAU,KACgC,cAApClB,EAAMmB,QAAQC,SAASC,UACzBC,MAED,CAACtB,EAAMC,OAEV,MAAMqB,EAAiBC,UACrB,MAAMpB,QAA2BM,EAAkBe,uBAEnD,OAAKrB,EAYsB,cAAvBA,EACKQ,EAAS,CACdE,SAAS,EACTC,QACE,0FACFC,KAAM,WACNC,QAAS,KACTC,WAAY,qDACZX,OAAQ,OAGe,aAAvBH,EACKQ,EAAS,CACdE,SAAS,EACTC,QACE,2FACFC,KAAM,WACNC,QAAS,uBACTC,WAAY,UACZX,OAAQmB,IAGe,YAAvBtB,EACKQ,EAAS,CACdE,SAAS,EACTC,QACE,gFACFC,KAAM,WACNC,QAAS,uBACTC,WAAY,UACZX,OAAQoB,SARZ,EAjCSf,EAAS,CACdE,SAAS,EACTC,QACE,sFACFC,KAAM,WACNC,QAAS,uBACTC,WAAY,qDACZX,OAAQmB,KAuCRC,EAAwB,KAC5B1B,EAAMM,OAAOqB,WAAW,iBAGpBF,EAAqB,KACzBzB,EAAMM,OAAOqB,WAAW,eAqBpB,QAAEd,EAAF,QAAWC,EAAX,QAAoBE,EAApB,KAA6BD,EAA7B,WAAmCE,EAAnC,OAA+CX,GAAWP,EAEhE,OACE,sBACE6B,UAAS,8BAAyBf,GAAW,WAC7CgB,GAAG,sBACHC,MAAO,CAAEb,WAAYA,GAHvB,UAKE,mBAAGW,UAAU,eAAeG,QArBlBR,UACZ,MAAMpB,QAA2BM,EAAkBe,uBASnD,QANGrB,GACuB,cAAvBA,GAA6D,aAAvBA,IAEvCM,EAAkBuB,eAAe,6BAG5BrB,EAAS,IAAKZ,EAAOc,SAAS,OAYnC,sBAAKe,UAAU,wBAAf,UACE,cAAC,UAAD,CAAYb,KAAMA,EAAMkB,KAAM,GAAIC,MAAM,UACxC,sBAAKN,UAAU,qBAAf,UACE,4BAAId,IACHE,GAAW,qBAAKe,QAASzB,EAAd,SAAuBU","file":"static/js/41.c5974566.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport actions from \"../../../actions\";\nimport IconSwitch from \"../icons/iconSwitch\";\nimport { useCoinsendaServices } from \"../../../services/useCoinsendaServices\";\n// import FreshChat from '../../../services/freshChat'\n\nimport \"./panelAlert.css\";\n\nconst PanelAlertContainer = (props) => {\n  const [coinsendaServices] = useCoinsendaServices();\n  const [state, setState] = useState({\n    visible: false,\n    message: \"\",\n    icon: \"\",\n    ctaText: \"\",\n    background: \"white\",\n    action: null,\n  });\n\n  useEffect(() => {\n    if (props.history.location.pathname === \"/security\") {\n      validate_state();\n    }\n  }, [props.user]);\n\n  const validate_state = async () => {\n    const verification_state = await coinsendaServices.getVerificationState();\n\n    if (!verification_state) {\n      return setState({\n        visible: true,\n        message:\n          \"Bienvenido, completa el proceso de verificación y comienza a operar en Coinsenda\",\n        icon: \"verified\",\n        ctaText: \"Enseñame ahora >>\",\n        background: \"linear-gradient(to bottom right, #00D2FF, #3A7BD5)\",\n        action: validate_kyc_basic,\n      });\n    }\n\n    if (verification_state === \"confirmed\") {\n      return setState({\n        visible: true,\n        message:\n          \"Nuestro sistema esta verificando tus documentos, en breve podrás operar en Coinsenda\",\n        icon: \"verified\",\n        ctaText: null,\n        background: \"linear-gradient(to bottom right, #00D2FF, #3A7BD5)\",\n        action: null,\n      });\n    }\n    if (verification_state === \"rejected\") {\n      return setState({\n        visible: true,\n        message:\n          \"Tus datos han sido rechazados, aprende a verificarte correctamente en tan solo 1 minuto.\",\n        icon: \"rejected\",\n        ctaText: \"Enseñame ahora >>\",\n        background: \"#b31217\",\n        action: validate_kyc_basic,\n      });\n    }\n    if (verification_state === \"pending\") {\n      return setState({\n        visible: true,\n        message:\n          \"¡Genial!, estas a 1 solo paso de completar tu proceso de verificación..\",\n        icon: \"verified\",\n        ctaText: \"Enseñame ahora >>\",\n        background: \"#989500\",\n        action: validate_kyc_advanced,\n      });\n    }\n  };\n\n  const validate_kyc_advanced = () => {\n    props.action.play_video(\"kyc_advanced\");\n  };\n\n  const validate_kyc_basic = () => {\n    props.action.play_video(\"kyc_basic\");\n  };\n\n  // go_to = () =>{\n  //   // props.action.play_video('kyc_basic')\n  //   // alert('goto')\n  // }\n\n  const close = async () => {\n    const verification_state = await coinsendaServices.getVerificationState();\n\n    if (\n      !verification_state ||\n      (verification_state !== \"confirmed\" && verification_state !== \"accepted\")\n    ) {\n      coinsendaServices.freshChatTrack(\"need help to verification\");\n    }\n    // console.log('AYuda para verificación', (props.user.levels && props.user.levels.personal !== 'confirmed'), props.user)\n    return setState({ ...state, visible: false });\n  };\n\n  const { visible, message, ctaText, icon, background, action } = state;\n\n  return (\n    <div\n      className={`PanelAlertContainer ${visible && \"visible\"}`}\n      id=\"PanelAlertContainer\"\n      style={{ background: background }}\n    >\n      <i className=\"fas fa-times\" onClick={close}></i>\n      <div className=\"alertContainer fuente\">\n        <IconSwitch icon={icon} size={25} color=\"white\" />\n        <div className=\"alertContainerText\">\n          <p>{message}</p>\n          {ctaText && <div onClick={action}>{ctaText}</div>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction mapStateToProps(state, props) {\n  const { user } = state.modelData;\n  const { verification_state } = state.ui;\n  return {\n    user: user,\n    verification_state,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PanelAlertContainer);\n"],"sourceRoot":""}