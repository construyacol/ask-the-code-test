{"version":3,"sources":["hooks/useNavigationKeyActions.js","components/widgets/items/new-items-layout.js","components/withdrawAccounts/new/views/1method.js"],"names":["DEFAULT_ARGS","modalRestriction","prev","next","default","originalLength","useNavigationKeyActions","config","valuesAsProps","uniqueIdForElement","loader","items","currentSelection","setCurrentSelection","useState","isModalVisible","useSelector","state","form","isModalRenderShowing","ui","modal","render","useEffect","length","el","document","getElementById","focus","window","innerWidth","KEY_CODES_META","onkeydown","onkeyup","onkeypress","event","currentSelectionIsDownZero","elementId","keyCode","Math","max","min","newSelection","useItemsInteractions","props","keyActions","suprKeyAction","enterKeyAction","isSelected","setIsSelected","element","focusedId","onfocus","number","onblur","blur","stopPropagation","preventDefault","uniqid","setFocus","IconSwitch","loadable","timerId","NewItemsLayout","type","actives","name","code","placeholder","primarySelect","format","itemType","currency_type","pair_id","actualizarEstado","handleClick","specialMode","doSelectionForItem","clearTimeout","setTimeout","_handleClick","_activated","console","log","id","className","autoComplete","onClick","title","src","getCdnPath","alt","width","icon","size","map","item","React","memo","MethodView","select_method","item_active","siguiente","subtitle","withdraw","movil_viewport","filter","index","key","_id","idForAcceptButtonInDepositView","active"],"mappings":"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","file":"static/js/43.b61ada63.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst DEFAULT_ARGS = {\n  modalRestriction: true,\n  prev: 37,\n  next: 39,\n  default: 0,\n  originalLength: false,\n};\n\n/**\n * useNavigationKeyActions simula la navegacion entre un grupo de objetos en el DOM.\n *\n * @param {Object} config representa la configuracion y datos del hook\n * @param {Array} config.items items representativos entre los cuales se navegara por medio de key event\n * @param {Boolean} config.loader indentifica cuando el componente esta listo para ejecutar la accion de navegar\n * @param {String} config.uniqueIdForElement id que identificara los elementos navegables\n * @param {Boolean} config.modalRestriction restringe el uso de esta funcion en modales, por defecto es true\n * @param {Event.keyCode|Number} config.prev representa el keyCode a ser referenciendo como previo o anterior,\n * por defecto es 37\n * @param {Event.keyCode|Number} config.next representa el keyCode a ser referenciendo siguiente,\n * por defecto es 39\n * @param {Number} config.default numero del elemento a seleccionar por default, por defecto es el Elmento 0\n * @return _setCurrentSelection\n *\n * @example\n * const setCurrentElement = useNavigationKeyActions({ items: [...n], loader: subscription(), uniqueIdForElement: \"my-uniqueIdForElement-\" })\n * @see useItemsInteractions\n * @see window.onkeydown\n */\nexport default function useNavigationKeyActions(config) {\n  const valuesAsProps = { ...DEFAULT_ARGS, ...config };\n  const { modalRestriction, uniqueIdForElement, loader, items } = valuesAsProps;\n  const [currentSelection, setCurrentSelection] = useState(-1);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let isModalVisible = modalRestriction && useSelector((state) => state.form.isModalVisible);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let isModalRenderShowing = modalRestriction && useSelector((state) => state.ui.modal.render);\n\n  useEffect(() => {\n    if (items && items.length > 0 && !loader) {\n      if (isModalVisible) return;\n      const el = document.getElementById(\n        `${uniqueIdForElement}${valuesAsProps.default}`\n      );\n      el && el.focus();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [items, loader]);\n\n  useEffect(() => {\n    if (modalRestriction && (isModalRenderShowing || isModalVisible)) {\n      setCurrentSelection(-1);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isModalRenderShowing, isModalVisible]);\n\n  useEffect(() => {\n    // this is for mobile\n    if (window.innerWidth < 900) {\n      window.KEY_CODES_META = null;\n      window.onkeydown = null;\n      window.onkeyup = null;\n      window.onkeypress = null;\n      return () => null;\n    } else {\n      window.onkeydown = (event) => {\n        if (\n          !isModalRenderShowing &&\n          !isModalVisible &&\n          items &&\n          items.length > 0\n        ) {\n          if (isModalVisible) return;\n          const length = valuesAsProps.originalLength\n            ? items.length\n            : items.length - 1;\n          const currentSelectionIsDownZero = currentSelection < 0;\n          let elementId = 0;\n          let el = null;\n          if (event.keyCode === valuesAsProps.prev) {\n            elementId = currentSelectionIsDownZero\n              ? length\n              : currentSelection - 1;\n            el = document.getElementById(\n              `${uniqueIdForElement}${Math.max(0, elementId)}`\n            );\n          }\n          if (event.keyCode === valuesAsProps.next) {\n            elementId = currentSelectionIsDownZero ? 0 : currentSelection + 1;\n            el = document.getElementById(\n              `${uniqueIdForElement}${Math.min(length, elementId)}`\n            );\n          }\n          if (event.keyCode === 13) {\n            elementId = currentSelectionIsDownZero ? 0 : currentSelection;\n            el = document.getElementById(\n              `${uniqueIdForElement}${Math.min(length, elementId)}`\n            );\n          }\n          if (el) {\n            el.focus();\n            // event.preventDefault()\n            // event.stopPropagation()\n          }\n        }\n      };\n    }\n\n    return () => {\n      window.onkeydown = false;\n    };\n    \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    window.onkeydown,\n    isModalVisible,\n    items,\n    loader,\n    isModalRenderShowing,\n    currentSelection,\n  ]);\n\n  const _setCurrentSelection = (newSelection) => {\n    if (currentSelection !== newSelection) {\n      setCurrentSelection(newSelection);\n    }\n  };\n  return [_setCurrentSelection];\n}\n\n/**\n * useItemsInteractions contiene toda las interacciones del elemento, como seleccionarlo como puntero actual hasta\n * las acciones que presenta cuando el seleccionado.\n *\n * @param {Object} props properties heredadas del componente que usara este hook\n * @param {Function} props.setCurrentSelection function retornada de useNavigationKeyActions usada para seleccionar\n * el elemento como puntero actual\n * @param {Number} props.number number index del elemento en el array\n * @param {String} props.focusedId id referencial del elemento en el DOM\n *\n * @param {Object} keyActions restringe el uso de esta funcion en modales, por defecto es true\n * @param {Function} keyActions.suprKeyAction accion al presionar la tecla suprimir\n * @param {Function} keyActions.enterKeyAction accion al presionar la tecla enter\n * @param {Boolean} modalRestriction restringe este hook en modales\n * @return {[Boolean, Function]} [isSelected, setFocus]\n *\n * @example\n * const setCurrentElement = useItemsInteractions(props, {...}, false)\n * @see useNavigationKeyActions\n * @see Element.onkeydown\n */\nexport function useItemsInteractions(\n  props,\n  keyActions,\n  modalRestriction = true\n) {\n  const { suprKeyAction, enterKeyAction } = keyActions;\n  const [isSelected, setIsSelected] = useState(false);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const isModalVisible = modalRestriction && useSelector((state) => state.form.isModalVisible);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const isModalRenderShowing = modalRestriction && useSelector((state) => state.ui.modal.render);\n\n  useEffect(() => {\n    // this is for mobile\n    if (window.innerWidth < 900) {\n      window.KEY_CODES_META = null;\n      window.onkeydown = null;\n      window.onkeyup = null;\n      window.onkeypress = null;\n      return () => null;\n    } else {\n      const element = document.getElementById(props.focusedId);\n      if (element) {\n        element.onfocus = () => {\n          setIsSelected(true);\n          props.setCurrentSelection(props.number);\n        };\n\n        element.onblur = () => {\n          setIsSelected(false);\n        };\n\n        element.onkeydown = (event) => {\n          element.blur();\n          if (isModalVisible || isModalRenderShowing) return;\n          if (event.keyCode === 46) {\n            event.stopPropagation();\n            suprKeyAction(() => element.focus());\n          }\n          if (event.keyCode === 13) {\n            enterKeyAction();\n            event.stopPropagation();\n            event.preventDefault();\n          }\n        };\n      }\n    }\n  }, [isModalVisible, props.uniqid]);\n\n  const setFocus = () => {\n    const element = document.getElementById(props.focusedId);\n    element && element.focus();\n  };\n\n  return [isSelected, setFocus];\n}\n","import React, { useEffect } from \"react\";\nimport loadable from \"@loadable/component\";\nimport { useItemsInteractions } from \"../../../hooks/useNavigationKeyActions\";\nimport { InputKeyActionHandler } from \"../accountList/styles\";\nimport { getCdnPath } from '../../../environment'\n\n\nconst IconSwitch = loadable(() => import(\"../icons/iconSwitch\"));\n\nlet timerId;\nfunction NewItemsLayout(props) {\n  const {\n    type,\n    actives,\n    name,\n    code,\n    placeholder,\n    primarySelect,\n    format,\n    itemType,\n    currency_type,\n    pair_id,\n    actualizarEstado,\n    handleClick,\n    specialMode = false,\n  } = props;\n\n  const doSelectionForItem = () => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      actualizarEstado && actualizarEstado(name, code, currency_type, pair_id);\n    }, 100);\n  };\n  const _handleClick = specialMode ? doSelectionForItem : handleClick;\n  const [isSelected, setFocus] = useItemsInteractions(\n    {...props, uniqid: pair_id},\n    { suprKeyAction: () => false, enterKeyAction: _handleClick },\n    false\n  );\n\n  useEffect(() => {\n    specialMode && actives && setFocus();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (!specialMode && isSelected && !actives) {\n      doSelectionForItem(false);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isSelected, actives]);\n\n  const _activated = specialMode ? isSelected : actives;\n\n  console.log('|||||||||||||||||||   NewItemsLayout =====> ', type, code)\n\n  return (\n    <div\n      id={`${primarySelect ? \"primarySelect\" : \"\"}`}\n      className={`${type === \"payment_method\" ? \"ILtuvieja\" : \"\"} `}\n    >\n      <InputKeyActionHandler\n        aria-label=\"itemFromList\"\n        name=\"itemFromList\"\n        autoComplete=\"off\"\n        id={props.focusedId}\n      />\n      <div\n        className={`item ${_activated ? \"itemSelection\" : \"\"}`}\n        onClick={!actives || itemType === \"banks\" ? doSelectionForItem : null}\n      >\n        {!format && code && type ? (\n          type === \"coins\" ||\n          type === \"payment_method\" ||\n          type === \"service_mode\" ? (\n            _activated ? (\n              <div title={name} id={code}>\n                <img\n                  className=\"itemSobre activaos\"\n                  src={`${getCdnPath('assets')}${type}/${code}2.png`}\n                  alt=\"\"\n                  width=\"60\"\n                />\n              </div>\n            ) : (\n              <div title={name} id={code}>\n                <img\n                  className=\"itemFuera\"\n                  src={`${getCdnPath('assets')}${type}/${code}.png`}\n                  width=\"60\"\n                  alt=\"\"\n                  id={code}\n                  title={name}\n                />\n                <img\n                  className=\"itemSobre\"\n                  src={`${getCdnPath('assets')}${type}/${code}2.png`}\n                  width=\"60\"\n                  alt=\"\"\n                  id={code}\n                  title={name}\n                />\n              </div>\n            )\n          ) : (\n            <img\n              className={`banquis ${_activated ? \"itemVisible\" : \"\"}`}\n              src={`${getCdnPath('assets')}${type}/${code}.png`}\n              alt=\"\"\n              id={code}\n              title={name}\n              width=\"85\"\n            />\n          )\n        ) : (\n          <IconSwitch icon={code} size={45} />\n        )}\n        {primarySelect ? (\n          <div id=\"primarySelectText\" className=\"primarySelectText\">\n            <p title={name}>{name}</p>\n            {placeholder &&\n              placeholder.map((item) => {\n                return (\n                  <p id=\"ILplaceholder2\" className=\"fuente\" key={item.id}>\n                    {item.name}\n                  </p>\n                );\n              })}\n          </div>\n        ) : (\n          <p title={name}>{name}</p>\n        )}\n      </div>\n      {placeholder && !primarySelect && (\n        <div className=\"placeHoldCont\">\n          {placeholder.map((item) => {\n            return (\n              <p className=\"ILplaceholder fuente\" key={item.id}>\n                {item.name}\n              </p>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(NewItemsLayout);\n","import React, { useEffect } from \"react\";\nimport useNavigationKeyActions from \"../../../../hooks/useNavigationKeyActions\";\nimport { ButtonForms } from \"../../../widgets/buttons/buttons\";\nimport NewItemsLayout from \"../../../widgets/items/new-items-layout\";\nimport \"./views.css\";\n\nconst MethodView = (props) => {\n  const {\n    items,\n    select_method,\n    item_active,\n    siguiente,\n    title,\n    subtitle,\n    withdraw,\n  } = props;\n\n  let movil_viewport = window.innerWidth < 768;\n  const [setCurrentSelection] = useNavigationKeyActions({\n    items,\n    loader: false,\n    uniqueIdForElement: \"pay-method-item-\",\n    modalRestriction: false,\n  });\n\n  useEffect(() => {\n    select_method(\"Transferencia bancaria\", \"bankaccount\");\n  }, []);\n\n  return (\n    <div id=\"DLsteps\" className=\"DLsteps method\">\n      <div className=\"DLcontains\">\n        <p className=\"fuente DLtitles2\">{title ? title : \"Title\"}</p>\n        <p className=\"fuente DLstitles\">{subtitle ? subtitle : \"Subtitle:\"}</p>\n      </div>\n\n      <div\n        className={`${\n          !movil_viewport\n            ? \"DLItemSelectionContainers\"\n            : \"ItemSelectionContainerMovil\"\n        }`}\n      >\n        <div\n          className={`${\n            !movil_viewport\n              ? !withdraw\n                ? \"DLcontainerItems\"\n                : \"DLcontainerItems DLcontainerItems2\"\n              : \"containerItems\"\n          } chooseMethod`}\n        >\n          {items\n            .filter((item) => !withdraw && item.code !== \"debit\")\n            .map((item, index) => {\n              return (\n                <NewItemsLayout\n                  setCurrentSelection={setCurrentSelection}\n                  focusedId={`pay-method-item-${index}`}\n                  number={index}\n                  handleClick={siguiente}\n                  actualizarEstado={select_method}\n                  actives={item_active === item.code && true}\n                  primarySelect={movil_viewport}\n                  {...item}\n                  key={item.id}\n                />\n              );\n            })}\n        </div>\n      </div>\n\n      <ButtonForms\n        _id={props.idForAcceptButtonInDepositView}\n        type=\"primary\"\n        active={item_active ? true : false}\n        siguiente={siguiente}\n      >\n        Continuar\n      </ButtonForms>\n    </div>\n  );\n};\n\nexport default MethodView;\n"],"sourceRoot":""}