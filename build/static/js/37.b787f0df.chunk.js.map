{"version":3,"sources":["components/Prices/currency-labels.js","hooks/useChartData.js","components/widgets/chartCoin/chartCoin.js"],"names":["currencyLabels","usd","bitcoin","cop","bitcoin_testnet","useChartData","_useState","useState","_useState2","Object","_home_andres_repos_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","data","setData","_useState3","_useState4","isLoading","setLoading","_useState5","_useState6","name","setName","_useState7","currency_from","currency_to","amount_days","_useState8","requestBody","setRequestBody","_useCoinsendaServices","useCoinsendaServices","_useCoinsendaServices2","coinsendaServices","modelData","getData","_ref","_home_andres_repos_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_andres_repos_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","res","wrap","_context","prev","next","fetchChartData","sent","abrupt","pair","stop","apply","this","arguments","useEffect","currentPair","pairs","currencyTo","primary_currency","currency","includes","secondary_currency","settings","chart","connect","dispatch","action","bindActionCreators","actions","lastPrices","setLastPrices","loader","setLoader","isMovilViewport","useViewport","_useChartData","unparsedData","getPrices","price_list","date_list","historical_data","days","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","length","undefined","Symbol","iterator","done","value","push","close_price","moment","subtract","calendar","t0","return","finish","init_component","datasets","labels","setTimeout","update","_ref2","_callee2","ctx","_context2","document","getElementById","getContext","Chart","type","label","Array","fill","backgroundColor","borderColor","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","borderWidth","steppedLine","options","animation","duration","hover","animationDuration","responsiveAnimationDuration","layout","padding","left","right","top","bottom","tooltips","enabled","elements","line","tension","legend","display","scales","xAxes","stacked","gridLines","ticks","callback","index","values","yAxes","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","id","concat","height"],"mappings":"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","file":"static/js/37.b787f0df.chunk.js","sourcesContent":["const currencyLabels = {\n  usd: \"USD\",\n  bitcoin: \"BTC\",\n  cop: \"COP\",\n  bitcoin_testnet: \"BTCT\",\n};\n\nexport default currencyLabels;\n","import { useState, useEffect } from \"react\";\nimport { useCoinsendaServices } from \"../services/useCoinsendaServices\";\nimport currencyLabels from \"../components/Prices/currency-labels\";\n\nexport default function useChartData() {\n  const [data, setData] = useState();\n  const [isLoading, setLoading] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [requestBody, setRequestBody] = useState({\n    currency_from: currencyLabels.bitcoin,\n    currency_to: currencyLabels.cop,\n    amount_days: 60,\n  });\n  const [coinsendaServices, { modelData }] = useCoinsendaServices();\n\n  const getData = async () => {\n    setLoading(true);\n    const res = await coinsendaServices.fetchChartData({ data: requestBody });\n    if (!res) return;\n    setName(res.data.pair);\n    setData(res);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getData();\n  }, [requestBody]);\n\n  useEffect(() => {\n    const currentPair = modelData.pairs.currentPair;\n    if (currentPair) {\n      const currencyTo = currentPair.primary_currency.currency.includes(\"usd\")\n        ? currentPair.secondary_currency.currency\n        : \"usd\";\n      const settings = {\n        currency_from: currencyLabels[currentPair.primary_currency.currency],\n        currency_to: currencyLabels[currencyTo],\n        amount_days: 45,\n      };\n      setRequestBody(settings);\n    }\n  }, [modelData.pairs.currentPair]);\n\n  return [data, isLoading, name];\n}\n","import React, { useEffect, useState } from \"react\";\nimport Chart from \"chart.js\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../../actions\";\nimport { bindActionCreators } from \"redux\";\nimport useViewport from \"../../../hooks/useWindowSize\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\n// import localForage from 'localforage'\n\nimport \"./chartCoin.css\";\nimport useChartData from \"../../../hooks/useChartData\";\nlet chart;\n\nconst ChartCoin = () => {\n  const [lastPrices, setLastPrices] = useState();\n  const [loader, setLoader] = useState();\n  const { isMovilViewport } = useViewport();\n  const [unparsedData] = useChartData();\n\n  const getPrices = async () => {\n    if (!unparsedData) return;\n    setLoader(true);\n    let price_list = [],\n      date_list = [];\n    const { historical_data } = unparsedData.data;\n    if (!historical_data) return setLoader(false);\n    let days = historical_data.length - 1;\n\n    for (let data of historical_data) {\n      price_list.push(data.close_price);\n      date_list.push(moment().subtract(days, \"days\").calendar());\n      days--;\n    }\n\n    setLastPrices({ price_list: price_list, date_list });\n  };\n\n  useEffect(() => {\n    getPrices();\n  }, [unparsedData]);\n\n  useEffect(() => {\n    if (!isMovilViewport) {\n      init_component();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (chart && lastPrices) {\n      chart.data.datasets[0].data = lastPrices.price_list;\n      chart.data.labels = lastPrices.date_list;\n      setTimeout(() => {\n        chart.update();\n        setLoader(false);\n      }, 2000);\n    }\n  }, [chart, lastPrices]);\n\n  const init_component = async () => {\n    // return console.log('|||||||||||||||||||||||||||| GET HISTORICAL DATA ==>', lastPrices, )\n\n    let ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n\n    let gradientStroke = \"rgb(4, 205, 252)\";\n    let gradientFill = \"rgb(43, 55, 66, 0.3)\";\n\n    // if(this.props.landingView){\n    //   gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\n    //   gradientStroke.addColorStop(1, \"#005790\");\n    //   gradientStroke.addColorStop(0, \"#1ea4ff\");\n    //\n    //   gradientFill = ctx.createLinearGradient(0, 30, 0, 350);\n    //   gradientFill.addColorStop(1, \"rgb(0, 111, 185, 0)\");\n    //   gradientFill.addColorStop(0, \"rgb(30, 164, 255, 0.65)\");\n    // }else{\n    //   gradientStroke = 'rgb(4, 205, 252)'\n    //   gradientFill = 'rgb(43, 55, 66, 0.3)'\n    // }\n\n    chart = new Chart(ctx, {\n      type: \"line\",\n      data: {\n        datasets: [\n          {\n            label: \"Precio\",\n            data: new Array(45).fill(8000),\n            backgroundColor: gradientFill,\n            fill: true,\n            // backgroundColor: `${this.props.landingView ? gradientFill : 'rgb(43, 55, 66, 0.35)'}`,\n            // borderColor: 'rgb(4, 205, 252)',\n            borderColor: gradientStroke,\n            pointBorderColor: gradientStroke,\n            pointBackgroundColor: gradientStroke,\n            pointHoverBackgroundColor: gradientStroke,\n            pointHoverBorderColor: gradientStroke,\n            borderWidth: 1,\n            steppedLine: \"middle\",\n          },\n        ],\n        labels: new Array(45).fill(8000),\n      },\n      options: {\n        animation: {\n          duration: 0, // general animation time\n        },\n        hover: {\n          animationDuration: 300, // duration of animations when hovering an item\n        },\n        responsiveAnimationDuration: 0, // animation duration after a resize\n        layout: {\n          padding: {\n            left: -5,\n            right: 0,\n            top: 0,\n            bottom: -30,\n          },\n        },\n        tooltips: {\n          enabled: true,\n        },\n        elements: {\n          line: {\n            tension: 0,\n          },\n        },\n        legend: {\n          display: false,\n        },\n        scales: {\n          xAxes: [\n            {\n              stacked: true,\n              gridLines: {\n                display: false,\n              },\n              ticks: {\n                callback: function (value, index, values) {\n                  return \"\";\n                },\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: {\n                display: false,\n              },\n              ticks: {\n                callback: function (value, index, values) {\n                  return \"\";\n                },\n              },\n            },\n          ],\n        },\n      },\n    });\n  };\n\n  return (\n    <div className=\"chartCoin\">\n      <div className=\"contChartCoin\">\n        <div className=\"contChartCoinImg\"></div>\n        <canvas\n          id=\"myChart\"\n          className={`${loader ? \"skeleton\" : \"\"}`}\n          height=\"200\"\n        ></canvas>\n      </div>\n    </div>\n  );\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ChartCoin);\n"],"sourceRoot":""}