{"version":3,"sources":["components/widgets/inputs/index.js","components/forms/widgets/fiatDeposit/styles.js","components/forms/widgets/fiatDeposit/amount.js"],"names":["IconSwitch","loadable","CountryUrl","Environtment","InputForm","props","clase","disabled","address","focusAction","status","addressVerify","unFocusAction","state_item","autoFocus","className","style","display","label","active","type","placeholder","onChange","actualizarEstado","onFocus","onBlur","name","value","onKeyPress","handleKeyPress","autoComplete","icon","color","size","InputFormAuth","verifying","error","handleFocus","handleBlur","border","defaultValue","Component","InputDepositForm","state","placeHolder","window","innerWidth","this","classNames","finalValue","componentDidMount","service","setState","componentWillReceiveProps","number_format","render","actualizar","minAmountLabel","fontSize","length","console","log","InputCountryPrefix","toggleSection","search_result","open","update","clean_search_result","onClick","src","flag","alt","width","height","prefix","InputKycBasic","kyc","handleSubmit","step","_onFocus","search_results","Array","isArray","id","open_sect","top","map","item","inputProps","ui_type","min","max","pattern","onSubmit","data_state","colorMessage","message","Layout","styled","div","AmountLayout","CostIdLayout","SuccessModalCont","section","AmountComponent","nextStage","stageData","handleState","Title","Content","key","target","amount","replace","prevState","MinAmount","handleAction","formValidate","parseFloat","p","h3"],"mappings":"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","file":"static/js/11.8b81cdbb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport loadable from \"@loadable/component\";\nimport { number_format } from \"../../../utils\";\nimport { SimpleLoader } from \"../loaders\";\nimport Environtment from \"../../../environment\";\n// import MaskedInput from \"react-text-mask\";\n// import createAutoCorrectedDatePipe from \"text-mask-addons/dist/createAutoCorrectedDatePipe\";\nimport useKeyActionAsClick from \"../../../hooks/useKeyActionAsClick\";\nimport { getCdnPath } from '../../../environment'\nimport \"./inputStyles.css\";\n\nconst IconSwitch = loadable(() => import(\"../icons/iconSwitch\"));\nconst NumberInput = loadable(() => import(\"./numberInput\"));\n\n// const autoCorrectedDatePipe = createAutoCorrectedDatePipe(\"dd/mm/yyyy\");\nconst { CountryUrl } = Environtment;\n\nexport const InputFormConverter = (props) => {\n  return (\n    <div className=\"contInputFormConverter\">\n      {props.icon && (\n        <div className={`iconConverterContainer iConver ${props.iconPosition}`}>\n          <div className=\"contIconvert\">\n            <IconSwitch icon={props.icon} size={25} />\n          </div>\n          <p className=\"currencyNameConv fuente\">{props.currency_short_name}</p>\n        </div>\n      )}\n      <input\n        className={`inputElement ${props.iconPosition}`}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={props.onChange}\n        value={props.value}\n        // onFocus={props.focusAction}\n        // onBlur={unFocusAction}\n        name={props.name}\n        // defaultValue={props.value}\n        // disabled={disabled}\n      />\n    </div>\n  );\n};\n\nexport const InputForm = (props) => {\n  const {\n    clase,\n    disabled,\n    address,\n    focusAction,\n    status,\n    addressVerify,\n    unFocusAction,\n    state_item,\n    autoFocus,\n  } = props;\n  return (\n    <div className={`${!clase ? \"containerInputComponent\" : clase}`}>\n      <p\n        className=\"labelText fuente\"\n        style={{ display: !props.label ? \"none\" : \"initial\" }}\n      >\n        {props.label}\n      </p>\n      <div\n        className={`inputContainer ${\n          props.active ? \"inputActivado\" : \"\"\n        } ${state_item}`}\n      >\n        <input\n          className={`inputElement ${\n            props.active ? \"inputActivado\" : \"\"\n          } ${addressVerify}`}\n          type={props.type}\n          placeholder={props.placeholder}\n          onChange={props.actualizarEstado}\n          onFocus={focusAction}\n          onBlur={unFocusAction}\n          name={props.name}\n          value={props.value}\n          onKeyPress={\n            props.name === \"account_number\" ? props.handleKeyPress : null\n          }\n          disabled={disabled}\n          autoFocus={autoFocus}\n          autoComplete=\"off\"\n        />\n        {address && (\n          <div className=\"contIconAddress\">\n            <IconSwitch\n              icon={addressVerify === \"Verify\" ? \"verify\" : \"wallet\"}\n              color={addressVerify === \"Verify\" ? \"#4caf50\" : \"gray\"}\n              size={25}\n            />\n          </div>\n        )}\n      </div>\n      {(props.type === \"number\" || props.type === \"password\") && (\n        <p className=\"statusInput\">{status}</p>\n      )}\n    </div>\n  );\n};\n\nexport const InputFormAuth = (props) => {\n  const {\n    clase,\n    label,\n    active,\n    type,\n    placeholder,\n    actualizarEstado,\n    name,\n    value,\n    handleKeyPress,\n    status,\n    verifying,\n    error,\n    handleFocus,\n    handleBlur,\n    disabled,\n  } = props;\n\n  // console.log(`${}`)\n  // <SimpleLoader/>\n\n  return (\n    <div\n      className={`${!clase ? \"containerInputComponent AuthInputComp\" : clase}`}\n    >\n      <p\n        className=\"labelText fuente\"\n        style={{ display: !label ? \"none\" : \"initial\" }}\n      >\n        {label}\n      </p>\n      <div\n        // className={`inputContainer ${active ? 'inputActivado' : '' }`}\n        className=\"inputContainer inputAuths\"\n        style={{\n          border:\n            verifying && !active\n              ? \"1px solid #039aff\"\n              : active\n              ? \"1px solid #59b200\"\n              : error\n              ? \"1px solid red\"\n              : \"1px solid #50667a61\",\n        }}\n      >\n        {!verifying ? (\n          <input\n            className={`inputElement TwoFactorTypo fuente2`}\n            style={{ color: active ? \"#59b200\" : \"gray\" }}\n            type={type}\n            placeholder={placeholder}\n            onChange={actualizarEstado}\n            name={name}\n            defaultValue={value}\n            onKeyPress={name === \"account_number\" ? handleKeyPress : null}\n            onFocus={handleFocus ? handleFocus : null}\n            onBlur={handleBlur ? handleBlur : null}\n            disabled={disabled}\n            autoFocus={true}\n          />\n        ) : (\n          <div className=\"AuthLoader\">\n            <SimpleLoader />\n          </div>\n        )}\n      </div>\n      <p\n        className=\"statusInput fuente\"\n        style={{\n          color:\n            verifying && !active\n              ? \"#039aff\"\n              : active\n              ? \"#59b200\"\n              : error\n              ? \"red\"\n              : \"#50667a61\",\n        }}\n      >\n        <i\n          className=\"fas fa-check\"\n          style={{ display: active ? \"initial\" : \"none\" }}\n        ></i>\n        {status}\n      </p>\n    </div>\n  );\n};\n\nexport class ReadReceiveCoin extends Component {\n  render() {\n    const {\n      secondary_value,\n      placeholder,\n      secondary_coin,\n      isReadOnly,\n      active,\n      actualizarEstado,\n      name,\n      primary_value,\n      selectPair,\n      totalValue,\n    } = this.props;\n\n    return (\n      <>\n        {/* <div className={`${!clase ? 'containerInputComponent' : clase}`}> */}\n        <div className={`inputContainer ${active ? \"inputActivado\" : \"\"}`}>\n          {!secondary_value ? (\n            <div className=\"ReadReceiveCoinLoader\">\n              <SimpleLoader />\n            </div>\n          ) : (\n            <>\n              <div\n                className=\"coinBalance2 fuente2\"\n                onClick={() => selectPair(false)}\n              >\n                <div className=\"coinB2\">\n                  <i className=\"fas fa-angle-down\"></i>\n                  <p>{secondary_coin}</p>\n                  {secondary_coin && (\n                    <img\n                      src={`${getCdnPath('assets')}coins/${secondary_coin}.png`}\n                      alt=\"\"\n                      width=\"30\"\n                    />\n                  )}\n                </div>\n              </div>\n              {!isReadOnly ? (\n                <input\n                  className={`inputElement ${active ? \"inputActivado\" : \"\"}`}\n                  type=\"number\"\n                  placeholder={placeholder}\n                  onChange={actualizarEstado}\n                  name={name}\n                  value={primary_value}\n                />\n              ) : (\n                <p\n                  className=\"read_only\"\n                  style={{ color: active ? \"#3A7BD5\" : \"gray\" }}\n                >\n                  {\" \"}\n                  {totalValue} {totalValue ? secondary_coin : \"0\"}{\" \"}\n                </p>\n              )}\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport const InputFormCoin = (props) => {\n  const {\n    saldoDisponible,\n    coin,\n    value,\n    placeholder,\n    getMaxAvailable,\n    secondary_value,\n    handleChange,\n    useFiatInput,\n    active,\n    label,\n    name,\n    handleKeyPress,\n  } = props;\n\n  const isMovilViewport = window.innerWidth < 768;\n  return (\n    <>\n      {/* <div className={`${!clase ? 'containerInputComponent' : clase}`}> */}\n      <div>\n        <p\n          className=\"labelText fuente\"\n          style={{ display: !label ? \"none\" : \"initial\" }}\n        >\n          {label}\n        </p>\n        <div\n          className={`InputFormCoin inputContainer ${\n            active ? \"inputActivado\" : \"\"\n          }`}\n        >\n          <div\n            className=\"coinBalance fuente2\"\n            onClick={!secondary_value ? null : getMaxAvailable}\n          >\n            <p>\n              {!isMovilViewport && \"Saldo disponible \"}\n              {saldoDisponible > 0\n                ? useFiatInput\n                  ? `${number_format(saldoDisponible)}`\n                  : `${saldoDisponible}`\n                : \"0\"}{\" \"}\n              {coin}\n            </p>\n            {coin && (\n              <img\n                src={`${getCdnPath('assets')}coins/${coin}.png`}\n                alt=\"\"\n                width=\"30\"\n              />\n            )}\n          </div>\n          {useFiatInput ? (\n            <NumberInput\n              type=\"text\"\n              autoComplete=\"off\"\n              onChange={handleChange}\n              placeholder={placeholder}\n              name={name}\n              className={`inputElement ${active ? \"inputActivado\" : \"\"}`}\n              value={value}\n              max_available={saldoDisponible}\n            />\n          ) : (\n            <input\n              className={`inputElement ${active ? \"inputActivado\" : \"\"}`}\n              type=\"number\"\n              placeholder={placeholder}\n              onChange={handleChange}\n              name={name}\n              value={value}\n              onKeyPress={name === \"account_number\" ? handleKeyPress : null}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport class InputDepositForm extends Component {\n  state = {\n    placeHolder: (window.innerWidth > 768 && this.props.classNames !== 'without-adapt') ? \"0\" : \"0\",\n    finalValue: \"\",\n  };\n\n  componentDidMount() {\n    const { value, service } = this.props\n    this.setState({\n      finalValue: value ? service(value) : this.state.placeHolder,\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    // console.log('InputDepositForm / componentWillReceiveProps -', isNaN(props.value))\n    const { value } = props;\n\n    if (value) {\n      this.setState({\n        finalValue: number_format(value),\n      });\n    } else {\n      this.setState({\n        finalValue: this.state.placeHolder,\n      });\n    }\n  }\n\n  render() {\n    const { actualizar, handleKeyPress, value, name, autoFocus, classNames, minAmountLabel } = this.props;\n    const { finalValue } = this.state;\n    const style = {\n      fontSize:\n        finalValue.length < 8 ? \"50px\"\n        : finalValue.length < 12 ? \"40px\"\n        : \"30px\"\n    };\n\n    console.log('finalValue ==> ', value)\n\n    return (\n      <div className={`containerInputComponent with-adapt ${classNames || ''}`}>\n        <input\n          className={`inp2_ inputElement2 signoPesos fuente2 width-adapt-child`}\n          type=\"text\"\n          style={style}\n          placeholder={`$ ${this.state.placeHolder}`}\n          onChange={actualizar}\n          name={name}\n          autoFocus={autoFocus}\n          value={value ? `$ ${finalValue}` : \"\"}\n          onKeyPress={handleKeyPress}\n        />\n        {\n          (minAmountLabel && value) &&\n          <p className=\"__minAmountLabel fuente2\">{minAmountLabel}</p>\n        }\n      </div>\n    );\n  }\n}\n\nexport const InputCountryPrefix = (props) => {\n  const {\n    toggleSection,\n    search_result,\n    open,\n    update,\n    clean_search_result,\n    autoFocus,\n  } = props;\n\n  // @Param search_result:object  => modelo que almacena la información del país (imagen, prefijo)\n  // code: \"colombia\"\n  // flag: \"https://restcountries.eu/data/col.svg\"\n  // id: 1\n  // name: \"Colombia\"\n  // prefix: \"57\"\n\n  // @Param open:boolean => Define si esta desplegado el componente o contraido\n\n  // console.log('||||InputCountryPrefix', search_result && search_result.prefix)\n\n  return (\n    <div\n      className={`PhoneamEsta ${open ? \"openS\" : \"\"}`}\n      onClick={open ? null : toggleSection}\n    >\n      <div className=\"inputPhone\">\n        {search_result && (\n          <img\n            src={`${CountryUrl}${search_result.flag}`}\n            alt=\"\"\n            className=\"PhoneamEsta_img\"\n            width={20}\n            height={20}\n          />\n        )}\n        <p className=\"fuentePrin PhoneamEsta_p\">\n          + {search_result ? search_result.prefix[0] : \"--\"}\n        </p>\n        <div\n          className={`inputComponentPhone ${open ? \"openS\" : \"\"} ${\n            search_result ? \"search_result\" : \"\"\n          }`}\n        >\n          {search_result ? (\n            <p className={`search_result_kyc ${open ? \"openS\" : \"\"}`}>\n              {search_result.name}\n              <i\n                className=\"fas fa-times cerratelo\"\n                onClick={clean_search_result}\n              ></i>\n            </p>\n          ) : (\n            <input\n              type=\"text\"\n              className=\"inputElement3\"\n              autoFocus={autoFocus}\n              placeholder=\"Escribe el país del indicativo.\"\n              onChange={update}\n              // name=\"findbar_name\"\n              name=\"country_prefix\"\n            />\n          )}\n        </div>\n      </div>\n      <i\n        className={`fas fa-chevron-down PhoneamEsta_icon ${open ? \"anim\" : \"\"}`}\n        onClick={toggleSection}\n      ></i>\n      <span className=\"linePhone\"></span>\n    </div>\n  );\n};\n\nexport const InputKycBasic = (props) => {\n  const {\n    kyc,\n    update,\n    handleSubmit,\n    state,\n    step,\n    toggleSection,\n    _onFocus,\n    search_results,\n    clean_search_result,\n  } = props;\n\n  let search_result = Array.isArray(search_results) && search_results[0];\n  \n\n  return (\n    <div\n      id=\"kycPrime\"\n      className={`containerInputComponent2 ${state.open_sect ? \"openS\" : \"\"}`}\n    >\n      {/* <div id=\"kycPrime\" className={`containerInputComponent2`}> */}\n\n      <div className=\"inputLabelsCont\">\n        <div className=\"InputCarous\" style={{ top: `-${(step - 1) * 40}px` }}>\n          {kyc.map((item) => {\n            return (\n              <p key={item.id} className=\"labelText2 fuente\">\n                {item.label}\n              </p>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className={`inputContainer3 ${state.active ? \"inputActivado\" : \"\"}`}>\n        {kyc.map((item) => {\n          const isDateInput = state.ui_type === \"date\";\n          let inputProps = {}\n          if(isDateInput){\n            console.log('|||||||||||| isDateInput ====> ', state)\n            inputProps = {\n              min:\"1940-01-01\",\n              max:\"2003-12-12\",\n              pattern:/\\d{4}-\\d{2}-\\d{2}/,\n              autoFocus:true\n            }\n          }\n          const classNames = `inputElement3 ${state.active ? \"inputActivado\" : \"\"} ${state.ui_type === \"phone\" ? \"phone\" : \"\"}`;\n          return (\n            step === item.id && (\n              <form onSubmit={handleSubmit} key={item.id} id={`${state.ui_type === \"phone\" ? \"phone\" : \"\"}`}>\n                {state.ui_type === \"phone\" && (\n                  <InputCountryPrefix\n                    open={state.open_sect}\n                    autoFocus={true}\n                    search_result={search_result}\n                    {...props}\n                  />\n                )}\n\n                {/* {isDateInput && (\n                  <MaskedInput\n                    mask={[/\\d/, /\\d/, \"/\", /\\d/, /\\d/, \"/\", /\\d/, /\\d/, /\\d/, /\\d/,]}\n                    className={classNames}\n                    placeholder={item.placeholder}\n                    guide={true}\n                    name={item.name}\n                    autoFocus={true}\n                    pipe={autoCorrectedDatePipe}\n                    onChange={(e) => {\n                      e.persist();\n                      update(e);\n                    }}\n                  />\n                )} */}\n\n                {/* cuando se confirma deposito, consulto tx security si hay scope para confirmación de deposito */}\n                {/* type biometric user id */}\n                {/* identity service  */}\n                {/* biometric data */}\n\n                {search_result && state.ui_type === \"select\" ? (\n                  <p className={`search_result_kyc openS`}>\n                    {search_result.name}\n                    <i className=\"fas fa-times cerratelo\"  onClick={clean_search_result} ></i>\n                  </p>\n                ) : (\n                  (\n                    <input\n                      key={item.id}\n                      autoFocus={true}\n                      className={classNames}\n                      type={\n                        state.ui_type === \"phone\"\n                          ? \"text\"\n                          : state.ui_type === \"select\"\n                          ? \"text\"\n                          : state.ui_type\n                      }\n                      placeholder={\n                        state.data_state[item.name]\n                          ? state.data_state[item.name]\n                          : item.placeholder\n                      }\n                      onChange={update}\n                      name={item.name}\n                      value={state.data_state[item.name]}\n                      onFocus={_onFocus}\n                      {...inputProps}\n                    />\n                  )\n                )}\n              </form>\n            )\n          );\n        })}\n\n        <div className=\"InputProgressBar\">\n          <div\n            className=\"InputProgressed\"\n            style={{ width: step < 2 ? 0 : `${(step * 100) / kyc.length}%` }}\n          ></div>\n        </div>\n\n        <div\n          className={`ctaInputKyc ${state.open_sect ? \"openPhone\" : \"\"}`}\n          onClick={state.open_sect ? toggleSection : handleSubmit}\n        >\n          <div className=\"contCtaKyc\">\n            <i className=\"fas fa-arrow-right arrowcito backInputKyc\"></i>\n            <i\n              className={` ${\n                state.ui_type === \"phone\" ? \"fas fa-mobile-alt\" : \"fas fa-check\"\n              } frontInputKyc`}\n            ></i>\n          </div>\n        </div>\n      </div>\n      <div className=\"InputContainerT\">\n        <p\n          className=\"fuente Inputmsg\"\n          style={{ color: `${state.colorMessage}` }}\n        >\n          {state.message}\n        </p>\n        <p className=\"fuente2 InputStep\">\n          {step}/{kyc.length}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport const InputCountry = (props) => {\n  const {\n    handleSubmit,\n    update_country,\n    country_match,\n    reset_data,\n    disabled,\n    active,\n    loader,\n  } = props;\n\n  const idNextButton = useKeyActionAsClick(\n    true,\n    \"id-next-subfix-button\",\n    13,\n    false,\n    \"onkeydown\"\n  );\n\n  return (\n    <div id=\"kycPrime\" className=\"containerInputComponent3\">\n      <div className=\"inputLabelsCont\">\n        <div className=\"InputCarous\">\n          <p className=\"labelText3 fuente \">\n            Elige el país desde el que operarás\n          </p>\n        </div>\n      </div>\n\n      <div className={`inputContainer3 ${active ? \"inputActivado\" : \"\"}`}>\n        {loader && (\n          <div className=\"inputCountryLoader\">\n            <SimpleLoader loader={2} />\n          </div>\n        )}\n\n        {country_match ? (\n          <div className=\"country_selected\">\n            <IconSwitch icon={country_match.value} size={25} />\n            <p className=\"fuente\">{country_match.ui_name}</p>\n            <i className=\"fas fa-times cerratelo\" onClick={reset_data}></i>\n          </div>\n        ) : (\n          <form onSubmit={handleSubmit}>\n            <input\n              className={`inputElement3 ${active ? \"inputActivado\" : \"\"}`}\n              type=\"text\"\n              placeholder=\"Ej: Colombia\"\n              onChange={update_country}\n              name=\"country\"\n              disabled={disabled}\n              // defaultValue=\"\"\n            />\n          </form>\n        )}\n\n        <div className=\"InputProgressBar countryppp\">\n          {/* <div className=\"InputProgressed\" style={{ width: step<2 ? 0 : `${(((step*100))/kyc.length)}%` }} ></div> */}\n          <div\n            className=\"InputProgressed\"\n            style={{ width: country_match ? \"100%\" : \"0\" }}\n          ></div>\n        </div>\n\n        <i\n          id={idNextButton}\n          className={`fas fa-arrow-right arrowcito2 ${\n            country_match ? \"aparecer\" : \"\"\n          }`}\n          onClick={country_match ? handleSubmit : null}\n        ></i>\n      </div>\n      <div className=\"InputContainerT\">\n        {/* <p className=\"fuente Inputmsg\" style={{ color: `${colorMessage}` }} >{message}</p> */}\n        {/* <p className=\"fuente2 InputStep\" >{step}/{kyc.length}</p> */}\n      </div>\n    </div>\n  );\n};\n\nexport default InputForm;\n","import styled from 'styled-components'\n\n\nconst Layout = styled.div`\n    grid-row-gap: 10px;\n    display: grid;\n    height: 100%;\n    justify-items: center;\n    align-items: center;\n    perspective: 900px;3\n    transform-style: preserve-3d; \n    text-align: center;\n    width: calc(100% - 40px);\n    padding: 0 20px;\n\n    .botonForm{\n        width:220px;\n    }\n`\n\nexport const AmountLayout = styled(Layout)`\n    grid-template-rows: 120px 1fr 120px;\n`\n\nexport const CostIdLayout = styled(Layout)`\n    grid-template-rows: 120px 1fr 120px;\n\n    @media (max-width: 768px) {\n        ._costIdContent{\n            padding: 0;\n            width: 100%; \n            .mobileView{\n                width: 100%;\n                transform: scale(1) !important;\n            }\n        }\n    }\n`\n\nexport const SuccessModalCont = styled.section`\n    position: absolute;\n    height: calc(100vh - 80px);\n    width: 100vw;\n    padding: 40px 0;\n    background: linear-gradient(to bottom right,#129a8e,#37ed7d);\n`","// import ViewAmountComponent from '../../../wallets/views/viewAmount'\n// import { useEffect, useState } from 'react';\nimport styled from 'styled-components'\nimport IconSwitch from \"../../../widgets/icons/iconSwitch\";\nimport { InputDepositForm } from \"../../../widgets/inputs\";\n// import { ButtonForms } from \"../../../widgets/buttons/buttons\";\nimport ControlButton from \"../../../widgets/buttons/controlButton\";\n\nimport { AmountLayout } from './styles'\nimport {\n    handleKeyPress,\n    number_format,\n    // get_ui_name_currency,\n  } from \"../../../../utils\";\n\n\nconst AmountComponent = ({ nextStage, stageData, handleState:{ state, setState } }) => {\n\n\n    const updateAmount = ({ target }) => {\n        let amount = target.value.replace(/\\D/g, \"\");\n        setState(prevState => { return { ...prevState, [stageData?.key]: amount } })\n    };\n\n    const loadMinAmount = () => {\n        setState(prevState => { return { ...prevState, [stageData?.key]: \"20000\" } })\n    }\n\n    console.log('state', state)\n\n    return(\n        <AmountLayout className=\"amountLayout\">\n            <Title className=\"fuente\">Escribe la cantidad a depositar</Title>\n            <Content>\n                <IconSwitch icon=\"cop\" size={45} />\n                <InputDepositForm\n                    classNames=\"without-adapt\"\n                    value={state[stageData?.key]}\n                    autoFocus={true}\n                    actualizar={updateAmount}\n                    name=\"amount\"\n                    handleKeyPress={handleKeyPress}\n                    service={number_format}\n              /> \n              <MinAmount className=\"fuente2\" onClick={loadMinAmount}>Cantidad mínima: $20.000</MinAmount>\n            </Content>\n\n            <ControlButton\n                handleAction={() => nextStage()}\n                // loader={true}\n                formValidate={parseFloat(state[stageData?.key]) >= parseFloat(\"20000\")}\n                label=\"Continuar\"\n            />\n        </AmountLayout>\n    )\n}\n\nexport default AmountComponent\n\n\nconst MinAmount = styled.p`\n    color:gray;\n    margin: 0;\n    align-self: baseline;\n    cursor:pointer;\n    justify-self:end;\n`\n\nconst Content = styled.section`\n    display: grid;\n    grid-template-columns: 1fr;\n    align-items: center;\n    justify-items: center;\n    grid-template-rows: 30% 1fr 1fr !important;\n    min-height: 300px;\n    height: 100%;\n    padding: 0 15px;\n    width:calc(100% - 30px);\n    \n`\n\nexport const Title = styled.h3`\n    margin:0;\n    color:var(--primary);\n    font-size:1.3em;\n`\n\n\n"],"sourceRoot":""}