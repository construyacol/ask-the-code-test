{"version":3,"sources":["components/wallets/views/depositFiat.js","components/wallets/views/deposit.js"],"names":["DepositForm","styled","OperationForm","DepositFiat","props","movil_viewport","window","innerWidth","loader","setLoader","useState","localCurrency","useSelector","state","modelData","pairs","idForMainButton","useKeyActionAsClick","current_wallet","ui","current_section","params","deposit_providers","FiatDeposit","dispatch","useCoinsendaServices","actions","useActions","atributos","icon","size","color","opacity","useEffect","currency","className","active_trade_operation","toUpperCase","id","handleAction","async","FiatDepositComponent","default","renderModal","formValidate","label","DepositView","currency_type"],"mappings":"oOAYA,MAgFMA,EAAcC,YAAOC,IAAPD,CAAH,qKASFE,MAzFMC,IACnB,MAAMC,EAAiBC,OAAOC,WAAa,KACnCC,EAAQC,GAAcC,oBAAS,IACjC,cAAEC,GAAkBC,aAAaC,IAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAOC,iBAAlB,aAAW,EAAkBC,SAE7DC,EAAkBC,aACtB,EACA,sBACA,IACA,EACA,YAEK,EAEL,eACEC,EACAC,IACEC,iBAAiB,OAAEC,IAErBP,WAAW,kBAAEQ,KAEf,YAAEC,GACFC,GACEC,cAEEC,EAAUC,cAEVC,EAAY,CAChBC,KAAM,UACNC,KAAMzB,EAAiB,GAAK,IAC5B0B,MAAO,yBACPC,QAAQ,SAGVC,qBAAU,KACRT,EAASD,EAAYL,EAAegB,SAASA,UAAY,UAExD,IAaH,OACE,eAAClC,EAAD,CAAamC,UAAU,6BAAvB,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,UAAD,IAAgBP,MAGlB,qBAAKO,UAAU,sBAAf,SACGd,EAAOe,uBACN,mBAAGD,UAAU,gCAAb,iGAKA,oBAAGA,UAAU,SAAb,6BACYxB,QADZ,IACYA,OADZ,EACYA,EAAe0B,cAD3B,8BAMJ,cAAC,IAAD,CACEC,GAAItB,EACJuB,aAhCeC,UACnB/B,GAAU,GACV,MACMgC,SADgB,iCACeC,QACrChB,EAAQiB,aAAY,IAAM,cAACF,EAAD,MAI1BhC,GAAU,IAyBND,OAAQA,IAAWc,EACnBsB,cAAY,EACZC,MAAM,gCCnECC,UAdK,KAClB,MAAO,EAAE,eAAE5B,IAAoBO,cAE/B,OACE,mCACoC,WAAjCP,EAAe6B,cACd,cAAC,IAAD,IAEA,cAAC,EAAD","file":"static/js/143.13b9b6be.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useCoinsendaServices } from \"../../../services/useCoinsendaServices\";\nimport styled from \"styled-components\";\nimport { OperationForm } from \"./withdrawCripto\";\nimport IconSwitch from \"../../widgets/icons/iconSwitch\";\nimport ControlButton from \"../../widgets/buttons/controlButton\";\nimport useKeyActionAsClick from \"../../../hooks/useKeyActionAsClick\";\nimport { useActions } from '../../../hooks/useActions'\nimport { useSelector } from \"react-redux\";\n\n\n\nconst DepositFiat = (props) => {\n  const movil_viewport = window.innerWidth < 768;\n  const [ loader, setLoader ] = useState(false)\n  const { localCurrency } = useSelector((state) => state?.modelData?.pairs);\n\n  const idForMainButton = useKeyActionAsClick(\n    true,\n    \"main-button-deposit\",\n    13,\n    true,\n    \"onkeyup\"\n  );\n  const [\n    ,\n    {\n      current_wallet,\n      ui: {\n        current_section: { params },\n      },\n      modelData: { deposit_providers },\n    },\n    { FiatDeposit },\n    dispatch,\n  ] = useCoinsendaServices();\n\n  const actions = useActions()\n \n  const atributos = {\n    icon: \"deposit\",\n    size: movil_viewport ? 80 : 100,\n    color: \"var(--paragraph_color)\",\n    opacity:\"0.7  \"\n  };\n\n  useEffect(() => {\n    dispatch(FiatDeposit(current_wallet.currency.currency || \"usd\"));\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const fiat_deposit = async (e) => {\n    setLoader(true)\n    const Element = await import('../../forms/widgets/fiatDeposit/init')\n    const FiatDepositComponent = Element.default\n    actions.renderModal(() => <FiatDepositComponent/>)\n    \n    // await dispatch(FiatDeposit(current_wallet.currency.currency || \"usd\"));\n    // dispatch(toggleModal());\n    setLoader(false)\n  };\n \n  return (\n    <DepositForm className=\"DepositView itemWalletView\">\n      <div className=\"contIcontSwitch\">\n        <IconSwitch {...atributos} />\n      </div>\n\n      <div className=\"contIcontSwitchCont\">\n        {params.active_trade_operation ? (\n          <p className=\"fuente active_trade_operation\">\n            Operación de intercambio en proceso, una vez finalice podrás hacer\n            depositos.\n          </p>\n        ) : (\n          <p className=\"fuente\">\n            Deposita {localCurrency?.toUpperCase()} y cambialo por Crypto\n          </p>\n        )}\n      </div>\n\n      <ControlButton\n        id={idForMainButton}\n        handleAction={fiat_deposit}\n        loader={loader || !deposit_providers}\n        formValidate\n        label=\"Realizar un depósito\"\n      />\n    </DepositForm>\n  );\n};\n\nconst DepositForm = styled(OperationForm)`\n\n  min-height: 350px;\n  @media (max-width: 768px) {\n    height: calc(100% - 40px) !important;\n    max-height: none !important;\n  }\n`;\n\nexport default DepositFiat;\n\n\n","import React from \"react\";\nimport CriptoSupervisor from \"./depositCripto\";\nimport { useCoinsendaServices } from \"../../../services/useCoinsendaServices\";\nimport DepositFiat from \"./depositFiat\";\n\nconst DepositView = () => {\n  const [, { current_wallet }] = useCoinsendaServices();\n\n  return (\n    <>\n      {current_wallet.currency_type === \"crypto\" ? (\n        <CriptoSupervisor />\n      ) : (\n        <DepositFiat />\n      )}\n    </>\n  );\n};\n\nexport default DepositView;\n"],"sourceRoot":""}