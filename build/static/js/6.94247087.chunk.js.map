{"version":3,"sources":["components/settings/settingsContainer.js"],"names":["SettingsContainer","enableToggle","alert","_this2","this","props","action","Loader","setTimeout","Object","_home_coinsenda_new_frontend_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_coinsenda_new_frontend_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","stop","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","react__WEBPACK_IMPORTED_MODULE_7__","_widgets_detailContainer_detailContainerLayout__WEBPACK_IMPORTED_MODULE_8__","title","loader","_widgets_loaders__WEBPACK_IMPORTED_MODULE_12__","label","global_settings","_widgets_itemSettings__WEBPACK_IMPORTED_MODULE_13__","data","Component","connect","state","isLoading","dispatch","bindActionCreators","actions"],"mappings":"yOAUMA,6MAuBJC,aAAe,WACbC,MAAM,6GArBW,IAAAC,EAAAC,KAEjBA,KAAKC,MAAMC,OAAOC,QAAO,GAIxBC,WAAUC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAC,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKTf,EAAKE,MAAMC,OAAOC,QAAO,GALhB,wBAAAS,EAAAG,SAAAL,MAQT,oCAeH,OACIM,EAAAR,EAAAS,cAACC,EAAA,SAAD,KACEF,EAAAR,EAAAS,cAACE,EAAA,EAAD,CACEC,MAAM,mBAGNpB,KAAKC,MAAMoB,OACXL,EAAAR,EAAAS,cAACK,EAAA,EAAD,CACEC,MAAM,+BAGJC,KACAR,EAAAR,EAAAS,cAACQ,EAAA,EAAD,CAAkBC,KAAMF,eA5CRG,aAkEjBC,sBAdf,SAAyBC,EAAO5B,GAC9B,MAAM,CACJoB,OAAOQ,EAAMC,UAAUT,SAI3B,SAA4BU,GAC1B,MAAM,CACJ7B,OAAO8B,6BAAmBC,IAASF,KAMxBH,CAA8ChC","file":"static/js/6.94247087.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport DetailContainerLayout from '../widgets/detailContainer/detailContainerLayout'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport actions from '../../actions'\nimport SimpleLoader from '../widgets/loaders'\nimport ItemSettingsInit from '../widgets/itemSettings'\nimport { global_settings } from '../api/ui/settings.json'\n\n\nclass SettingsContainer extends Component{\n\n\n  componentDidMount(){\n    // this.props.action.MenuItemActive(this.props.location.pathname)\n    this.props.action.Loader(true)\n\n    // activamos el item desde aquí en caso de acceder al componente por medio de la ruta\n\n     setTimeout(async()=>{\n       // Manejamos la respuesta en el estado, por si ocurre un error, evitamos\n       // this.setState({\n       //   userWallets: await this.props.action.get_list_user_wallets(this.props.user)\n       // })\n       this.props.action.Loader(false)\n\n      // console.log('°°°°°°° RESPUESTA DE LAS WALLETS  °°°°°°', userWallets)\n    }, 0)\n\n     // console.log('|||||||||| °°°°°  WalletContainer  °°°°°||||||||||')\n  }\n\n\n  enableToggle = () =>{\n    alert('Configuración Item')\n  }\n\n\n  render(){\n\n    // console.log('|||||||||| °°°°°  Security Container  °°°°°||||||||||', global_settings)\n\n    return(\n        <Fragment>\n          <DetailContainerLayout\n            title=\"Configuraciones\"\n            >\n          {\n            this.props.loader ?\n            <SimpleLoader\n              label=\"Obteniendo configuraciones\"\n            />\n            :\n                global_settings &&\n                <ItemSettingsInit data={global_settings} />\n          }\n        </DetailContainerLayout>\n        </Fragment>\n    )\n  }\n}\n\nfunction mapStateToProps(state, props){\n  return{\n    loader:state.isLoading.loader\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return{\n    action:bindActionCreators(actions, dispatch)\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (SettingsContainer)\n"],"sourceRoot":""}