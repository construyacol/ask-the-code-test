{"version":3,"sources":["components/widgets/inputs/index.js","components/widgets/items/ItemSelectionContainer.js","components/widgets/items/itemLayout.js"],"names":["IconSwitch","loadable","CountryUrl","Environtment","InputForm","props","clase","disabled","address","focusAction","status","addressVerify","unFocusAction","state_item","autoFocus","className","style","display","label","active","type","placeholder","onChange","actualizarEstado","onFocus","onBlur","name","value","onKeyPress","handleKeyPress","autoComplete","icon","color","size","InputFormAuth","verifying","error","handleFocus","handleBlur","border","defaultValue","Component","InputDepositForm","state","placeHolder","window","innerWidth","finalValue","componentDidMount","this","setState","componentWillReceiveProps","number_format","render","actualizar","fontSize","length","InputCountryPrefix","toggleSection","search_result","open","update","clean_search_result","onClick","src","flag","alt","width","height","prefix","InputKycBasic","kyc","handleSubmit","step","_onFocus","search_results","Array","isArray","id","open_sect","top","map","item","inputProps","ui_type","console","log","min","max","pattern","classNames","onSubmit","data_state","colorMessage","message","ItemSelectionContainer","selected","coincidencia","items","load_items","async","items_type","coins","coinsendaServices","fetchAllCurrencies","banks","remittance","buscarResultados","buscarItemStore","code","search","filter","query","toLowerCase","includes","current","estado","target","short_name","event","debounce","debounceFinder","item_name","isEqual","action","Search","update_control_form","seleccionarItem","close","clearItem","buttonActive","itemSelect","currency","itemType","actives","key","format","connect","form_control_deposit","form_deposit","search_coin","search_bank","form_wallet","form_bank","form_control_wallet","form_control_bank","search_deposit","form","currencies","modelData","dispatch","bindActionCreators","actions","withCoinsendaServices","ItemLayout","doSelectionForItem","currency_type","pair_id","useEffect","primarySelect","title","getCdnPath"],"mappings":"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","file":"static/js/29.c9b59a1e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport loadable from \"@loadable/component\";\nimport { number_format } from \"../../../utils\";\nimport { SimpleLoader } from \"../loaders\";\nimport Environtment from \"../../../environment\";\n// import MaskedInput from \"react-text-mask\";\n// import createAutoCorrectedDatePipe from \"text-mask-addons/dist/createAutoCorrectedDatePipe\";\nimport useKeyActionAsClick from \"../../../hooks/useKeyActionAsClick\";\nimport { getCdnPath } from '../../../environment'\nimport \"./inputStyles.css\";\n\nconst IconSwitch = loadable(() => import(\"../icons/iconSwitch\"));\nconst NumberInput = loadable(() => import(\"./numberInput\"));\n\n// const autoCorrectedDatePipe = createAutoCorrectedDatePipe(\"dd/mm/yyyy\");\nconst { CountryUrl } = Environtment;\n\nexport const InputFormConverter = (props) => {\n  return (\n    <div className=\"contInputFormConverter\">\n      {props.icon && (\n        <div className={`iconConverterContainer iConver ${props.iconPosition}`}>\n          <div className=\"contIconvert\">\n            <IconSwitch icon={props.icon} size={25} />\n          </div>\n          <p className=\"currencyNameConv fuente\">{props.currency_short_name}</p>\n        </div>\n      )}\n      <input\n        className={`inputElement ${props.iconPosition}`}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={props.onChange}\n        value={props.value}\n        // onFocus={props.focusAction}\n        // onBlur={unFocusAction}\n        name={props.name}\n        // defaultValue={props.value}\n        // disabled={disabled}\n      />\n    </div>\n  );\n};\n\nexport const InputForm = (props) => {\n  const {\n    clase,\n    disabled,\n    address,\n    focusAction,\n    status,\n    addressVerify,\n    unFocusAction,\n    state_item,\n    autoFocus,\n  } = props;\n  return (\n    <div className={`${!clase ? \"containerInputComponent\" : clase}`}>\n      <p\n        className=\"labelText fuente\"\n        style={{ display: !props.label ? \"none\" : \"initial\" }}\n      >\n        {props.label}\n      </p>\n      <div\n        className={`inputContainer ${\n          props.active ? \"inputActivado\" : \"\"\n        } ${state_item}`}\n      >\n        <input\n          className={`inputElement ${\n            props.active ? \"inputActivado\" : \"\"\n          } ${addressVerify}`}\n          type={props.type}\n          placeholder={props.placeholder}\n          onChange={props.actualizarEstado}\n          onFocus={focusAction}\n          onBlur={unFocusAction}\n          name={props.name}\n          value={props.value}\n          onKeyPress={\n            props.name === \"account_number\" ? props.handleKeyPress : null\n          }\n          disabled={disabled}\n          autoFocus={autoFocus}\n          autoComplete=\"off\"\n        />\n        {address && (\n          <div className=\"contIconAddress\">\n            <IconSwitch\n              icon={addressVerify === \"Verify\" ? \"verify\" : \"wallet\"}\n              color={addressVerify === \"Verify\" ? \"#4caf50\" : \"gray\"}\n              size={25}\n            />\n          </div>\n        )}\n      </div>\n      {(props.type === \"number\" || props.type === \"password\") && (\n        <p className=\"statusInput\">{status}</p>\n      )}\n    </div>\n  );\n};\n\nexport const InputFormAuth = (props) => {\n  const {\n    clase,\n    label,\n    active,\n    type,\n    placeholder,\n    actualizarEstado,\n    name,\n    value,\n    handleKeyPress,\n    status,\n    verifying,\n    error,\n    handleFocus,\n    handleBlur,\n    disabled,\n  } = props;\n\n  // console.log(`${}`)\n  // <SimpleLoader/>\n\n  return (\n    <div\n      className={`${!clase ? \"containerInputComponent AuthInputComp\" : clase}`}\n    >\n      <p\n        className=\"labelText fuente\"\n        style={{ display: !label ? \"none\" : \"initial\" }}\n      >\n        {label}\n      </p>\n      <div\n        // className={`inputContainer ${active ? 'inputActivado' : '' }`}\n        className=\"inputContainer inputAuths\"\n        style={{\n          border:\n            verifying && !active\n              ? \"1px solid #039aff\"\n              : active\n              ? \"1px solid #59b200\"\n              : error\n              ? \"1px solid red\"\n              : \"1px solid #50667a61\",\n        }}\n      >\n        {!verifying ? (\n          <input\n            className={`inputElement TwoFactorTypo fuente2`}\n            style={{ color: active ? \"#59b200\" : \"gray\" }}\n            type={type}\n            placeholder={placeholder}\n            onChange={actualizarEstado}\n            name={name}\n            defaultValue={value}\n            onKeyPress={name === \"account_number\" ? handleKeyPress : null}\n            onFocus={handleFocus ? handleFocus : null}\n            onBlur={handleBlur ? handleBlur : null}\n            disabled={disabled}\n            autoFocus={true}\n          />\n        ) : (\n          <div className=\"AuthLoader\">\n            <SimpleLoader />\n          </div>\n        )}\n      </div>\n      <p\n        className=\"statusInput fuente\"\n        style={{\n          color:\n            verifying && !active\n              ? \"#039aff\"\n              : active\n              ? \"#59b200\"\n              : error\n              ? \"red\"\n              : \"#50667a61\",\n        }}\n      >\n        <i\n          className=\"fas fa-check\"\n          style={{ display: active ? \"initial\" : \"none\" }}\n        ></i>\n        {status}\n      </p>\n    </div>\n  );\n};\n\nexport class ReadReceiveCoin extends Component {\n  render() {\n    const {\n      secondary_value,\n      placeholder,\n      secondary_coin,\n      isReadOnly,\n      active,\n      actualizarEstado,\n      name,\n      primary_value,\n      selectPair,\n      totalValue,\n    } = this.props;\n\n    return (\n      <>\n        {/* <div className={`${!clase ? 'containerInputComponent' : clase}`}> */}\n        <div className={`inputContainer ${active ? \"inputActivado\" : \"\"}`}>\n          {!secondary_value ? (\n            <div className=\"ReadReceiveCoinLoader\">\n              <SimpleLoader />\n            </div>\n          ) : (\n            <>\n              <div\n                className=\"coinBalance2 fuente2\"\n                onClick={() => selectPair(false)}\n              >\n                <div className=\"coinB2\">\n                  <i className=\"fas fa-angle-down\"></i>\n                  <p>{secondary_coin}</p>\n                  {secondary_coin && (\n                    <img\n                      src={`${getCdnPath('assets')}coins/${secondary_coin}.png`}\n                      alt=\"\"\n                      width=\"30\"\n                    />\n                  )}\n                </div>\n              </div>\n              {!isReadOnly ? (\n                <input\n                  className={`inputElement ${active ? \"inputActivado\" : \"\"}`}\n                  type=\"number\"\n                  placeholder={placeholder}\n                  onChange={actualizarEstado}\n                  name={name}\n                  value={primary_value}\n                />\n              ) : (\n                <p\n                  className=\"read_only\"\n                  style={{ color: active ? \"#3A7BD5\" : \"gray\" }}\n                >\n                  {\" \"}\n                  {totalValue} {totalValue ? secondary_coin : \"0\"}{\" \"}\n                </p>\n              )}\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport const InputFormCoin = (props) => {\n  const {\n    saldoDisponible,\n    coin,\n    value,\n    placeholder,\n    getMaxAvailable,\n    secondary_value,\n    handleChange,\n    useFiatInput,\n    active,\n    label,\n    name,\n    handleKeyPress,\n  } = props;\n\n  const isMovilViewport = window.innerWidth < 768;\n  return (\n    <>\n      {/* <div className={`${!clase ? 'containerInputComponent' : clase}`}> */}\n      <div>\n        <p\n          className=\"labelText fuente\"\n          style={{ display: !label ? \"none\" : \"initial\" }}\n        >\n          {label}\n        </p>\n        <div\n          className={`InputFormCoin inputContainer ${\n            active ? \"inputActivado\" : \"\"\n          }`}\n        >\n          <div\n            className=\"coinBalance fuente2\"\n            onClick={!secondary_value ? null : getMaxAvailable}\n          >\n            <p>\n              {!isMovilViewport && \"Saldo disponible \"}\n              {saldoDisponible > 0\n                ? useFiatInput\n                  ? `${number_format(saldoDisponible)}`\n                  : `${saldoDisponible}`\n                : \"0\"}{\" \"}\n              {coin}\n            </p>\n            {coin && (\n              <img\n                src={`${getCdnPath('assets')}coins/${coin}.png`}\n                alt=\"\"\n                width=\"30\"\n              />\n            )}\n          </div>\n          {useFiatInput ? (\n            <NumberInput\n              type=\"text\"\n              autoComplete=\"off\"\n              onChange={handleChange}\n              placeholder={placeholder}\n              name={name}\n              className={`inputElement ${active ? \"inputActivado\" : \"\"}`}\n              value={value}\n              max_available={saldoDisponible}\n            />\n          ) : (\n            <input\n              className={`inputElement ${active ? \"inputActivado\" : \"\"}`}\n              type=\"number\"\n              placeholder={placeholder}\n              onChange={handleChange}\n              name={name}\n              value={value}\n              onKeyPress={name === \"account_number\" ? handleKeyPress : null}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport class InputDepositForm extends Component {\n  state = {\n    placeHolder: window.innerWidth > 768 ? \"Escribe la cantidad\" : \"Cantidad\",\n    finalValue: \"\",\n  };\n\n  componentDidMount() {\n    this.setState({\n      finalValue: this.state.placeHolder,\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    // console.log('InputDepositForm / componentWillReceiveProps -', isNaN(props.value))\n    const { value } = props;\n\n    if (value) {\n      this.setState({\n        finalValue: number_format(value),\n      });\n    } else {\n      this.setState({\n        finalValue: this.state.placeHolder,\n      });\n    }\n  }\n\n  render() {\n    const { actualizar, handleKeyPress, value, name, autoFocus } = this.props;\n    const { finalValue } = this.state;\n    const style = {\n      fontSize:\n        finalValue.length < 10\n          ? \"90px\"\n          : finalValue.length < 15\n          ? \"60px\"\n          : \"40px\",\n    };\n\n    return (\n      <div className=\"containerInputComponent with-adapt\">\n        <input\n          className={`inputElement2 signoPesos fuente2 width-adapt-child`}\n          type=\"text\"\n          style={style}\n          placeholder={`$ ${finalValue}`}\n          onChange={actualizar}\n          name={name}\n          autoFocus={autoFocus}\n          value={value ? `$ ${finalValue}` : \"\"}\n          onKeyPress={handleKeyPress}\n        />\n      </div>\n    );\n  }\n}\n\nexport const InputCountryPrefix = (props) => {\n  const {\n    toggleSection,\n    search_result,\n    open,\n    update,\n    clean_search_result,\n    autoFocus,\n  } = props;\n\n  // @Param search_result:object  => modelo que almacena la información del país (imagen, prefijo)\n  // code: \"colombia\"\n  // flag: \"https://restcountries.eu/data/col.svg\"\n  // id: 1\n  // name: \"Colombia\"\n  // prefix: \"57\"\n\n  // @Param open:boolean => Define si esta desplegado el componente o contraido\n\n  // console.log('||||InputCountryPrefix', search_result && search_result.prefix)\n\n  return (\n    <div\n      className={`PhoneamEsta ${open ? \"openS\" : \"\"}`}\n      onClick={open ? null : toggleSection}\n    >\n      <div className=\"inputPhone\">\n        {search_result && (\n          <img\n            src={`${CountryUrl}${search_result.flag}`}\n            alt=\"\"\n            className=\"PhoneamEsta_img\"\n            width={20}\n            height={20}\n          />\n        )}\n        <p className=\"fuentePrin PhoneamEsta_p\">\n          + {search_result ? search_result.prefix[0] : \"--\"}\n        </p>\n        <div\n          className={`inputComponentPhone ${open ? \"openS\" : \"\"} ${\n            search_result ? \"search_result\" : \"\"\n          }`}\n        >\n          {search_result ? (\n            <p className={`search_result_kyc ${open ? \"openS\" : \"\"}`}>\n              {search_result.name}\n              <i\n                className=\"fas fa-times cerratelo\"\n                onClick={clean_search_result}\n              ></i>\n            </p>\n          ) : (\n            <input\n              type=\"text\"\n              className=\"inputElement3\"\n              autoFocus={autoFocus}\n              placeholder=\"Escribe el país del indicativo.\"\n              onChange={update}\n              // name=\"findbar_name\"\n              name=\"country_prefix\"\n            />\n          )}\n        </div>\n      </div>\n      <i\n        className={`fas fa-chevron-down PhoneamEsta_icon ${open ? \"anim\" : \"\"}`}\n        onClick={toggleSection}\n      ></i>\n      <span className=\"linePhone\"></span>\n    </div>\n  );\n};\n\nexport const InputKycBasic = (props) => {\n  const {\n    kyc,\n    update,\n    handleSubmit,\n    state,\n    step,\n    toggleSection,\n    _onFocus,\n    search_results,\n    clean_search_result,\n  } = props;\n\n  let search_result = Array.isArray(search_results) && search_results[0];\n  \n\n  return (\n    <div\n      id=\"kycPrime\"\n      className={`containerInputComponent2 ${state.open_sect ? \"openS\" : \"\"}`}\n    >\n      {/* <div id=\"kycPrime\" className={`containerInputComponent2`}> */}\n\n      <div className=\"inputLabelsCont\">\n        <div className=\"InputCarous\" style={{ top: `-${(step - 1) * 40}px` }}>\n          {kyc.map((item) => {\n            return (\n              <p key={item.id} className=\"labelText2 fuente\">\n                {item.label}\n              </p>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className={`inputContainer3 ${state.active ? \"inputActivado\" : \"\"}`}>\n        {kyc.map((item) => {\n          const isDateInput = state.ui_type === \"date\";\n          let inputProps = {}\n          if(isDateInput){\n            console.log('|||||||||||| isDateInput ====> ', state)\n            inputProps = {\n              min:\"1940-01-01\",\n              max:\"2003-12-12\",\n              pattern:/\\d{4}-\\d{2}-\\d{2}/,\n              autoFocus:true\n            }\n          }\n          const classNames = `inputElement3 ${state.active ? \"inputActivado\" : \"\"} ${state.ui_type === \"phone\" ? \"phone\" : \"\"}`;\n          return (\n            step === item.id && (\n              <form onSubmit={handleSubmit} key={item.id} id={`${state.ui_type === \"phone\" ? \"phone\" : \"\"}`}>\n                {state.ui_type === \"phone\" && (\n                  <InputCountryPrefix\n                    open={state.open_sect}\n                    autoFocus={true}\n                    search_result={search_result}\n                    {...props}\n                  />\n                )}\n\n                {/* {isDateInput && (\n                  <MaskedInput\n                    mask={[/\\d/, /\\d/, \"/\", /\\d/, /\\d/, \"/\", /\\d/, /\\d/, /\\d/, /\\d/,]}\n                    className={classNames}\n                    placeholder={item.placeholder}\n                    guide={true}\n                    name={item.name}\n                    autoFocus={true}\n                    pipe={autoCorrectedDatePipe}\n                    onChange={(e) => {\n                      e.persist();\n                      update(e);\n                    }}\n                  />\n                )} */}\n\n                {/* cuando se confirma deposito, consulto tx security si hay scope para confirmación de deposito */}\n                {/* type biometric user id */}\n                {/* identity service  */}\n                {/* biometric data */}\n\n                {search_result && state.ui_type === \"select\" ? (\n                  <p className={`search_result_kyc openS`}>\n                    {search_result.name}\n                    <i className=\"fas fa-times cerratelo\"  onClick={clean_search_result} ></i>\n                  </p>\n                ) : (\n                  (\n                    <input\n                      key={item.id}\n                      autoFocus={true}\n                      className={classNames}\n                      type={\n                        state.ui_type === \"phone\"\n                          ? \"text\"\n                          : state.ui_type === \"select\"\n                          ? \"text\"\n                          : state.ui_type\n                      }\n                      placeholder={\n                        state.data_state[item.name]\n                          ? state.data_state[item.name]\n                          : item.placeholder\n                      }\n                      onChange={update}\n                      name={item.name}\n                      value={state.data_state[item.name]}\n                      onFocus={_onFocus}\n                      {...inputProps}\n                    />\n                  )\n                )}\n              </form>\n            )\n          );\n        })}\n\n        <div className=\"InputProgressBar\">\n          <div\n            className=\"InputProgressed\"\n            style={{ width: step < 2 ? 0 : `${(step * 100) / kyc.length}%` }}\n          ></div>\n        </div>\n\n        <div\n          className={`ctaInputKyc ${state.open_sect ? \"openPhone\" : \"\"}`}\n          onClick={state.open_sect ? toggleSection : handleSubmit}\n        >\n          <div className=\"contCtaKyc\">\n            <i className=\"fas fa-arrow-right arrowcito backInputKyc\"></i>\n            <i\n              className={` ${\n                state.ui_type === \"phone\" ? \"fas fa-mobile-alt\" : \"fas fa-check\"\n              } frontInputKyc`}\n            ></i>\n          </div>\n        </div>\n      </div>\n      <div className=\"InputContainerT\">\n        <p\n          className=\"fuente Inputmsg\"\n          style={{ color: `${state.colorMessage}` }}\n        >\n          {state.message}\n        </p>\n        <p className=\"fuente2 InputStep\">\n          {step}/{kyc.length}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport const InputCountry = (props) => {\n  const {\n    handleSubmit,\n    update_country,\n    country_match,\n    reset_data,\n    disabled,\n    active,\n    loader,\n  } = props;\n\n  const idNextButton = useKeyActionAsClick(\n    true,\n    \"id-next-subfix-button\",\n    13,\n    false,\n    \"onkeydown\"\n  );\n\n  return (\n    <div id=\"kycPrime\" className=\"containerInputComponent3\">\n      <div className=\"inputLabelsCont\">\n        <div className=\"InputCarous\">\n          <p className=\"labelText3 fuente \">\n            Elige el país desde el que operarás\n          </p>\n        </div>\n      </div>\n\n      <div className={`inputContainer3 ${active ? \"inputActivado\" : \"\"}`}>\n        {loader && (\n          <div className=\"inputCountryLoader\">\n            <SimpleLoader loader={2} />\n          </div>\n        )}\n\n        {country_match ? (\n          <div className=\"country_selected\">\n            <IconSwitch icon={country_match.value} size={25} />\n            <p className=\"fuente\">{country_match.ui_name}</p>\n            <i className=\"fas fa-times cerratelo\" onClick={reset_data}></i>\n          </div>\n        ) : (\n          <form onSubmit={handleSubmit}>\n            <input\n              className={`inputElement3 ${active ? \"inputActivado\" : \"\"}`}\n              type=\"text\"\n              placeholder=\"Ej: Colombia\"\n              onChange={update_country}\n              name=\"country\"\n              disabled={disabled}\n              // defaultValue=\"\"\n            />\n          </form>\n        )}\n\n        <div className=\"InputProgressBar countryppp\">\n          {/* <div className=\"InputProgressed\" style={{ width: step<2 ? 0 : `${(((step*100))/kyc.length)}%` }} ></div> */}\n          <div\n            className=\"InputProgressed\"\n            style={{ width: country_match ? \"100%\" : \"0\" }}\n          ></div>\n        </div>\n\n        <i\n          id={idNextButton}\n          className={`fas fa-arrow-right arrowcito2 ${\n            country_match ? \"aparecer\" : \"\"\n          }`}\n          onClick={country_match ? handleSubmit : null}\n        ></i>\n      </div>\n      <div className=\"InputContainerT\">\n        {/* <p className=\"fuente Inputmsg\" style={{ color: `${colorMessage}` }} >{message}</p> */}\n        {/* <p className=\"fuente2 InputStep\" >{step}/{kyc.length}</p> */}\n      </div>\n    </div>\n  );\n};\n\nexport default InputForm;\n","import React, { Component } from \"react\";\nimport ItemLayout from \"./itemLayout\";\nimport InputForm from \"../inputs\";\nimport { ItemSelected } from \"../buttons/buttons\";\nimport { connect } from \"react-redux\";\nimport { banks, remittance } from \"../../api/ui/api.json\";\nimport actions from \"../../../actions\";\nimport { bindActionCreators } from \"redux\";\nimport SimpleLoader from \"../loaders\";\nimport withCoinsendaServices from \"../../withCoinsendaServices\";\nimport { debounce } from \"../../../utils\";\n\nimport \"./items.css\";\n\nclass ItemSelectionContainer extends Component {\n  state = {\n    placeholder:\n      this.props.type === \"coins\" ? \"ej: Bitcoin\" : \"ej: Bancolombia\",\n    selected: this.props.selected,\n    coincidencia: \"\",\n    items: this.props.items,\n    // items: this.props.type === \"coins\" ? coins : banks\n  };\n\n  componentDidMount() {\n    const { items } = this.state;\n    if (items) {\n      return false;\n    }\n    this.load_items(this.props.type);\n  }\n\n  load_items = async (items_type) => {\n    let items;\n    if (items_type === \"coins\") {\n      items = this.props.coins\n        ? this.props.coins\n        : await this.props.coinsendaServices.fetchAllCurrencies();\n    }\n    if (items_type === \"banks\") {\n      items = banks;\n    }\n    if (items_type === \"remittance\") {\n      items = remittance;\n    }\n\n    // remittance\n    this.setState({\n      items: items,\n    });\n  };\n\n  buscarResultados = (value) => {\n    this.buscarItemStore(value);\n    let coincidencia = { name: \"\", code: \"\" };\n\n    //si tenemos una coincidencia con el valor buscado, extraemos el nombre de la coincidencia y actualizamos el estado del formulario\n    if (this.props.search.length < 2) {\n      this.state.items.filter((item) => {\n        let query = value.toLowerCase();\n        if (item.name.toLowerCase().includes(query)) {\n          this.setState({\n            selected: true,\n            coincidencia: item.name.toLowerCase(),\n          });\n          return (coincidencia = item);\n        }\n        return false;\n      });\n    }\n\n    const { current } = this.props;\n    const estado = {\n      target: {\n        name:\n          current === \"wallets\"\n            ? \"currency\"\n            : current === \"bank\"\n            ? \"bank_name\"\n            : \"deposit_service\",\n        value: coincidencia.name.toLowerCase(),\n        short_name: coincidencia.code.toLowerCase(),\n      },\n    };\n\n    this.props.actualizarEstado(estado);\n  };\n\n  actualizar = (event) => {\n    const value = event.target.value;\n    const debounceFinder = debounce(this.buscarResultados, 250);\n    debounceFinder(value);\n  };\n\n  buscarItemStore = (item_name, isEqual) => {\n    // console.log('buscarItemStore',item_name, this.props.current, this.state.items)\n    this.props.action.Search(\n      item_name,\n      this.props.current,\n      this.state.items,\n      isEqual\n    );\n    this.props.update_control_form(item_name);\n  };\n\n  seleccionarItem = (name, short_name) => {\n    this.setState({\n      coincidencia: name,\n      selected: true,\n    });\n    const { current } = this.props;\n\n    const estado = {\n      target: {\n        name:\n          current === \"wallets\"\n            ? \"currency\"\n            : current === \"bank\" || current === \"withdraw\"\n            ? \"bank_name\"\n            : \"deposit_service\",\n        value: name,\n        short_name: short_name,\n      },\n    };\n\n    this.buscarItemStore(name, true);\n    this.props.actualizarEstado(estado);\n  };\n\n  close = () => {\n    if (this.props.clearItem) {\n      this.props.clearItem();\n    }\n    this.setState({\n      selected: false,\n      placeholder:\n        this.props.type === \"coins\" ? \"ej: Bitcoin\" : \"ej: Bancolombia\",\n    });\n    return this.buscarItemStore(\"\");\n  };\n\n  render() {\n    const { search, buttonActive, itemSelect, label } = this.props;\n    const { items } = this.state;\n\n    // console.log('this.state.selected  ', this.state, search)\n    return (\n      <section className=\"ItemSelectionContainers\" id=\"itemSelect\">\n        {this.state.selected ? (\n          <ItemSelected\n            close={this.close}\n            label={label}\n            active={itemSelect || search.length}\n            value={itemSelect || (search.length && search[0].currency)}\n          >\n            {this.state.coincidencia ||\n              itemSelect ||\n              (search.length && search[0].currency)}\n          </ItemSelected>\n        ) : (\n          <InputForm\n            type=\"text\"\n            autoFocus={this.props.autoFocus}\n            label={label}\n            placeholder={this.state.placeholder}\n            name=\"currency\"\n            actualizarEstado={this.actualizar}\n            active={buttonActive}\n          />\n        )}\n\n        <div className=\"ItemSelectionContainer\">\n          {!this.state.items ? (\n            <SimpleLoader />\n          ) : (\n            <div className=\"containerItems\">\n              {\n                // si tenemos una busqueda renderize a partir de la busqueda\n                search.length > 0\n                  ? search.length < 2\n                    ? // validamos si dentro de la busqueda hay una sola coincidencia, si la hay actualizamos el estado y la autoseleccionamos\n                      search.map((item) => {\n                        return (\n                          <ItemLayout\n                            itemType={this.props.type}\n                            actualizarEstado={this.seleccionarItem}\n                            actives={true}\n                            {...item}\n                            key={item.id}\n                            format={this.props.format}\n                          />\n                        );\n                      })\n                    : //Si hay mas de 1 coincidencia, solo mostramos los items inactivos resultantes de la busqueda\n                      search.map((item) => {\n                        return (\n                          <ItemLayout\n                            actualizarEstado={this.seleccionarItem}\n                            {...item}\n                            key={item.id}\n                            format={this.props.format}\n                          />\n                        );\n                      })\n                  : // sino tenemos busqueda renderice todos los items\n                    items.map((item) => {\n                      return (\n                        <ItemLayout\n                          actualizarEstado={this.seleccionarItem}\n                          {...item}\n                          key={item.id}\n                          format={this.props.format}\n                        />\n                      );\n                      // return <ItemLayout actualizarEstado={this.handleClick} {...item} key={item.id}/>\n                    })\n              }\n            </div>\n          )}\n        </div>\n      </section>\n    );\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  // console.log('R E N D E R I Z A N D O', state, state.form.current)\n\n  const {\n    form_control_deposit,\n    form_deposit,\n    current,\n    search_coin,\n    search_bank,\n    form_wallet,\n    form_bank,\n    form_control_wallet,\n    form_control_bank,\n    search_deposit,\n  } = state.form;\n\n  const { currencies } = state.modelData;\n\n  return {\n    search:\n      current === \"wallets\"\n        ? search_coin\n        : current === \"bank\" || current === \"withdraw\"\n        ? search_bank\n        : search_deposit,\n    form:\n      current === \"wallets\"\n        ? form_wallet\n        : current === \"bank\" || current === \"withdraw\"\n        ? form_bank\n        : form_deposit,\n    buttonActive:\n      current === \"wallets\"\n        ? form_control_wallet\n        : current === \"bank\" || current === \"withdraw\"\n        ? form_control_bank\n        : form_control_deposit,\n    selected:\n      current === \"wallets\"\n        ? search_coin.length === 1\n          ? true\n          : false\n        : current === \"bank\" || current === \"withdraw\"\n        ? search_bank.length === 1\n          ? true\n          : false\n        : search_deposit.length === 1\n        ? true\n        : false,\n    current: current,\n    coins: currencies,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withCoinsendaServices(ItemSelectionContainer));\n","import React, { useEffect } from \"react\";\nimport loadable from \"@loadable/component\";\nimport { getCdnPath } from '../../../environment'\nimport \"./items.css\";\n\nconst IconSwitch = loadable(() => import(\"../icons/iconSwitch\"));\n\nfunction ItemLayout(props) {\n  const doSelectionForItem = () => {\n    const { name, code, currency_type, pair_id, actualizarEstado } = props;\n\n    actualizarEstado && actualizarEstado(name, code, currency_type, pair_id);\n  };\n\n  useEffect(() => {\n    props.actives && doSelectionForItem();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.actives]);\n\n  const {\n    type,\n    actives,\n    name,\n    code,\n    placeholder,\n    primarySelect,\n    format,\n    itemType,\n  } = props;\n\n  console.log('|||||||||||||||  ItemLayout ==> ', type)\n\n  return (\n    <div\n      id={`${primarySelect ? \"primarySelect\" : \"\"}`}\n      className={`${type === \"payment_method\" ? \"ILtuvieja\" : \"\"} `}\n    >\n      <div\n        className={`item ${actives ? \"itemSelection\" : \"\"}`}\n        onClick={!actives || itemType === \"banks\" ? doSelectionForItem : null}\n      >\n        {!format ? (\n          type === \"coins\" ||\n          type === \"payment_method\" ||\n          type === \"service_mode\" ? (\n            actives ? (\n              <div title={name} id={code}>\n                {type === \"bank\" && (\n                  <img\n                    className=\"itemSobre activaos\"\n                    src={`${getCdnPath('assets')}coins/${code}.png`}\n                    alt=\"\"\n                    width=\"60\"\n                  />\n                )}\n                <img\n                  className=\"itemSobre activaos\"\n                  src={`${getCdnPath('assets')}${type}/${code}2.png`}\n                  alt=\"\"\n                  width=\"60\"\n                />\n              </div>\n            ) : (\n              <div title={name} id={code}>\n                <img\n                  className=\"itemFuera\"\n                  src={`${getCdnPath('assets')}${type}/${code}.png`}\n                  width=\"60\"\n                  alt=\"\"\n                  id={code}\n                  title={name}\n                />\n                <img\n                  className=\"itemSobre\"\n                  src={`${getCdnPath('assets')}${type}/${code}2.png`}\n                  width=\"60\"\n                  alt=\"\"\n                  id={code}\n                  title={name}\n                />\n              </div>\n            )\n          ) : (\n            <img\n              className={`banquis ${actives ? \"itemVisible\" : \"\"}`}\n              src={`${getCdnPath('assets')}${type}/${code}.png`}\n              alt=\"\"\n              id={code}\n              title={name}\n              width=\"85\"\n            />\n          )\n        ) : (\n          <IconSwitch icon={code} size={45} />\n        )}\n        {primarySelect ? (\n          <div id=\"primarySelectText\" className=\"primarySelectText\">\n            <p title={name}>{name}</p>\n            {placeholder &&\n              placeholder.map((item) => {\n                return (\n                  <p id=\"ILplaceholder2\" className=\"fuente\" key={item.id}>\n                    {item.name}\n                  </p>\n                );\n              })}\n          </div>\n        ) : (\n          <p title={name}>{name}</p>\n        )}\n      </div>\n      {placeholder && !primarySelect && (\n        <div className=\"placeHoldCont\">\n          {placeholder.map((item) => {\n            return (\n              <p className=\"ILplaceholder fuente\" key={item.id}>\n                {item.name}\n              </p>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ItemLayout;\n"],"sourceRoot":""}