{"version":3,"sources":["components/forms/widgets/layout/styles.js","components/forms/widgets/layout/index.js","components/forms/index.js","components/forms/widgets/onBoardingComponent/init.js"],"names":["Wrapper","styled","div","show","Layout","children","background","closeControls","className","actions","useActions","closeModal","e","forceClose","target","dataset","close_modal","isAppLoading","renderModal","id","style","onClick","theme","top","right","size","FormComponent","handleDataForm","Fallback","props","state","setState","useState","useEffect","getInitialState","dataForm","wrapperComponent","component","handleState","OnBoardingComponent","setDataForm","async","_dataForm","initStages","formName","init"],"mappings":"wMAGO,MAAMA,EAAUC,IAAOC,IAAV,miBAsBEC,M,iCCzBtB,4CAqCeC,UAjCA,IAAyD,IAAxD,SAAEC,EAAF,WAAYC,EAAZ,cAAwBC,EAAxB,UAAuCC,GAAgB,EAErE,MAAMC,EAAUC,cACVC,EAAa,CAACC,EAAGC,KAAgB,IAAD,KAC/BD,IAAC,UAAIA,EAAEE,cAAN,iBAAI,EAAUC,eAAd,aAAI,EAAmBC,cAAgBH,KAC3CJ,EAAQQ,cAAa,GACrBR,EAAQS,YAAY,QAIxB,OACE,eAAC,UAAD,CACEC,GAAG,aACHC,MAAO,CAACd,cACRe,QAASV,EACT,oBAAkB,EAClBH,UAAS,UAAKA,GALhB,UAQID,GACE,cAAC,IAAD,CACIe,MAAM,OACNC,IAAK,GACLC,MAAO,GACPC,KAAM,GACNJ,QAAS,IAAMV,EAAW,MAAM,KAGvCN,O,iCChCP,oDA4BeqB,IArBO,IAA6C,IAAD,QAA3C,eAAEC,EAAF,SAAkBC,KAAaC,GAAY,EAGhE,MAAQC,EAAOC,GAAaC,qBAO5B,OALAC,qBAAU,KACRF,EAASG,YAAgBP,EAAeQ,aAEvC,QAACR,QAAD,IAACA,GAAD,UAACA,EAAgBQ,gBAAjB,aAAC,EAA0BC,mBAGxB,cAAC,UAAD,CACEC,UAAS,OAAEV,QAAF,IAAEA,GAAF,UAAEA,EAAgBQ,gBAAlB,aAAE,EAA0BC,iBACrCR,SAAUA,EACVD,eAAgBA,EAChBW,YAAa,CAACP,WAAUD,YACpBD,M,6ECvBd,oDA4CeU,UAnCaV,IAIxB,MAAQM,EAAUK,GAAgBR,qBAgBlC,OALAC,qBAAU,KATGQ,WACX,MAAMC,QAAkBC,YACtB,CACEC,SAAU,eAGdJ,EAAYE,IAIZG,KACC,IAID,cAAC,UAAD,CAAQtC,eAAa,EAArB,SAEI4B,EACE,cAAC,IAAD,CACER,eAAgB,CAACQ,WAAUK,iBAG7B","file":"static/js/42.718a8076.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { show } from '../../../widgets/animations'\n\nexport const Wrapper = styled.div`\n  grid-template-columns: 1fr;\n  display: grid;\n  height: auto;\n  min-height: 100vh;\n  width:100vw;\n  position:absolute;\n  top:0;\n  left:0;\n  z-index:99;\n  backdrop-filter: blur(2px);\n  background: linear-gradient(to bottom right, #00000099, #000000f0);\n  \n  .selectedItemTag__title p{\n    text-transform:capitalize;    \n  }\n\n  &.infoPanel{\n    grid-template-columns: auto 1fr;\n  }\n\n  &._show{\n    animation-name: ${show};\n    animation-duration: 0.5s;\n    animation-iteration-count: forwards;\n  }\n\n`\n\n// export const MainContainer = styled.div`\n//   display: grid;\n//   max-width: 500px;\n//   width: 100%;\n//   justify-self:center;\n//   align-self: center;\n// `\n","import { Wrapper } from './styles'\nimport { IconClose } from \"../../../widgets/shared-styles\";\nimport { useActions } from '../../../../hooks/useActions'\n\nconst Layout = ({ children, background, closeControls, className }) => {\n  \n  const actions = useActions();\n  const closeModal = (e, forceClose) => {\n    if ((e && e.target?.dataset?.close_modal) || forceClose) {\n      actions.isAppLoading(false);\n      actions.renderModal(null);\n    }\n  };\n\n  return(\n    <Wrapper \n      id=\"mainLayout\" \n      style={{background}}\n      onClick={closeModal}\n      data-close_modal={true}\n      className={`${className}`}\n    >\n      {\n        closeControls &&\n          <IconClose \n              theme=\"dark\" \n              top={15} \n              right={20} \n              size={20} \n              onClick={() => closeModal(null, true)}\n          />\n      }\n      {children}\n    </Wrapper>\n  )\n}\n\nexport default Layout\n","import React, { useState, useEffect } from 'react'\nimport DynamicLoadComponent from './dynamicLoadComponent'\n// import loadable from '@loadable/component'\nimport { getInitialState } from './utils'\nimport './mobile.css'\nimport './global.css'\n\nconst FormComponent = ({ handleDataForm, Fallback, ...props }) => {\n  \n  // const FormSkeleton = loadable(() => import(`./widgets/${handleDataForm.dataForm.wrapperComponent || 'personalKycComponent'}/skeleton`))\n  const [ state, setState ] = useState()\n\n  useEffect(()=>{\n    setState(getInitialState(handleDataForm.dataForm))\n    // eslint-disable-next-line \n  }, [handleDataForm?.dataForm?.wrapperComponent])\n  \n  return( \n        <DynamicLoadComponent\n          component={handleDataForm?.dataForm?.wrapperComponent}\n          Fallback={Fallback}\n          handleDataForm={handleDataForm}\n          handleState={{setState, state}}\n          {...props}\n        />\n  )\n}\n\nexport default FormComponent\n","import { useEffect, useState } from 'react'\n// import loadable from '@loadable/component'\n// import { useActions } from '../../hooks/useActions'\nimport Layout from '../layout'\n\nimport FormComponent from '../../' \nimport { initStages } from '../../utils'\n\n\nconst OnBoardingComponent = props => {\n\n    // const actions = useActions();\n\n    const [ dataForm, setDataForm ] = useState()\n    \n    const init = async() => {\n      const _dataForm = await initStages(\n        {\n          formName: 'onBoarding'\n        }\n      )\n      setDataForm(_dataForm) \n    }\n  \n    useEffect(()=> { \n      init()\n    }, []) \n   \n\n    return(\n      <Layout closeControls>\n        {\n          dataForm ?\n            <FormComponent\n              handleDataForm={{dataForm, setDataForm}}\n            />\n          :\n            <p>Cargando...</p>\n        }\n      </Layout>\n    )\n\n}\n\nexport default OnBoardingComponent"],"sourceRoot":""}