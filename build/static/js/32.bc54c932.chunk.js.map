{"version":3,"sources":["components/withKeyActions.js","components/widgets/items/itemLayout.js","components/widgets/items/ItemSelectionContainer.js","components/widgets/inputs/ui/dropdownlayout.js","components/widgets/inputs/dropdownContainer.js","components/withdrawAccounts/new/flows/bankAccountFlow.js","components/withdrawAccounts/new/withdrawAccountFormLayout.js","components/withdrawAccounts/new/withdrawAccountForm.js"],"names":["__webpack_require__","d","__webpack_exports__","withKeyActions","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_hooks_useKeyActionAsClick__WEBPACK_IMPORTED_MODULE_1__","AsComponent","props","idCancel","useKeyActionAsClick","concat","eventName","idAccept","a","createElement","Object","assign","r","_loadable_component__WEBPACK_IMPORTED_MODULE_1__","IconSwitch","loadable","Promise","resolve","then","bind","ItemLayout","doSelectionForItem","name","code","currency_type","pair_id","actualizarEstado","useEffect","actives","type","placeholder","primarySelect","format","itemType","id","className","onClick","icon","size","title","src","require","alt","width","map","item","key","ItemSelectionContainer","state","_this","selected","coincidencia","items","load_items","_callee","items_type","_home_andres_repos_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","next","coins","t0","coinsendaServices","fetchAllCurrencies","sent","banks","remittance","setState","stop","buscarResultados","value","buscarItemStore","search","length","filter","query","toLowerCase","includes","current","estado","target","short_name","actualizar","event","debounce","debounceFinder","item_name","isEqual","action","Search","update_control_form","seleccionarItem","close","clearItem","this","_this2","_this$props","buttonActive","itemSelect","label","react__WEBPACK_IMPORTED_MODULE_7___default","_buttons_buttons__WEBPACK_IMPORTED_MODULE_10__","active","currency","_inputs__WEBPACK_IMPORTED_MODULE_9__","autoFocus","_itemLayout__WEBPACK_IMPORTED_MODULE_8__","_loaders__WEBPACK_IMPORTED_MODULE_15__","Component","connect","_state$form","form","form_control_deposit","form_deposit","search_coin","search_bank","form_wallet","form_bank","form_control_wallet","form_control_bank","search_deposit","currencies","modelData","dispatch","bindActionCreators","actions","withCoinsendaServices","DropDownLayout","elements","open","react_default","abrir","style","height","element","data-value","data-ui_name","ui_name","selectItem","DropDownContainer","placeHolder","e","dataset","indexOfSelectedElement","findIndex","dropdownlayout","BankAccountFlow","cities","loader","initComponent","withdraw_providers_list","res","bank_list","serve_bank_list","id_types_object","id_type_list","account_type_object","account_type_list","regenerator_default","abrupt","doLogout","info_needed","bank_name","serveBankOrCityList","console","log","addIndexToRootObject","id_type","objectToArray","account_type","id_types","account_types","update_city","payload","body","prevProps","shortName","accountTypes","compatible_account_types","accountId","statusInput","handleKeyPress","siguiente","handleSubmit","account_number","step","final_step_create_account","_this$state","react","bank","buttons","_id","onSubmit","loaders","preventSubmit","gridTemplateRows","itemLayout","_ref3","asyncToGenerator","mark","_callee2","_context2","_x","apply","arguments","dropdownContainer","inputs","status","selectWithdrawProviders","createSelector","user","withdrawProviders","_withdrawProviders","wp","provider_type","push","MethodView","FinalTicket","all","RemittanceAccountFlow","WithdrawAccountFormLayout","select_withdraw_way","withdraw_way","ticket","finalizar","subtitle","payment_method","select_method","item_active","withdraw","bankAccountFlow","finishAction","ticket_type","WithdrawAccountForm","surname","id_number","city","email","searchMatch","UpdateFormControl","update_form","keynum","window","keyCode","which","test","String","fromCharCode","preventDefault","_callee3","_context3","crearCuenta","_callee4","_context4","isAppLoading","addNewWithdrawAccount","ReduceStep","toastMessage","fetchWithdrawAccounts","withdraw_flow","withdraw_flow_action","success_sound","ModalView","_callee5","_context5","persist","requestAnimationFrame","truncateString","maxLength","replace","slice","defineProperty","UpdateForm","_callee6","_context6","cleanSearch","IncreaseStep","CleanForm","setTimeout","history","CurrentForm","route","_this3","_this$props$eventName","withdrawAccountFormLayout","initPrevKeyActions","w_id","withRouter","isLoading","form_withdraw"],"mappings":"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","file":"static/js/32.bc54c932.chunk.js","sourcesContent":["import React from \"react\";\nimport useKeyActionAsClick from \"../hooks/useKeyActionAsClick\";\n\nexport default function withKeyActions(AsComponent) {\n  return function (props) {\n    const idCancel = useKeyActionAsClick(\n      true,\n      `cancel-button-${props.eventName}`,\n      8,\n      true,\n      props.eventName,\n      true\n    );\n    const idAccept = useKeyActionAsClick(\n      true,\n      `accept-button-${props.eventName}`,\n      13,\n      false,\n      props.eventName,\n      true\n    );\n\n    return <AsComponent idCancel={idCancel} idAccept={idAccept} {...props} />;\n  };\n}\n","import React, { useEffect } from \"react\";\nimport loadable from \"@loadable/component\";\nimport \"./items.css\";\n\nconst IconSwitch = loadable(() => import(\"../icons/iconSwitch\"));\n\nfunction ItemLayout(props) {\n  const doSelectionForItem = () => {\n    const { name, code, currency_type, pair_id, actualizarEstado } = props;\n\n    actualizarEstado && actualizarEstado(name, code, currency_type, pair_id);\n  };\n\n  useEffect(() => {\n    props.actives && doSelectionForItem();\n  }, [props.actives]);\n\n  const {\n    type,\n    actives,\n    name,\n    code,\n    placeholder,\n    primarySelect,\n    format,\n    itemType,\n  } = props;\n  return (\n    <div\n      id={`${primarySelect ? \"primarySelect\" : \"\"}`}\n      className={`${type === \"payment_method\" ? \"ILtuvieja\" : \"\"} `}\n    >\n      <div\n        className={`item ${actives ? \"itemSelection\" : \"\"}`}\n        onClick={!actives || itemType === \"banks\" ? doSelectionForItem : null}\n      >\n        {!format ? (\n          type === \"coins\" ||\n          type === \"payment_method\" ||\n          type === \"service_mode\" ? (\n            actives ? (\n              <div title={name} id={code}>\n                {type === \"bank\" && (\n                  <img\n                    className=\"itemSobre activaos\"\n                    src={require(`./assets/bank/${code}.png`)}\n                    alt=\"\"\n                    width=\"60\"\n                  />\n                )}\n                <img\n                  className=\"itemSobre activaos\"\n                  src={require(`./assets/${type}/${code}2.png`)}\n                  alt=\"\"\n                  width=\"60\"\n                />\n              </div>\n            ) : (\n              <div title={name} id={code}>\n                <img\n                  className=\"itemFuera\"\n                  src={require(`./assets/${type}/${code}.png`)}\n                  width=\"60\"\n                  alt=\"\"\n                  id={code}\n                  title={name}\n                />\n                <img\n                  className=\"itemSobre\"\n                  src={require(`./assets/${type}/${code}2.png`)}\n                  width=\"60\"\n                  alt=\"\"\n                  id={code}\n                  title={name}\n                />\n              </div>\n            )\n          ) : (\n            <img\n              className={`banquis ${actives ? \"itemVisible\" : \"\"}`}\n              src={require(`./assets/${type}/${code}.png`)}\n              alt=\"\"\n              id={code}\n              title={name}\n              width=\"85\"\n            />\n          )\n        ) : (\n          <IconSwitch icon={code} size={45} />\n        )}\n        {primarySelect ? (\n          <div id=\"primarySelectText\" className=\"primarySelectText\">\n            <p title={name}>{name}</p>\n            {placeholder &&\n              placeholder.map((item) => {\n                return (\n                  <p id=\"ILplaceholder2\" className=\"fuente\" key={item.id}>\n                    {item.name}\n                  </p>\n                );\n              })}\n          </div>\n        ) : (\n          <p title={name}>{name}</p>\n        )}\n      </div>\n      {placeholder && !primarySelect && (\n        <div className=\"placeHoldCont\">\n          {placeholder.map((item) => {\n            return (\n              <p className=\"ILplaceholder fuente\" key={item.id}>\n                {item.name}\n              </p>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ItemLayout;\n","import React, { Component } from \"react\";\nimport ItemLayout from \"./itemLayout\";\nimport InputForm from \"../inputs\";\nimport { ItemSelected } from \"../buttons/buttons\";\nimport { connect } from \"react-redux\";\nimport { banks, remittance } from \"../../api/ui/api.json\";\nimport actions from \"../../../actions\";\nimport { bindActionCreators } from \"redux\";\nimport SimpleLoader from \"../loaders\";\nimport withCoinsendaServices from \"../../withCoinsendaServices\";\nimport { debounce } from \"../../../utils\";\n\nimport \"./items.css\";\n\nclass ItemSelectionContainer extends Component {\n  state = {\n    placeholder:\n      this.props.type === \"coins\" ? \"ej: Bitcoin\" : \"ej: Bancolombia\",\n    selected: this.props.selected,\n    coincidencia: \"\",\n    items: this.props.items,\n    // items: this.props.type === \"coins\" ? coins : banks\n  };\n\n  componentDidMount() {\n    const { items } = this.state;\n    if (items) {\n      return false;\n    }\n    this.load_items(this.props.type);\n  }\n\n  load_items = async (items_type) => {\n    let items;\n    if (items_type === \"coins\") {\n      items = this.props.coins\n        ? this.props.coins\n        : await this.props.coinsendaServices.fetchAllCurrencies();\n    }\n    if (items_type === \"banks\") {\n      items = banks;\n    }\n    if (items_type === \"remittance\") {\n      items = remittance;\n    }\n\n    // remittance\n    this.setState({\n      items: items,\n    });\n  };\n\n  buscarResultados = (value) => {\n    this.buscarItemStore(value);\n    let coincidencia = { name: \"\", code: \"\" };\n\n    //si tenemos una coincidencia con el valor buscado, extraemos el nombre de la coincidencia y actualizamos el estado del formulario\n    if (this.props.search.length < 2) {\n      this.state.items.filter((item) => {\n        let query = value.toLowerCase();\n        if (item.name.toLowerCase().includes(query)) {\n          this.setState({\n            selected: true,\n            coincidencia: item.name.toLowerCase(),\n          });\n          return (coincidencia = item);\n        }\n        return false;\n      });\n    }\n\n    const { current } = this.props;\n    const estado = {\n      target: {\n        name:\n          current === \"wallets\"\n            ? \"currency\"\n            : current === \"bank\"\n            ? \"bank_name\"\n            : \"deposit_service\",\n        value: coincidencia.name.toLowerCase(),\n        short_name: coincidencia.code.toLowerCase(),\n      },\n    };\n\n    this.props.actualizarEstado(estado);\n  };\n\n  actualizar = (event) => {\n    const value = event.target.value;\n    const debounceFinder = debounce(this.buscarResultados, 250);\n    debounceFinder(value);\n  };\n\n  buscarItemStore = (item_name, isEqual) => {\n    // console.log('buscarItemStore',item_name, this.props.current, this.state.items)\n    this.props.action.Search(\n      item_name,\n      this.props.current,\n      this.state.items,\n      isEqual\n    );\n    this.props.update_control_form(item_name);\n  };\n\n  seleccionarItem = (name, short_name) => {\n    this.setState({\n      coincidencia: name,\n      selected: true,\n    });\n    const { current } = this.props;\n\n    const estado = {\n      target: {\n        name:\n          current === \"wallets\"\n            ? \"currency\"\n            : current === \"bank\" || current === \"withdraw\"\n            ? \"bank_name\"\n            : \"deposit_service\",\n        value: name,\n        short_name: short_name,\n      },\n    };\n\n    this.buscarItemStore(name, true);\n    this.props.actualizarEstado(estado);\n  };\n\n  close = () => {\n    if (this.props.clearItem) {\n      this.props.clearItem();\n    }\n    this.setState({\n      selected: false,\n      placeholder:\n        this.props.type === \"coins\" ? \"ej: Bitcoin\" : \"ej: Bancolombia\",\n    });\n    return this.buscarItemStore(\"\");\n  };\n\n  render() {\n    const { search, buttonActive, itemSelect, label } = this.props;\n    const { items } = this.state;\n\n    // console.log('this.state.selected  ', this.state, search)\n    return (\n      <section className=\"ItemSelectionContainers\" id=\"itemSelect\">\n        {this.state.selected ? (\n          <ItemSelected\n            close={this.close}\n            label={label}\n            active={itemSelect || search.length}\n            value={itemSelect || (search.length && search[0].currency)}\n          >\n            {this.state.coincidencia ||\n              itemSelect ||\n              (search.length && search[0].currency)}\n          </ItemSelected>\n        ) : (\n          <InputForm\n            type=\"text\"\n            autoFocus={this.props.autoFocus}\n            label={label}\n            placeholder={this.state.placeholder}\n            name=\"currency\"\n            actualizarEstado={this.actualizar}\n            active={buttonActive}\n          />\n        )}\n\n        <div className=\"ItemSelectionContainer\">\n          {!this.state.items ? (\n            <SimpleLoader />\n          ) : (\n            <div className=\"containerItems\">\n              {\n                // si tenemos una busqueda renderize a partir de la busqueda\n                search.length > 0\n                  ? search.length < 2\n                    ? // validamos si dentro de la busqueda hay una sola coincidencia, si la hay actualizamos el estado y la autoseleccionamos\n                      search.map((item) => {\n                        return (\n                          <ItemLayout\n                            itemType={this.props.type}\n                            actualizarEstado={this.seleccionarItem}\n                            actives={true}\n                            {...item}\n                            key={item.id}\n                            format={this.props.format}\n                          />\n                        );\n                      })\n                    : //Si hay mas de 1 coincidencia, solo mostramos los items inactivos resultantes de la busqueda\n                      search.map((item) => {\n                        return (\n                          <ItemLayout\n                            actualizarEstado={this.seleccionarItem}\n                            {...item}\n                            key={item.id}\n                            format={this.props.format}\n                          />\n                        );\n                      })\n                  : // sino tenemos busqueda renderice todos los items\n                    items.map((item) => {\n                      return (\n                        <ItemLayout\n                          actualizarEstado={this.seleccionarItem}\n                          {...item}\n                          key={item.id}\n                          format={this.props.format}\n                        />\n                      );\n                      // return <ItemLayout actualizarEstado={this.handleClick} {...item} key={item.id}/>\n                    })\n              }\n            </div>\n          )}\n        </div>\n      </section>\n    );\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  // console.log('R E N D E R I Z A N D O', state, state.form.current)\n\n  const {\n    form_control_deposit,\n    form_deposit,\n    current,\n    search_coin,\n    search_bank,\n    form_wallet,\n    form_bank,\n    form_control_wallet,\n    form_control_bank,\n    search_deposit,\n  } = state.form;\n\n  const { currencies } = state.modelData;\n\n  return {\n    search:\n      current === \"wallets\"\n        ? search_coin\n        : current === \"bank\" || current === \"withdraw\"\n        ? search_bank\n        : search_deposit,\n    form:\n      current === \"wallets\"\n        ? form_wallet\n        : current === \"bank\" || current === \"withdraw\"\n        ? form_bank\n        : form_deposit,\n    buttonActive:\n      current === \"wallets\"\n        ? form_control_wallet\n        : current === \"bank\" || current === \"withdraw\"\n        ? form_control_bank\n        : form_control_deposit,\n    selected:\n      current === \"wallets\"\n        ? search_coin.length === 1\n          ? true\n          : false\n        : current === \"bank\" || current === \"withdraw\"\n        ? search_bank.length === 1\n          ? true\n          : false\n        : search_deposit.length === 1\n        ? true\n        : false,\n    current: current,\n    coins: currencies,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withCoinsendaServices(ItemSelectionContainer));\n","import React from \"react\";\n\nconst DropDownLayout = (props) => {\n  const { elements, label, open, active, placeholder } = props;\n\n  // console.log('eeeeeeeeeeeeeeste es el    -- D R O P _ D O W N --', props)\n\n  return (\n    <div className=\"containerInputComponent\">\n      <p className=\"labelText fuente\">{label}</p>\n      <div className={`inputContainer2 ${active ? \"inputActivado\" : \"\"}`}>\n        <div\n          className={`InputDropDown ${active ? \"activeText\" : \"\"}`}\n          onClick={props.abrir}\n        >\n          {placeholder}\n          <div\n            className={`InputDesplegable ${open ? \"Idesplegado\" : \"\"}`}\n            style={{ height: open ? `${elements.length * 45}px` : \"0px\" }}\n          >\n            {elements.map((element, id) => {\n              return (\n                <p\n                  key={id}\n                  data-value={element.value}\n                  data-ui_name={element.ui_name}\n                  onClick={props.selectItem}\n                >\n                  {element.ui_name}{\" \"}\n                </p>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DropDownLayout;\n","import React, { Component } from \"react\";\nimport DropDownLayout from \"./ui/dropdownlayout\";\nimport \"./inputStyles.css\";\n\nclass DropDownContainer extends Component {\n  state = {\n    elements: this.props.elements,\n    open: false,\n    placeHolder: this.props.placeholder,\n  };\n\n  componentDidMount() {\n    if (this.props.selected && this.props.elements) {\n      const indexOfSelectedElement = this.props.elements.findIndex(\n        (element) => element.value === this.props.selected\n      );\n\n      this.setState({\n        placeHolder: this.props.elements[indexOfSelectedElement].ui_name,\n      });\n    }\n  }\n\n  abrir = (e) => {\n    this.setState({\n      open: !this.state.open,\n    });\n  };\n\n  selectItem = (event) => {\n    const estado = {\n      target: {\n        name: this.props.name,\n        value: event.target.dataset.value,\n      },\n    };\n\n    this.setState({\n      placeHolder: event.target.dataset.ui_name,\n    });\n\n    this.props.actualizarEstado(estado);\n  };\n\n  render() {\n    const { label, active } = this.props;\n    // console.log('DESDE EL CONTENEDOR DEL DROPDOWN::::', this.props)\n    return (\n      <DropDownLayout\n        elements={this.state.elements}\n        open={this.state.open}\n        abrir={this.abrir}\n        placeholder={this.state.placeHolder}\n        selectItem={this.selectItem}\n        label={label}\n        active={active}\n      />\n    );\n  }\n}\n\nexport default DropDownContainer;\n","import React, { Component, Fragment } from \"react\";\nimport { InputButton } from \"../../../widgets/buttons/buttons\";\nimport { InputForm } from \"../../../widgets/inputs\";\nimport DropDownContainer from \"../../../widgets/inputs/dropdownContainer\";\nimport { ButtonForms } from \"../../../widgets/buttons/buttons\";\nimport ItemSelectionContainer from \"../../../widgets/items/ItemSelectionContainer\";\nimport ItemLayout from \"../../../widgets/items/itemLayout\";\nimport bank from \"../../../../assets/bank.png\";\nimport SimpleLoader from \"../../../widgets/loaders\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport actions from \"../../../../actions\";\nimport {\n  serveBankOrCityList,\n  addIndexToRootObject,\n  objectToArray,\n} from \"../../../../utils\"; \nimport { doLogout } from '../../../utils'\n// import MVList from \"../../../widgets/itemSettings/modal_views/listView\";\nimport { createSelector } from \"reselect\";\nimport withKeyActions from \"../../../withKeyActions\";\n\n// const dropDawnElements = [\n//   {name:'ahorro'},\n//   {name:'corriente'},\n// ]\n//\n// const dropDawnElements2 = [\n//   {name:'ahorro', id:1},\n//   {name:'corriente', id:2},\n// ]\n\nclass BankAccountFlow extends Component {\n  state = {\n    banks: null,\n    cities: null,\n    loader: false,\n  };\n\n  componentDidMount() {\n    this.initComponent();\n    this.props.actualizarEstado({\n      target: {\n        name: \"provider_type\",\n        value: \"bank\",\n      },\n    });\n  }\n\n  initComponent = async () => {\n\n    const { withdraw_providers_list } = this.props;\n\n    this.setState({ loader: true });\n\n    let res = withdraw_providers_list;\n    // console.log('withdraw_providers_list', withdraw_providers_list)\n    if (!res || (res && !res.length)) {\n      return doLogout('?message=Vuelve a iniciar session');\n    }\n\n    let bank_list = res && res[0].info_needed.bank_name;\n    // let city_list = res && res[0].info_needed.city;\n\n\n    let serve_bank_list = await serveBankOrCityList(bank_list, \"bank\");\n    // let serve_city_list = await serveBankOrCityList(city_list, \"city\");\n    console.log('============================================================== serve_bank_list', serve_bank_list)\n    let id_types_object = await addIndexToRootObject(\n      res && res[0].info_needed.id_type\n    );\n    let id_type_list = await objectToArray(id_types_object);\n\n    let account_type_object = await addIndexToRootObject(\n      res && res[0].info_needed.account_type\n    );\n    let account_type_list = await objectToArray(account_type_object);\n    // console.log('|||||||||||||||||||||||||| °°°°°°°°°°°°°°°°°°°°°°°°°°°°°°| withdraw_providers_list |', res[0])\n    // console.log(' --- - - - - -- - - - - -  °°°°|||||°°°   : BANK LIST', serve_bank_list)\n    // console.log(' --- - - - - -- - - - - -  °°°°|||||°°°   : VIRGIN BANK', bank_list)\n\n    await this.props.actualizarEstado({\n      target: { name: \"currency\", value: res[0].currency },\n    });\n    // console.log('|||||||||||||||||||||||||||||||||||||||||||serve_bank_list', serve_bank_list)\n\n    this.setState({\n      banks: serve_bank_list,\n      // cities: serve_city_list,\n      id_types: id_type_list, //tipos de documentos disponibles para indicar con el que se abrio la cuenta de retiro\n      account_types: account_type_list, //tipos de cuentas bancarias disponibles\n      loader: false,\n    });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      if(this.props.short_name && this.props.withdraw_providers_list && this.props.withdraw_providers_list[0]){\n        const { info_needed } = this.props.withdraw_providers_list && this.props.withdraw_providers_list[0]\n        const shortName = this.props.short_name\n        const accountTypes = info_needed.bank_name[shortName] && info_needed.bank_name[shortName].compatible_account_types.map((accountId)=>{\n          return info_needed.account_type[accountId]\n        })\n        if(accountTypes){\n          this.setState({\n            account_types:accountTypes\n          })\n        }\n        // console.log('accountTypes',  accountTypes)\n        console.log('===================================0 CHANGES ',  info_needed.bank_name)\n      }\n\n    }\n  }\n\n  update_city = (payload) => {\n    // console.log('CITY SELECT',payload)\n\n    let body = {\n      target: {\n        name: \"city\",\n        value: payload.code,\n      },\n    };\n\n    this.props.actualizarEstado(body);\n  };\n\n  render() {\n    const {\n      statusInput,\n      handleKeyPress,\n      short_name,\n      siguiente,\n      update_control_form,\n      handleSubmit,\n      account_number,\n      account_type,\n      bank_name,\n      step,\n      search,\n      name,\n      actualizarEstado,\n      // city,\n      final_step_create_account,\n      // id_type,\n      // id_number,\n      // user,\n      idAccept,\n    } = this.props;\n\n    const { banks, loader } = this.state;\n\n    console.log('|||||| step::', step)\n\n    return (\n      <Fragment>\n        {step === 2 && (\n          <div className=\"nBstep1 fuente\">\n            <div className=\"titleNewAccount\">\n              <img src={bank} alt=\"\" height=\"70\" />\n              <p>\n                Genial <strong>{name}</strong>\n              </p>\n            </div>\n            <p className=\"nBtextInit fuente\">\n              {\" \"}\n              Al añadir una cuenta bancaria para realizar tus retiros de moneda local por primera vez, el tiempo promedio que tarda para inscribirse son 2 horas hábiles a partir del momento en que se realizó el proceso. Tener tu cuenta inscrita previamente puede hacer que tus retiros en moneda local se ejecuten más rápido.\n\n              {/* Al añadir una cuenta bancaria para realizar tus retiros de pesos\n              colombianos <strong>(COP)</strong> por primera vez, tarda en\n              promedio <strong>2 horas habiles</strong> a partir de su\n              inscripción, para que esta sea aprobada por la entidad bancaria,\n              una vez tu cuenta haya sido aprobada, tus retiros serán casi\n              inmediatos */}\n            </p>\n\n            <div id=\"bankChooseButton\">\n              <ButtonForms\n                _id={idAccept}\n                type=\"primary\"\n                active={true}\n                siguiente={siguiente}\n              >\n                OK, comencemos\n              </ButtonForms>\n            </div>\n          </div>\n        )}\n\n        {step === 3 && (\n          <div className=\"step1\">\n            <form onSubmit={handleSubmit} className=\"NWithdrawAccountFlow\">\n              <div className=\"titleAccountFlow\">\n                <h1 className=\"DLtitles2\">Elige la entidad bancaria</h1>\n                <p className=\"fuente DLstitles\">de la cuenta que quieres agregar:</p>\n              </div>\n              {loader ? (\n                <SimpleLoader label=\"Cargando...\" />\n              ) : (\n                <ItemSelectionContainer\n                  type=\"banks\"\n                  autoFocus={true}\n                  items={banks}\n                  format=\"svg\"\n                  itemSelect={bank_name}\n                  actualizarEstado={actualizarEstado}\n                  handleSubmit={handleSubmit}\n                  update_control_form={update_control_form}\n                />\n              )}\n\n              <div id=\"bankChooseButton\">\n                <InputButton\n                  id={idAccept}\n                  preventSubmit={true}\n                  label=\"Continuar\"\n                  type=\"primary\"\n                  active={search.length === 1 && bank_name !== \"\"}\n                />\n              </div>\n            </form>\n          </div>\n        )}\n\n        {(step === 4 || step === 5) && (\n          <div className=\"step2\">\n            <div\n              id=\"contMsg\"\n              className=\"contMsg\"\n              style={{\n                gridTemplateRows:\n                  step === 4 ? \"auto 1fr 15vh\" : step >= 5 ? \"auto 1fr\" : \"\",\n              }}\n            >\n              <div className=\"nBcontBank\">\n                <ItemLayout\n                  format=\"svg\"\n                  actives={true}\n                  type=\"bank\"\n                  code={short_name}\n                  name={bank_name}\n                />\n              </div>\n\n              {step === 4 && (\n                <form className=\"formAccountFlow\" onSubmit={async(e) => {\n                  await handleSubmit(e)\n                  final_step_create_account(e)\n                }}>\n                  <div className=\"contForminputsAccount\">\n                    <DropDownContainer\n                      placeholder=\"Tipo de cuenta\"\n                      elements={this.state.account_types}\n                      label=\"Elige el tipo de cuenta:\"\n                      actualizarEstado={actualizarEstado}\n                      name=\"account_type\"\n                      selected={account_type}\n                      active={account_type && account_number}\n                    />\n\n                    <InputForm\n                      type=\"text\"\n                      label=\"Escribe el número de cuenta\"\n                      placeholder=\"Ej. 1123321...\"\n                      name=\"account_number\"\n                      autoFocus={true}\n                      actualizarEstado={actualizarEstado}\n                      active={account_type && account_number}\n                      value={account_number}\n                      handleKeyPress={handleKeyPress}\n                      status={statusInput}\n                    />\n                  </div>\n                  <div id=\"bankChooseButton\" className=\"contbuttonAccount\">\n                    <InputButton\n                      id={idAccept}\n                      preventSubmit={true}\n                      label=\"Continuar\"\n                      type=\"primary\"\n                      active={account_type && account_number}\n                    />\n                  </div>\n                </form>\n              )}\n\n            </div>\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nconst selectWithdrawProviders = createSelector(\n  [\n    (state) => state.modelData.user.withdrawProviders,\n    (state) => state.modelData.withdrawProviders,\n  ],\n  (_withdrawProviders, withdrawProviders) => {\n    const withdraw_providers_list = [];\n    _withdrawProviders &&\n      _withdrawProviders.map((wp) => {\n        if (withdrawProviders[wp].provider_type !== \"bank\") {\n          return false;\n        }\n        return withdraw_providers_list.push(withdrawProviders[wp]);\n      });\n    return withdraw_providers_list;\n  }\n);\n\nfunction mapStateToProps(state) {\n  const { user } = state.modelData;\n\n  return {\n    withdraw_providers_list: selectWithdrawProviders(state),\n    user: user,\n    current: state.form.current,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withKeyActions(BankAccountFlow));\n","import React, { Fragment } from \"react\";\nimport loadable from \"@loadable/component\";\nimport SimpleLoader from \"../../widgets/loaders\";\nimport { payment_method } from \"../../api/ui/api.json\";\nimport BankAccountFlow from \"./flows/bankAccountFlow\";\nimport \"./newAccount.css\";\nimport \"../../wallets/newWallet/newWallet.css\";\n\nconst MethodView = loadable(() => import(\"./views/1method\"));\nconst FinalTicket = loadable(() => import(\"./views/finalTicket\"));\nconst RemittanceAccountFlow = loadable(() =>\n  import(\"./flows/remittanceAccountFlow\")\n);\n\nconst WithdrawAccountFormLayout = (props) => {\n  const {\n    siguiente,\n    step,\n    select_withdraw_way,\n    withdraw_way,\n    ticket,\n    finalizar,\n    eventName,\n  } = props;\n\n  // console.log\n\n  return (\n    <div className=\"containerFormWallet\">\n      {step === 1 && (\n        <Fragment>\n          <MethodView\n            title=\"En esta cuenta deseas\"\n            subtitle=\"efectuar los retiros por:\"\n            items={payment_method}\n            select_method={select_withdraw_way}\n            item_active={withdraw_way}\n            siguiente={siguiente}\n            withdraw={true}\n          />\n        </Fragment>\n      )}\n\n      {step >= 2 && withdraw_way === \"bankaccount\" && (\n        <BankAccountFlow eventName={eventName} {...props} />\n      )}\n\n      {step >= 2 && withdraw_way === \"cash\" && (\n        <RemittanceAccountFlow {...props} />\n      )}\n\n      {step === 6 && (\n        <Fragment>\n          {!ticket ? (\n            <SimpleLoader label={`Creando Cuenta de retiro`} />\n          ) : (\n            <FinalTicket\n              finishAction={finalizar}\n              ticket={ticket}\n              ticket_type=\"withdraw_form\"\n            />\n          )}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default WithdrawAccountFormLayout;\n","import React, { Component } from \"react\";\nimport WithdrawAccountFormLayout from \"./withdrawAccountFormLayout\";\nimport { connect } from \"react-redux\";\n// import { updateFormControl, FormWallet } from '../../../actions'\nimport { bindActionCreators } from \"redux\";\nimport actions from \"../../../actions\";\nimport { withRouter } from \"react-router\";\nimport withCoinsendaServices from \"../../withCoinsendaServices\";\nimport { createSelector } from \"reselect\";\n\nclass WithdrawAccountForm extends Component {\n  state = {\n    name: this.props.user.name,\n    surname: this.props.user.surname,\n    bank_name: this.props.form_bank.bank_name,\n    account_type: this.props.form_bank.account_type,\n    account_number: this.props.form_bank.account_number,\n    short_name: this.props.form_bank.short_name,\n    id_type: null,\n    statusInput: \"\",\n    withdraw_way: \"bankaccount\",\n    provider_type: \"\",\n    id_number: \"\",\n    city: \"medellin\",\n    email: this.props.user.email,\n    currency: null,\n    ticket: null,\n  };\n\n  update_control_form = (searchMatch) => {\n    //esta función valida si tenemos un nombre item escrito y si tenemos un item coin/bank seleccionado, si cumple con esto, nos habilita el call to action para seguir hacia la proxima acción\n    // console.log('update_control_form SE ESTA ACTUALIZANDO: ', searchMatch)\n\n    if (!searchMatch || this.props.search.length > 1) {\n      this.props.action.UpdateFormControl(\"bank\", false);\n    }\n\n    switch (this.props.step) {\n      case 3:\n        if (this.props.search.length === 1) {\n          this.props.action.UpdateFormControl(\"bank\", true);\n        }\n        break;\n\n      case 5:\n        if (\n          this.state.account_type !== \"\" &&\n          this.state.account_number !== \"\"\n        ) {\n          this.props.action.UpdateFormControl(\"bank\", true);\n        }\n        break;\n      default:\n        console.log(\"\");\n    }\n  };\n\n  // this.props.action.UpdateForm('deposit', this.state)\n\n  select_withdraw_way = async (payload, withdraw_way) => {\n    await this.setState({\n      withdraw_way: withdraw_way,\n      provider_type: withdraw_way === \"bankaccount\" ? \"bank\" : \"\",\n    });\n\n    // this.props.action.UpdateFormControl('deposit', true)\n    this.update_form();\n  };\n\n  handleKeyPress = (e) => {\n    var keynum = window.event ? window.event.keyCode : e.which;\n    // if ((keynum == 8) || (keynum == 46) || (keynum == 45) || (keynum == 44) ){\n    if (keynum < 48 || keynum > 57) {\n      this.setState({ statusInput: \"Solo se aceptan números en este campo\" });\n      return true;\n    }\n\n    this.setState({ statusInput: \"\" });\n    return /\\d/.test(String.fromCharCode(keynum));\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    this.actualizarEstado(event);\n\n    await this.siguiente();\n    // if(this.props.step === 7){\n    //   this.crearCuenta()\n    // }\n  };\n\n  final_step_create_account = async (event) => {\n    await this.handleSubmit(event);\n    // if(this.props.withdraw_flow){\n    //   return this.props.withdraw_flow_action()\n    // }\n    this.crearCuenta();\n  };\n\n  crearCuenta = async () => {\n    // simulación Endpoint Crear wallet\n    this.props.action.isAppLoading(true);\n    let res = await this.props.coinsendaServices.addNewWithdrawAccount(\n      this.state\n    );\n    if (!res) {\n      this.props.action.ReduceStep(this.props.current, 2);\n      this.props.toastMessage(\"No es posible crear la cuenta ahora.\", \"error\");\n      return this.props.action.isAppLoading(false);\n    }\n\n    await this.props.coinsendaServices.fetchWithdrawAccounts();\n\n    if (this.props.withdraw_flow) {\n      return this.props.withdraw_flow_action(res);\n    }\n\n    await this.setState({\n      ticket: res,\n    });\n\n    // setTimeout(()=>{\n    this.props.action.success_sound();\n    this.update_form();\n    this.props.action.isAppLoading(false);\n    this.props.action.ModalView(\"modalSuccess\");\n    // }, 1500)\n  };\n\n  actualizarEstado = async (event) => {\n    event.persist && event.persist();\n    if (event.target && event.target.short_name) {\n      this.setState({ short_name: event.target.short_name });\n    }\n\n    const name = event.target.name;\n    let value = event.target.value;\n    // console.log('|||||| ACTUALIZANDO ESTADO:::', name, value)\n    // console.log('|||||| ESTADO ACTUAL:::', this.state)\n\n    window.requestAnimationFrame(() => {\n      let truncateString = false;\n      let maxLength = 50;\n      if (name && name === \"id_number\") {\n        truncateString = true;\n        if (this.state.id_type === \"pasaporte\") {\n          if (value && !/^[a-zA-Z0-9]{1,20}$/g.test(value)) return;\n        } else if (this.state.id_type === \"nit\") {\n          maxLength = 11;\n          value = value.replace(/(\\d{9})(\\d{1})/, \"$1-$2\");\n        } else {\n          if (value && !/^[0-9]{1,12}$/g.test(value)) return;\n        }\n      }\n\n      if (name && name === \"account_number\") {\n        value = value.replace(/[^0-9]/g, \"\");\n        truncateString = true;\n        maxLength = 20;\n      }\n\n      if (truncateString && value.length > maxLength) {\n        value = value.slice(0, maxLength);\n      }\n\n      if (name) {\n        this.setState({ [name]: value });\n      }\n\n      // optimize, the actions below make app slow\n      this.update_control_form(value);\n      this.update_form();\n    });\n  };\n\n  update_form = () => {\n    // Acualizamos el estado del formulario en redux\n    this.props.action.UpdateForm(\"bank\", this.state);\n  };\n\n  siguiente = async () => {\n    // this.props.action.UpdateFormControl('bank',false)\n    // this.update_form(this.state)\n\n    if (this.props.step === 1) {\n      await this.cleanSearch();\n    }\n    return this.props.action.IncreaseStep(this.props.current);\n  };\n\n  finalizar = (event) => {\n    this.props.action.CleanForm(\"bank\");\n    this.props.action.CleanForm(\"withdraw\");\n    // this.props.action.toggleModal()\n  };\n\n  cleanSearch = () => {\n    this.setState({\n      bank_name: \"\",\n    });\n    this.props.action.UpdateFormControl(\"bank\", false);\n    this.props.action.cleanSearch(\"bank\");\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.props.history.push(`?form=wa_terms`);\n    }, 100);\n\n    const { withdraw_flow } = this.props;\n\n    if (withdraw_flow) {\n      return this.props.action.CurrentForm(\"withdraw\");\n    }\n\n    this.props.action.CurrentForm(\"bank\");\n  }\n\n  componentDidUpdate(prevProps) {\n    // inserto las siguientes rutas para poder hacer seguimiento al funnel desde hotjar\n    if (prevProps.step === this.props.step) {\n      return;\n    }\n    // console.log('||||||||||||||||||| STEP WITHDRAW ACCOUNT FORM ==> ', prevProps.step, this.props.step, this.props)\n\n    let route;\n\n    if (this.props.step === 2) {\n      route = `?form=wa_terms`;\n    }\n\n    if (this.props.step === 3) {\n      route = `?form=wa_choose_bank`;\n    }\n\n    if (this.props.step === 4) {\n      route = `?form=wa_enter_bank_details`;\n    }\n\n    if (this.props.step === 5) {\n      route = `?form=wa_id_type`;\n    }\n\n    if (this.props.step === 6) {\n      route = `?form=wa_opening_city`;\n    }\n\n    if (this.props.step === 7) {\n      route = `?form=wa_success`;\n    }\n    // console.log('||||||||||||||||||||||||||||||| componentDidUpdate =?=> ')\n    setTimeout(() => {\n      this.props.history.push(route);\n    }, 100);\n    // alert()\n  }\n\n  render() {\n    // console.log('R E N D E R I Z A N D O',this.props.action)\n    // console.log('ESTAMOS RENDERIZANDO EL S T A T E de BANK ::::::  ', this.state)\n    const {\n      step,\n      search,\n      withdraw_flow,\n      withdraw_flow_action,\n      eventName = \"onkeyup\",\n    } = this.props;\n\n    // console.log('R E N D E R I Z A N D O', step)\n\n    return (\n      <WithdrawAccountFormLayout\n        withdraw_flow={withdraw_flow}\n        withdraw_flow_action={withdraw_flow_action}\n        statusInput={this.state.statusInput}\n        handleKeyPress={this.handleKeyPress}\n        crearCuenta={this.crearCuenta}\n        siguiente={this.siguiente}\n        actualizarEstado={this.actualizarEstado}\n        handleSubmit={this.handleSubmit}\n        update_control_form={this.update_control_form}\n        buttonActive={this.props.buttonActive}\n        loader={this.props.loader}\n        finalizar={this.finalizar}\n        step={step}\n        select_withdraw_way={this.select_withdraw_way}\n        cleanSearch={this.cleanSearch}\n        initPrevKeyActions={this.props.initPrevKeyActions}\n        search={search}\n        final_step_create_account={this.final_step_create_account}\n        eventName={eventName}\n        {...this.state}\n      />\n    );\n  }\n}\n\nconst selectWithdrawProviders = createSelector(\n  [\n    (state) => state.modelData.user.withdrawProviders,\n    (state) => state.modelData.withdrawProviders,\n  ],\n  (_withdrawProviders, withdrawProviders) => {\n    return (\n      _withdrawProviders &&\n      _withdrawProviders.map((w_id) => {\n        return withdrawProviders[w_id];\n      })\n    );\n  }\n);\n\nfunction mapStateToProps(state, props) {\n  // console.log('R E N D E R I Z A N D O ssssssss', props)\n  const { withdraw_flow } = props;\n  const { user } = state.modelData;\n\n  return {\n    search: state.form.search_bank,\n    withdrawProviders: selectWithdrawProviders(state),\n    form_bank: state.form.form_bank,\n    buttonActive: state.form.form_control_bank,\n    loader: state.isLoading.loader,\n    current: state.form.current,\n    step: withdraw_flow\n      ? state.form.form_withdraw.step\n      : state.form.form_bank.step,\n    user: user,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withCoinsendaServices(WithdrawAccountForm))\n);\n"],"sourceRoot":""}