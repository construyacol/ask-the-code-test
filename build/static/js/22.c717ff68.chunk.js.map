{"version":3,"sources":["../node_modules/component-emitter/index.js","../node_modules/engine.io-parser/lib/browser.js","../node_modules/socket.io-client/node_modules/debug/src/browser.js","../node_modules/parseqs/index.js","../node_modules/component-inherit/index.js","../node_modules/engine.io-client/node_modules/debug/src/browser.js","../node_modules/socket.io-parser/index.js","../node_modules/engine.io-client/lib/xmlhttprequest.js","../node_modules/engine.io-client/lib/transport.js","../node_modules/parseuri/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/socket.io-parser/node_modules/isarray/index.js","../node_modules/socket.io-parser/is-buffer.js","../node_modules/socket.io-client/lib/manager.js","../node_modules/engine.io-client/lib/transports/index.js","../node_modules/engine.io-client/lib/transports/polling.js","../node_modules/has-binary2/index.js","../node_modules/yeast/index.js","../node_modules/indexof/index.js","../node_modules/socket.io-client/lib/socket.js","../node_modules/socket.io-client/lib/on.js","../node_modules/component-bind/index.js","../node_modules/socket.io-client/lib/index.js","../node_modules/socket.io-client/lib/url.js","../node_modules/socket.io-client/node_modules/debug/src/common.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/socket.io-parser/node_modules/debug/src/browser.js","../node_modules/socket.io-parser/node_modules/debug/src/debug.js","../node_modules/socket.io-parser/node_modules/ms/index.js","../node_modules/socket.io-parser/binary.js","../node_modules/engine.io-client/lib/index.js","../node_modules/engine.io-client/lib/socket.js","../node_modules/has-cors/index.js","../node_modules/engine.io-client/lib/transports/polling-xhr.js","../node_modules/engine.io-parser/lib/keys.js","../node_modules/has-binary2/node_modules/isarray/index.js","../node_modules/arraybuffer.slice/index.js","../node_modules/after/index.js","../node_modules/engine.io-parser/lib/utf8.js","../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","../node_modules/blob/index.js","../node_modules/engine.io-client/node_modules/debug/src/common.js","../node_modules/engine.io-client/lib/transports/polling-jsonp.js","../node_modules/engine.io-client/lib/transports/websocket.js","../node_modules/to-array/index.js","../node_modules/backo2/index.js"],"names":["Emitter","obj","key","prototype","mixin","module","exports","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","length","cb","callbacks","i","splice","emit","args","slice","call","len","listeners","hasListeners","base64encoder","keys","__webpack_require__","hasBinary","sliceBuffer","after","utf8","ArrayBuffer","isAndroid","navigator","test","userAgent","isPhantomJS","dontSendBlobs","protocol","packets","open","close","ping","pong","message","upgrade","noop","packetslist","err","type","data","Blob","map","ary","each","done","result","Array","next","eachWithIndex","el","error","msg","encodePacket","packet","supportsBinary","utf8encode","callback","undefined","buffer","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","encodeArrayBuffer","fr","FileReader","onload","readAsArrayBuffer","encodeBlobAsArrayBuffer","blob","encodeBlob","base64","encodeBase64Object","encoded","encode","String","strict","b64data","b64","split","readAsDataURL","fromCharCode","e","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","decode","tryDecode","Number","substring","rest","encodePayload","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","doneCallback","setLengthHeader","results","join","decodePayload","decodePayloadAsBinary","n","l","chr","encodedPackets","totalLength","reduce","acc","p","toString","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","parseInt","binaryIdentifier","size","lengthAry","bufferTail","buffers","tailArray","msgLength","total","process","log","_console","console","formatArgs","useColors","namespace","humanize","diff","c","color","index","lastC","replace","match","save","namespaces","storage","setItem","removeItem","load","r","getItem","Object","NODE_ENV","PUBLIC_URL","REACT_APP_BUILD_CONFIG","DEBUG","window","__nwjs","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","RegExp","$1","localStorage","localstorage","colors","formatters","j","v","JSON","stringify","str","hasOwnProperty","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","a","b","constructor","debug","binary","isArray","isBuf","Encoder","types","CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK","Decoder","ERROR_PACKET","encodeAsString","attachments","nsp","id","payload","tryStringify","reconstructor","BinaryReconstructor","reconPack","removeBlobs","bloblessData","deconstruction","deconstructPacket","pack","unshift","encodeAsBinary","add","buf","Error","parse","tryParse","isPayloadValid","decodeString","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","hasCORS","opts","xdomain","xscheme","enablesXDR","XMLHttpRequest","XDomainRequest","self","concat","parser","Transport","path","hostname","port","secure","query","timestampParam","timestampRequests","readyState","agent","socket","withCredentials","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","isReactNative","extraHeaders","localAddress","onError","desc","description","doOpen","doClose","onClose","send","write","onOpen","writable","onData","onPacket","re","parts","src","indexOf","m","exec","uri","source","host","authority","ipv6uri","arrayWithoutHoles","iterableToArray","nonIterableSpread","arr","Buffer","withNativeBuffer","isBuffer","withNativeArrayBuffer","isView","eio","Socket","bind","Backoff","has","Manager","nsps","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","min","max","jitter","timeout","connecting","lastPing","encoding","packetBuffer","_parser","encoder","decoder","autoConnect","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","connect","skipReconnect","openSub","onopen","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","Date","onpong","ondata","ondecoded","onerror","onConnecting","options","processPacketQueue","shift","subsLength","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","XHR","JSONP","websocket","polling","xd","xs","jsonp","location","isSSL","forceJSONP","parseqs","inherit","yeast","Polling","hasXHR2","responseType","forceBase64","name","poll","pause","onPause","doPoll","callbackfn","doWrite","schema","sid","withNativeBlob","withNativeFile","File","toJSON","prev","alphabet","seed","num","Math","floor","now","decoded","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","io","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","subEvents","ev","compress","pop","onpacket","sameNamespace","rootNamespaceError","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","url","lookup","cache","managers","parsed","forceNew","multiplex","parseuri","loc","href","_toConsumableArray","env","selectColor","hash","createDebug","abs","prevTime","_len","_key","enabled","curr","ms","coerce","format","formatter","val","extend","init","instances","delimiter","newDebug","toNamespace","regexp","default","stack","disable","names","skips","enable","instance","arr2","iter","Symbol","iterator","from","TypeError","Function","chrome","local","s","h","d","y","plural","ceil","parseFloat","isNaN","long","round","fmtShort","packetData","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","pendingBlobs","_removeBlobs","curKey","containingObject","fileReader","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","perMessageDeflate","threshold","product","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","createTransport","o","clone","EIO","transport","requestTimeout","protocols","setTransport","onDrain","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","code","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","empty","Request","method","async","create","request","req","sendXhr","pollXhr","xhr","setDisableHeaderCheck","setRequestHeader","hasXDR","onLoad","responseText","onreadystatechange","contentType","getResponseHeader","status","requestsCount","requests","onSuccess","fromError","abort","response","attachEvent","unloadHandler","terminationEvent","arraybuffer","start","end","bytes","abv","ii","count","err_cb","bail","proxy","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","value","extra","output","counter","checkScalarValue","codePoint","toUpperCase","createByte","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","version","codePoints","byteString","tmp","array","ucs2encode","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","append","getBlob","mapArrayBufferViews","chunk","copy","set","byteOffset","BlobBuilderConstructor","bb","part","BlobConstructor","global","JSONPPolling","rNewline","rEscapedNewline","glob","___eio","script","parentNode","removeChild","form","iframe","createElement","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","area","iframeId","className","position","top","left","target","setAttribute","complete","initIframe","html","action","submit","BrowserWebSocket","NodeWebSocket","WebSocket","MozWebSocket","WebSocketImpl","WS","usingBrowserWebSocket","check","headers","ws","supports","addEventListeners","onmessage","list","factor","pow","rand","random","deviation"],"mappings":"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","file":"static/js/22.c717ff68.chunk.js","sourcesContent":["/**\r\n * Expose `Emitter`.\r\n */\nif (typeof module !== 'undefined') {\n  module.exports = Emitter;\n}\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\n\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n;\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n\n  return obj;\n}\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n  return this;\n};\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.once = function (event, fn) {\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {}; // all\n\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  } // specific event\n\n\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this; // remove all handlers\n\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  } // remove specific handler\n\n\n  var cb;\n\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  return this;\n};\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\n\n\nEmitter.prototype.emit = function (event) {\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1),\n      callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\n\n\nEmitter.prototype.listeners = function (event) {\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\n\n\nEmitter.prototype.hasListeners = function (event) {\n  return !!this.listeners(event).length;\n};","/**\n * Module dependencies.\n */\nvar keys = require('./keys');\n\nvar hasBinary = require('has-binary2');\n\nvar sliceBuffer = require('arraybuffer.slice');\n\nvar after = require('after');\n\nvar utf8 = require('./utf8');\n\nvar base64encoder;\n\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = require('base64-arraybuffer');\n}\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\n\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\n\nvar dontSendBlobs = isAndroid || isPhantomJS;\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n  open: 0 // non-ws\n  ,\n  close: 1 // non-ws\n  ,\n  ping: 2,\n  pong: 3,\n  message: 4,\n  upgrade: 5,\n  noop: 6\n};\nvar packetslist = keys(packets);\n/**\n * Premade error packet.\n */\n\nvar err = {\n  type: 'error',\n  data: 'parser error'\n};\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = packet.data === undefined ? undefined : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  } // might be an object with { base64: true, data: dataAsBase64String }\n\n\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  } // Sending data as a utf-8 string\n\n\n  var encoded = packets[packet.type]; // data fragment is optional\n\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), {\n      strict: false\n    }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n/**\n * Encode packet helpers for binary types\n */\n\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n  resultBuffer[0] = packets[packet.type];\n\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i + 1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n\n  fr.onload = function () {\n    exports.encodePacket({\n      type: packet.type,\n      data: fr.result\n    }, supportsBinary, true, callback);\n  };\n\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n  return callback(blob);\n}\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\n\nexports.encodeBase64Packet = function (packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n\n    fr.onload = function () {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n\n  message += btoa(b64data);\n  return callback(message);\n};\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  } // String data\n\n\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n\n      if (data === false) {\n        return err;\n      }\n    }\n\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return {\n        type: packetslist[type],\n        data: data.substring(1)\n      };\n    } else {\n      return {\n        type: packetslist[type]\n      };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n\n  return {\n    type: packetslist[type],\n    data: rest\n  };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, {\n      strict: false\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return data;\n}\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\n\nexports.decodeBase64Packet = function (msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n\n  if (!base64encoder) {\n    return {\n      type: type,\n      data: {\n        base64: true,\n        data: msg.substr(1)\n      }\n    };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return {\n    type: type,\n    data: data\n  };\n};\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function (message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function (err, results) {\n    return callback(results.join(''));\n  });\n};\n/**\n * Async array map using after\n */\n\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function eachWithIndex(i, el, cb) {\n    each(el, function (error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '',\n      n,\n      msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || length != (n = Number(length))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    } // advance cursor\n\n\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n};\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\n\nexports.encodePayloadAsArrayBuffer = function (packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function (data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function (err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function (acc, p) {\n      var len;\n\n      if (typeof p === 'string') {\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n    var resultArray = new Uint8Array(totalLength);\n    var bufferIndex = 0;\n    encodedPackets.forEach(function (p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n\n      if (isString) {\n        var view = new Uint8Array(p.length);\n\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n\n        ab = view.buffer;\n      }\n\n      if (isString) {\n        // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else {\n        // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n\n      resultArray[bufferIndex++] = 255;\n      var view = new Uint8Array(ab);\n\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n    return callback(resultArray.buffer);\n  });\n};\n/**\n * Encode as Blob\n */\n\n\nexports.encodePayloadAsBlob = function (packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function (encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = encoded instanceof ArrayBuffer ? encoded.byteLength : encoded.size;\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function (err, results) {\n    return callback(new Blob(results));\n  });\n};\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1;; i++) {\n      if (tailArray[i] === 255) break; // 310 = char length of Number.MAX_VALUE\n\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function (buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return typeof console === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\n\n\nexports.decode = function (qs) {\n  var qry = {};\n  var pairs = qs.split('&');\n\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n\n  return qry;\n};","module.exports = function (a, b) {\n  var fn = function fn() {};\n\n  fn.prototype = b.prototype;\n  a.prototype = new fn();\n  a.prototype.constructor = a;\n};","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return typeof console === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};","/**\n * Module dependencies.\n */\nvar debug = require('debug')('socket.io-parser');\n\nvar Emitter = require('component-emitter');\n\nvar binary = require('./binary');\n\nvar isArray = require('isarray');\n\nvar isBuf = require('./is-buffer');\n/**\n * Protocol version.\n *\n * @api public\n */\n\n\nexports.protocol = 4;\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = ['CONNECT', 'DISCONNECT', 'EVENT', 'ACK', 'ERROR', 'BINARY_EVENT', 'BINARY_ACK'];\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function (obj, callback) {\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\n\nfunction encodeAsString(obj) {\n  // first is type\n  var str = '' + obj.type; // attachments if we have them\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  } // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n\n\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  } // immediately followed by the id\n\n\n  if (null != obj.id) {\n    str += obj.id;\n  } // json data\n\n\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\n\nfunction encodeAsBinary(obj, callback) {\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n    buffers.unshift(pack); // add packet info to beginning of data list\n\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n/**\n * Mix in `Emitter` with Decoder.\n */\n\n\nEmitter(Decoder.prototype);\n/**\n * Decodes an encoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function (obj) {\n  var packet;\n\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) {\n      // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet); // no attachments, labeled binary but no binary data to follow\n\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else {\n      // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  } else if (isBuf(obj) || obj.base64) {\n    // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n\n      if (packet) {\n        // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  } else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\n\nfunction decodeString(str) {\n  var i = 0; // look up type\n\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  } // look up attachments if type binary\n\n\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n\n    p.attachments = Number(buf);\n  } // look up namespace (if any)\n\n\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  } // look up id\n\n\n  var next = str.charAt(i + 1);\n\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n\n    while (++i) {\n      var c = str.charAt(i);\n\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n\n    p.id = Number(p.id);\n  } // look up json data\n\n\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\n\nDecoder.prototype.destroy = function () {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\n\nBinaryReconstructor.prototype.takeBinaryData = function (binData) {\n  this.buffers.push(binData);\n\n  if (this.buffers.length === this.reconPack.attachments) {\n    // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n\n  return null;\n};\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\n\nBinaryReconstructor.prototype.finishedReconstruction = function () {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}","// browser shim for xmlhttprequest module\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain; // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\n  var xscheme = opts.xscheme; // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n\n  var enablesXDR = opts.enablesXDR; // XMLHttpRequest can be disabled on IE\n\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {} // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n\n\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) {}\n\n  if (!xdomain) {\n    try {\n      return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) {}\n  }\n};","/**\n * Module dependencies.\n */\nvar parser = require('engine.io-parser');\n\nvar Emitter = require('component-emitter');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Transport;\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport(opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials; // SSL options for Node.js client\n\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode; // results of ReactNative environment detection\n\n  this.isReactNative = opts.isReactNative; // other options for Node.js client\n\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Transport.prototype);\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n/**\n * Opens the transport.\n *\n * @api public\n */\n\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n/**\n * Closes the transport.\n *\n * @api private\n */\n\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n/**\n * Called upon open\n *\n * @api private\n */\n\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n/**\n * Called with a decoded packet.\n */\n\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n/**\n * Called upon close.\n *\n * @api private\n */\n\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nvar parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];\n\nmodule.exports = function parseuri(str) {\n  var src = str,\n      b = str.indexOf('['),\n      e = str.indexOf(']');\n\n  if (b != -1 && e != -1) {\n    str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n  }\n\n  var m = re.exec(str || ''),\n      uri = {},\n      i = 14;\n\n  while (i--) {\n    uri[parts[i]] = m[i] || '';\n  }\n\n  if (b != -1 && e != -1) {\n    uri.source = src;\n    uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n    uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n    uri.ipv6uri = true;\n  }\n\n  return uri;\n};","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","module.exports = isBuf;\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\nvar isView = function isView(obj) {\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;\n};\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\n\nfunction isBuf(obj) {\n  return withNativeBuffer && Buffer.isBuffer(obj) || withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj));\n}","/**\n * Module dependencies.\n */\nvar eio = require('engine.io-client');\n\nvar Socket = require('./socket');\n\nvar Emitter = require('component-emitter');\n\nvar parser = require('socket.io-parser');\n\nvar on = require('./on');\n\nvar bind = require('component-bind');\n\nvar debug = require('debug')('socket.io-client:manager');\n\nvar indexOf = require('indexof');\n\nvar Backoff = require('backo2');\n/**\n * IE6+ hasOwnProperty\n */\n\n\nvar has = Object.prototype.hasOwnProperty;\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n\n  var _parser = opts.parser || parser;\n\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : nsp + '#') + this.engine.id;\n};\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Manager.prototype);\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\n\nManager.prototype.open = Manager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false; // emit `open`\n\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  }); // emit `connect_error`\n\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  }); // emit `connect_timeout`\n\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout); // set timer\n\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n    this.subs.push({\n      destroy: function destroy() {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n  return this;\n};\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\n\nManager.prototype.onopen = function () {\n  debug('open'); // clear old subs\n\n  this.cleanup(); // mark as open\n\n  this.readyState = 'open';\n  this.emit('open'); // add new subs\n\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n/**\n * Called with data.\n *\n * @api private\n */\n\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting() {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n  this.close();\n};\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else {\n    // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n  var subsLength = this.subs.length;\n\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n  this.decoder.destroy();\n};\n/**\n * Close the current socket.\n *\n * @api private\n */\n\n\nManager.prototype.close = Manager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts); // check again for the case socket closed in above events\n\n      if (self.skipReconnect) return;\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n    this.subs.push({\n      destroy: function destroy() {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};","/**\n * Module dependencies\n */\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\n\nvar XHR = require('./polling-xhr');\n\nvar JSONP = require('./polling-jsonp');\n\nvar websocket = require('./websocket');\n/**\n * Export transports.\n */\n\n\nexports.polling = polling;\nexports.websocket = websocket;\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port; // some user agents have empty `location.port`\n\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}","/**\n * Module dependencies.\n */\nvar Transport = require('../transport');\n\nvar parseqs = require('parseqs');\n\nvar parser = require('engine.io-parser');\n\nvar inherit = require('component-inherit');\n\nvar yeast = require('yeast');\n\nvar debug = require('debug')('engine.io-client:polling');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Polling;\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n\n  var xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\n\nfunction Polling(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(Polling, Transport);\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n  this.readyState = 'pausing';\n\n  function pause() {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n\n  var callback = function callback(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    } // if its a close packet, we close the ongoing requests\n\n\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    } // otherwise bypass onData and handle the message\n\n\n    self.onPacket(packet);\n  }; // decode payload\n\n\n  parser.decodePayload(data, this.socket.binaryType, callback); // if an event did not trigger closing\n\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close() {\n    debug('writing close packet');\n    self.write([{\n      type: 'close'\n    }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  var callbackfn = function callbackfn() {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = ''; // cache busting is forced\n\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // avoid port if default for schema\n\n  if (this.port && ('https' === schema && Number(this.port) !== 443 || 'http' === schema && Number(this.port) !== 80)) {\n    port = ':' + this.port;\n  } // prepend ? to query\n\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};","/* global Blob File */\n\n/*\n * Module requirements.\n */\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  if (typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj) || typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer || withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {\n    return true;\n  } // see: https://github.com/Automattic/has-binary/pull/4\n\n\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),\n    length = 64,\n    map = {},\n    seed = 0,\n    i = 0,\n    prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\n\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\n\n\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\n\n\nfunction yeast() {\n  var now = encode(+new Date());\n  if (now !== prev) return seed = 0, prev = now;\n  return now + '.' + encode(seed++);\n} //\n// Map each character to its index.\n//\n\n\nfor (; i < length; i++) {\n  map[alphabet[i]] = i;\n} //\n// Expose the `yeast`, `encode` and `decode` functions.\n//\n\n\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;","var indexOf = [].indexOf;\n\nmodule.exports = function (arr, obj) {\n  if (indexOf) return arr.indexOf(obj);\n\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n\n  return -1;\n};","/**\n * Module dependencies.\n */\nvar parser = require('socket.io-parser');\n\nvar Emitter = require('component-emitter');\n\nvar toArray = require('to-array');\n\nvar on = require('./on');\n\nvar bind = require('component-bind');\n\nvar debug = require('debug')('socket.io-client:socket');\n\nvar parseqs = require('parseqs');\n\nvar hasBin = require('has-binary2');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = Socket;\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n\n  if (this.io.autoConnect) this.open();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Socket.prototype);\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n  var io = this.io;\n  this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n};\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\n\nSocket.prototype.open = Socket.prototype.connect = function () {\n  if (this.connected) return this;\n  this.subEvents();\n  this.io.open(); // ensure open\n\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress; // event ack callback\n\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n  return this;\n};\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting'); // write connect packet if necessary\n\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({\n        type: parser.CONNECT,\n        query: query\n      });\n    } else {\n      this.packet({\n        type: parser.CONNECT\n      });\n    }\n  }\n};\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n\n  this.sendBuffer = [];\n};\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.close = Socket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({\n      type: parser.DISCONNECT\n    });\n  } // remove socket from pool\n\n\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n\n  return this;\n};\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};","/**\n * Module exports.\n */\nmodule.exports = on;\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function destroy() {\n      obj.removeListener(ev, fn);\n    }\n  };\n}","/**\n * Slice reference.\n */\nvar slice = [].slice;\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function (obj, fn) {\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function () {\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  };\n};","/**\n * Module dependencies.\n */\nvar url = require('./url');\n\nvar parser = require('socket.io-parser');\n\nvar Manager = require('./manager');\n\nvar debug = require('debug')('socket.io-client');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n\n    io = cache[id];\n  }\n\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n\n  return io.socket(parsed.path, opts);\n}\n/**\n * Protocol version.\n *\n * @api public\n */\n\n\nexports.protocol = parser.protocol;\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');","/**\n * Module dependencies.\n */\nvar parseuri = require('parseuri');\n\nvar debug = require('debug')('socket.io-client:url');\n/**\n * Module exports.\n */\n\n\nmodule.exports = url;\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc) {\n  var obj = uri; // default to window.location\n\n  loc = loc || typeof location !== 'undefined' && location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host; // relative path support\n\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    } // parse\n\n\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  } // make sure we treat `localhost:80` and `localhost` equally\n\n\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host; // define unique id\n\n  obj.id = obj.protocol + '://' + host + ':' + obj.port; // define href\n\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);\n  return obj;\n}","var _toConsumableArray = require(\"/home/andres/repos/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    var newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n    newDebug.log = this.log;\n    return newDebug;\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @return {String} namespaces\n  * @api public\n  */\n\n\n  function disable() {\n    var namespaces = [].concat(_toConsumableArray(createDebug.names.map(toNamespace)), _toConsumableArray(createDebug.skips.map(toNamespace).map(function (namespace) {\n      return '-' + namespace;\n    }))).join(',');\n    createDebug.enable('');\n    return namespaces;\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Convert regexp to namespace\n  *\n  * @param {RegExp} regxep\n  * @return {String} namespace\n  * @api private\n  */\n\n\n  function toNamespace(regexp) {\n    return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\\.\\*\\?$/, '*');\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\n\nexports.formatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return;\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.debug;\n  } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\n\nexports.enable(load());\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}","/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n/**\n * Active `debug` instances.\n */\n\nexports.instances = [];\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0,\n      i;\n\n  for (i in namespace) {\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\n\nfunction createDebug(namespace) {\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n    var self = debug; // set `diff` timestamp\n\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr; // turn the `arguments` into a proper Array\n\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    } // apply any `formatters` transformations\n\n\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n        args.splice(index, 1);\n        index--;\n      }\n\n      return match;\n    }); // apply env-specific formatting (colors, etc.)\n\n    exports.formatArgs.call(self, args);\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy; // env-specific initialization logic for debug instances\n\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n  return debug;\n}\n\nfunction destroy() {\n  var index = exports.instances.indexOf(this);\n\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  exports.names = [];\n  exports.skips = [];\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n\n    namespaces = split[i].replace(/\\*/g, '.*?');\n\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n/**\n * Disable debug output.\n *\n * @api public\n */\n\n\nfunction disable() {\n  exports.enable('');\n}\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n\n  var i, len;\n\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}","/*global Blob,File*/\n\n/**\n * Module requirements\n */\nvar isArray = require('isarray');\n\nvar isBuf = require('./is-buffer');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function (packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n\n  return {\n    packet: pack,\n    buffers: buffers\n  };\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = {\n      _placeholder: true,\n      num: buffers.length\n    };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n\n    return newData;\n  }\n\n  return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\n\nexports.reconstructPacket = function (packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\n\nexports.removeBlobs = function (data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj; // convert any blob\n\n    if (withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {\n      pendingBlobs++; // async filereader\n\n      var fileReader = new FileReader();\n\n      fileReader.onload = function () {\n        // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        } else {\n          bloblessData = this.result;\n        } // if nothing pending its callback time\n\n\n        if (! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) {\n      // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) {\n      // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n\n  _removeBlobs(bloblessData);\n\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};","module.exports = require('./socket');\n/**\n * Exports parser\n *\n * @api public\n *\n */\n\nmodule.exports.parser = require('engine.io-parser');","/**\n * Module dependencies.\n */\nvar transports = require('./transports/index');\n\nvar Emitter = require('component-emitter');\n\nvar debug = require('debug')('engine.io-client:socket');\n\nvar index = require('indexof');\n\nvar parser = require('engine.io-parser');\n\nvar parseuri = require('parseuri');\n\nvar parseqs = require('parseqs');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Socket;\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure : typeof location !== 'undefined' && 'https:' === location.protocol;\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname || (typeof location !== 'undefined' ? location.hostname : 'localhost');\n  this.port = opts.port || (typeof location !== 'undefined' && location.port ? location.port : this.secure ? 443 : 80);\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.withCredentials = false !== opts.withCredentials;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  } // SSL options for Node.js client\n\n\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode; // detect ReactNative environment\n\n  this.isReactNative = typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative'; // other options for Node.js or ReactNative client\n\n  if (typeof self === 'undefined' || this.isReactNative) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  } // set on handshake\n\n\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null; // set on heartbeat\n\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query); // append engine.io protocol identifier\n\n  query.EIO = parser.protocol; // transport name\n\n  query.transport = name; // per-transport options\n\n  var options = this.transportOptions[name] || {}; // session id if we already have one\n\n  if (this.id) query.sid = this.id;\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    withCredentials: options.withCredentials || this.withCredentials,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void 0,\n    isReactNative: this.isReactNative\n  });\n  return transport;\n};\n\nfunction clone(obj) {\n  var o = {};\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n\n  return o;\n}\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\n\n\nSocket.prototype.open = function () {\n  var transport;\n\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n\n  this.readyState = 'opening'; // Retry with the next transport if the transport is disabled (jsonp: false)\n\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  } // set up transport\n\n\n  this.transport = transport; // set up transport listeners\n\n  transport.on('drain', function () {\n    self.onDrain();\n  }).on('packet', function (packet) {\n    self.onPacket(packet);\n  }).on('error', function (e) {\n    self.onError(e);\n  }).on('close', function () {\n    self.onClose('transport close');\n  });\n};\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, {\n    probe: 1\n  });\n  var failed = false;\n  var self = this;\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen() {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n\n    if (failed) return;\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{\n      type: 'ping',\n      data: 'probe'\n    }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n          cleanup();\n          self.setTransport(transport);\n          transport.send([{\n            type: 'upgrade'\n          }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return; // Any callback called by transport should be ignored since now\n\n    failed = true;\n    cleanup();\n    transport.close();\n    transport = null;\n  } // Handle any error that happens while probing\n\n\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n    freezeTransport();\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose() {\n    onerror('transport closed');\n  } // When the socket is closed while we're probing\n\n\n  function onclose() {\n    onerror('socket closed');\n  } // When the socket is upgraded while we're probing\n\n\n  function onupgrade(to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  } // Remove all listeners on the transport and on self\n\n\n  function cleanup() {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n  transport.open();\n};\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush(); // we check for `readyState` in case an `open`\n  // listener already closed the socket\n\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n/**\n * Handles a packet.\n *\n * @api private\n */\n\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n    this.emit('packet', packet); // Socket is live - any packet counts\n\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen(); // In case open handler closes socket\n\n  if ('closed' === this.readyState) return;\n  this.setPing(); // Prolong liveness of socket on heartbeat\n\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || self.pingInterval + self.pingTimeout);\n};\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen); // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer); // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\n\nSocket.prototype.write = Socket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n/**\n * Closes the connection.\n *\n * @api private\n */\n\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close() {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose() {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade() {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n/**\n * Called upon transport error\n *\n * @api private\n */\n\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this; // clear timers\n\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer); // stop event from firing again for transport\n\n    this.transport.removeAllListeners('close'); // ensure transport won't stay open\n\n    this.transport.close(); // ignore further transport communication\n\n    this.transport.removeAllListeners(); // set ready state\n\n    this.readyState = 'closed'; // clear session id\n\n    this.id = null; // emit close event\n\n    this.emit('close', reason, desc); // clean buffers after, so users can still\n    // grab the buffers on `close` event\n\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n\n  return filteredUpgrades;\n};","/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}","/* global attachEvent */\n\n/**\n * Module requirements.\n */\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\n\nvar Polling = require('./polling');\n\nvar Emitter = require('component-emitter');\n\nvar inherit = require('component-inherit');\n\nvar debug = require('debug')('engine.io-client:polling-xhr');\n/**\n * Module exports.\n */\n\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n/**\n * Empty function\n */\n\nfunction empty() {}\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\n\nfunction XHR(opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port; // some user agents have empty `location.port`\n\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = typeof location !== 'undefined' && opts.hostname !== location.hostname || port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n/**\n * Inherits from Polling.\n */\n\n\ninherit(XHR, Polling);\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n  opts.withCredentials = this.withCredentials; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout; // other options for Node.js client\n\n  opts.extraHeaders = this.extraHeaders;\n  return new Request(opts);\n};\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({\n    method: 'POST',\n    data: data,\n    isBinary: isBinary\n  });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\n\nfunction Request(opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials;\n  this.requestTimeout = opts.requestTimeout; // SSL options for Node.js client\n\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized; // other options for Node.js client\n\n  this.extraHeaders = opts.extraHeaders;\n  this.create();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Request.prototype);\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = {\n    agent: this.agent,\n    xdomain: this.xd,\n    xscheme: this.xs,\n    enablesXDR: this.enablesXDR\n  }; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {} // ie6 check\n\n\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = this.withCredentials;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n\n            if (self.supportsBinary && contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n\n        if (4 !== xhr.readyState) return;\n\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(typeof xhr.status === 'number' ? xhr.status : 0);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (typeof document !== 'undefined') {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n/**\n * Called if we have data.\n *\n * @api private\n */\n\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n/**\n * Called upon error.\n *\n * @api private\n */\n\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n/**\n * Cleans up house.\n *\n * @api private\n */\n\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  } // xmlhttprequest\n\n\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (typeof document !== 'undefined') {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n/**\n * Called upon load.\n *\n * @api private\n */\n\n\nRequest.prototype.onLoad = function () {\n  var data;\n\n  try {\n    var contentType;\n\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n\n    if (contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n\n  if (null != data) {\n    this.onData(data);\n  }\n};\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\n\nRequest.prototype.hasXDR = function () {\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\n};\n/**\n * Aborts the request.\n *\n * @api public\n */\n\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== 'undefined') {\n  if (typeof attachEvent === 'function') {\n    attachEvent('onunload', unloadHandler);\n  } else if (typeof addEventListener === 'function') {\n    var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\nmodule.exports = Object.keys || function keys(obj) {\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n\n  return arr;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\nmodule.exports = function (arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) {\n    return arraybuffer.slice(start, end);\n  }\n\n  if (start < 0) {\n    start += bytes;\n  }\n\n  if (end < 0) {\n    end += bytes;\n  }\n\n  if (end > bytes) {\n    end = bytes;\n  }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n\n  return result.buffer;\n};","module.exports = after;\n\nfunction after(count, callback, err_cb) {\n  var bail = false;\n  err_cb = err_cb || noop;\n  proxy.count = count;\n  return count === 0 ? callback() : proxy;\n\n  function proxy(err, result) {\n    if (proxy.count <= 0) {\n      throw new Error('after called too many times');\n    }\n\n    --proxy.count; // after first error, rest are passed to err_cb\n\n    if (err) {\n      bail = true;\n      callback(err); // future error callbacks will go to error handler\n\n      callback = err_cb;\n    } else if (proxy.count === 0 && !bail) {\n      callback(null, result);\n    }\n  }\n}\n\nfunction noop() {}","/*! https://mths.be/utf8js v2.1.2 by @mathias */\nvar stringFromCharCode = String.fromCharCode; // Taken from https://mths.be/punycode\n\nfunction ucs2decode(string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  var value;\n  var extra;\n\n  while (counter < length) {\n    value = string.charCodeAt(counter++);\n\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // high surrogate, and there is a next character\n      extra = string.charCodeAt(counter++);\n\n      if ((extra & 0xFC00) == 0xDC00) {\n        // low surrogate\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // unmatched surrogate; only append this code unit, in case the next\n        // code unit is the high surrogate of a surrogate pair\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n\n  return output;\n} // Taken from https://mths.be/punycode\n\n\nfunction ucs2encode(array) {\n  var length = array.length;\n  var index = -1;\n  var value;\n  var output = '';\n\n  while (++index < length) {\n    value = array[index];\n\n    if (value > 0xFFFF) {\n      value -= 0x10000;\n      output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n      value = 0xDC00 | value & 0x3FF;\n    }\n\n    output += stringFromCharCode(value);\n  }\n\n  return output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n  if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n    if (strict) {\n      throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() + ' is not a scalar value');\n    }\n\n    return false;\n  }\n\n  return true;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction createByte(codePoint, shift) {\n  return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n  if ((codePoint & 0xFFFFFF80) == 0) {\n    // 1-byte sequence\n    return stringFromCharCode(codePoint);\n  }\n\n  var symbol = '';\n\n  if ((codePoint & 0xFFFFF800) == 0) {\n    // 2-byte sequence\n    symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);\n  } else if ((codePoint & 0xFFFF0000) == 0) {\n    // 3-byte sequence\n    if (!checkScalarValue(codePoint, strict)) {\n      codePoint = 0xFFFD;\n    }\n\n    symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);\n    symbol += createByte(codePoint, 6);\n  } else if ((codePoint & 0xFFE00000) == 0) {\n    // 4-byte sequence\n    symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);\n    symbol += createByte(codePoint, 12);\n    symbol += createByte(codePoint, 6);\n  }\n\n  symbol += stringFromCharCode(codePoint & 0x3F | 0x80);\n  return symbol;\n}\n\nfunction utf8encode(string, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  var codePoints = ucs2decode(string);\n  var length = codePoints.length;\n  var index = -1;\n  var codePoint;\n  var byteString = '';\n\n  while (++index < length) {\n    codePoint = codePoints[index];\n    byteString += encodeCodePoint(codePoint, strict);\n  }\n\n  return byteString;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction readContinuationByte() {\n  if (byteIndex >= byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  var continuationByte = byteArray[byteIndex] & 0xFF;\n  byteIndex++;\n\n  if ((continuationByte & 0xC0) == 0x80) {\n    return continuationByte & 0x3F;\n  } // If we end up here, it’s not a continuation byte\n\n\n  throw Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n  var byte1;\n  var byte2;\n  var byte3;\n  var byte4;\n  var codePoint;\n\n  if (byteIndex > byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  if (byteIndex == byteCount) {\n    return false;\n  } // Read first byte\n\n\n  byte1 = byteArray[byteIndex] & 0xFF;\n  byteIndex++; // 1-byte sequence (no continuation bytes)\n\n  if ((byte1 & 0x80) == 0) {\n    return byte1;\n  } // 2-byte sequence\n\n\n  if ((byte1 & 0xE0) == 0xC0) {\n    byte2 = readContinuationByte();\n    codePoint = (byte1 & 0x1F) << 6 | byte2;\n\n    if (codePoint >= 0x80) {\n      return codePoint;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 3-byte sequence (may include unpaired surrogates)\n\n\n  if ((byte1 & 0xF0) == 0xE0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;\n\n    if (codePoint >= 0x0800) {\n      return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 4-byte sequence\n\n\n  if ((byte1 & 0xF8) == 0xF0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    byte4 = readContinuationByte();\n    codePoint = (byte1 & 0x07) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;\n\n    if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n      return codePoint;\n    }\n  }\n\n  throw Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\n\nfunction utf8decode(byteString, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  byteArray = ucs2decode(byteString);\n  byteCount = byteArray.length;\n  byteIndex = 0;\n  var codePoints = [];\n  var tmp;\n\n  while ((tmp = decodeSymbol(strict)) !== false) {\n    codePoints.push(tmp);\n  }\n\n  return ucs2encode(codePoints);\n}\n\nmodule.exports = {\n  version: '2.1.2',\n  encode: utf8encode,\n  decode: utf8decode\n};","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function () {\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"; // Use a lookup table to find the index.\n\n  var lookup = new Uint8Array(256);\n\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n        i,\n        len = bytes.length,\n        base64 = \"\";\n\n    for (i = 0; i < len; i += 3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n      base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if (len % 3 === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode = function (base64) {\n    var bufferLength = base64.length * 0.75,\n        len = base64.length,\n        i,\n        p = 0,\n        encoded1,\n        encoded2,\n        encoded3,\n        encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i += 4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i + 1)];\n      encoded3 = lookup[base64.charCodeAt(i + 2)];\n      encoded4 = lookup[base64.charCodeAt(i + 3)];\n      bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n      bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n      bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n\n    return arraybuffer;\n  };\n})();","/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : false;\n/**\r\n * Check if Blob constructor is supported\r\n */\n\nvar blobSupported = function () {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\n\n\nvar blobSupportsArrayBufferView = blobSupported && function () {\n  try {\n    var b = new Blob([new Uint8Array([1, 2])]);\n    return b.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\r\n * Check if BlobBuilder is supported\r\n */\n\n\nvar blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\n\nfunction mapArrayBufferViews(ary) {\n  return ary.map(function (chunk) {\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer; // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      return buf;\n    }\n\n    return chunk;\n  });\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary).forEach(function (part) {\n    bb.append(part);\n  });\n  return options.type ? bb.getBlob(options.type) : bb.getBlob();\n}\n\n;\n\nfunction BlobConstructor(ary, options) {\n  return new Blob(mapArrayBufferViews(ary), options || {});\n}\n\n;\n\nif (typeof Blob !== 'undefined') {\n  BlobBuilderConstructor.prototype = Blob.prototype;\n  BlobConstructor.prototype = Blob.prototype;\n}\n\nmodule.exports = function () {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n}();","var _toConsumableArray = require(\"/home/andres/repos/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    var newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n    newDebug.log = this.log;\n    return newDebug;\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @return {String} namespaces\n  * @api public\n  */\n\n\n  function disable() {\n    var namespaces = [].concat(_toConsumableArray(createDebug.names.map(toNamespace)), _toConsumableArray(createDebug.skips.map(toNamespace).map(function (namespace) {\n      return '-' + namespace;\n    }))).join(',');\n    createDebug.enable('');\n    return namespaces;\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Convert regexp to namespace\n  *\n  * @param {RegExp} regxep\n  * @return {String} namespace\n  * @api private\n  */\n\n\n  function toNamespace(regexp) {\n    return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\\.\\*\\?$/, '*');\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;","/**\n * Module requirements.\n */\nvar Polling = require('./polling');\n\nvar inherit = require('component-inherit');\n/**\n * Module exports.\n */\n\n\nmodule.exports = JSONPPolling;\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n/**\n * Noop.\n */\n\nfunction empty() {}\n/**\n * Until https://github.com/tc39/proposal-global is shipped.\n */\n\n\nfunction glob() {\n  return typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};\n}\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\n\nfunction JSONPPolling(opts) {\n  Polling.call(this, opts);\n  this.query = this.query || {}; // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    var global = glob();\n    callbacks = global.___eio = global.___eio || [];\n  } // callback identifier\n\n\n  this.index = callbacks.length; // add callback to jsonp global\n\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  }); // append to query string\n\n  this.query.j = this.index; // prevent spurious errors from being emitted when the window is unloaded\n\n  if (typeof addEventListener === 'function') {\n    addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n/**\n * Inherits from Polling.\n */\n\n\ninherit(JSONPPolling, Polling);\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n\n  this.script = script;\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete() {\n    initIframe();\n    fn();\n  }\n\n  function initIframe() {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe(); // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};","/**\n * Module dependencies.\n */\nvar Transport = require('../transport');\n\nvar parser = require('engine.io-parser');\n\nvar parseqs = require('parseqs');\n\nvar inherit = require('component-inherit');\n\nvar yeast = require('yeast');\n\nvar debug = require('debug')('engine.io-client:websocket');\n\nvar BrowserWebSocket, NodeWebSocket;\n\nif (typeof WebSocket !== 'undefined') {\n  BrowserWebSocket = WebSocket;\n} else if (typeof self !== 'undefined') {\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n}\n\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) {}\n}\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\n\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n\n  if (!this.usingBrowserWebSocket) {\n    WebSocketImpl = NodeWebSocket;\n  }\n\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(WS, Transport);\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  }; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket && !this.isReactNative ? protocols ? new WebSocketImpl(uri, protocols) : new WebSocketImpl(uri) : new WebSocketImpl(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false; // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n\n  var total = packets.length;\n\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        } // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n\n\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done() {\n    self.emit('flush'); // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n/**\n * Called upon close\n *\n * @api private\n */\n\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n/**\n * Closes socket.\n *\n * @api private\n */\n\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = ''; // avoid port if default for schema\n\n  if (this.port && ('wss' === schema && Number(this.port) !== 443 || 'ws' === schema && Number(this.port) !== 80)) {\n    port = ':' + this.port;\n  } // append timestamp to URI\n\n\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  } // communicate binary support capabilities\n\n\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // prepend ? to query\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\n\nWS.prototype.check = function () {\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\n};","module.exports = toArray;\n\nfunction toArray(list, index) {\n  var array = [];\n  index = index || 0;\n\n  for (var i = index || 0; i < list.length; i++) {\n    array[i - index] = list[i];\n  }\n\n  return array;\n}","/**\n * Expose `Backoff`.\n */\nmodule.exports = Backoff;\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\n\nBackoff.prototype.duration = function () {\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\n  if (this.jitter) {\n    var rand = Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n  }\n\n  return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\n\nBackoff.prototype.reset = function () {\n  this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMin = function (min) {\n  this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMax = function (max) {\n  this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\n\n\nBackoff.prototype.setJitter = function (jitter) {\n  this.jitter = jitter;\n};"],"sourceRoot":""}