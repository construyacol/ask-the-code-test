{"version":3,"sources":["actions/action_types.js","const/const.js","utils/index.js","schemas/index.js","actions/loader.js","actions/uiActions.js","components/utils.js","serviceWorker.js","components/widgets/loaders/loader-application-tiny.js","reducers/model-data.js","reducers/form.js","reducers/is-loading.js","reducers/ui.js","reducers/auth.js","reducers/storage.js","reducers/index.js","sounds/success.mp3","sounds/success2.mp3","sounds/exit.mp3","sounds/good.mp3","sounds/toast.mp3","sounds/rejected.mp3","sounds/canceled.mp3","sounds/coin.mp3","sounds/index.js","sounds/notification.mp3","store.js","index.js","actions/formActions.js","actions/soundActions.js","actions/API/WebService.js","services/CoinsendaDepositService.js","services/MainService.js","services/CoinsendaTransactionService.js","services/CoinsendaReferralService.js","services/CoinsendaWithdrawService.js","services/CoisendaIndetityService.js","services/CoinsendaSwapService.js","services/CoinsendaAccountService.js","services/CoinsendaFreshChatService.js","services/pushNotifications.js","actions/dataModelActions.js","actions/storage.js","environment/index.js","actions/auth.js","utils/convert_currency.js","utils/sleep.js","actions/APIactions.js","actions/index.js"],"names":["SEARCH_ITEM","UPDATE_FORM_CONTROL","UPDATE_FORM","LOADER","MODAL_VIEW","TOGGLE_MODAL","CLEAN_FORM","CURRENT_FORM","REDUCE_STEP","INCREASE_STEP","TO_STEP","FIAT_DEPOSIT","UPDATE_KYC_PICTURE","ALL_PAIRS","LOCAL_PAIRS","CURRENT_PAIR","LOCAL_CURRENCY","USER_PAIRS","ITEM_QUOTE_ACTIVE","UPDATE_NORMALIZED_STATE","SET_SESSION_RESTORE","UPDATE_ALL_CURRENCIES","MODAL_CONFIRMATION_TOGGLE","CONFIRMATION_MODAL_PAYLOAD","SECTION_VIEW_TO","CURRENT_SECTION_PARAMS","RESET_DATA","PAIRS_FOR_ACCOUNT","OTHER_MODAL","UPDATE_SWAP_PENDING","CURRENT_SECTION_CLEAN","CLEAN_SEARCH","FLOW_ANIMATION_LAYOUT","FLOW_ANIMATION_OFF","ADD_NOTIFICATION","CLEAN_NOTIFICATIONS","REDUCE_BALANCE","ADD_BALANCE","IS_APP_LOADED","APP_LOAD_LABEL","LOGGED_IN","UPDATE_ACTIVITY","UPDATE_PENDING_ACTIVITY","PLAY_VIDEO","VERIFICATION_STATE","DEFAULT_VIDEO_STATE","ALL_PAIRS_LANDING","CLEAN_ITEM_NOTIFICATIONS","SOCKET_NOTIFY","UPDATE_ITEM_STATE","SET_RENDER_MODAL","SET_AUTH_DATA","UPDATE_LOADERS","AccountApiUrl","ApiUrl","WithdrawApiUrl","DepositApiUrl","SwapApiUrl","IdentityApIUrl","CountryUrl","Oauth","BASE_URL","Enviroment","IMAGE_MIME_TYPES","loadLabels","IMPORTANDO_PARES","OBTENIENDO_TUS_BILLETERAS_Y_BALANCES","OBTENIENDO_REGISTRO_DE_INTERCAMBIOS","OBTENIENDO_CUENTAS_DE_RETIRO","OBTENIENDO_PROVEEDORES_DE_RETIRO","OBTENIENDO_TUS_REGISTROS_DE_RETIROS","OBTENIENDO_TODAS_LAS_DIVISAS","CARGANDO_TU_INFORMACION","OBTENIENDO_PROVEEDORES_DE_DEPOSITO","REFRESH_TOKEN_EXP_TIME","DESTROY_SESSION_URL","url","GET_JWT_URL","GET_PUBLIC_KEY_URL","ACCOUNT_URL","CREATE_WALLET_URL","DELETE_WALLET_URL","LOCAL_CURRENCIES_URL","CURRENCIES_URL","ADD_RESTORE_ID_URL","GET_PROFILE_URL","ADD_PROFILE_URL","TWO_FACTOR_URL","TWO_FACTOR_BASE_URL","DELETE_WITHDRAW_ACCOUNT_URL","GET_WITHDRAW_BY_USER_URL","GET_WITHDRAWS_BY_ACCOUNT_ID","WITHDRAW_PROVIDERS_URL","UPDATE_WITHDRAW_URL","NEW_WITHDRAW_URL","NEW_WITHDRAW_ACCOUNT_URL","DEPOSITS_URL","GET_DEPOSIT_BY_USERS_URL","UPDATE_DEPOSIT_URL","NEW_DEPOSIT_URL","SUBSCRIBE_TO_DEPOSITS_URL","SWAP_URL","PAIRS_URL","ADD_NEW_SWAP","GET_SWAPS_BY_USERS_URL","INDETITY_URL","INDENTITY_USERS_URL","INDETITY_COUNTRY_VALIDATORS_URL","INDETITY_UPDATE_PROFILE_URL","REFERRALS_URL","GET_REFERRAL_URL","GET_CHART_DATA_URL","GET_URLS","withdraws","swaps","deposits","history","createBrowserHistory","COINSENDA_URL","currencyFormatByCoin","bitcoin","BigNumber","clone","ROUNDING_MODE","ROUND_HALF_UP","DECIMAL_PLACES","bitcoin_testnet","usd","ethereum","cop","bitcoin_fee","ROUND_UP","bitcoin_testnet_fee","usd_fee","ethereum_fee","cop_fee","size","device","mobileS","mobileM","mobileL","tablet","tabletL","laptop","laptopL","desktop","desktopL","orderStateColors","accepted","canceled","rejected","confirmed","chartOptions","lang","months","weekdays","shortMonths","rangeSelectorFrom","rangeSelectorTo","loading","ACCEPT_FILE_TYPE","ACCEPT_FILE_TYPE_ADVANCE_KYC","CDN_PATH_ASSETS","highstock","three","vanta","d3","assets","normalizeUser","normalizr_services","SentryCaptureException","error","Sentry","setAnimation","className","containerId","time","element","document","getElementById","classList","add","Promise","resolve","reject","setTimeout","remove","simulate_click","el","etype","fireEvent","evObj","createEvent","initEvent","dispatchEvent","img_compressor","file","quality","async","type","includes","console","log","get_img_quality","Compressor","success","mensaje","msg","position","toast","POSITION","pauseOnFocusLoss","draggablePercent","bodyClassName","progressClassName","autoClose","copy","payload","aux","createElement","setAttribute","target","dataset","body","appendChild","select","execCommand","removeChild","capitalizarPalabras","val","toLowerCase","trim","split","map","v","toUpperCase","substr","join","capitalizeString","string","replace","m","caracterPrevio","minuscInicial","mayuscInicial","mayuscIntermedias","locale","toLocaleLowerCase","toLocaleUpperCase","ticketModalView","state","normalized_list","activity_list","activity_type","dispatch","getState","user","modelData","list","arrayToObject","user_update","id","normalizedUser","updateNormalizedDataAction","deepEqual","object1","object2","keys1","Object","keys","keys2","length","key","val1","val2","areObjects","isObject","object","desNormalizedList","normalizedList","indices","new_list","matchNormalizeWallet","itemReview","result","forEach","wallet_id","currency","push","array_list","new_object","item","getProps","obj","path","arr","parent","name","slice","fieldName","convertToObjectWithCustomIndex","matriz","customIndex","INDEX","MATRIZ","OBJECT_RESULT","values","Array","isArray","objectToArray","object_list","assign_id","index","indice","addIndexToRootObject","index_id","value","serveBankOrCityList","new_item","code","ui_name","selection","converToInitState","new_state","index_state","extractSelectList","kyc_array","kyc_object","ui_type","_this_array","indx","FormatCountryList","original_list","to_model_convert_list","res","matchItem","primary","serveKycData","kyc_basic","kyc","store","kyc_model","person_type","label","placeholder","withdrawProvidersByType","withdrawProviders","providers_served","provider","provider_type","all_results","filter","query","primary_currency","sell_pair","buy_pair","first","second","handleKeyPress","e","current","keynum","window","event","keyCode","which","test","String","fromCharCode","number_format","amount","amount_parts","parseFloat","toFixed","regexp","formatNumber","number","dotsCount","match","commasCount","dotIndex","search","commaIndex","commaFirst","Number","isNaN","integer","decimals","thousandsSeparator","decimalPoint","readFile","reader","FileReader","addEventListener","readAsDataURL","serve_activity_list","get_list","data_user","current_wallet","wallets","serve_orders","account_id","new_array","account_from","account_to","get_ui_name_currency","short_currency_name","setInputFilter","textbox","inputFilter","this","oldValue","oldSelectionStart","selectionStart","oldSelectionEnd","selectionEnd","hasOwnProperty","setSelectionRange","debounce","func","wait","timeout","context","args","arguments","later","apply","clearTimeout","includesAnyImageMime","allowed_img_mimes","image_buffer","Buffer","from","image_info","imageType","find","allowed_img_mime","mime","do_normalization","data_source","data_to_normalize","normalize","balance","schema","Entity","deposit","withdraw","withdraw_account","withdraw_provider","pair","swap","deposit_prov","wallet","dep_prov","processStrategy","userId","deposit_providers","withdraw_accounts","available_pairs","balances","normalize_data","data","all_pairs","all_pair","normalizeData","isAppLoading","isAppLoaded","appLoadLabelAction","renderModal","socket_notify","item_type","title","payload_array","verificationStateAction","play_video","default_video_state","addNotification","extra","meta","sound","play","CleanNotifications","cleanNotificationItem","item_clean","FlowAnimationOff","FlowAnimationUi","toggleOtherModal","pairsForAccount","current_section_params","cleanCurrentSection","section_view_to","ItemQuoteActive","confirmationModalToggle","confirmationModalPayload","updateLoadersAction","_keyEncoder","KeyEncoder","saveUserToken","userToken","refreshToken","decodeJwt","verifyUserToken","jwtExpTime","exp","iat","localForage","setItem","Date","err","handleError","getToken","getItem","jwt","decode","verifyTokensValidity","setInterval","getUserToken","validateExpTime","decodedToken","source","doLogout","publicKey","getPublicKey","JWToken","_jwToken","pemPublicKey","encodePublic","verify","getExpTimeData","createdAt","registerDate","getTime","currentTime","mainService","getJWToken","Error","response","GetWithOutHeaders","removeItem","location","href","queryString","callback","message","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","Coinsenda","loadable","fallback","style","height","width","display","LoaderAplicationTiny","color","initialState","pairs","local_collections","all_collections","user_collection","lastUpdate","currentPair","localCurrency","currencies","authData","user_id","models","action","lastAction","actionAmount","available","total","entities","arreglo","prop","form_kyc_basic","step","form_kyc_financial","form_kyc_advanced","newback","newfront","newselfie","base64","form_deposit","type_currency","short_bank_name","deposit_way","deposit_service","service_mode","cost_id","form_withdraw","form_bank","bank_name","surname","owner_id","account_name","account_type","account_number","withdraw_way","form_wallet","address","form_ticket","form_control_bank","form_control_wallet","form_control_deposit","isModalVisible","modalView","search_deposit","search_bank","search_coin","globalStep","forms","query_prop","loader","names","lastnames","birthDate","phone","city","activity","form","items","isEqual","tipos","appLoadLabel","isLoading","loaders","mainList","modal","render","menu_item_active","item_quote","buy","sale","modal_confirmation","visible","description","txtPrimary","txtSecondary","current_section","view","params","enabled_create_wallet_button","show_menu_principal","short_name","settings","current_sub_section","deposit_direct_access","swap_socket_channel","swap_done_id","swap_done_out","swap_done_in","new_order_style","currentFilter","active_trade_operation","otherModal","flowAnimationLayout","notifications","order_id","security","videos","kyc_advanced","verification_state","ui","flowAnimationActive","update_list","ex","sell","loggedIn","auth","activity_for_account","storage","activity_label","new_payload","expandidoMax","lastPending","pending","rootReducer","combineReducers","soundData","notification","new_transaction","src","volume","confirm_transaction","confirm","ticket","ticket_rejected","ticket_canceled","exit","good_action","add_coin","loadedSoundsMiddleware","soundsMiddleware","LazyRoot","preloadedState","__PRELOADED_STATE__","createStore","reducer","applyMiddleware","logger","thunk","snapSaveState","subscribe","setGlobalState","_createStore","rootElement","App","URL","process","origin","fetch","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","CSS","registerProperty","syntax","inherits","initialValue","ToStep","explicitStep","IncreaseStep","FiatDeposit","ReduceStep","cleanSearch","CurrentForm","CleanForm","toggleModal","ModalView","Search","UpdateFormControl","UpdatePicKyc","UpdateForm","show_sound","confirm_sound","success_sound","exit_sound","toast_sound","add_coin_sound","WebService","finalResponse","json","ok","_","method","tokenData","auth_client_id","client_id","Authorization","refresh_token","userData","userEmail","email","usr","setAuthData","doFetch","isEmpty","lenght","destroy_all","Post","withAuth","Accept","JSON","stringify","Delete","update_item_state","actions","inheritances","baseClass","mixins","base","constructor","super","mixin","prototype","initializer","call","copyProps","getOwnPropertyNames","concat","getOwnPropertySymbols","defineProperty","getOwnPropertyDescriptor","aggregation","Get","new_currencies","updateAllCurrenciesAction","coins","reduce","node_url","currency_type","symbol","is_token","min_amount","deposit_min_amount","transaction_security_id","scopes","country","twofa_token","enabled","token","security_center","txSecurityId","restore_id","secondaryShortName","primaryShortName","countryCurrency","localCurrencyId","currency_id","localCurrencyData","ref_code","new_ref_code","finalUrl","updatedUser","referral","updateUser","verification_level","referralData","referred_by","referreds","globalState","userWithOutWA","toNormalize","resetModelData","providersServed","withdrawAccounts","account","info_needed","info","provider_name","used_counter","id_number","inscribed","provider_max_amount","max_amount","provider_min_amount","account_address","reverse","isCached","accountId","withdraw_account_id","twoFaToken","id_type","limit","skip","url_withdraw","processListWithdraw","withdraws_remodeled","sent","proof","new_withdraw","parseActivty","updateActivityState","withdraw_id","statusUrl","_status","getStatus","setIsAppLoading","countries","international","userUpdate","verification_error","errors","levels","advanced","identity","basic","personal","financial","userCountry","profile","finalUrlFirst","finalUrlSecond","secondResponse","country_object","userDefaultState","transactionSecurity","userHasTransactionSecurity","authenticator","identityConfirmed","identityAccepted","identityRejected","kyc_personal","kyc_identity","kyc_financial","finalUrlThird","thirdResponse","operation_country","_userUpdate","level_1","natural","countriesAsArray","country_list","updateLevelProfile","info_type","getCountryList","Environment","CountryApIUrl","level","updateState","depositAccount","finalData","normalizedData","costId","depositService","serviceMode","depositProviderId","deposit_provider_id","comment","base64image","deposit_id","proof_of_payment","Raddress","dep_prov_id","createDepositProvider","fetchDepositProviders","update_wallet","deposit_provider","provider_id","processDepositList","type_order","getAllPairsAction","dataNormalized","pairsRequest","requestCompleteUrl","getLocalCurrency","localCurrencies","addSymbolToLocalCollections","loadLocalPairsAction","searchCurrentPairAction","loadLocalCurrencyAction","want_to_spend","to_spend_currency","pair_id","_convertCurrencies","secondary","all","currentWallet","_getPairs","convertCurrencies","current_pair","pairId","toString","completeSwap","updateList","newSwap","updatedSwaps","swapsAsArray","swapResult","onlyBalances","lastActionDetail","accountUrl","availableWallets","userWithOutW","balanceList","newWallet","reserved","updatedOnlyBalances","userWallets","accounts","initialAccounts","createAccountAndInsertDepositProvider","newAccount","createWallet","getWalletsByUser","createAndInsertDepositProvider","walletId","depositProvders","depositProviderDetails","providerId","depositProviderUrl","depositProvider","deleteAccount","activityList","fallbackActivityType","currentAccount","activityType","pendingData","filterActivitiesByStatus","finalResult","pending_activity","activities","update_activity","updatePendingActivity","fcWidget","init","host","externalId","restoreId","resp","setProperties","firstName","lastName","on","addRestoreId","isLoaded","tryLoad","intervalLoad","clearInterval","tags","filterType","setFaqTags","track","alert","Notification","permission","requestPermission","getRegistration","showNotification","MainService","initialize","instance","newValue","userSource","sleep","verificationStatus","getVerificationState","createInitialEnvironmentAccount","postLoader","restoreBalancesAndWallets","fetchAllPairs","fetchAllCurrencies","getPairsByCountry","fetchWithdrawProviders","fetchWithdrawAccounts","getReferralCode","updateUserStatus","orderId","orderType","apiUrl","order","getUserVerificationStatus","levelRequest","typeList","newOrder","new_order","newData","getInstance","set_session_restore","manageBalanceAction","all_pairs_landing","UpdatePendingSwap","UserPairs","getCdnPath","nodeList","SocketUrl","REACT_APP_LOCAL_CONFIG","isLoggedInAction","formatToCurrency","n","short_currency","delete_surplus_decimals","contract_data","token_name","div","extractCurrencies","currencies_instances","currency_instance","currency_data","amount_spend","objetive_pair_instance","primary_objetive_currency","objetive_data","assign","secondary_currency","multipliedBy","sell_price","buy_price","toFormat","FlowAnimationLayoutAction","animation","add_new_transaction_animation","formActions","APIactions","dataModelActions","ui_actions","sounds"],"mappings":"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","file":"static/js/main.1e763c24.chunk.js","sourcesContent":["export const SEARCH_ITEM = \"SEARCH_ITEM\";\nexport const UPDATE_FORM_CONTROL = \"UPDATE_FORM_CONTROL\";\nexport const UPDATE_FORM = \"UPDATE_FORM\";\nexport const LOADER = \"LOADER\";\nexport const MODAL_VIEW = \"MODAL_VIEW\";\nexport const TOGGLE_MODAL = \"TOGGLE_MODAL\";\nexport const CLEAN_FORM = \"CLEAN_FORM\";\nexport const CURRENT_FORM = \"CURRENT_FORM\";\nexport const REDUCE_STEP = \"REDUCE_STEP\";\nexport const INCREASE_STEP = \"INCREASE_STEP\";\nexport const TO_STEP = \"TO_STEP\";\nexport const FIAT_DEPOSIT = \"FIAT_DEPOSIT\";\nexport const UPDATE_KYC_PICTURE = \"UPDATE_KYC_PICTURE\";\nexport const ALL_PAIRS = \"ALL_PAIRS\";\nexport const LOCAL_PAIRS = \"LOCAL_PAIRS\";\nexport const CURRENT_PAIR = \"CURRENT_PAIR\";\nexport const LOCAL_CURRENCY = \"LOCAL_CURRENCY\";\nexport const USER_PAIRS = \"USER_PAIRS\";\nexport const ITEM_QUOTE_ACTIVE = \"ITEM_QUOTE_ACTIVE\";\nexport const UPDATE_NORMALIZED_STATE = \"UPDATE_NORMALIZED_STATE\";\nexport const SET_SESSION_RESTORE = \"SET_SESSION_RESTORE\";\nexport const UPDATE_ALL_CURRENCIES = \"UPDATE_ALL_CURRENCIES\";\nexport const MODAL_CONFIRMATION_TOGGLE = \"MODAL_CONFIRMATION_TOGGLE\";\nexport const CONFIRMATION_MODAL_PAYLOAD = \"CONFIRMATION_MODAL_PAYLOAD\";\nexport const UPDATE_HISTORY_ROUTER = \"UPDATE_HISTORY_ROUTER\";\nexport const SECTION_VIEW_TO = \"SECTION_VIEW_TO\";\nexport const CURRENT_SECTION_PARAMS = \"CURRENT_SECTION_PARAMS\";\nexport const RESET_DATA = \"RESET_DATA\";\nexport const PAIRS_FOR_ACCOUNT = \"PAIRS_FOR_ACCOUNT\";\nexport const OTHER_MODAL = \"OTHER_MODAL\";\nexport const UPDATE_SWAP_PENDING = \"UPDATE_SWAP_PENDING\";\nexport const CURRENT_SECTION_CLEAN = \"CURRENT_SECTION_CLEAN\";\nexport const CLEAN_SEARCH = \"CLEAN_SEARCH\";\nexport const FLOW_ANIMATION_LAYOUT = \"FLOW_ANIMATION_LAYOUT\";\nexport const FLOW_ANIMATION_OFF = \"FLOW_ANIMATION_OFF\";\nexport const ADD_NOTIFICATION = \"ADD_NOTIFICATION\";\nexport const CLEAN_NOTIFICATIONS = \"CLEAN_NOTIFICATIONS\";\nexport const REDUCE_BALANCE = \"REDUCE_BALANCE\";\nexport const ADD_BALANCE = \"ADD_BALANCE\";\nexport const IS_APP_LOADED = \"IS_APP_LOADED\";\nexport const APP_LOAD_LABEL = \"APP_LOAD_LABEL\";\nexport const LOGGED_IN = \"LOGGED_IN\";\nexport const UPDATE_ACTIVITY = \"UPDATE_ACTIVITY\";\nexport const UPDATE_PENDING_ACTIVITY = \"UPDATE_PENDING_ACTIVITY\";\nexport const PLAY_VIDEO = \"PLAY_VIDEO\";\nexport const VERIFICATION_STATE = \"VERIFICATION_STATE\";\nexport const DEFAULT_VIDEO_STATE = \"DEFAULT_VIDEO_STATE\";\nexport const ALL_PAIRS_LANDING = \"ALL_PAIRS_LANDING\";\nexport const CLEAN_ITEM_NOTIFICATIONS = \"CLEAN_ITEM_NOTIFICATIONS\";\nexport const SOCKET_NOTIFY = \"SOCKET_NOTIFY\";\nexport const UPDATE_ITEM_STATE = \"UPDATE_ITEM_STATE\";\nexport const SET_RENDER_MODAL = \"SET_RENDER_MODAL\";\n\nexport const SET_AUTH_DATA = \"SET_AUTH_DATA\";\nexport const UPDATE_LOADERS = \"UPDATE_LOADERS\";\n\nexport default SEARCH_ITEM;\n","import { createBrowserHistory } from \"history\";\nimport Enviroment from \"../environment\";\nimport BigNumber from \"bignumber.js\";\n\nconst {\n  AccountApiUrl,\n  ApiUrl,\n  WithdrawApiUrl,\n  DepositApiUrl,\n  SwapApiUrl,\n  IdentityApIUrl,\n  CountryUrl,\n  Oauth,\n  BASE_URL\n} = Enviroment;\n\n\nexport const IMAGE_MIME_TYPES = [\n  \"image/png\",\n  \"image/jpeg\",\n  \"image/jpg\"\n];\n\nexport const loadLabels = {\n  IMPORTANDO_PARES: \"Importando pares\",\n  OBTENIENDO_TUS_BILLETERAS_Y_BALANCES: \"Obteniendo tus billeteras y balances\",\n  OBTENIENDO_REGISTRO_DE_INTERCAMBIOS:\n    \"Obteniendo tus registros de intercambios\",\n  OBTENIENDO_CUENTAS_DE_RETIRO: \"Obteniendo cuentas de retiro\",\n  OBTENIENDO_PROVEEDORES_DE_RETIRO: \"Obteniendo proveedores de retiro\",\n  OBTENIENDO_TUS_REGISTROS_DE_RETIROS: \"Obteniendo tus registros de retiros\",\n  OBTENIENDO_TODAS_LAS_DIVISAS: \"Obteniendo todas las divisas\",\n  CARGANDO_TU_INFORMACION: \"Cargando tu información\",\n  OBTENIENDO_PROVEEDORES_DE_DEPOSITO: \"Obteniendo proveedores de deposito\",\n};\n\nexport const REFRESH_TOKEN_EXP_TIME = 43200\nexport const DESTROY_SESSION_URL = `${Oauth.url}auth/oauth/destroy/session`;\nexport const GET_JWT_URL = `${Oauth.url}auth/oauth/grant/refresh-token`;\nexport const GET_PUBLIC_KEY_URL = `${Oauth.url}auth/applications/get-public-key`;\n\nexport const ACCOUNT_URL = `${AccountApiUrl}users`;\nexport const CREATE_WALLET_URL = `${AccountApiUrl}accounts/add-new-account`;\nexport const DELETE_WALLET_URL = `${AccountApiUrl}accounts/update-visibility`;\n\nexport const LOCAL_CURRENCIES_URL = `${ApiUrl}countries?filter=`;\nexport const CURRENCIES_URL = `${ApiUrl}currencies?filter=`;\nexport const ADD_RESTORE_ID_URL = `${ApiUrl}profiles/add-restoreid`;\nexport const CURRENCIES_URL_ALT = `${ApiUrl}currencies`;\nexport const GET_PROFILE_URL = `${ApiUrl}users`;\nexport const ADD_PROFILE_URL = `${ApiUrl}profiles/add-new-profile`;\nexport const TWO_FACTOR_URL = `${ApiUrl}transactionSecuritys`;\nexport const TWO_FACTOR_BASE_URL = `${ApiUrl}`;\n\n\nexport const DELETE_WITHDRAW_ACCOUNT_URL = `${WithdrawApiUrl}withdrawAccounts/update-visibility`;\nexport const GET_WITHDRAW_BY_USER_URL = `${WithdrawApiUrl}users`;\nexport const GET_WITHDRAWS_BY_ACCOUNT_ID = `${WithdrawApiUrl}users`;\nexport const WITHDRAW_PROVIDERS_URL = `${WithdrawApiUrl}withdrawProviders`;\nexport const UPDATE_WITHDRAW_URL = `${WithdrawApiUrl}withdraws/add-update-withdraw`;\nexport const NEW_WITHDRAW_URL = `${WithdrawApiUrl}withdraws/add-new-withdraw`;\nexport const NEW_WITHDRAW_ACCOUNT_URL = `${WithdrawApiUrl}withdrawAccounts/add-new-withdraw-account`;\n\nexport const DEPOSITS_URL = `${DepositApiUrl}`;\nexport const GET_DEPOSIT_BY_USERS_URL = `${DepositApiUrl}users`;\nexport const UPDATE_DEPOSIT_URL = `${DepositApiUrl}deposits/add-update-deposit`;\nexport const NEW_DEPOSIT_URL = `${DepositApiUrl}deposits/add-new-deposit`;\nexport const SUBSCRIBE_TO_DEPOSITS_URL = `${DepositApiUrl}depositProviders/subscribe-to-new-deposits`;\n\n\nexport const SWAP_CONVERT_CURRENCIES = `${SwapApiUrl}swaps/convert-currencies`; \nexport const SWAP_URL = `${SwapApiUrl}`;\nexport const PAIRS_URL = `${SwapApiUrl}pairs?filter=`;\nexport const ADD_NEW_SWAP = `${SwapApiUrl}swaps/add-new-swap`;\nexport const GET_SWAPS_BY_USERS_URL = `${SwapApiUrl}users`;\n\nexport const INDETITY_URL = `${IdentityApIUrl}countryvalidators/findOne`;\nexport const INDENTITY_USERS_URL = `${IdentityApIUrl}users`;\nexport const INDETITY_COUNTRY_VALIDATORS_URL = `${IdentityApIUrl}countryvalidators`;\nexport const INDETITY_UPDATE_PROFILE_URL = `${IdentityApIUrl}profiles/add-new-profile`;\n\nexport const REFERRALS_URL = `${ApiUrl}referrals`;\nexport const GET_REFERRAL_URL = `${ApiUrl}users`;\n\n\nexport const GET_CHART_DATA_URL = `${CountryUrl}api/cryptoCompares/get-daily-historical-data`;\n\nexport const GET_URLS = {\n  withdraws: GET_WITHDRAW_BY_USER_URL,\n  swaps: GET_SWAPS_BY_USERS_URL,\n  deposits: GET_DEPOSIT_BY_USERS_URL,\n};\n\nexport const history = createBrowserHistory();\nexport const COINSENDA_URL = BASE_URL\n\nexport const currencyFormatByCoin = {\n  bitcoin: BigNumber.clone({\n    ROUNDING_MODE: BigNumber.ROUND_HALF_UP,\n    DECIMAL_PLACES: 8,\n  }),\n  bitcoin_testnet: BigNumber.clone({\n    ROUNDING_MODE: BigNumber.ROUND_HALF_UP,\n    DECIMAL_PLACES: 8,\n  }),\n  usd: BigNumber.clone({\n    ROUNDING_MODE: BigNumber.ROUND_HALF_UP,\n    DECIMAL_PLACES: 3,\n  }),\n  ethereum: BigNumber.clone({\n    ROUNDING_MODE: BigNumber.ROUND_HALF_UP,\n    DECIMAL_PLACES: 8,\n  }),\n  cop: BigNumber.clone({\n    ROUNDING_MODE: BigNumber.ROUND_HALF_UP,\n    DECIMAL_PLACES: 0,\n  }),\n  bitcoin_fee: BigNumber.clone({\n    ROUNDING_MODE: BigNumber.ROUND_UP,\n    DECIMAL_PLACES: 6,\n  }),\n  bitcoin_testnet_fee: BigNumber.clone({\n    ROUNDING_MODE: BigNumber.ROUND_UP,\n    DECIMAL_PLACES: 6,\n  }),\n  usd_fee: BigNumber.clone({\n    ROUNDING_MODE: BigNumber.ROUND_UP,\n    DECIMAL_PLACES: 2,\n  }),\n  ethereum_fee: BigNumber.clone({\n    ROUNDING_MODE: BigNumber.ROUND_UP,\n    DECIMAL_PLACES: 6,\n  }),\n  cop_fee: BigNumber.clone({\n    ROUNDING_MODE: BigNumber.ROUND_UP,\n    DECIMAL_PLACES: 0,\n  }),\n};\n\nconst size = {\n  mobileS: \"320px\",\n  mobileM: \"375px\",\n  mobileL: \"425px\",\n  tablet: \"768px\",\n  tabletL: \"900px\",\n  laptop: \"1024px\",\n  laptopM: \"1366px\",\n  laptopL: \"1440px\",\n  desktop: \"2560px\",\n};\n\nexport const device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  tabletL: `(max-width: ${size.tabletL})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`,\n};\n\nexport const currencyLabels = {\n  usd: \"USD\",\n  bitcoin: \"BTC\",\n  cop: \"COP\",\n  bitcoin_testnet: \"BTCT\",\n};\n\nexport const orderStateColors = {\n  accepted: \"linear-gradient(to bottom right, #11998e, #48c778);\",\n  canceled: \"linear-gradient(to bottom right, gray, gray);\",\n  rejected: \"linear-gradient(to bottom right, gray, gray);\",\n  confirmed: \"linear-gradient(to bottom right, gray, gray);\",\n};\n\nexport const chartOptions = {\n  lang: {\n    months: [\n      \"Enero\",\n      \"Febrero\",\n      \"Marzo\",\n      \"Abril\",\n      \"Mayo\",\n      \"Junio\",\n      \"Julio\",\n      \"Agosto\",\n      \"Septiembre\",\n      \"Octubre\",\n      \"Noviembre\",\n      \"Diciembre\",\n    ],\n    weekdays: [\n      \"Domingo\",\n      \"Lunes\",\n      \"Martes\",\n      \"Miercoles\",\n      \"Jueves\",\n      \"Viernes\",\n      \"Sabado\",\n    ],\n    shortMonths: [\n      \"Ene\",\n      \"Feb\",\n      \"Mar\",\n      \"Abr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Ago\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dic\",\n    ],\n    rangeSelectorFrom: \"Desde\",\n    rangeSelectorTo: \"hasta\",\n    loading: \"Cargando...\",\n  },\n};\n\nexport const ACCEPT_FILE_TYPE = [\"image/jpeg\", \"image/png\", \".pdf\"];\n\nexport const ACCEPT_FILE_TYPE_ADVANCE_KYC = [\"image/jpeg\", \"image/png\"];\n\n\n\nexport const CDN_PATH_ASSETS = {\n  highstock:'cdn/libs/highstock.js',\n  three:'cdn/libs/three.min.js',\n  vanta:'cdn/libs/vanta.waves.min.js',\n  d3:'cdn/libs/d3.js',\n  assets:'cdn/assets/'\n}","import { toast } from \"react-toastify\";\nimport { kyc } from \"../components/api/ui/api.json\";\nimport Compressor from \"compressorjs\";\nimport * as Sentry from \"@sentry/browser\";\nimport { updateNormalizedDataAction } from \"../actions/dataModelActions\";\nimport * as normalizr_services from \"../schemas\";\nimport { store } from \"..\";\nimport imageType from 'image-type'\nimport { IMAGE_MIME_TYPES } from '../const/const'\n\nconst { normalizeUser } = normalizr_services;\n\nexport const SentryCaptureException = (error) => {\n  Sentry.captureException(error);\n};\n\nexport const setAnimation = (className, containerId, time) => {\n  const element = document.getElementById(containerId);\n  element.classList.add(className);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve();\n      setTimeout(() => {\n        element.classList.remove(className);\n      }, time + 1);\n    }, time);\n  });\n};\n\n// simulate_click(document.getElementById(`${match[0].value}`), 'click');\nexport const simulate_click = (el, etype) => {\n  // Función para simular click sobre el elemento (path country)\n  if(!el){return}\n  if (el.fireEvent) {\n    el.fireEvent(\"on\" + etype);\n  } else {\n    var evObj = document.createEvent(\"Events\");\n    evObj.initEvent(etype, true, false);\n    el.dispatchEvent(evObj);\n  }\n};\n\nexport const img_compressor = (file, quality) => {\n  return new Promise(async (resolve, reject) => {\n    if (file.type.includes(\"image\") && file.size > 2000000) {\n      console.log(\"La imagen es superior a 2MB, será comprimida\", file.size);\n      if (!quality) {\n        // Calcula el nivel de compresión en función al tamaño de la imagen\n        quality = await get_img_quality(file.size);\n      }\n      new Compressor(file, {\n        quality: quality,\n        success: resolve,\n        error: reject,\n      });\n      return resolve;\n    }\n    console.log(\"La imagen es INFERIOR a 2MB, NO será comprimida\");\n    return resolve(file);\n  });\n};\n\nconst get_img_quality = (size) => {\n  let quality =\n    size > 12000000\n      ? 0.3\n      : size > 8000000\n      ? 0.4\n      : size > 5000000\n      ? 0.5\n      : size > 4000000\n      ? 0.6\n      : size > 2000000 && 0.7;\n  return quality;\n};\n\nexport const mensaje = async (msg, type, position) => {\n  // console.log('mensaje', msg, type)\n  return toast(msg, {\n    position: toast.POSITION[!position ? \"BOTTOM_RIGHT\" : position],\n    pauseOnFocusLoss: false,\n    draggablePercent: 60,\n    className: `${\n      type === \"error\"\n        ? \"toastError\"\n        : type === \"success\"\n        ? \"DCfondo\"\n        : \"DCfondoDefault\"\n    }`,\n    bodyClassName: `${\n      type === \"error\"\n        ? \"toastErrorText\"\n        : type === \"success\"\n        ? \"DCTtext\"\n        : \"DCTtextDefault\"\n    }`,\n    progressClassName: `${\n      type === \"error\"\n        ? \"ErroProgressBar\"\n        : type === \"success\"\n        ? \"DCProgress\"\n        : \"DCProgress\"\n    }`,\n    autoClose: 4000,\n  });\n};\n\nexport const copy = (payload) => {\n  if (!document || !payload) return;\n  let aux = document.createElement(\"input\");\n  aux.setAttribute(\n    \"value\",\n    payload.target.dataset && payload.target.dataset.copy\n  );\n  document.body.appendChild(aux);\n  aux.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(aux);\n  return mensaje(\"¡Copiado Exitosamente!\");\n};\n\nexport const capitalizarPalabras = (val) => {\n  // console.log('_______________________capitalizarPalabras', val, typeof val)\n  if (typeof val !== \"string\") {\n    return val;\n  }\n  return val\n    .toLowerCase()\n    .trim()\n    .split(\" \")\n    .map((v) => v[0] && v[0].toUpperCase() + v.substr(1))\n    .join(\" \");\n};\n\nexport const capitalizeString = (string) => {\n  if (typeof string !== \"string\") {\n    return string;\n  }\n  const re = /(^|[^A-Za-zÁÉÍÓÚÜÑáéíóúüñ])(?:([a-záéíóúüñ])|([A-ZÁÉÍÓÚÜÑ]))|([A-ZÁÉÍÓÚÜÑ]+)/gu;\n  // Capitalizacion en castellano ref: https://es.stackoverflow.com/questions/111241/como-puedo-hacer-para-que-aparezcan-las-primeras-letras-de-las-palabras-en-mayu\n  return string.replace(\n    re,\n    (m, caracterPrevio, minuscInicial, mayuscInicial, mayuscIntermedias) => {\n      const locale = [\"es\", \"gl\", \"ca\", \"pt\", \"en\"];\n      if (mayuscIntermedias) return mayuscIntermedias.toLocaleLowerCase(locale);\n      return (\n        caracterPrevio +\n        (minuscInicial\n          ? minuscInicial.toLocaleUpperCase(locale)\n          : mayuscInicial)\n      );\n    }\n  );\n};\n\nexport const ticketModalView = (state) => {\n  switch (state) {\n    case \"pending\":\n      return \"pendingView\";\n    case \"accepted\":\n      return \"modalSuccess\";\n    case \"canceled\":\n      return \"badView\";\n    case \"rejected\":\n      return \"rejectedView\";\n    case \"confirmed\":\n      return \"confirmedView\";\n    default:\n      break;\n  }\n};\n\nexport const normalized_list = (activity_list, activity_type) => {\n  return async (dispatch, getState) => {\n    const user = getState().modelData.user;\n\n    let list = await arrayToObject(activity_list);\n    if (getState().modelData[activity_type]) {\n      // Si ya hay depositos/retiros/swaps en el estado, entonces tomarlos en cuenta en la adición\n      list = {\n        ...getState().modelData[activity_type],\n        ...list,\n      };\n    }\n\n    let user_update = {\n      id: user.id,\n      [activity_type]: {\n        ...list,\n      },\n    };\n\n    let normalizedUser = await normalizeUser(user_update);\n    await dispatch(updateNormalizedDataAction(normalizedUser));\n  };\n};\n\nexport function deepEqual(object1, object2) {\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n    const val2 = object2[key];\n    const areObjects = isObject(val1) && isObject(val2);\n    if (\n      (areObjects && !deepEqual(val1, val2)) ||\n      (!areObjects && val1 !== val2)\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isObject(object) {\n  return object != null && typeof object === \"object\";\n}\n\nexport const desNormalizedList = async (normalizedList, indices) => {\n  // Recibimos como parametros el objeto con la info normalizada y la lista de indices\n  let new_list = [];\n\n  if (indices.length > 0) {\n    new_list = await indices.map((id) => {\n      return normalizedList[id];\n    });\n  }\n\n  return new_list;\n};\n// indices\n\nexport const matchNormalizeWallet = (list, itemReview) => {\n  return new Promise(async (resolve, reject) => {\n    let result = [];\n    await Object.keys(list).forEach((wallet_id) => {\n      if (list[wallet_id].currency.currency === itemReview) {\n        result.push(list[wallet_id]);\n      }\n    });\n    return resolve(result);\n  });\n};\n\nexport const arrayToObject = (array_list) => {\n  let new_object = {};\n\n  for (let item of array_list) {\n    new_object = {\n      ...new_object,\n      [item.id]: item,\n    };\n  }\n\n  return new_object;\n};\n\nfunction getProps(obj, path) {\n  var arr = path.split(\".\");\n  var parent = obj;\n  var name = arr[0];\n\n  arr.slice(1).forEach((fieldName) => {\n    parent[name] = parent[name] || {};\n    parent = parent[name];\n    name = fieldName;\n  });\n  return parent[name];\n}\n\nexport const convertToObjectWithCustomIndex = (matriz, customIndex) => {\n  // @param matriz: arrray | object\n  let MATRIZ = matriz;\n  let OBJECT_RESULT = {};\n  let INDEX;\n  customIndex = !customIndex ? \"id\" : customIndex;\n\n  if (typeof MATRIZ === \"object\") {\n    MATRIZ = Object.values(MATRIZ);\n  } //if it's object so convert to array\n\n  if (Array.isArray(MATRIZ)) {\n    for (let item of MATRIZ) {\n      INDEX = getProps(item, customIndex);\n      OBJECT_RESULT = {\n        ...OBJECT_RESULT,\n        [INDEX]: item,\n      };\n    }\n  }\n\n  return OBJECT_RESULT;\n};\n\nexport const objectToArray = (object_list, assign_id) => {\n  return new Promise(async (resolve, reject) => {\n    let new_list = [];\n    let new_object = {\n      ...object_list,\n    };\n    let index = 1;\n\n    await Object.keys(new_object).forEach((indice) => {\n      if (indice === \"ui_name\" || indice === \"ui_type\") {\n        return false;\n      }\n      if (assign_id) {\n        object_list[indice].id = index;\n      }\n      new_list.push(object_list[indice]);\n      index++;\n    });\n\n    return resolve(new_list);\n  });\n};\n\nexport const addIndexToRootObject = (list) => {\n  // @params\n  // list:object\n\n  return new Promise(async (resolve, reject) => {\n    let new_object;\n    await Object.keys(list).forEach((index_id) => {\n      if (index_id === \"ui_name\") {\n        return false;\n      }\n\n      if (index_id !== \"ui_type\") {\n        list[index_id] = {\n          ...list[index_id],\n          value: index_id,\n        };\n      }\n      new_object = {\n        ...new_object,\n        [index_id]: list[index_id],\n      };\n    });\n\n    return resolve(new_object);\n  });\n};\n\nexport const serveBankOrCityList = (list, type) => {\n  return new Promise(async (resolve, reject) => {\n    let new_list = [];\n    let indices = 0;\n\n    await Object.keys(list).forEach((indice) => {\n      if (indice === \"ui_name\" || indice === \"ui_type\") {\n        return false;\n      }\n      let new_item = {\n        ...list[indice],\n        code: indice,\n        id: indices, \n        type: type,\n        name: list[indice].ui_name.toLowerCase(),\n        selection: false,\n      };\n      indices++;\n      new_list.push(new_item);\n    });\n\n    return resolve(new_list);\n  });\n};\n\nexport const converToInitState = (obj) => {\n  // recibe un objeto como parametro y devuelve ese objeto con todos los parametros vacíos, como un estado inicializado desde 0\n  return new Promise(async (resolve) => {\n    let new_state;\n    await Object.keys(obj).forEach((index_state) => {\n      new_state = {\n        ...new_state,\n        [index_state]: \"\",\n      };\n    });\n    return resolve(new_state);\n  });\n};\n\nexport const extractSelectList = async (kyc_array, kyc_object) => {\n  let object_list;\n  await kyc_array.map(async (item) => {\n    if (item.ui_type === \"select\" && item.name !== \"nationality\") {\n      let _this_array = [];\n      let id = 1;\n      await Object.keys(kyc_object[item.name]).forEach((indx) => {\n        if (indx === \"ui_name\" || indx === \"ui_type\") {\n          return false;\n        }\n        let new_item = {\n          ...kyc_object[item.name][indx],\n          code: indx,\n          name: kyc_object[item.name][indx].ui_name,\n          id: id++,\n        };\n        _this_array.push(new_item);\n      });\n      object_list = {\n        ...object_list,\n        [item.name]: _this_array,\n      };\n    }\n  });\n  return object_list;\n};\n\nexport const FormatCountryList = (original_list, to_model_convert_list) => {\n  let new_list = [];\n  // console.log('!!!! to_model_convert_list', to_model_convert_list)\n  original_list.map(async (item) => {\n    let res = await matchItem(\n      to_model_convert_list,\n      { primary: item.code },\n      \"name\"\n    );\n    if (!res) {\n      return false;\n    }\n    new_list.push(res[0]);\n  });\n\n  return new_list;\n};\n\nexport const serveKycData = (list) => {\n  return new Promise(async (resolve, reject) => {\n    const { kyc_basic } = kyc;\n    const { user } = store.getState().modelData;\n    let kyc_model = kyc_basic[user.person_type];\n\n    // console.log('||||||||||||| LISTA ALMACENADA FRONTEND - - - ', kyc_basic[user.person_type])\n    // console.log('|||||| LISTA RECIBIDA BACKENND', list)\n\n    let new_list = [];\n    let indices = 1;\n    await Object.keys(list).forEach((indice) => {\n      // console.log(`recorriendo objetito: - - FRONT ${indice} - -`, kyc_model[indice])\n      // console.log(`recorriendo objetito: - - BACK ${indice} - -`, list[indice])\n      // if(indice === 'ui_name'){return false}\n      let new_item = {\n        label: list[indice].ui_name,\n        name: indice,\n        id: indices,\n        ui_type: list[indice].ui_type ? list[indice].ui_type : \"text\",\n        placeholder: list[indice].ui_name,\n        ...kyc_model[indice],\n      };\n      indices++;\n      new_list.push(new_item);\n    });\n    // console.log('RESULTADO CONVERSIÓN DATA:', new_list)\n    return resolve(new_list);\n  });\n};\n\nexport const withdrawProvidersByType = (withdrawProviders) => {\n  let providers_served;\n  withdrawProviders.map((provider) => {\n    return (providers_served = {\n      ...providers_served,\n      [provider.provider_type]: provider,\n    });\n  });\n\n  return providers_served;\n};\n\nexport const matchItem = (list, itemReview, type, all_results) => {\n  const { primary } = itemReview;\n\n  let result = [];\n  // let all_results = false\n\n  list.filter((item) => {\n    let query = primary.toLowerCase();\n    switch (type) {\n      case \"view\":\n        // BUSCAMOS COINCIDENCIAS DENTRO DEL MODELO DE LAS VISTAS\n        return item.name.includes(query) && result.push(item);\n      case \"quote\":\n        // BUSCAMOS COINCIDENCIA DENTRO DEL MODELO DE LAS LISTAS DE PARES/COTIZACIONES QUE NOS RETORNA EL SERVER\n        return (\n          item.primary_currency.currency.includes(query) && result.push(item)\n        );\n      case \"primary\":\n        // BUSCAMOS COINCIDENCIA DENTRO DEL USER COLLECTION PROVEIDO EN LA LISTA {primary: element}\n        return item.primary.includes(query) && result.push(item);\n      case \"sell_pair\":\n        // BUSCAMOS COINCIDENCIA DENTRO DEL USER COLLECTION PROVEIDO EN LA LISTA {primary: element}\n        return item.sell_pair.includes(query) && result.push(item);\n      case \"buy_pair\":\n        // BUSCAMOS COINCIDENCIA DENTRO DEL USER COLLECTION PROVEIDO EN LA LISTA {primary: element}\n        return item.buy_pair.includes(query) && result.push(item);\n      default:\n        all_results = true;\n        if (typeof type === \"object\") {\n          // solo aplica cuando se hacen busquedas en mas de un nivel\n          type.first.toLowerCase();\n          type.second.toLowerCase();\n          console.log(\n            \"]]]]]]] ====> ANDALE ANDALE\",\n            item[type.first][type.second]\n          );\n          return (\n            item[type.first][type.second].includes(query) && result.push(item)\n          );\n        }\n        return item[type].toLowerCase().includes(query) && result.push(item);\n    }\n  });\n\n  if (result.length < 1) {\n    return false;\n  }\n  if (all_results) {\n    return result;\n  }\n  return result[0];\n};\n\nexport const handleKeyPress = (e, current) => {\n  var keynum = window.event ? window.event.keyCode : e.which;\n  // if ((keynum == 8) || (keynum == 46) || (keynum == 45) || (keynum == 44) ){\n  if ((keynum < 48 || keynum > 57) && keynum !== 13) {\n    return \"Solo se aceptan números en este campo\";\n  }\n  return /\\d/.test(String.fromCharCode(keynum));\n};\n\nexport const number_format = (amount) => {\n  amount += \"\"; // por si pasan un número en vez de un string\n  amount = parseFloat(amount.replace(/[^0-9]/g, \"\")); // elimino cualquier cosa que no sea número o punto\n  amount = \"\" + amount.toFixed(0);\n\n  var amount_parts = amount.split(\".\"),\n    regexp = /(\\d+)(\\d{3})/;\n  while (regexp.test(amount_parts[0]))\n    amount_parts[0] = amount_parts[0].replace(regexp, \"$1,$2\");\n  return amount_parts.join(\".\");\n};\n\nexport function formatNumber(number) {\n  const dotsCount = (number.match(/\\./g) || []).length;\n  const commasCount = (number.match(/,/g) || []).length;\n  const dotIndex = number.search(/\\./);\n  const commaIndex = number.search(/,/);\n  const dotFirst = dotsCount === commasCount && dotIndex < commaIndex;\n  const commaFirst = dotsCount === commasCount && commaIndex < dotIndex;\n\n  // Remove thousands separators from input\n  if (dotsCount > 1 || dotFirst) {\n    number = number.split(\".\").join(\"\");\n  } else if (commasCount > 1 || commaFirst) {\n    number = number.split(\",\").join(\"\");\n  }\n\n  if (Number.isNaN(Number(number.replace(\",\", \".\")))) {\n    return \"\";\n  }\n\n  let integer = \"\";\n  let decimals = \"\";\n  let thousandsSeparator = \"\";\n  let decimalPoint = \"\";\n\n  if (number.includes(\",\")) {\n    [thousandsSeparator, decimalPoint] = [\".\", \",\"];\n  } else {\n    [thousandsSeparator, decimalPoint] = [\",\", \".\"];\n  }\n\n  [integer, decimals] = number.split(decimalPoint);\n  integer = integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousandsSeparator);\n  integer = integer === \"\" ? \"0\" : integer;\n\n  if (!decimals) {\n    return integer;\n  }\n\n  return [integer, decimals].join(decimalPoint);\n}\n\nexport const readFile = (file) => {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => resolve(reader.result), false);\n    reader.readAsDataURL(file);\n  });\n};\n\n \nexport const serve_activity_list = async (\n  get_list,\n  data_user,\n  current_wallet,\n  filter,\n  wallets\n) => {\n  // other_call - será false cuando lo llamamos al iniciar el componenete, y true cuando lo llamamos desde otro metodo accionado por el usuario ej. ActivityList\n  await get_list(data_user, wallets);\n\n  // console.log('||||||||||||||||||||||| °°°°°° normalizeData:::', normalizeData)\n\n  let list = await serve_orders(current_wallet && current_wallet.id, filter);\n  // console.log('||||||||||||||||||||||| °°°°°° serve_activity_list:::', list)\n\n  return list;\n};\n\nexport const serve_orders = async (account_id, filter) => {\n  let new_array = [];\n  // console.log('°°°°||||||||||||||| ORDER SERVIDAS ', account_id, filter)\n  const { modelData } = store.getState();\n  const { user } = store.getState().modelData;\n\n  let list = modelData[filter];\n  let indices = user[filter];\n\n\n\n  // console.log('°°°°||||||||||||||| ORDER SERVIDAS ', modelData[filter])\n\n  if (filter === \"swaps\" && account_id) {\n    indices.map((id) => {\n      // if(!list[id].account_id){return false}\n      return (\n        (list[id].account_from === account_id ||\n          list[id].account_to === account_id) &&\n        new_array.push(list[id])\n      );\n    });\n  }\n\n\n\n  if (filter !== \"swaps\" && account_id) {\n    for (const item of indices) {\n      if(list[item].account_id === account_id){\n        new_array = [\n          ...new_array,\n          list[item]\n        ]\n      }\n    }\n  }\n\n  if (!account_id) {\n    indices.map((id) => {\n      return new_array.push(list[id]);\n    });\n  }\n\n  return new_array;\n};\n\nexport const get_ui_name_currency = (short_currency_name) => {\n  return short_currency_name === \"cop\"\n    ? \"Pesos Colombianos\"\n    : short_currency_name === \"clp\"\n    ? \"Pesos Chilenos\"\n    : short_currency_name === \"pen\"\n    ? \"Sol Peruano\"\n    : short_currency_name === \"uyu\"\n    ? \"Pesos Uruguayos\"\n    : short_currency_name === \"ars\"\n    ? \"Pesos Argentinos\"\n    : \"Dolares Americanos\";\n};\n\nexport function setInputFilter(textbox, inputFilter) {\n  if (!textbox) return;\n  [\n    \"input\",\n    \"keydown\",\n    \"keyup\",\n    \"mousedown\",\n    \"mouseup\",\n    \"select\",\n    \"contextmenu\",\n    \"drop\",\n  ].forEach(function (event) {\n    textbox.addEventListener(event, function () {\n      if (inputFilter(this.value)) {\n        this.oldValue = this.value;\n        this.oldSelectionStart = this.selectionStart;\n        this.oldSelectionEnd = this.selectionEnd;\n      } else if (this.hasOwnProperty(\"oldValue\")) {\n        this.value = this.oldValue;\n        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);\n      } else {\n        this.value = \"\";\n      }\n    });\n  });\n}\n\n/**\n * Function para hacer debounce\n *\n * @param {Function} func function target\n * @param {Number} wait timer representado en ms's\n */\nexport function debounce(func, wait) {\n  //Previene over flows. Si el usuario en 1 seg da x cantidad de clicks solo ejecuta el último click\n  // Esto surgió porque, podía darse, presionar muchas teclas a la vez en cuestión de milisegundos\n  // Entonces, limite que solo reconozca la última acción en 100ms\n  let timeout;\n  return function () {\n    const context = this,\n      args = arguments;\n    const later = function () {\n      timeout = null;\n      func.apply(context, [...args, () => clearTimeout(timeout)]);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\nexport default handleKeyPress;\n\n\nexport function includesAnyImageMime(value){\n\n  let allowed_img_mimes = IMAGE_MIME_TYPES;\n\n  if (typeof(value) != \"string\" && !(value instanceof String)) return false;\n\n  let image_buffer = Buffer.from(value, 'base64');\n  let image_info = imageType(image_buffer);\n  if(!image_info) return false;\n\n  let found = allowed_img_mimes.find((allowed_img_mime) => {\n    return allowed_img_mime === image_info.mime;\n  });\n\n  if (!found) return false;\n\n  return image_info;\n}\n\n","// import user_source from '../components/api'\nimport { normalize, schema } from \"normalizr\";\n// const hola = this.props.user\n// const paymentMethod = new schema.Entity('payment_methods',{},{processStrategy: (value, parent, key) => ({ ...value, user_id:parent.id})}); //el proccessStrategy es opcional, lo utilice en modo ilustrativo para heredar el id del padre(user) a cada elemento\n\nconst do_normalization = (data_source, data_to_normalize) => {\n  // Parametro 1: fuente de datos, Parametro 2: Schema de datos a normalizar con la fuente\n  const normalized_data = normalize(data_source, data_to_normalize);\n\n  return normalized_data;\n};\n\nexport const normalizeUser = async (user) => {\n  const balance = new schema.Entity(\"balances\", {});\n  const deposit = new schema.Entity(\"deposits\", {});\n  const withdraw = new schema.Entity(\"withdraws\", {});\n  const withdraw_account = new schema.Entity(\"withdraw_accounts\", {});\n  const withdraw_provider = new schema.Entity(\"withdrawProviders\", {});\n  const pair = new schema.Entity(\"all_pairs\", {});\n  const swap = new schema.Entity(\"swaps\", {});\n  const deposit_prov = new schema.Entity(\"deposit_providers\", {});\n\n  const wallet = new schema.Entity(\n    \"wallets\",\n    {\n      dep_prov: [deposit_prov],\n    },\n    {\n      processStrategy: (value, parent, key) => ({\n        ...value,\n        userId: parent.id,\n      }),\n    }\n  );\n\n  const normalizedUser = new schema.Entity(\"user\", {\n    wallets: [wallet],\n    deposit_providers: [deposit_prov],\n    deposits: [deposit],\n    swaps: [swap],\n    withdraw_accounts: [withdraw_account],\n    withdrawProviders: [withdraw_provider],\n    available_pairs: [pair],\n    withdraws: [withdraw],\n    balances: [balance],\n  });\n\n  return await do_normalization(user, normalizedUser);\n};\n\nexport const normalize_data = async (all_pairs) => {\n  let data = {\n    id: 1232323232, //id de prueba\n    all_pairs: all_pairs,\n  };\n\n  const all_pair = new schema.Entity(\"all_pairs\", {});\n\n  const normalizeData = new schema.Entity(\"data\", {\n    all_pairs: [all_pair],\n  });\n\n  return await do_normalization(data, normalizeData);\n};\n\nexport default normalizeUser;\n","import { LOADER, IS_APP_LOADED, APP_LOAD_LABEL } from \"./action_types\";\n\nexport const isAppLoading = (payload) => {\n  return {\n    type: LOADER,\n    payload,\n  };\n};\n\nexport const isAppLoaded = (payload) => {\n  return {\n    type: IS_APP_LOADED,\n    payload,\n  };\n};\n\nexport const appLoadLabelAction = (payload) => {\n  return {\n    type: APP_LOAD_LABEL,\n    payload,\n  };\n};\n\nexport default isAppLoading;\n","import {\n  ITEM_QUOTE_ACTIVE,\n  MODAL_CONFIRMATION_TOGGLE,\n  CONFIRMATION_MODAL_PAYLOAD,\n  SECTION_VIEW_TO,\n  CURRENT_SECTION_PARAMS,\n  PAIRS_FOR_ACCOUNT,\n  OTHER_MODAL,\n  CURRENT_SECTION_CLEAN,\n  FLOW_ANIMATION_LAYOUT,\n  FLOW_ANIMATION_OFF,\n  ADD_NOTIFICATION,\n  CLEAN_NOTIFICATIONS,\n  PLAY_VIDEO,\n  VERIFICATION_STATE,\n  DEFAULT_VIDEO_STATE,\n  CLEAN_ITEM_NOTIFICATIONS,\n  SOCKET_NOTIFY,\n  SET_RENDER_MODAL,\n  UPDATE_LOADERS,\n} from \"./action_types\";\n\nexport const renderModal = (payload) => {\n  // Para que el render modal pueda acceder a los parametros de la ruta, debe estár precedido de una redirección push del history y el render component debe ser\n  // llamado con un import dinamico tal como está aplicado en el order_item de activityList, acceder tambien a los parametros de la ruta envolviendo el renderModal del modals-supervisor en un Hoc que sería lo ideal.\n  return {\n    type: SET_RENDER_MODAL,\n    payload: payload,\n  };\n};\n\nexport const socket_notify = (payload, item_type, title) => {\n  let payload_array = payload &&\n    item_type && [{ ...payload, item_type, title }];\n  return {\n    type: SOCKET_NOTIFY,\n    payload: payload && payload_array,\n  };\n};\n\nexport const verificationStateAction = (payload) => {\n  return {\n    type: VERIFICATION_STATE,\n    payload,\n  };\n};\n\nexport const play_video = (payload) => {\n  return {\n    type: PLAY_VIDEO,\n    payload,\n  };\n};\n\nexport const default_video_state = (payload) => {\n  return {\n    type: DEFAULT_VIDEO_STATE,\n    payload,\n  };\n};\n\nexport const addNotification = (payload, extra, amount) => {\n  return {\n    type: ADD_NOTIFICATION,\n    payload,\n    amount: amount,\n    extra: extra,\n    meta: {\n      sound: {\n        play: \"notification\",\n      },\n    },\n  };\n};\n\nexport const CleanNotifications = (payload) => {\n  return {\n    type: CLEAN_NOTIFICATIONS,\n    payload,\n  };\n};\n\nexport const cleanNotificationItem = (payload, item_clean) => {\n  return {\n    type: CLEAN_ITEM_NOTIFICATIONS,\n    payload,\n    item_clean,\n  };\n};\n\n// export const new_fiat_deposit = (wallet_id, data) =>{\n//   // Recibe como parametro un objeto\n//   // ej this.props.action.current_section_params({current_wallet:this.state.current_wallet})\n//   return{\n//     type:NEW_FIAT_DEPOSIT,\n//     payload:{\n//       wallet_id,\n//       data\n//     }\n//   }\n// }\n\nexport const FlowAnimationOff = () => {\n  return {\n    type: FLOW_ANIMATION_OFF,\n  };\n};\n\nexport const FlowAnimationUi = (payload) => {\n  // @params\n  // nextV    //Avance de sección de forma Vertical\n  // backV    //Retroceder sección de forma Vertical\n  // nextH    //Avance de sección de forma Horizontal\n  // backH    //Retroceder sección de forma Horizontal\n  return {\n    type: FLOW_ANIMATION_LAYOUT,\n    payload,\n  };\n};\n\nexport const toggleOtherModal = () => {\n  return {\n    type: OTHER_MODAL,\n  };\n};\n\nexport const pairsForAccount = (wallet_id, data) => {\n  // Recibe como parametro un objeto\n  // ej this.props.action.current_section_params({current_wallet:this.state.current_wallet})\n  return {\n    type: PAIRS_FOR_ACCOUNT,\n    payload: {\n      wallet_id,\n      data,\n    },\n  };\n};\n\nexport const current_section_params = (payload) => {\n  // Recibe como parametro un objeto\n  // ej this.props.action.current_section_params({current_wallet:this.state.current_wallet})\n  return {\n    type: CURRENT_SECTION_PARAMS,\n    payload,\n  };\n};\n\nexport const cleanCurrentSection = () => {\n  return {\n    type: CURRENT_SECTION_CLEAN,\n  };\n};\n\nexport const section_view_to = (payload) => {\n  return {\n    type: SECTION_VIEW_TO,\n    payload,\n  };\n};\n\n// export const HeadRoom = payload => {\n//   return{\n//     type:HEAD_ROOM,\n//     payload\n//   }\n// }\n\nexport const ItemQuoteActive = (payload) => {\n  return {\n    type: ITEM_QUOTE_ACTIVE,\n    payload,\n  };\n};\n\nexport const confirmationModalToggle = (payload) => {\n  return {\n    type: MODAL_CONFIRMATION_TOGGLE,\n    payload,\n  };\n};\n\nexport const confirmationModalPayload = (payload) => {\n  return {\n    type: CONFIRMATION_MODAL_PAYLOAD,\n    payload,\n  };\n};\n\nexport const updateLoadersAction = (payload) => {\n  return {\n    type: UPDATE_LOADERS,\n    payload,\n  };\n};\n\n// export default HeadRoom\n","import localForage from \"localforage\";\nimport { COINSENDA_URL, GET_PUBLIC_KEY_URL, REFRESH_TOKEN_EXP_TIME } from \"../const/const\";\nimport jwt from \"jsonwebtoken\";\nimport KeyEncoder from 'key-encoder'\nimport { mainService } from '../services/MainService'\n\nlet _keyEncoder = new KeyEncoder('secp256k1');\nexport const saveUserToken = async(userToken, refreshToken) => {\n  try {\n    let decodeJwt = await verifyUserToken(userToken)\n    let jwtExpTime = (decodeJwt.exp - 60) - decodeJwt.iat\n    await localForage.setItem(\"user_token\", userToken);\n    await localForage.setItem(\"refresh_token\", refreshToken);\n    await localForage.setItem(\"jwt_expiration_time\", jwtExpTime);\n    await localForage.setItem('created_at', Date());\n    return decodeJwt\n  } catch (err) {\n    handleError(err)\n  }\n}\n\n\nexport const getToken = async() => {\n  try {\n    let userToken = await localForage.getItem(\"user_token\");\n    let decodedToken = await jwt.decode(userToken);\n    return {\n      userToken,\n      ...decodedToken\n    }\n  } catch (err) {\n    console.log('from getToken ==> ', err)\n    handleError(err)\n  }\n  // let userToken = await localForage.getItem(\"user_token\");\n  // if(!userToken){throw Error('notFindUserToken')}\n  // let decodedToken = await jwt.decode(userToken);\n  // return {\n  //   userToken,\n  //   ...decodedToken\n  // }\n}\n\nexport const verifyTokensValidity = () => {\n  setInterval(() => {getUserToken()}, 20000)\n}\n\nexport const getUserToken = async() => {\n  try {\n    await validateExpTime()\n    let userToken = await localForage.getItem(\"user_token\");\n    const refreshToken = await localForage.getItem(\"refresh_token\");\n    let decodedToken = await verifyUserToken(userToken)\n    return {\n      userToken,\n      refreshToken,\n      decodedToken\n    }\n  } catch (err) {\n    err.source = 'Error dispatched from getUserToken function'\n    return handleError(err, doLogout)\n  }\n}\n\n\n\n\nexport const verifyUserToken = async(_jwToken) => {\n  let publicKey = await getPublicKey()\n  let userToken = await localForage.getItem(\"user_token\");\n  let JWToken = _jwToken ||  userToken\n  let pemPublicKey = _keyEncoder.encodePublic(publicKey, 'raw', 'pem')\n  let res = jwt.verify(JWToken, pemPublicKey);\n  console.log('--------  TOKEN VERIFICADO  --------')\n  return res\n}\n\n\nexport const getExpTimeData = async() => {\n  let createdAt = await localForage.getItem('created_at');\n  let jwtExpTime = await localForage.getItem('jwt_expiration_time');\n  let registerDate = new Date(createdAt).getTime();\n  var currentDate = new Date().getTime();\n  var currentTime = (currentDate - registerDate) / (1000);\n  return {\n    jwtExpTime,\n    currentTime,\n    REFRESH_TOKEN_EXP_TIME\n  }\n}\n\n\nexport const validateExpTime = async() => {\n\n    const { jwtExpTime, currentTime } = await getExpTimeData()\n\n\n    if(jwtExpTime && currentTime){\n      console.log('Tiempo transcurrido en sesión:', `${currentTime} segs`)\n      // console.log('Vigencia user token:', `${jwtExpTime+60}(${jwtExpTime}) segs`)\n      console.log('Vigencia user token:', `${jwtExpTime}(${jwtExpTime}) segs`)\n      console.log('Vigencia refresh token:', `${REFRESH_TOKEN_EXP_TIME} segs`)\n \n      if(currentTime<=jwtExpTime){ //Si ha transcurrido menos de 4 minutos, el token actual sigue vigente\n        console.log('::::::::: -- El userToken sigue vigente hasta el momento')\n        return true\n      }else if(currentTime>=jwtExpTime && currentTime<=REFRESH_TOKEN_EXP_TIME){ // Si ha transcurrido mas de 4 min y menos de 150 min se debe de pedir nuevo token\n        console.log('::::::::: -- El userToken caducó pero el refreshToken sigue vigente, getJWToken()')\n        const refreshToken = await localForage.getItem(\"refresh_token\");\n        return await mainService.getJWToken(refreshToken)\n      }else{\n        console.log('::::::::: -- El userToken y el refreshToken Caducaron, doLogout')\n        throw new Error('El token ha caducado')\n      }\n    }\n    throw Error('No hay token y/o refresh_token almacenado, o ingresaste un JWT expirado')\n}\n\n\n\nconst getPublicKey = async() => {\n  let publicKey = await localForage.getItem('public_key');\n  if(!publicKey){\n    let response = await mainService.GetWithOutHeaders(GET_PUBLIC_KEY_URL)\n    if(!response){throw new Error('No se pudo obtener el publicKey')}\n    const { data } = response\n    await localForage.setItem(\"public_key\", data);\n    publicKey = data\n  }\n  return publicKey\n}\n\nexport const doLogout = async (queryString) => {\n  // mainService.destroySesion()\n  await localForage.removeItem(\"user_token\");\n  await localForage.removeItem(\"refresh_token\");\n  await localForage.removeItem(\"jwt_expiration_time\");\n  await localForage.removeItem(\"created_at\");\n  await localForage.removeItem(\"public_key\");\n  await localForage.removeItem(\"sessionState\");\n  window.location.href = queryString ? `${COINSENDA_URL}${queryString}` : COINSENDA_URL;\n};\n\nexport const handleError = async(err, callback) => {\n\n  // console.log(err)\n  // console.log(callback)\n  // debugger\n\n// TODO: add handle sentry here\n  switch (err.name || err.message) {\n    // case 'notFindUserToken':\n        // return console.log('<=========== notFindUserToken ===========>')\n    case 'JsonWebTokenError': \n        console.log('JsonWebTokenError: ', err)\n      return doLogout('?message=Tu session ha caducado')\n    case 'TokenExpiredError':\n        console.log('|||||||||||||||| El token ha expirado:', err)\n        const refreshToken = await localForage.getItem(\"refresh_token\");\n      return await mainService.getJWToken(refreshToken)\n    case 465:\n        console.log('__error__', err)\n      return\n    default:\n      console.log('handleError: ', err)\n      if(err.message === 'No hay token y/o refresh_token almacenado'){\n        return doLogout('?message=No tienes credenciales, inicia sesión')\n      }\n      callback && callback()\n        // return doLogout()\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport loadable from \"@loadable/component\";\nimport \"./loader.css\";\n\nconst Coinsenda = loadable(() => import(\"../icons/logos/coinsenda\"), {\n  fallback: (\n    <div\n      style={{\n        height: 50,\n        width: 50,\n        display: \"block\",\n      }}\n    />\n  ),\n});\n\nfunction LoaderAplicationTiny() {\n  return (\n    <div className={`_LoaderAplication withOutContry`}>\n      <div className={`LoaderContainer loaderLayout`}>\n        <div\n          style={{\n            height: 70,\n            width: 200,\n            display: \"grid\",\n          }}\n        />\n\n        <div className=\"logotypes\">\n          <Coinsenda size={50} color=\"white\" />\n          <h1 className=\"fuente\">Coinsenda</h1>\n        </div>\n        <p className=\"fuente\">Iniciando</p>\n      </div>\n      <div className=\"KycprogressBar loader\">\n        <div className=\"_kycPropgressed\" style={{ width: 2 }}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default LoaderAplicationTiny;\n","import {\n  ALL_PAIRS,\n  CURRENT_PAIR,\n  LOCAL_CURRENCY,\n  USER_PAIRS,\n  UPDATE_NORMALIZED_STATE,\n  RESET_DATA,\n  UPDATE_ALL_CURRENCIES,\n  LOCAL_PAIRS,\n  UPDATE_SWAP_PENDING,\n  REDUCE_BALANCE,\n  ADD_BALANCE,\n  ALL_PAIRS_LANDING,\n  UPDATE_ITEM_STATE,\n  SET_AUTH_DATA,\n  SET_SESSION_RESTORE,\n} from \"../actions/action_types\";\n\nconst initialState = {\n  pairs: {\n    local_collections: null,\n    all_collections: null,\n    user_collection: null,\n    lastUpdate: \"\",\n    currentPair: null,\n    localCurrency: \"\",\n  },\n  user: null,\n  deposit_providers: [],\n  wallets: null,\n  currencies: null,\n  balances: {},\n  authData: {},\n};\n\nconst data = (state = initialState, action) => {\n  let user_id;\n  let models;\n\n  switch (action.type) {\n    case UPDATE_ITEM_STATE:\n      // console.log('deposit approve ====================> ', action)\n      // alert('//REDUCER: UPDATE_ITEM_STATE')\n      return {\n        ...state,\n        [action.payload.item_type]: {\n          ...state[action.payload.item_type],\n          ...action.payload.item,\n        },\n      };\n\n    case REDUCE_BALANCE:\n      return {\n        ...state,\n        balances: {\n          ...state.balances,\n          [action.payload.id]: {\n            ...state.balances[action.payload.id],\n            // available:parseFloat(state.balances[action.payload.id].available) - parseFloat(action.payload.amount),\n            // total:parseFloat(state.balances[action.payload.id].total) - parseFloat(action.payload.amount),\n            // reserved:parseFloat(state.balances[action.payload.id].reserved) + parseFloat(action.payload.amount),\n            lastAction: \"reduce\",\n            actionAmount: parseFloat(action.payload.amount),\n          },\n        },\n      };\n\n    case ADD_BALANCE:\n      return {\n        ...state,\n        balances: {\n          ...state.balances,\n          [action.payload.id]: {\n            ...state.balances[action.payload.id],\n            available:\n              parseFloat(state.balances[action.payload.id].available) +\n              parseFloat(action.payload.amount),\n            total:\n              parseFloat(state.balances[action.payload.id].total) +\n              parseFloat(action.payload.amount),\n            lastAction: \"add\",\n            actionAmount: parseFloat(action.payload.amount),\n          },\n        },\n      };\n\n    case UPDATE_SWAP_PENDING:\n      // console.log('||||||||| NUEVO PENDIENTE', action.payload)\n      return {\n        ...state,\n        swaps: {\n          ...action.payload,\n        },\n      };\n\n    case UPDATE_ALL_CURRENCIES:\n      return {\n        ...state,\n        currencies: action.payload,\n      };\n\n    case RESET_DATA:\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    case UPDATE_NORMALIZED_STATE:\n      models = action.payload.entities;\n      user_id = action.payload.result;\n\n      return {\n        ...state,\n        ...models,\n        user: {\n          ...state.user,\n          ...models.user[user_id],\n        },\n        user_id,\n      };\n\n    case USER_PAIRS:\n      if (!state.pairs.local_collections) {\n        return state;\n      }\n\n      return {\n        ...state,\n        pairs: {\n          ...state.pairs,\n          user_collection: action.payload,\n          lastUpdate: new Date(),\n        },\n      };\n\n    case LOCAL_PAIRS:\n      return {\n        ...state,\n        pairs: {\n          ...state.pairs,\n          local_collections: [...action.payload],\n          lastUpdate: new Date(),\n        },\n      };\n\n    case ALL_PAIRS:\n      return {\n        ...state,\n        pairs: {\n          ...state.pairs,\n          all_collections: [...action.payload],\n          lastUpdate: new Date(),\n        },\n      };\n\n    case CURRENT_PAIR:\n      let result = [];\n      if (!state.pairs.local_collections) {\n        return state;\n      }\n\n      let arreglo = state.pairs.local_collections;\n      arreglo.filter((item) => {\n        let query = action.payload;\n        switch (action.prop) {\n          case \"pair\":\n            return item.buy_pair.includes(query) && result.push(item);\n          case \"currency\":\n            return (\n              item.primary_currency.currency.includes(query.toLowerCase()) &&\n              result.push(item)\n            );\n          default:\n            return false;\n        }\n      });\n\n      if (result.length < 1) {\n        result.push(arreglo[0]);\n      }\n\n      return {\n        ...state,\n        pairs: {\n          ...state.pairs,\n          currentPair: result[0],\n        },\n      };\n    case LOCAL_CURRENCY:\n      // console.log(' =================================>>>    local_currency', action.payload)\n      return {\n        ...state,\n        pairs: {\n          ...state.pairs,\n          ...action.payload,\n        },\n      };\n    case ALL_PAIRS_LANDING:\n      return {\n        ...state,\n        all_pairs: {\n          ...action.payload,\n        },\n      };\n    case SET_AUTH_DATA:\n      return {\n        ...state,\n        authData: {\n          ...action.payload,\n        },\n      };\n    case SET_SESSION_RESTORE:\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default data;\n","// Este reducer contiene las acciones de los formualrios de cuentas bancarias, billeteras y verificación\nimport {\n  SEARCH_ITEM,\n  UPDATE_FORM_CONTROL,\n  UPDATE_FORM,\n  MODAL_VIEW,\n  TOGGLE_MODAL,\n  CURRENT_FORM,\n  CLEAN_FORM,\n  REDUCE_STEP,\n  INCREASE_STEP,\n  TO_STEP,\n  FIAT_DEPOSIT,\n  UPDATE_KYC_PICTURE,\n  CLEAN_SEARCH,\n} from \"../actions/action_types\";\n\nconst initialState = {\n  form_kyc_basic: {\n    step: 1,\n  },\n  form_kyc_financial: {\n    step: 1,\n  },\n  form_kyc_advanced: {\n    newback: null,\n    newfront: null,\n    newselfie: null,\n    base64: {\n      newfront: null,\n      newback: null,\n      newselfie: null,\n    },\n    step: 1,\n  },\n  form_deposit: {\n    type_currency: \"\",\n    currency: \"bitcoin\",\n    short_currency_name: \"\",\n    short_bank_name: \"\",\n    amount: \"\",\n    deposit_way: \"bankaccount\",\n    deposit_service: \"\",\n    service_mode: \"\",\n    cost_id: \"otros_medios\",\n    step: 1,\n  },\n  form_withdraw: {\n    amount: \"\",\n    account_from: \"\",\n    withdraw_provider: \"\",\n    withdraw_account: \"\",\n    step: 1,\n  },\n  form_bank: {\n    type: \"bank\",\n    name: \"\",\n    bank_name: \"\",\n    surname: \"\",\n    owner_id: \"\",\n    account_name: \"\",\n    account_type: \"\",\n    account_number: \"\",\n    withdraw_way: \"bankaccount\",\n    step: 2,\n  },\n  form_wallet: {\n    id: \"\",\n    type: \"wallet\",\n    name: \"\",\n    currency: \"\",\n    address: \"\",\n    short_currency_name: \"\",\n    step: 1,\n  },\n  form_ticket: {\n    state: null,\n    step: 1,\n  },\n  form_control_bank: false,\n  form_control_wallet: false,\n  form_control_deposit: false,\n  isModalVisible: false,\n  modalView: \"modalView\",\n  search_deposit: [],\n  search_bank: [],\n  search_coin: [],\n  current: \"\",\n  globalStep: 0,\n};\n\nconst forms = (state = initialState, action) => {\n  // A un reducer podemos enviarle un estado inicial gracias a ES6 ej. \"state={prop:true}\"\n  switch (action.type) {\n    case CLEAN_SEARCH:\n      return {\n        ...state,\n        search_bank: [],\n      };\n\n    case UPDATE_KYC_PICTURE:\n      return {\n        ...state,\n        form_kyc_advanced: {\n          ...state.form_kyc_advanced,\n          ...action.payload,\n        },\n      };\n    case REDUCE_STEP:\n      switch (action.payload) {\n        case \"ticket\":\n          return {\n            ...state,\n            form_ticket: {\n              ...state.form_ticket,\n              step: state.form_ticket.step - 1,\n            },\n          };\n        case \"bank\":\n          return {\n            ...state,\n            form_bank: {\n              ...state.form_bank,\n              step: action.step || state.form_bank.step - 1,\n            },\n          };\n        case \"wallets\":\n          return {\n            ...state,\n            form_wallet: {\n              ...state.form_wallet,\n              step: state.form_wallet.step - 1,\n            },\n          };\n        case \"deposit\":\n          return {\n            ...state,\n            form_deposit: {\n              ...state.form_deposit,\n              step: state.form_deposit.step - 1,\n            },\n          };\n        case \"kyc_basic\":\n          return {\n            ...state,\n            form_kyc_basic: {\n              ...state.form_kyc_basic,\n              step: state.form_kyc_basic.step - 1,\n            },\n          };\n        default:\n          const { step } = action;\n          let query_prop = `form_${action.payload}`;\n          if (\n            !state[query_prop] ||\n            (state[query_prop] && !state[query_prop].step)\n          ) {\n            return state;\n          }\n          return {\n            ...state,\n            [query_prop]: {\n              ...state[query_prop],\n              step: step ? step : state[query_prop].step - 1,\n            },\n          };\n      }\n    case TO_STEP:\n      return {\n        ...state,\n        [action.payload]: action.step,\n      };\n\n    case INCREASE_STEP:\n      switch (action.payload) {\n        case \"ticket\":\n          return {\n            ...state,\n            form_ticket: {\n              ...state.form_ticket,\n              step: state.form_ticket.step + 1,\n            },\n          };\n        case \"bank\":\n          return {\n            ...state,\n            form_bank: {\n              ...state.form_bank,\n              step: state.form_bank.step + 1,\n            },\n          };\n        case \"wallets\":\n          return {\n            ...state,\n            form_wallet: {\n              ...state.form_wallet,\n              step: state.form_wallet.step + 1,\n            },\n          };\n        case \"deposit\":\n          return {\n            ...state,\n            form_deposit: {\n              ...state.form_deposit,\n              step: state.form_deposit.step + 1,\n            },\n          };\n        case \"kyc_basic\":\n          return {\n            ...state,\n            form_kyc_basic: {\n              ...state.form_kyc_basic,\n              step: action.step ? action.step : state.form_kyc_basic.step + 1,\n            },\n          };\n        case \"kyc_global_step\":\n          return {\n            ...state,\n            globalStep: action.step ? action.step : state.globalStep + 1,\n          };\n        // case 'kyc_advanced':\n        //     return {\n        //       ...state,\n        //       form_kyc_advanced:{\n        //         ...state.form_kyc_advanced,\n        //             step:state.form_kyc_advanced.step + 1\n        //           }\n        //     }\n        default:\n          const { payload, step } = action;\n          let query_prop = `form_${payload}`;\n          return {\n            ...state,\n            [query_prop]: {\n              ...state[query_prop],\n              step: step ? step : state[query_prop].step + 1,\n            },\n          };\n      }\n    case CLEAN_FORM:\n      switch (action.payload) {\n        case \"ticket\":\n          return {\n            ...state,\n            form_ticket: {\n              step: 1,\n            },\n          };\n        case \"bank\":\n          return {\n            ...state,\n            form_bank: {\n              ...initialState.form_bank,\n            },\n            isModalVisible: false,\n            loader: false,\n            modalView: \"modalView\",\n            form_control_bank: false,\n            search_bank: [],\n          };\n        case \"wallet\":\n          return {\n            ...state,\n            form_wallet: {\n              id: \"\",\n              type: \"wallet\",\n              name: \"\",\n              currency: \"\",\n              address: \"\",\n              short_currency_name: \"\",\n              step: 1,\n            },\n            form_control_wallet: false,\n            isModalVisible: false,\n            loader: false,\n            modalView: \"modalView\",\n            search_coin: [],\n          };\n        case \"deposit\":\n          return {\n            ...state,\n            form_deposit: {\n              type_currency: \"\",\n              currency: \"\",\n              short_currency_name: \"\",\n              short_bank_name: \"\",\n              amount: \"\",\n              deposit_way: \"\",\n              deposit_service: \"\",\n              service_mode: \"\",\n              step: 1,\n            },\n            form_control_deposit: false,\n            isModalVisible: false,\n            loader: false,\n            modalView: \"modalView\",\n            search_deposit: [],\n          };\n        case \"kyc_basic\":\n          return {\n            ...state,\n            form_kyc_basic: {\n              names: \"\",\n              lastnames: \"\",\n              birthDate: \"\",\n              id: \"\",\n              phone: \"\",\n              city: \"\",\n              address: \"\",\n              activity: \"\",\n              step: 1,\n            },\n          };\n        default:\n          // console.log('CLEAN_FORM',action)\n          let query_prop = `form_${action.payload}`;\n          return {\n            ...state,\n            [query_prop]: {\n              ...initialState[query_prop],\n              step: 1,\n            },\n          };\n        // return state\n      }\n    case CURRENT_FORM:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    case TOGGLE_MODAL:\n      return {\n        ...state,\n        isModalVisible: !state.isModalVisible,\n      };\n    case MODAL_VIEW:\n      return {\n        ...state,\n        modalView: action.payload,\n      };\n    case UPDATE_FORM:\n      if (action.form === \"wallet\") {\n        return {\n          ...state,\n          form_wallet: {\n            ...action.payload,\n            step: state.form_wallet.step,\n          },\n        };\n      }\n      if (action.form === \"bank\") {\n        return {\n          ...state,\n          form_bank: {\n            ...action.payload,\n            step: state.form_bank.step,\n          },\n        };\n      }\n      if (action.form === \"deposit\") {\n        return {\n          ...state,\n          form_deposit: {\n            ...action.payload,\n            step: state.form_deposit.step,\n          },\n        };\n      }\n      // if(action.form === \"kyc_basic\"){\n      //     return {\n      //       ...state,\n      //       form_kyc_basic: {\n      //         ...action.payload,\n      //         step:state.form_kyc_basic.step\n      //       }\n      //     }\n      // }\n      if (action.form === \"ticket\") {\n        return {\n          ...state,\n          form_ticket: {\n            ...state.form_ticket,\n            ...action.payload,\n            step: state.form_ticket.step,\n          },\n        };\n      }\n      // console.log(action, state)\n      // alert('reducer')\n      let query_prop = `form_${action.form}`;\n      return {\n        ...state,\n        [query_prop]: {\n          ...state[query_prop],\n          ...action.payload,\n        },\n      };\n    // return false\n    case UPDATE_FORM_CONTROL:\n      switch (action.payload.form) {\n        case \"wallet\":\n          return {\n            ...state,\n            form_control_wallet: action.payload.value,\n          };\n        case \"bank\":\n          return {\n            ...state,\n            form_control_bank: action.payload.value,\n          };\n        case \"deposit\":\n          return {\n            ...state,\n            form_control_deposit: action.payload.value,\n          };\n        default:\n          return state;\n      }\n    case SEARCH_ITEM:\n      const result = action.items.filter((item) => {\n        let query = action.payload.query.toLowerCase();\n        if (action.isEqual) {\n          return item.name.toLowerCase() === query;\n        }\n        return item.name.toLowerCase().includes(query);\n      });\n      if (action.tipos === \"wallets\") {\n        return {\n          ...state,\n          search_coin: result,\n        };\n      }\n      if (action.tipos === \"bank\" || action.tipos === \"withdraw\") {\n        return {\n          ...state,\n          search_bank: result,\n        };\n      }\n      if (action.tipos === \"deposit\") {\n        return {\n          ...state,\n          search_deposit: result,\n        };\n      }\n      // return {\n      //   ...state,\n      //   search:result\n      // }\n      break;\n    case FIAT_DEPOSIT:\n      return {\n        ...state,\n        form_deposit: {\n          ...state.form_deposit,\n          currency: action.payload.currency,\n          short_currency_name: action.payload.short_currency_name,\n          type_currency: action.payload.type_currency,\n          amount: action.payload.amount,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default forms;\n","import { LOADER, IS_APP_LOADED, APP_LOAD_LABEL } from \"../actions/action_types\";\n\nconst initialState = {\n  loader: false,\n  isAppLoaded: false,\n  appLoadLabel: \"Iniciando\",\n};\n\nconst isLoading = (state = initialState, action) => {\n  switch (action.type) {\n    case LOADER:\n      return {\n        ...state,\n        loader: action.payload,\n      };\n    case IS_APP_LOADED:\n      return {\n        ...state,\n        isAppLoaded: action.payload,\n      };\n    case APP_LOAD_LABEL:\n      return {\n        ...state,\n        appLoadLabel: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default isLoading;\n","import {\n  ITEM_QUOTE_ACTIVE,\n  MODAL_CONFIRMATION_TOGGLE,\n  CONFIRMATION_MODAL_PAYLOAD,\n  SECTION_VIEW_TO,\n  CURRENT_SECTION_PARAMS,\n  OTHER_MODAL,\n  CURRENT_SECTION_CLEAN,\n  FLOW_ANIMATION_LAYOUT,\n  FLOW_ANIMATION_OFF,\n  ADD_NOTIFICATION,\n  CLEAN_NOTIFICATIONS,\n  PLAY_VIDEO,\n  VERIFICATION_STATE,\n  DEFAULT_VIDEO_STATE,\n  CLEAN_ITEM_NOTIFICATIONS,\n  SOCKET_NOTIFY,\n  SET_RENDER_MODAL,\n  UPDATE_LOADERS,\n} from \"../actions/action_types\";\n\nconst initialState = {\n  loaders: {\n    mainList: true,\n  },\n  modal: {\n    render: null,\n  },\n  menu_item_active: \"\",\n  item_quote: {\n    buy: true,\n    sale: false,\n  },\n  modal_confirmation: {\n    visible: false,\n    action: null,\n    title: \"\",\n    description: \"\",\n    txtPrimary: \"\",\n    txtSecondary: \"\",\n    payload: null,\n  },\n  current_section: {\n    view: \"initial\", //initial - detail\n    params: {\n      enabled_create_wallet_button: true,\n      show_menu_principal: true,\n      current_wallet: null,\n      short_name: null,\n      pairsForAccount: {},\n      activity: false,\n      settings: null,\n      current_sub_section: null,\n      deposit_direct_access: null,\n      swap_socket_channel: {\n        id: null,\n        state: null,\n      },\n      swap_done_id: null,\n      swap_done_out: null,\n      swap_done_in: null,\n      new_order_style: null,\n      currentFilter: \"deposits\",\n      active_trade_operation: false,\n    },\n  },\n  otherModal: false,\n  flowAnimationLayout: \"\",\n  notifications: {\n    withdraw_accounts: {\n      amount: 0,\n      extra: {\n        account_id: null,\n        order_id: null,\n      },\n    },\n    security: {\n      amount: 0,\n    },\n    wallets: {\n      amount: 0,\n      extra: {\n        account_id: null,\n        order_id: null,\n      },\n    },\n    socket_notify: null,\n  },\n  videos: {\n    kyc_basic: {\n      play: false,\n      url: \"https://youtu.be/46UXYIPPMoc\",\n    },\n    kyc_advanced: {\n      play: false,\n      url: \"https://youtu.be/FlqYiJz4ApM\",\n    },\n  },\n  verification_state: null,\n};\n\nconst ui = (state = initialState, action) => {\n  switch (action.type) {\n    // payload,\n    // amount\n    case ADD_NOTIFICATION:\n      // console.log('||||||||||||||||||||||||||||||||||||||||||||||||| ADD_NOTIFICATION =====>', action)\n      return {\n        ...state,\n        notifications: {\n          ...state.notifications,\n          [action.payload]: {\n            amount: action.amount\n              ? state.notifications[action.payload].amount + action.amount\n              : state.notifications[action.payload].amount + 1,\n            extra: action.extra && action.extra,\n          },\n        },\n      };\n\n    case SET_RENDER_MODAL:\n      return {\n        ...state,\n        modal: {\n          render: action.payload,\n        },\n      };\n\n    case VERIFICATION_STATE:\n      return {\n        ...state,\n        verification_state: action.payload,\n      };\n\n    case SOCKET_NOTIFY:\n      return {\n        ...state,\n        notifications: {\n          ...state.notifications,\n          socket_notify: action.payload,\n        },\n      };\n\n    case DEFAULT_VIDEO_STATE:\n      return {\n        ...state,\n        videos: {\n          ...state.videos,\n          kyc_basic: {\n            ...state.videos.kyc_basic,\n            play: false,\n          },\n          kyc_advanced: {\n            ...state.videos.kyc_advanced,\n            play: false,\n          },\n        },\n      };\n\n    case PLAY_VIDEO:\n      return {\n        ...state,\n        videos: {\n          ...state.videos,\n          [action.payload]: {\n            ...state.videos[action.payload],\n            play: true,\n          },\n        },\n      };\n\n    case CLEAN_NOTIFICATIONS:\n      return {\n        ...state,\n        notifications: {\n          ...state.notifications,\n          [action.payload]: {\n            ...state.notifications[action.payload],\n            amount: 0,\n          },\n        },\n      };\n\n    case CLEAN_ITEM_NOTIFICATIONS:\n      return {\n        ...state,\n        notifications: {\n          ...state.notifications,\n          [action.payload]: {\n            ...state.notifications[action.payload],\n            extra: {\n              ...state.notifications[action.payload].extra,\n              [action.item_clean]: null,\n            },\n          },\n        },\n      };\n\n    case FLOW_ANIMATION_LAYOUT:\n      return {\n        ...state,\n        flowAnimationLayout: action.payload,\n        flowAnimationActive: true,\n      };\n\n    case FLOW_ANIMATION_OFF:\n      return {\n        ...state,\n        flowAnimationLayout: \"\",\n        flowAnimationActive: false,\n      };\n\n    case CURRENT_SECTION_CLEAN:\n      return {\n        ...state,\n        current_section: {\n          ...state.current_section,\n          params: {\n            ...initialState.current_section.params,\n            pairsForAccount: {\n              ...state.current_section.params.pairsForAccount,\n            },\n            update_list: state.current_section.params.update_list,\n            currentFilter: state.current_section.params.currentFilter,\n            show_menu_principal:\n              state.current_section.params.show_menu_principal,\n            active_trade_operation:\n              state.current_section.params.active_trade_operation,\n          },\n        },\n      };\n\n    case CURRENT_SECTION_PARAMS:\n      return {\n        ...state,\n        current_section: {\n          ...state.current_section,\n          params: {\n            ...state.current_section.params,\n            ...action.payload,\n          },\n        },\n      };\n\n    case OTHER_MODAL:\n      // console.log('has hecho click en el modal confirmation', action.payload)\n      return {\n        ...state,\n        otherModal: !state.otherModal,\n      };\n    case SECTION_VIEW_TO:\n      // console.log('has hecho click en el modal confirmation', action.payload)\n      return {\n        ...state,\n        current_section: {\n          ...state.current_section,\n          view: action.payload,\n        },\n      };\n\n    case CONFIRMATION_MODAL_PAYLOAD:\n      // console.log('has hecho click en el modal confirmation', action.payload)\n      return {\n        ...state,\n        modal_confirmation: {\n          ...action.payload,\n          visible: state.modal_confirmation.visible,\n        },\n      };\n\n    case MODAL_CONFIRMATION_TOGGLE:\n      // console.log('has hecho click en el modal confirmation', state.modal_confirmation)\n      return {\n        ...state,\n        modal_confirmation: {\n          ...state.modal_confirmation,\n          visible: !state.modal_confirmation.visible,\n        },\n      };\n    case ITEM_QUOTE_ACTIVE:\n      let ex = action.payload;\n      return {\n        ...state,\n        item_quote: {\n          buy: ex === \"buy\" ? true : false,\n          sell: ex === \"sell\" ? true : false,\n        },\n      };\n    case UPDATE_LOADERS:\n      return {\n        ...state,\n        loaders: {\n          ...state.loaders,\n          ...action.payload,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default ui;\n","import { LOGGED_IN } from \"../actions/action_types\";\n\nconst initialState = {\n  loggedIn: false,\n};\n\nconst auth = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGGED_IN:\n      return {\n        ...state,\n        loggedIn: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","import {\n  UPDATE_ACTIVITY,\n  UPDATE_PENDING_ACTIVITY,\n  PAIRS_FOR_ACCOUNT\n} from \"../actions/action_types\";\n\nconst initialState = {\n  activity_for_account: \"\",\n  pairsForAccount:\"\"\n};\n\nconst storage = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_ACTIVITY:\n      return {\n        ...state,\n        activity_for_account: {\n          ...state.activity_for_account,\n          [action.payload.account_id]: {\n            ...state.activity_for_account[action.payload.account_id],\n            [action.payload.activity_type]: action.payload.activity_list,\n          },\n        },\n      };\n\n    case UPDATE_PENDING_ACTIVITY:\n      // console.log('||||||||||||||||||||| UPDATE_ACTIVITY ==>', action)\n      let activity_label = `pending_${action.payload.activity_type}`;\n      let new_payload = {\n        expandidoMax: action.payload.expandidoMax,\n        lastPending: action.payload.lastPending,\n        pending: action.payload.pending,\n      };\n      // console.log('UPDATE_PENDING_ACTIVITY', new_payload)\n      return {\n        ...state,\n        activity_for_account: {\n          ...state.activity_for_account,\n          [action.payload.account_id]: {\n            ...state.activity_for_account[action.payload.account_id],\n            [activity_label]: new_payload,\n          },\n        },\n      };\n    case PAIRS_FOR_ACCOUNT:\n\n    return{\n      ...state,\n      pairsForAccount: {\n        ...state.pairsForAccount,\n        [action.payload.wallet_id]: {\n          ...state.pairsForAccount[action.payload.wallet_id],\n          ...action.payload.data\n        },\n      }\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default storage;\n","import modelData from \"./model-data\";\nimport form from \"./form\";\nimport isLoading from \"./is-loading\";\nimport ui from \"./ui\";\nimport auth from \"./auth\";\nimport storage from \"./storage\";\n\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n  modelData,\n  form,\n  isLoading,\n  ui,\n  auth,\n  storage,\n});\n\nexport default rootReducer;\n","export default __webpack_public_path__ + \"static/media/success.cb56b9e8.mp3\";","export default __webpack_public_path__ + \"static/media/success2.d56e7bf6.mp3\";","export default __webpack_public_path__ + \"static/media/exit.f7477658.mp3\";","export default __webpack_public_path__ + \"static/media/good.d6dee334.mp3\";","export default __webpack_public_path__ + \"static/media/toast.927e6e79.mp3\";","export default __webpack_public_path__ + \"static/media/rejected.3e0aea9b.mp3\";","export default __webpack_public_path__ + \"static/media/canceled.5bc5b1e1.mp3\";","export default __webpack_public_path__ + \"static/media/coin.b86e8254.mp3\";","import new_transaction from \"./success.mp3\";\nimport success from \"./success2.mp3\";\nimport exit from \"./exit.mp3\";\nimport good_action from \"./good.mp3\";\nimport toast from \"./toast.mp3\";\nimport confirm from \"./good.mp3\";\nimport ticket from \"./good.mp3\";\nimport ticket_rejected from \"./rejected.mp3\";\nimport ticket_canceled from \"./canceled.mp3\";\nimport add_coin from \"./coin.mp3\";\nimport notification from \"./notification.mp3\";\n\nexport const soundData = {\n  notification,\n  new_transaction: {\n    src: [new_transaction],\n    volume: 0.2,\n  },\n  confirm_transaction: {\n    src: [confirm],\n    volume: 1,\n  },\n  ticket: {\n    src: [ticket],\n    volume: 0.5,\n  },\n  ticket_rejected: {\n    src: [ticket_rejected],\n    volume: 0.5,\n  },\n  ticket_canceled: {\n    src: [ticket_canceled],\n    volume: 0.6,\n  },\n  success: {\n    src: [success],\n    volume: 0.2,\n  },\n  exit: {\n    src: [exit],\n    volume: 0.2,\n  },\n  toast: {\n    src: [toast],\n    volume: 0.8,\n  },\n  good_action,\n  add_coin,\n};\n\nexport default soundData;\n","export default __webpack_public_path__ + \"static/media/notification.85199c4f.mp3\";","import { applyMiddleware } from \"redux\";\nimport { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport logger from \"redux-logger\";\nimport soundsMiddleware from \"redux-sounds\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducers\";\nimport { mainService } from \"./services/MainService\";\nimport soundData from \"./sounds\";\n// import { updateLocalForagePersistState } from \"./components/hooks/sessionRestore\";\n\nconst loadedSoundsMiddleware = soundsMiddleware(soundData);\n\nexport function _createStore() {\n  // Grab the state from a global variable injected into the server-generated HTML\n  const preloadedState = window.__PRELOADED_STATE__;\n\n  // Allow the passed state to be garbage-collected\n  delete window.__PRELOADED_STATE__;\n\n  let store;\n  if (process.env.NODE_ENV === \"production\") {\n    store = createStore(\n      reducer,\n      preloadedState || {},\n      applyMiddleware(logger, thunk, loadedSoundsMiddleware)\n    );\n  } else {\n    store = createStore(\n      reducer,\n      {},\n      composeWithDevTools(\n        applyMiddleware(logger, thunk, loadedSoundsMiddleware)\n      )\n    );\n  }\n\n  // Tell react-snap how to save Redux state\n  window.snapSaveState = () => ({\n    __PRELOADED_STATE__: store.getState(),\n  });\n\n  store.subscribe(() => {\n    if (store.getState().modelData.authData.userToken) {\n      mainService.setGlobalState(store.getState());\n    }\n    // window.addEventListener(\"onbeforeunload\", async(e) => {\n    //   // e.preventDefault()\n    //   await updateLocalForagePersistState(store.getState().modelData)\n    //   return undefined\n    // });\n    // window.onbeforeunload = (e) => updateLocalForagePersistState(store.getState().modelData, e);\n  });\n\n  return store;\n\n}\n","import React from \"react\";\n// import { render } from 'react-dom';\nimport loadable from \"@loadable/component\";\n// import { hydrate, render } from \"react-dom\";\nimport { render } from 'react-snapshot';\nimport \"./basic-style.css\";\nimport \"./index.css\";\nimport \"./new-mobile-style.css\";\nimport \"./components/sockets/socket_notify/socketNotify.css\";\nimport \"./components/withdrawAccounts/new/views/ticket.css\";\nimport \"./components/withdrawAccounts/new/views/views.css\";\nimport \"./components/wallets/newWallet/newWallet.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import RootContainer from './root'\nimport { Provider } from \"react-redux\";\nimport LoaderAplicationTiny from \"./components/widgets/loaders/loader-application-tiny\";\nimport { _createStore } from \"./store\";\n// const script = document.createElement(\"script\");\n// script.src = \"https://scrollmagic.io/docs/plugins_debug.addIndicators.js\";\n// script.async = true;\n// document.body.appendChild(script);\n\nconst LazyRoot = loadable(() => import(/* webpackPrefetch: true */ \"./components/Root\"), { fallback: <LoaderAplicationTiny /> });\n\nexport const store = _createStore();\n\nconst rootElement = document.getElementById(\"home-container\");\nconst App = () => (\n  <Provider store={store}>\n    <LazyRoot />\n  </Provider>\n);\n\nrender(<App />, rootElement);\n\nconst noLogsOnProduction = () => {\n  console.log = () => null;\n};\n\nif (process.env.NODE_ENV === \"production\" && process.env.REACT_APP_BUILD_CONFIG !== 'development') {\n  // noLogsOnProduction();\n}\n\nif(process.env.NODE_ENV === \"production\"){\n  serviceWorker.register();\n}\n\nif (window && window.CSS && window.CSS.registerProperty) {\n  window.CSS.registerProperty({\n    name: \"--primary\",\n    syntax: \"<color>\",\n    inherits: true,\n    initialValue: \"#014c7d\",\n  });\n  window.CSS.registerProperty({\n    name: \"--secondary\",\n    syntax: \"<color>\",\n    inherits: true,\n    initialValue: \"#0198ff\",\n  });\n}\n","import {\n  INCREASE_STEP,\n  REDUCE_STEP,\n  CLEAN_FORM,\n  CURRENT_FORM,\n  SEARCH_ITEM,\n  UPDATE_FORM_CONTROL,\n  UPDATE_FORM,\n  MODAL_VIEW,\n  TOGGLE_MODAL,\n  FIAT_DEPOSIT,\n  UPDATE_KYC_PICTURE,\n  CLEAN_SEARCH,\n  TO_STEP,\n} from \"./action_types\";\n\nexport const ToStep = (payload, explicitStep) => {\n  return {\n    type: TO_STEP,\n    payload: payload,\n    step: explicitStep,\n  };\n};\n\nexport const IncreaseStep = (payload, explicitStep) => {\n  return {\n    type: INCREASE_STEP,\n    payload: payload,\n    step: explicitStep,\n  };\n};\n\nexport const FiatDeposit = (short_currency_name) => {\n  return {\n    type: FIAT_DEPOSIT,\n    payload: {\n      type_currency: \"fiat\",\n      short_currency_name: short_currency_name,\n      currency: short_currency_name,\n    },\n  };\n};\n\nexport const ReduceStep = (payload, explicitStep) => {\n  return {\n    type: REDUCE_STEP,\n    payload: payload,\n    step: explicitStep,\n  };\n};\n\nexport const cleanSearch = (payload) => {\n  return {\n    type: CLEAN_SEARCH,\n    payload: payload,\n  };\n};\n\n// View for CurrentForm\n// \"deposit\"\n// \"wallets\"\n// \"bank\"\n// \"referral\"\n// \"kyc_basic\"\n\nexport const CurrentForm = (payload) => {\n  return {\n    type: CURRENT_FORM,\n    payload: payload,\n  };\n};\n\nexport const CleanForm = (form) => {\n  return {\n    type: CLEAN_FORM,\n    payload: form,\n  };\n};\n\nexport const toggleModal = () => {\n  return {\n    type: TOGGLE_MODAL,\n  };\n};\n\n// modalSuccess\n// modalView\n// pendingView\n// badView\n// rejectedView\n// confirmedView\n\nexport const ModalView = (view) => {\n  return {\n    type: MODAL_VIEW,\n    payload: view,\n    meta: {\n      sound: {\n        play:\n          view === \"pendingView\" || view === \"confirmedView\"\n            ? \"ticket\"\n            : view === \"badView\"\n            ? \"ticket_canceled\"\n            : view === \"rejectedView\"\n            ? \"ticket_rejected\"\n            : \"\",\n      },\n    },\n  };\n};\n\nexport const Search = (query, type, items, isEqual = false) => {\n  return {\n    type: SEARCH_ITEM,\n    payload: {\n      query: query,\n    },\n    tipos: type,\n    items: items,\n    isEqual,\n  };\n};\n\nexport const UpdateFormControl = (form, value) => {\n  return {\n    type: UPDATE_FORM_CONTROL,\n    payload: { form, value },\n  };\n};\n\nexport const UpdatePicKyc = (payload) => {\n  return {\n    type: UPDATE_KYC_PICTURE,\n    payload: payload,\n  };\n};\n\nexport const UpdateForm = (form, state) => {\n  switch (form) {\n    case \"ticket\":\n      return {\n        type: UPDATE_FORM,\n        form: form,\n        payload: {\n          ...state,\n        },\n      };\n\n    case \"wallet\":\n      return {\n        type: UPDATE_FORM,\n        form: form,\n        payload: {\n          id: \"\",\n          address: \"\",\n          name: state.name,\n          currency: state.currency,\n          short_currency_name: state.short_currency_name,\n          type: \"wallet\",\n        },\n      };\n\n    case \"bank\":\n      return {\n        type: UPDATE_FORM,\n        form: form,\n        payload: {\n          ...state,\n        },\n      };\n\n    case \"deposit\":\n      return {\n        type: UPDATE_FORM,\n        form: form,\n        payload: {\n          type_currency: state.type_currency,\n          currency: state.currency,\n          short_currency_name: state.short_currency_name,\n          short_bank_name: state.short_bank_name,\n          amount: state.amount,\n          deposit_way: state.deposit_way,\n          deposit_service: state.deposit_service,\n          service_mode: state.service_mode,\n          cost_id: state.cost_id,\n        },\n      };\n\n    // case 'kyc_basic':\n    //   return {\n    //     type:UPDATE_FORM,\n    //     form:form,\n    //     payload:{\n    //       names:state.names,\n    //       lastnames:state.lastnames,\n    //       birthDate:state.birthDate,\n    //       id:state.id,\n    //       phone:state.phone,\n    //       city:state.city,\n    //       address:state.address,\n    //       activity:state.activity\n    //     }\n    //   }\n\n    default:\n      return {\n        type: UPDATE_FORM,\n        form: form,\n        payload: {\n          ...state,\n        },\n      };\n  }\n};\n\nexport default UpdateFormControl;\n","// import {\n// UPDATE_KYC_PICTURE\n// } from './action_types'\n\nexport function ticket_canceled() {\n  return {\n    type: \"TICKET_CANCELED_SOUND_EFFECT\",\n    meta: {\n      sound: {\n        play: \"ticket_canceled\",\n      },\n    },\n  };\n}\n\nexport function notification() {\n  return {\n    type: \"ADD_NOTIFICATION\",\n    meta: {\n      sound: {\n        play: \"notification\",\n      },\n    },\n  };\n}\n\nexport function ticket_rejected() {\n  return {\n    type: \"TICKET_REJ_SOUND_EFFECT\",\n    meta: {\n      sound: {\n        play: \"ticket_rejected\",\n      },\n    },\n  };\n}\n\nexport function ticket() {\n  return {\n    type: \"TICKET_SOUND_EFFECT\",\n    meta: {\n      sound: {\n        play: \"ticket\",\n      },\n    },\n  };\n}\n\nexport function show_sound() {\n  return {\n    type: \"SHOW_SOUND_EFFECT\",\n    meta: {\n      sound: {\n        play: \"new_transaction\",\n      },\n    },\n  };\n}\n\nexport function confirm_sound() {\n  return {\n    type: \"CONFIRM_SOUND_EFFECT\",\n    meta: {\n      sound: {\n        play: \"confirm_transaction\",\n      },\n    },\n  };\n}\n\nexport function success_sound() {\n  return {\n    type: \"SUCCESS_SOUND_EFFECT\",\n    meta: {\n      sound: {\n        play: \"success\",\n      },\n    },\n  };\n}\n\nexport function exit_sound() {\n  return {\n    type: \"EXIT_SOUND_EFFECT\",\n    meta: {\n      sound: {\n        play: \"exit\",\n      },\n    },\n  };\n}\n\nexport function toast_sound() {\n  return {\n    type: \"TOAST_SOUND_EFFECT\",\n    meta: {\n      sound: {\n        play: \"toast\",\n      },\n    },\n  };\n}\n\nexport function add_coin_sound() {\n  return {\n    type: \"ADD_COIN_SOUND\",\n    meta: {\n      sound: {\n        play: \"add_coin\",\n      },\n    },\n  };\n}\n\nexport default show_sound;\n","import { GET_JWT_URL, DESTROY_SESSION_URL } from \"../../const/const\";\nimport { setAuthData } from \"../auth\";\nimport {\n  // doLogout,\n  handleError,\n  verifyUserToken,\n  saveUserToken,\n  getToken\n} from '../../components/utils'\n\n\nexport class WebService {\n\n  async doFetch(url, params) {\n    try {\n      await verifyUserToken()\n      const response = await fetch(url, params);\n      const finalResponse = await response.json();\n      if (!response.ok && response.status === 465) {\n        if (finalResponse.error.message.includes(\"Invalid signature\")) {\n          // TODO: add refresh_token flow to get a new jwt\n          // doLogout('?message=Invalid signature')\n        }\n        throw response.status;\n      }\n      return await finalResponse;\n    } catch (_) {\n      handleError(_)\n      return false;\n    }\n  }\n\n\n  async GetWithOutHeaders(url) {\n    try {\n      const response = await fetch(url, {method: `GET`});\n      const finalResponse = await response.json();\n      return finalResponse;\n    } catch (_) {\n      handleError(_)\n      return false;\n    }\n  }\n\n\n\n  async getJWToken(refreshToken) {\n\n    const tokenData = await getToken()\n    if(!tokenData){return}\n    const { auth_client_id } = tokenData\n\n    const params = {\n      method: `POST`,\n      headers: {\n          client_id: auth_client_id,\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${refreshToken}`,\n      }\n    };\n\n    const response = await fetch(GET_JWT_URL, params);\n\n    \n    if(!response){\n      console.log('||||||| getJWToken ===> ', response)\n      debugger\n      throw new Error('No se pudo obtener el nuevo jwt')\n    }\n    const res = await response.json()\n    const { data:{ jwt, refresh_token } } = res\n    const decodedToken = await saveUserToken(jwt, refresh_token)\n    let userData = {\n        userToken:jwt,\n        userEmail: decodedToken.email,\n        userId: decodedToken.usr\n    }\n    await this.dispatch(setAuthData(userData));\n    return {...userData, decodedToken }\n  }\n\n  async Get(url) {\n    const tokenData = await getToken()\n    if(!tokenData){return}\n    const { userToken } = tokenData\n    let headers = {\n      Authorization: `Bearer ${userToken}`,\n    };\n    return this.doFetch(url, {\n      method: `GET`,\n      headers,\n    });\n  }\n\n\n  isEmpty(data) {\n    return !data || (data && data.lenght === 0);\n  }\n\n\n  async destroySesion(url) {\n    \n    const tokenData = await getToken()\n    if(!tokenData){return}\n    const { userToken } = tokenData\n\n      let body = {\n        data:{\n          destroy_all:false, \n          jwt:userToken\n        }\n      }\n      let res = await this.Post(DESTROY_SESSION_URL, body )\n      console.log('|||||||||||||||||||||||||||||||||| destroySesion:  ', res)\n  }\n\n\n  async Post(url, body, withAuth = true) {\n    const tokenData = await getToken()\n    if(!tokenData){return}\n    const { userToken } = tokenData\n    let params = {\n      method: `POST`,\n      headers: withAuth\n        ? {\n            Accept: `*/*`,\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${userToken}`,\n          }\n        : {},\n      body: JSON.stringify(body),\n    };\n\n    return this.doFetch(url, params);\n  }\n\n  Delete(url) {\n    return this.doFetch(url, {\n      method: \"DELETE\",\n    });\n  }\n}\n","import { WebService } from \"../actions/API/WebService\";\nimport {\n  UPDATE_DEPOSIT_URL,\n  NEW_DEPOSIT_URL,\n  loadLabels,\n  DEPOSITS_URL,\n  GET_DEPOSIT_BY_USERS_URL,\n  SUBSCRIBE_TO_DEPOSITS_URL,\n} from \"../const/const\";\nimport { appLoadLabelAction } from \"../actions/loader\";\nimport normalizeUser from \"../schemas\";\nimport { updateNormalizedDataAction } from \"../actions/dataModelActions\";\nimport { success_sound } from \"../actions/soundActions\";\nimport actions from \"../actions\";\nimport { normalized_list } from \"../utils\";\n\nconst { update_item_state } = actions;\n\n\n\nexport class DepositService extends WebService {\n\n  async fetchDepositProviders() {\n\n    this.dispatch(\n      appLoadLabelAction(loadLabels.OBTENIENDO_PROVEEDORES_DE_DEPOSITO)\n    );\n\n    const finalUrl = `${DEPOSITS_URL}users/${this.user.id}/depositProviders?country=${this.user.country}&filter[include]=depositAccount`;\n    const response = await this.Get(finalUrl);\n    if (!response) return;\n\n    let updateState = true;\n    if (await this.isCached(\"deposit_providers\", response)) {\n      updateState = false;\n    }\n\n    const result = response.reduce((result, item) => {\n      result.push({\n        ...item,\n        provider: {\n          ...item.depositAccount,\n          account: {\n            ...item.depositAccount.account,\n          },\n        },\n      });\n      return result;\n    }, []);\n\n    const finalData = {\n      id: this.user.id,\n      deposit_providers: [...result],\n    };\n\n    const normalizedData = await normalizeUser(finalData);\n    updateState && this.dispatch(updateNormalizedDataAction(normalizedData));\n    return normalizedData.entities.deposit_providers;\n  }\n\n\n\n  async createDeposit(\n    currency,\n    amount,\n    accountId,\n    costId,\n    depositService,\n    user,\n    serviceMode,\n    depositProviderId\n  ) {\n    const body = {\n      data: {\n        currency: currency,\n        amount: amount,\n        cost_id: costId,\n        deposit_provider_id: depositProviderId,\n        info: { depositService, serviceMode },\n        comment: \"\",\n        account_id: accountId,\n        country: user.country,\n      },\n    };\n\n    // console.log(body)\n    // debugger\n\n    const result = await this.Post(NEW_DEPOSIT_URL, body);\n    if (result === 465 || !result) {\n      return false;\n    }\n    const { data } = result;\n\n    return data;\n  }\n\n\n  async confirmDepositOrder(order_id, base64image) {\n    const user = this.user;\n\n    const body = {\n      data: {\n        country: user.country,\n        deposit_id: order_id,\n        state: \"confirmed\",\n        // \"account_id\": account_id,\n        proof_of_payment: {\n          type: \"image\",\n          proof: base64image,\n        },\n      },\n    };\n    return await this.Post(UPDATE_DEPOSIT_URL, body);\n  }\n\n  async addUpdateDeposit(deposit_id, state) {\n    const user = this.user;\n    const body = {\n      data: { \n        country: user.country,\n        deposit_id,\n        state,\n      },\n    };\n    return this.Post(UPDATE_DEPOSIT_URL, body);\n  }\n\n\n  async validateAddress(address) {\n    const user = this.user;\n\n    const finalUrl = `${GET_DEPOSIT_BY_USERS_URL}/${user.id}/depositProviders?country=${user.country}&filter={\"where\":{\"account.account_id.account_id\":\"${address}\" }}`;\n    const Raddress = await this.Get(finalUrl);\n\n    if (!Raddress) return;\n\n    if (address === Raddress[0].account.account_id.account_id) {\n      return true;\n    }\n    return false;\n  }\n\n  async getDepositById(id) {\n    const finalUrl = `${GET_DEPOSIT_BY_USERS_URL}/${this.user.id}/deposits?country=${this.user.country}&filter={\"where\": {\"id\":\"${id}\"}, \"include\":{\"relation\":\"paymentProof\"}}`;\n    const deposit = await this.Get(finalUrl);\n\n    return deposit[0];\n  }\n\n  async createDepositProvider(account_id, country) {\n\n    let body = {\n      data: {\n        account_id,\n        country,\n      },\n    };\n\n    const finalUrl = `${DEPOSITS_URL}depositProviders/create-deposit-provider-by-account-id`;\n    const deposit_prov = await this.Post(finalUrl, body);\n    if (deposit_prov === 465 || !deposit_prov) {\n      return;\n    }\n\n    const { data } = deposit_prov;\n    this.dispatch(success_sound());\n    return data[0] && data[0].id;\n  }\n\n  async createAndInsertDepositProvider(account) {\n    if (!account) return;\n    const dep_prov_id = await this.createDepositProvider(\n      account.id,\n      account.country\n    );\n    const deposit_providers = await this.fetchDepositProviders();\n    if (!dep_prov_id) {\n      return;\n    }\n\n    const update_wallet = {\n      [account.id]: {\n        ...account,\n        dep_prov: [dep_prov_id],\n        deposit_provider: deposit_providers[dep_prov_id],\n      },\n    };\n    await this.dispatch(update_item_state(update_wallet, \"wallets\"));\n    return true;\n  }\n\n  async getDepositByAccountId(accountId, filter) {\n    const finalUrl = `${GET_DEPOSIT_BY_USERS_URL}/${this.user.id}/deposits?country=${this.user.country}&filter={\"where\":{\"account_id\":\"${accountId}\"${filter ? `, ${filter}` : \"\"}}}`;\n    const deposit = await this.Get(finalUrl);\n    // console.log('|||||||||||||||||||||||||||||||||||||||||||| FINAL URL ::', finalUrl, deposit)\n    return deposit;\n  }\n\n  async subscribeToNewDeposits(provider_id) {\n    const user = this.user;\n    const body = {\n      data: {\n        country: user.country,\n        deposit_provider_id: provider_id,\n      },\n    };\n    return await this.Post(\n      SUBSCRIBE_TO_DEPOSITS_URL,\n      body,\n    );\n  }\n\n  async get_deposits(account_id, limit = 20, skip = 0) {\n    // @params:\n    // account_id\n    const user = this.user;\n    let filter = `{\"where\":{\"account_id\":\"${account_id}\"}, \"limit\":${limit}, \"skip\":${skip}, \"order\":\"id DESC\", \"include\":{\"relation\":\"user\"}}`;\n    const finalUrl = `${DEPOSITS_URL}users/${user.id}/deposits?country=${user.country}&filter=${filter}`;\n\n    let deposits = await this.processDepositList(finalUrl)\n    if(!deposits){return false}\n\n    deposits = this.parseActivty(deposits, \"deposits\", account_id);\n    await this.dispatch(normalized_list(deposits, \"deposits\"));\n    await this.updateActivityState(account_id, \"deposits\", deposits);\n\n    return deposits;\n  }\n\n  async get_referral_deposits(account_id, limit = 11, skip = 0) {\n    // @params:\n    const user = this.user;\n    let filter = `{\"where\":{\"info.is_referral\":\"true\"}, \"limit\":${limit}, \"skip\":${skip}, \"order\":\"id DESC\", \"include\":{\"relation\":\"user\"}}`;\n    // const finalUrl = `${DEPOSITS_URL}users/${user.id}/deposits?country=${user.country}&filter={\"limit\":${limit}, \"skip\":${skip}, \"order\":\"id DESC\", \"include\":{\"relation\":\"user\"}}`;\n    const finalUrl = `${DEPOSITS_URL}users/${user.id}/deposits?country=${user.country}&filter=${filter}`;\n    let deposits = await this.processDepositList(finalUrl)\n    if(!deposits){return false}\n    await this.dispatch(normalized_list(deposits, \"deposits\"));\n    return deposits\n  }\n\n\n\n  async processDepositList(url){\n\n    const deposits = await this.Get(url);\n    if ((!deposits || deposits === 465) || (deposits && !deposits.length)) {\n      return false;\n    }\n\n    let remodeled_deposits = await deposits.map((item, index) => {\n      let new_item = {\n        ...item,\n        type_order: \"deposit\",\n        // info:{\n        //   is_referral:true\n        // }\n      };\n      return new_item;\n    });\n\n    return remodeled_deposits\n\n  }\n\n}\n","// import localForage from \"localforage\";\n// import { HistoricalPriceService } from \"../actions/API/HistoricalPricesService\";\nimport { TransactionService } from \"./CoinsendaTransactionService\";\nimport { ReferralService } from \"./CoinsendaReferralService\";\nimport { WithdrawService } from \"./CoinsendaWithdrawService\";\nimport { IndetityService } from \"./CoisendaIndetityService\";\nimport { DepositService } from \"./CoinsendaDepositService\";\nimport { SwapService } from \"./CoinsendaSwapService\";\nimport { AccountService } from \"./CoinsendaAccountService\";\nimport { FreshChatService } from \"./CoinsendaFreshChatService\";\nimport { PushNotificationService } from \"./pushNotifications\";\nimport userSource from \"../components/api\";\nimport normalizeUser from \"../schemas\";\nimport { updateNormalizedDataAction } from \"../actions/dataModelActions\";\nimport isAppLoading, {\n  // appLoadLabelAction,\n  isAppLoaded,\n} from \"../actions/loader\";\nimport sleep from \"../utils/sleep\";\nimport { GET_URLS, GET_CHART_DATA_URL } from \"../const/const\";\nimport { updateLoadersAction } from \"../actions/uiActions\";\n// import { observable, decorate, computed, action } from \"mobx\"\n\n\nconst aggregation = (baseClass, ...mixins) => {\n  let base = class _Combined extends baseClass {\n    constructor(...args) {\n      super(...args);\n      mixins.forEach((mixin) => {\n        mixin.prototype.initializer && mixin.prototype.initializer.call(this);\n      });\n    }\n  };\n  let copyProps = (target, source) => {\n    Object.getOwnPropertyNames(source)\n      .concat(Object.getOwnPropertySymbols(source))\n      .forEach((prop) => {\n        if (\n          prop.match(\n            /^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/\n          )\n        )\n          return;\n        Object.defineProperty(\n          target,\n          prop,\n          Object.getOwnPropertyDescriptor(source, prop)\n        );\n      });\n  };\n  mixins.forEach((mixin) => {\n    copyProps(base.prototype, mixin.prototype);\n    copyProps(base, mixin);\n  });\n  return base;\n};\n\nconst inheritances = aggregation(\n  TransactionService,\n  ReferralService,\n  WithdrawService,\n  IndetityService,\n  DepositService,\n  SwapService,\n  AccountService,\n  FreshChatService,\n  PushNotificationService\n);\n\nexport class MainService extends inheritances {\n\n  token;\n  globalState;\n  dispatch;\n\n  static instance;\n\n  initialize(dispatch, state, token) {\n    this.dispatch = dispatch;\n    this.globalState = state;\n    this.token = token ? token : this.token;\n  }\n\n  static getInstance() {\n    if (!MainService.instance) {\n      MainService.instance = new MainService();\n    }\n    return MainService.instance;\n  }\n\n  get user() {\n    return this.globalState.modelData.user;\n  }\n\n  get authData() {\n    return this.globalState.modelData.authData;\n  }\n\n  setGlobalState(newValue) {\n    return (this.globalState = newValue);\n  }\n\n\n\n\n\n  async loadFirstEschema() {\n    const dataNormalized = await normalizeUser(userSource);\n    this.dispatch(updateNormalizedDataAction(dataNormalized));\n  }\n\n  // async countryValidator() {\n  //     // Debemos agregar el lastCountryInit al modelo profile (para saber con que país se logeo la ultima vez)\n  //     const URL = `${Environment.IdentityApIUrl}countryvalidators/findOne?country=colombia`\n  //     const res = await this.Get(URL)\n  //     const countries = await addIndexToRootObject(res.levels.level_1.personal.natural.country)\n  //     const array = await objectToArray(countries)\n  //     const result = {\n  //         res: res[0],\n  //         countries,\n  //         country_list: array\n  //     }\n  //     return result\n  // }\n\n  setIsAppLoading(value) {\n    return this.dispatch(isAppLoading(value));\n  }\n\n  async init(callback) {\n    while (!this.user) {\n      await sleep(2000);\n    }\n    const wallets = await this.getWalletsByUser();\n    const verificationStatus = await this.getVerificationState();\n    if (!wallets && verificationStatus === \"accepted\") {\n      await this.createInitialEnvironmentAccount();\n    }\n    this.postLoader(callback, false);\n    return;\n  }\n\n  async postLoader(callback, restoreBalancesAndWallets = true) {\n    try {\n      this.dispatch(\n        updateLoadersAction({\n          mainList: true,\n        })\n      );\n      restoreBalancesAndWallets && (await this.getWalletsByUser());\n      let pairs = await this.fetchAllPairs();\n      if (!pairs) {\n        // return callback();\n      }\n      const currencies = await this.fetchAllCurrencies();\n      if (!currencies) throw currencies;\n      await this.getPairsByCountry(this.user.country, currencies);\n      await this.fetchDepositProviders();\n      await this.fetchWithdrawProviders();\n      await this.fetchWithdrawAccounts();\n      await this.getReferralCode()\n      if(this.user.levels.identity === 'confirmed' && this.user.levels.personal === 'confirmed'){\n        await this.updateUserStatus()\n      }\n      this.dispatch(\n        updateLoadersAction({\n          mainList: false,\n        })\n      );\n    } catch (error) {\n      await sleep(5000);\n      // this.postLoader(callback);\n    }\n  }\n\n  async getOrderById(orderId, orderType) {\n    const apiUrl = GET_URLS[orderType] || GET_URLS.swaps;\n    const filter = `{\"where\":{\"id\":\"${orderId}\"}}`;\n    const finalUrl = `${apiUrl}/${this.user.id}/${orderType}?country=${this.user.country}&filter=${filter}`;\n    const order = await this.Get(finalUrl);\n\n    if (!order || order.length < 1) {\n      return false;\n    }\n\n    return order[0];\n  }\n\n  getUserVerificationStatus(levelRequest) {\n    const { advanced, basic, financial } = this.user.security_center.kyc;\n    switch (levelRequest) {\n      case \"level_1\":\n        return advanced === \"accepted\" && basic === \"accepted\";\n      case \"level_2\":\n        return (\n          advanced === \"accepted\" &&\n          basic === \"accepted\" &&\n          financial === \"accepted\"\n        );\n      default:\n        return false;\n    }\n  }\n\n  async fetchChartData(data) {\n    const response = await this.Post(GET_CHART_DATA_URL, data);\n    return response;\n  }\n\n  parseActivty(activity, activityType, accountId) {\n    const { storage: { activity_for_account }} = this.globalState;\n\n    if (activity_for_account && activity_for_account[accountId] && activity_for_account[accountId][activityType]) {\n      activity = [\n        ...activity_for_account[accountId][activityType],\n        ...activity,\n      ];\n    }\n\n    return activity;\n  }\n\n  async addItemToState(typeList, newOrder) {\n    let list = this.globalState.modelData[typeList];\n    let user = this.user;\n\n    let user_update = {\n      id: user.id,\n      [typeList]: {\n        new_order: newOrder,\n        ...list,\n      },\n    };\n\n    let normalizedUser = await normalizeUser(user_update);\n    await this.dispatch(updateNormalizedDataAction(normalizedUser));\n    return normalizedUser;\n  }\n\n  async setAppLoading(payload) {\n    this.dispatch(isAppLoaded(payload));\n  }\n\n  async isCached(path, newData, doStateValidation = true) {\n    return false;\n    // const localState = this.globalState.modelData;\n    // const cached = await localForage.getItem(\"CACHED_DATA\");\n    // if (cached && cached[path]) {\n    //   if (deepEqual(cached[path], newData)) {\n    //     const existInState = localState[path];\n    //     if (doStateValidation && !existInState) {\n    //       return false;\n    //     }\n    //     return true;\n    //   } else {\n    //     await localForage.setItem(\"CACHED_DATA\", {\n    //       ...cached,\n    //       [path]: newData,\n    //     });\n    //   }\n    // } else {\n    //   await localForage.setItem(\"CACHED_DATA\", { ...cached, [path]: newData });\n    // }\n    // return false;\n  }\n\n}\n\n// preserve for future aplication\n// decorate(MainService, {\n//     globalState: observable.deep,\n//     setGlobalState: action,\n//     user: computed,\n//     globalState: computed\n// })\n\nexport const mainService = MainService.getInstance();\n","import { WebService } from \"../actions/API/WebService\";\nimport { appLoadLabelAction } from \"../actions/loader\";\nimport { updateAllCurrenciesAction } from \"../actions/dataModelActions\";\nimport {\n  loadLabels,\n  LOCAL_CURRENCIES_URL,\n  CURRENCIES_URL,\n  ADD_RESTORE_ID_URL,\n  GET_PROFILE_URL,\n  ADD_PROFILE_URL,\n  TWO_FACTOR_URL,\n  TWO_FACTOR_BASE_URL\n} from \"../const/const\";\nimport { matchItem } from \"../utils\";\nimport { coins } from \"../components/api/ui/api.json\";\n\nexport class TransactionService extends WebService {\n  async fetchAllCurrencies() {\n    await this.dispatch(\n      appLoadLabelAction(loadLabels.OBTENIENDO_TODAS_LAS_DIVISAS)\n    );\n\n    const response = await this.Get(CURRENCIES_URL);\n    let new_currencies = [];\n\n    // en caso de que ocurra un error en esta petición cargaremos con datos harcodeados el modelo\n    if (!response) {\n      this.dispatch(updateAllCurrenciesAction(new_currencies));\n      return coins;\n    }\n\n    // let updateState = true;\n    // if (\n    //   this.isCached(\"fetchAllCurrencies_\", response, false) &&\n    //   this.globalState.modelData.currencies\n    // ) {\n    //   updateState = false;\n    // }\n\n    const currencies = response.reduce((result, currency) => {\n      const split = currency.node_url && currency.node_url.split(\"api\");\n      result.push({\n        currency_type: currency.currency_type,\n        id: currency.id,\n        type: \"coins\",\n        name: currency.currency,\n        code: currency.symbol.toLowerCase(),\n        selection: false,\n        is_token: currency.is_token,\n        min_amount: currency.deposit_min_amount,\n        ...currency,\n        node_url: split && split[0],\n      });\n      return result;\n    }, []);\n    // updateState && (await this.dispatch(updateAllCurrenciesAction(currencies)));\n    await this.dispatch(updateAllCurrenciesAction(currencies))\n    return currencies;\n  }\n\n  async userHasTransactionSecurity(userId) {\n    const url = `${TWO_FACTOR_BASE_URL}users/${userId}/transactionSecurity`;\n    const response = await this.Get(url);\n    if (!response || response === 465 || (response && !response.length)) {\n      return false;\n    }\n\n\n    const withdrawScope = \"withdraw:withdraws:addNewWithdraw::*\";\n    return {\n      transaction_security_id: response[0].id,\n      scopes: {\n        withdraw: response[0].scopes[withdrawScope],\n      },\n    };\n  }\n\n  async getNew2faSecretCode() {\n    const body = {\n      data: {\n        country: this.user.country,\n      },\n    };\n    const response = await this.Post(`${TWO_FACTOR_URL}/get-new-2fa-secret-code`, body);\n    if (response === 465 || !response) {\n      return false;\n    }\n\n    return response;\n  }\n\n  async addNewTransactionSecurity(twofa_token) {\n    const body = {\n      data: {\n        country: this.user.country,\n        enabled: true,\n        type: \"2fa\",\n        twofa_token,\n      },\n    };\n    const response = await this.Post(`${TWO_FACTOR_URL}/add-new-transaction-security`, body);\n    if (response === 465 || !response) {\n      return false;\n    }\n    const withdrawScope = \"withdraw:withdraws:addNewWithdraw::*\";\n    const { data } = response;\n    return {\n      transaction_security_id: data.id,\n      scopes: {\n        withdraw: data.scopes[withdrawScope],\n      },\n    };\n  }\n\n  async disable2fa(token) {\n    // const { transaction_security_id } = await this.userHasTransactionSecurity(this.user.id)\n    const body = {\n      data: {\n        transaction_security_id: this.user.security_center.txSecurityId,\n        country: this.user.country || \"colombia\",\n        twofa_token: token,\n      },\n    };\n\n    const res = await this.Post(`${TWO_FACTOR_URL}/disable-transaction-security`, body);\n    return res;\n  }\n\n  async addRestoreId(restore_id) {\n    const body = {\n      data: {\n        restore_id,\n      },\n    };\n    const response = await this.Post(ADD_RESTORE_ID_URL, body);\n    if (response === 465 || !response) {\n      return false;\n    }\n    return response;\n  }\n\n  async addSymbolToLocalCollections(pairs, localCurrency, currencies) {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    return pairs.reduce((result, value) => {\n      const secondaryShortName = matchItem(currencies, { primary: localCurrency }, \"currency\");\n      const primaryShortName = matchItem(currencies, { primary: value.primary_currency.currency }, \"currency\");\n      if (secondaryShortName && primaryShortName) {\n        result.push({\n          ...value,\n          secondaryShortName: secondaryShortName[0].symbol,\n          primaryShortName: primaryShortName[0].symbol,\n        });\n        return result;\n      }\n    }, []);\n  }\n\n  async getLocalCurrency(country) {\n    const [countryCurrency] = await this.Get(\n      `${LOCAL_CURRENCIES_URL}{\"where\": {\"name\": \"${country}\"}}`\n    );\n\n    if (this.isEmpty(countryCurrency)) return;\n\n    const localCurrencyId = countryCurrency.currency_id;\n    let localCurrencyData = await this.Get(\n      `${CURRENCIES_URL}{\"where\": {\"id\": \"${localCurrencyId}\"}}`\n    );\n    if (this.isEmpty(localCurrencyData)) return;\n    localCurrencyData = localCurrencyData[0];\n\n    return {\n      currency: localCurrencyData.currency,\n      currency_type: localCurrencyData.currency_type,\n      localCurrency: localCurrencyData.symbol.toLowerCase(),\n      country,\n    };\n  }\n\n  async fetchUserProfile() {\n    return this.Get(`${GET_PROFILE_URL}/${this.authData.userId}/profile`);\n  }\n\n  async addNewProfile(country) {\n    const body = {\n      data: {\n        country: country,\n      },\n    };\n\n    const response = await this.Post(ADD_PROFILE_URL, body);\n    if (!response) {\n      return false;\n    }\n\n    const { data } = response;\n\n    return data;\n  }\n}\n","import { WebService } from \"../actions/API/WebService\";\nimport { REFERRALS_URL, GET_REFERRAL_URL } from \"../const/const\";\n\nexport class ReferralService extends WebService {\n\n\n  async setReferralCode(ref_code) {\n    const user = this.user;\n\n    let body = {\n      data: {\n        country: user.country,\n        new_ref_code: ref_code,\n      },\n    };\n\n    const finalUrl = `${REFERRALS_URL}/set-ref-code`;\n    let res = await this.Post(finalUrl, body);\n    if(!res){return false}\n\n    let updatedUser = {\n        ...user,\n        referral:{\n          ref_code\n        }\n    }\n\n    this.updateUser(updatedUser)\n    return true;\n  }\n\n  async getReferralCode() {\n    const user = this.user;\n    if(user.verification_level === 'level_0') return false; \n    const finalUrl = `${GET_REFERRAL_URL}/${user.id}/referral`;\n    // const finalUrl = `${GET_REFERRAL_URL}?filter={\"where\":{\"userId\":\"${user.id}\"}}`;\n    let referralData = await this.Get(finalUrl);\n    if(!referralData){ return }\n\n    let updatedUser = {\n      ...user,\n      referral:{\n        ref_code:referralData.ref_code,\n        referred_by:referralData.referred_by,\n        referreds:referralData.referreds\n      }\n    };\n\n    this.updateUser(updatedUser)\n    return true;\n  }\n}\n","import { WebService } from \"../actions/API/WebService\";\nimport { appLoadLabelAction } from \"../actions/loader\";\nimport {\n  loadLabels,\n  GET_WITHDRAW_BY_USER_URL,\n  WITHDRAW_PROVIDERS_URL,\n  UPDATE_WITHDRAW_URL,\n  NEW_WITHDRAW_URL,\n  NEW_WITHDRAW_ACCOUNT_URL,\n  GET_WITHDRAWS_BY_ACCOUNT_ID,\n  DELETE_WITHDRAW_ACCOUNT_URL,\n} from \"../const/const\";\nimport {\n  updateNormalizedDataAction,\n  resetModelData,\n} from \"../actions/dataModelActions\";\nimport normalizeUser from \"../schemas\";\n\nimport { normalized_list } from \"../utils\";\n\nexport class WithdrawService extends WebService {\n\n  async fetchWithdrawAccounts(query = '{\"where\":{\"visible\":true}}') {\n\n    const { user } = this.globalState.modelData;\n    await this.dispatch(\n      appLoadLabelAction(loadLabels.OBTENIENDO_CUENTAS_DE_RETIRO)\n    );\n    const finalUrl = `${GET_WITHDRAW_BY_USER_URL}/${user.id}/withdrawAccounts?country=${user.country}&filter=${query}`;\n\n    const result = await this.Get(finalUrl);\n\n    if (!result.length) {\n      let userWithOutWA = {\n        id: user.id,\n        withdraw_accounts: [],\n      };\n      // TODO: create function to normalize user\n      const toNormalize = await normalizeUser(userWithOutWA);\n      await this.dispatch(updateNormalizedDataAction(toNormalize));\n      return this.dispatch(resetModelData({ withdraw_accounts: [] }));\n    }\n\n    if (!result || result === 465 || !this.withdrawProviders) {\n      return false;\n    }\n\n\n    const providersServed = await this.withdrawProvidersByType;\n\n    const withdrawAccounts = await result.map((account) => {\n      const aux = providersServed[account.provider_type];\n\n\n\n      if (aux.currency_type === \"fiat\") {\n        return {\n          id: account.id,\n          account_number: {\n            ui_name: aux.info_needed.account_number.ui_name,\n            value: account.info.account_number,\n          },\n          account_type: {\n            ui_name:\n              aux.info_needed.account_type[account.info.account_type].ui_name,\n            value: account.info.account_type,\n          },\n          bank_name: {\n            ui_name: aux.info_needed.bank_name[account.info.bank_name].ui_name,\n            value: account.info.bank_name,\n          },\n          provider_name: account.info.bank_name,\n          used_counter: account.used_counter,\n          email: account.info.email,\n          id_number: account.info.id_number,\n          name: account.info.name,\n          surname: account.info.surname,\n          inscribed: account.used_counter > 0 ? true : false,\n          visible: account.visible,\n          provider_type: account.provider_type,\n          provider_max_amount: aux.provider.max_amount,\n          provider_min_amount: aux.provider.min_amount,\n          currency_type: aux && aux.currency_type,\n          withdraw_provider: aux.id,\n          ...account,\n        };\n      } else {\n        return {\n          //crypto case\n          id: account.id,\n          account_name: {\n            ui_name: aux.info_needed.label.ui_name,\n            value: account.info.label,\n          },\n          account_address: {\n            ui_name: aux.info_needed.address.ui_name,\n            value: account.info.address,\n          },\n          used_counter: account.used_counter,\n          inscribed: account.used_counter > 0 ? true : false,\n          visible: account.visible,\n          provider_type: account.provider_type,\n          provider_max_amount: aux.provider.max_amount,\n          provider_min_amount: aux.provider.min_amount,\n          currency_type: aux && aux.currency_type,\n          withdraw_provider: aux.id,\n          ...account,\n        };\n      }\n    });\n\n    withdrawAccounts.reverse();\n\n\n    const updatedUser = {\n      id: user.id,\n      withdraw_accounts: [...withdrawAccounts],\n    };\n\n    if (await this.isCached(\"withdraw_accounts\", result)) {\n      return withdrawAccounts;\n    }\n\n    const normalizedUser = await normalizeUser(updatedUser);\n    await this.dispatch(updateNormalizedDataAction(normalizedUser));\n\n    return withdrawAccounts;\n  }\n\n  async deleteAccount(accountId) {\n    // const { withdraw_accounts } = this.globalState.modelData;\n    const user = this.user;\n    const body = {\n      data: {\n        withdraw_account_id: `${accountId}`,\n        country:user.country,\n        visible: false,\n      },\n    };\n\n    const deleteAccount = await this.Post(\n      DELETE_WITHDRAW_ACCOUNT_URL,\n      body\n    );\n\n    return deleteAccount;\n  }\n\n  get withdrawProvidersByType() {\n    return (\n      this.withdrawProviders &&\n      this.withdrawProviders.reduce((result, provider) => {\n        return {\n          ...result,\n          [provider.provider_type]: provider,\n        };\n      }, {})\n    );\n  }\n\n  async fetchWithdrawProviders() {\n    await this.dispatch(\n      appLoadLabelAction(loadLabels.OBTENIENDO_PROVEEDORES_DE_RETIRO)\n    );\n    const user = this.user;\n    const finalUrl = `${WITHDRAW_PROVIDERS_URL}?country=${user.country}`;\n\n    const withdrawProviders = await this.Get(finalUrl);\n\n    if (!withdrawProviders) return;\n\n    if (await this.isCached(\"withdrawProviders\", withdrawProviders)) {\n      return withdrawProviders;\n    }\n\n    const updatedUser = {\n      id: user.id,\n      withdrawProviders: [...withdrawProviders],\n    };\n    const normalizedUser = await normalizeUser(updatedUser);\n    await this.dispatch(updateNormalizedDataAction(normalizedUser));\n    this.withdrawProviders = withdrawProviders;\n    return withdrawProviders;\n  }\n\n  async addWithdrawOrder(body, twoFaToken) {\n    if (twoFaToken) {\n      body.data.twofa_token = twoFaToken;\n    }\n    const response = await this.Post(NEW_WITHDRAW_URL, body);\n    if (!response || response === 465) {\n      return false;\n    }\n    return response;\n  }\n\n  // async deleteWithdrawOrder(orderId) {\n  //   return this.Delete(`${DELETE_WITHDRAW_URL}/${orderId}`);\n  // }\n\n  async addNewWithdrawAccount(payload, type) {\n    const user = this.user;\n    const {\n      provider_type,\n      name,\n      surname,\n      id_number,\n      short_name,\n      account_number,\n      account_type,\n      currency,\n    } = payload;\n\n    const body =\n      type === \"cripto\"\n        ? {\n            data: {\n              currency,\n              info_needed:{\n                ...payload,\n                country:\"colombia\"\n              },\n              \"country\": user.country,\n              provider_type\n            },\n          }\n        :\n          {\n            \"data\": {\n              \"currency\": currency,\n              \"info_needed\":{\n                \"label\":short_name,\n                name,\n                surname,\n                id_type:user.id_type,\n                id_number: id_number || user.id_number,\n                bank_name:short_name,\n                account_number,\n                account_type,\n                \"country\":\"colombia\",\n                \"email\":user.email || \"default@coinsendaDepositApiUrl.com\",\n              },\n              \"country\": user.country,\n              provider_type\n            } \n          };\n\n\n    const response = await this.Post(\n      NEW_WITHDRAW_ACCOUNT_URL,\n      body\n    );\n\n    if (!response || response === 465) {\n      return false;\n    } \n\n    const { data } = response;\n\n    return data;\n  } \n  \n   // async get_deposits(account_id, limit = 20, skip = 0) {\n  //   // @params:\n  //   // account_id\n  //   const user = this.user;\n  //   let filter = `{\"where\":{\"account_id\":\"${account_id}\"}, \"limit\":${limit}, \"skip\":${skip}, \"order\":\"id DESC\", \"include\":{\"relation\":\"user\"}}`;\n  //   const finalUrl = `${DEPOSITS_URL}users/${user.id}/deposits?country=${user.country}&filter=${filter}`;\n\n  //   let deposits = await this.processDepositList(finalUrl)\n  //   if(!deposits){return false}\n\n  //   deposits = this.parseActivty(deposits, \"deposits\", account_id);\n  //   await this.dispatch(normalized_list(deposits, \"deposits\"));\n  //   await this.updateActivityState(account_id, \"deposits\", deposits);\n\n  //   return deposits;\n  // }\n\n\n  async get_withdraws_by_withdraw_account(account_id, limit = 20, skip = 0) {\n    const user = this.user;\n    let filter = `{\"where\":{\"withdraw_account_id\":\"${account_id}\", \"state\":{\"inq\":[\"confirmed\", \"accepted\"]}}, \"limit\":${limit}, \"skip\":${skip}, \"order\":\"id DESC\", \"include\":{\"relation\":\"user\"}}`;\n    const url_withdraw = `${GET_WITHDRAWS_BY_ACCOUNT_ID}/${user.id}/withdraws?country=${user.country}&filter=${filter}`;\n    return this.processListWithdraw(url_withdraw, account_id);\n  }\n\n\n  \n  async get_withdraws(account_id, limit = 20, skip = 0) {\n    const user = this.user;\n    let filter = `{\"where\":{\"account_id\":\"${account_id}\", \"state\":{\"inq\":[\"confirmed\", \"accepted\", \"rejected\"]} }, \"limit\":${limit}, \"skip\":${skip}, \"order\":\"id DESC\", \"include\":{\"relation\":\"user\"}}`;\n    const url_withdraw = `${GET_WITHDRAWS_BY_ACCOUNT_ID}/${user.id}/withdraws?country=${user.country}&filter=${filter}`;\n    return this.processListWithdraw(url_withdraw, account_id);\n  }\n\n\n  async processListWithdraw(url_withdraw, account_id) {\n    const withdraws = await this.Get(url_withdraw);\n    if (!withdraws || (withdraws && withdraws.length < 1)) {\n      return false;\n    }\n    // if (await this.isCached(\"withdraws\", withdraws)) {\n    //   return withdraws;\n    // }\n\n    let withdraws_remodeled = [];\n    for (let withdraw of withdraws) {\n      let state;\n      if (withdraw.currency_type === \"fiat\") {\n        state =\n          withdraw.state === \"accepted\" && !withdraw.sent\n            ? \"confirmed\"\n            : withdraw.state;\n      }\n      if (withdraw.currency_type === \"crypto\") {\n        state =\n          withdraw.state === \"accepted\" && !withdraw.proof\n            ? \"confirmed\"\n            : withdraw.state;\n      }\n\n      let new_withdraw = {\n        ...withdraw,\n        state,\n      };\n\n      if (new_withdraw.state !== \"pending\") {\n        withdraws_remodeled.push(new_withdraw);\n      } \n    }\n\n    withdraws_remodeled = this.parseActivty(\n      withdraws_remodeled,\n      \"withdraws\",\n      account_id\n    );\n    await this.dispatch(normalized_list(withdraws_remodeled, \"withdraws\"));\n    await this.updateActivityState(\n      account_id,\n      \"withdraws\",\n      withdraws_remodeled\n    );\n    return withdraws_remodeled;\n  }\n\n\n  async addUpdateWithdraw(withdraw_id, state) {\n    const body = {\n      data: {\n        withdraw_id, \n        state,\n        country: this.user.country,\n      },\n    };\n    const response = await this.Post(UPDATE_WITHDRAW_URL, body);\n    return response;\n  }\n\n  // async fetchActivityByAccount(accountId, page = 0, type = \"withdraws\") {\n  //     const skip = page * 10\n  //\n  //     const _withdrawsQuery = `{\"where\":{\"withdraw_account_id\":\"${accountId}\"}, \"limit\": 10, \"order\":\"id DESC\", \"skip\": ${skip}}`\n  //\n  //     const query = _withdrawsQuery\n  //\n  //     const url = `${GET_WITHDRAWS_BY_ACCOUNT_ID}/${this.user.id}/${type}?country=${this.user.country}&filter=${query}`\n  //\n  //     let res = await this.Get(url)\n  //\n  //     let finalResult\n  //     res = res ? res : []\n  //\n  //     finalResult = res.filter(item => item.state === 'accepted').map(withdraw => {\n  //         // let state\n  //         // if (withdraw.currency_type === 'fiat') {\n  //         //     state = !withdraw.sent ? 'confirmed' : withdraw.state\n  //         // }\n  //         // if (withdraw.currency_type === 'crypto') {\n  //         //     state = !withdraw.proof ? 'confirmed' : withdraw.state\n  //         // }\n  //\n  //         return {\n  //             ...withdraw,\n  //             // state\n  //             // comment: \"\",\n  //             // deposit_provider_id: \"\",\n  //             // expiration_date: new Date(),\n  //             // // state,\n  //             // unique_id: withdraw.id,\n  //             // withdraw_account: withdraw.withdraw_account_id,\n  //             // withdraw_provider: withdraw.withdraw_provider_id,\n  //             // type_order: \"withdraw\",\n  //             // withdraw_proof: withdraw.proof,\n  //         }\n  //     })\n  //\n  //     if(await this.isCached(type, res)) {\n  //         return finalResult\n  //     }\n  //\n  //     if (finalResult.length > 0) {\n  //         await this.dispatch(normalized_list(finalResult, type))\n  //     }\n  //\n  //     return finalResult\n  // }\n}\n","import { WebService } from \"../actions/API/WebService\";\nimport { appLoadLabelAction } from \"../actions/loader\";\nimport {\n  loadLabels,\n  INDETITY_URL,\n  INDENTITY_USERS_URL,\n  INDETITY_COUNTRY_VALIDATORS_URL,\n  INDETITY_UPDATE_PROFILE_URL,\n} from \"../const/const\";\nimport userDefaultState from \"../components/api\";\nimport { objectToArray, addIndexToRootObject } from \"../utils\";\nimport normalizeUser from \"../schemas\";\nimport { verificationStateAction } from \"../actions/uiActions\";\nimport Environment from \"../environment\";\nimport { updateNormalizedDataAction } from \"../actions/dataModelActions\";\nimport { CleanForm, ToStep } from \"../actions/formActions\";\n\n\nexport class IndetityService extends WebService {\n\n\n  async getStatus(status) {\n    // if(status){return status} \n    try {\n      const user = this.user;\n      const statusUrl = `${INDENTITY_USERS_URL}/${user.id}/status`;\n      const status = await this.Get(statusUrl);\n      return status\n    } catch (e) {\n      console.log('getStatus', e)\n      return e\n    }\n  }\n\n  async updateUserStatus(status) {\n\n    const user = this.user;\n    const _status = await this.getStatus(status)\n    if(!_status) return;\n    this.setIsAppLoading(true)\n    const { countries:{ international } } = _status\n    let userUpdate = {\n      ...user,\n      verification_level:international.verification_level,\n      verification_error:international.errors && international.errors[0],\n      levels:international.levels,\n      security_center:{\n        ...user.security_center,\n        kyc:{\n          advanced:international.levels.identity,\n          basic:international.levels.personal,\n          financial:international.levels.financial\n        }\n      }\n    }\n    // console.log('||||||||||||||| getUserStatus:: ', userUpdate)\n    await this.updateUser(userUpdate)\n\n    setTimeout(()=>{\n      this.setIsAppLoading(false);\n    }, 100)\n\n    if(\n    international.levels.identity === 'rejected' &&\n    international.levels.personal === 'rejected'\n    ){\n      this.dispatch(CleanForm(\"kyc_basic\"))\n      this.dispatch(CleanForm(\"kyc_advanced\"))\n      this.dispatch(ToStep(\"globalStep\", 0))\n    }\n  } \n\n  async fetchCompleteUserData(userCountry, profile = {}) {\n    await this.dispatch(appLoadLabelAction(loadLabels.CARGANDO_TU_INFORMACION));\n    const user = this.user;\n\n    const finalUrlFirst = `${INDETITY_URL}?country=${userCountry || user.country}`;\n\n    const firstResponse = await this.Get(finalUrlFirst);\n    if (!firstResponse) {\n      return false;\n    }\n\n    const finalUrlSecond = `${INDENTITY_USERS_URL}/${this.authData.userId}/status`;\n    const secondResponse = await this.Get(finalUrlSecond);\n\n    // if(await this.isCached('fetchCompleteUserData_', secondResponse)) {\n    //     return true\n    // }\n\n    let country_object = await addIndexToRootObject(secondResponse.countries);\n    let country = await objectToArray(country_object);\n\n    let updatedUser = {\n      ...userDefaultState,\n      email: this.authData.userEmail,\n      // userToken: this.authData.userToken,\n      restore_id: profile.restore_id || user.restore_id,\n      id: secondResponse.userId,\n      verification_level: country[0].verification_level,\n      verification_error: country[0].errors && country[0].errors[0],\n      levels: country[0].levels,\n      country: userCountry\n    };\n\n    const transactionSecurity = await this.userHasTransactionSecurity(updatedUser.id);\n    console.log(transactionSecurity)\n    debugger\n\n    if (transactionSecurity) {\n      const { transaction_security_id, scopes } = transactionSecurity;\n      updatedUser.security_center.txSecurityId = transaction_security_id;\n      updatedUser.security_center.authenticator.auth = true;\n      updatedUser.security_center.authenticator.withdraw = scopes.withdraw;\n    }\n\n\n    if(country[0].levels && country[0].levels.personal){\n      updatedUser.security_center.kyc.basic = country[0].levels && country[0].levels.personal\n    }\n\n    const identityConfirmed = updatedUser.levels && updatedUser.levels.identity === 'confirmed' && updatedUser.levels.personal === 'confirmed'\n    const identityAccepted = updatedUser.levels && updatedUser.levels.identity === 'accepted' && updatedUser.levels.personal === 'accepted'\n    const identityRejected = updatedUser.levels && updatedUser.levels.identity === 'rejected' && updatedUser.levels.personal === 'rejected'\n\n    if((profile.countries[country[0].value] !== 'level_0') || identityConfirmed){\n      let kyc_personal = country[0].levels && country[0].levels.personal;\n      let kyc_identity = country[0].levels && country[0].levels.identity;\n      let kyc_financial = country[0].levels && country[0].levels.financial;\n      if (kyc_personal) {\n        updatedUser.security_center.kyc.basic = kyc_personal;\n      }\n      if (kyc_identity) {\n        updatedUser.security_center.kyc.advanced = kyc_identity;\n      }\n      if (kyc_financial) {\n        updatedUser.security_center.kyc.financial = kyc_financial;\n      }\n    }else if(profile.countries[country[0].value] === 'level_0' && identityAccepted){\n      updatedUser.security_center.kyc.basic = 'confirmed';\n      updatedUser.security_center.kyc.advanced = 'confirmed';\n    }else if(identityRejected){\n      updatedUser.security_center.kyc.basic = 'rejected';\n      updatedUser.security_center.kyc.advanced = 'rejected';\n    }\n\n\n\n    const finalUrlThird = `${INDENTITY_USERS_URL}/${this.authData.userId}/profiles`;\n    let thirdResponse = await this.Get(finalUrlThird);\n\n    if (thirdResponse && thirdResponse.length > 0) {\n      // Agregamos la información al modelo usuario (updatedUser)\n      updatedUser = {\n        ...updatedUser,\n        ...thirdResponse[0].personal,\n        operation_country:thirdResponse[0].personal && thirdResponse[0].personal.country,\n        country: userCountry,\n        person_type: thirdResponse[0].person_type\n      };\n    }\n\n    let normalizedUser = await normalizeUser(updatedUser);\n    await this.dispatch(updateNormalizedDataAction(normalizedUser));\n\n    return updatedUser;\n  }\n\n  async updateUser(userData) {\n    const _userUpdate = await normalizeUser(userData);\n    return this.dispatch(updateNormalizedDataAction(_userUpdate));\n  }\n\n  async getVerificationState() {\n    const user = this.user;\n    if (!user) {\n      return false;\n    }\n    const { advanced, basic } = user.security_center.kyc;\n    let status = \"pending\";\n    if (advanced === basic) {\n      status = !advanced ? null : advanced;\n    }\n    await this.dispatch(verificationStateAction(status));\n    return status;\n  }\n\n\n  async countryValidators() {\n    let response = await this.Get(`${INDETITY_COUNTRY_VALIDATORS_URL}?country=international`);\n    if (!response || response === 465 || response === 404) {\n      return false;\n    }\n    let countries = await addIndexToRootObject(\n      response[0].levels.level_1.personal.natural.country\n    );\n    let countriesAsArray = await objectToArray(countries);\n    let countriesObject = {\n      res: response[0],\n      countries,\n      country_list: countriesAsArray,\n    };\n    return countriesObject;\n  }\n\n\n  updateLevelProfile(config, user) {\n    let body = {\n      data: {\n        country: user.country,\n        person_type: user.person_type,\n        info_type: config.info_type,\n        verification_level: config.verification_level,\n        info: config.info,\n      },\n    };\n\n    return this.Post(INDETITY_UPDATE_PROFILE_URL, body);\n  }\n\n  getCountryList() {\n    return this.Get(`${Environment.CountryApIUrl}countrys`);\n  }\n\n  async userVerificationStatus(level) {\n    const user = this.user;\n    const { advanced, basic, financial } = user.security_center.kyc;\n\n    switch (level) {\n      case \"level_1\":\n        return advanced === \"accepted\" && basic === \"accepted\";\n      case \"level_2\":\n        return (\n          advanced === \"accepted\" &&\n          basic === \"accepted\" &&\n          financial === \"accepted\"\n        );\n      default:\n        return false;\n    }\n  }\n}\n","import { WebService } from \"../actions/API/WebService\";\nimport {\n  ADD_NEW_SWAP,\n  loadLabels,\n  SWAP_URL,\n  PAIRS_URL,\n  GET_SWAPS_BY_USERS_URL,\n  // SWAP_CONVERT_CURRENCIES\n} from \"../const/const\";\nimport { desNormalizedList, normalized_list } from \"../utils\";\nimport normalizeUser from \"../schemas\";\nimport loadLocalPairsAction, {\n  updateNormalizedDataAction,\n  getAllPairsAction,\n  searchCurrentPairAction,\n  loadLocalCurrencyAction,\n  update_item_state,\n} from \"../actions/dataModelActions\";\nimport { appLoadLabelAction } from \"../actions/loader\";\nimport convertCurrencies, { _convertCurrencies } from \"../utils/convert_currency\";\nimport { pairsForAccount } from \"../actions/uiActions\";\n\nexport class SwapService extends WebService {\n  async fetchAllPairs() {\n    this.dispatch(appLoadLabelAction(loadLabels.IMPORTANDO_PARES));\n    const pairs = await this.Get(`${SWAP_URL}pairs`);\n    if (!pairs) {\n      return;\n    }\n\n    if (await this.isCached(\"available_pairs\", pairs)) {\n      return pairs;\n    }\n\n    this.dispatch(getAllPairsAction(pairs));\n    let updatedUser = {\n      id: this.user.id,\n      available_pairs: [...pairs],\n    };\n\n    let dataNormalized = await normalizeUser(updatedUser);\n    this.dispatch(updateNormalizedDataAction(dataNormalized));\n    return dataNormalized;\n  }\n\n  pairsRequest(query) {\n    const requestCompleteUrl = `${PAIRS_URL}${query}`;\n    return this.Get(requestCompleteUrl);\n  }\n\n  async getPairsByCountry(country, currencies) {\n    const localCurrency = await this.getLocalCurrency(country);\n\n    if (!localCurrency) {\n      return console.log(\"No se ha encontrado país en getPairsByCountry\");\n    }\n    const pairs = await this.pairsRequest(\n      `{\"where\": {\"secondary_currency.currency\": \"${localCurrency.currency}\"}}`\n    );\n    if (!pairs) return;\n    if (currencies) {\n      const localCurrencies = await this.addSymbolToLocalCollections(\n        pairs,\n        localCurrency.currency,\n        currencies\n      );\n\n      if (\n        this.isCached(\"getPairsByCountry_\", localCurrencies, false) &&\n        this.globalState.modelData.pairs.currentPair\n      ) {\n        return;\n      }\n\n      await this.dispatch(loadLocalPairsAction(localCurrencies));\n\n      // TODO: Evaluate this\n      // if(userCollection){ await get_user_pairs(userCollection, dispatch, pairs)}\n\n      this.dispatch(\n        searchCurrentPairAction(\n          `BTC/${localCurrency.currency.toUpperCase()}`,\n          \"pair\"\n        )\n      );\n\n      this.dispatch(loadLocalCurrencyAction(localCurrency));\n    }\n  }\n\n\n\n  async convertCurrencies(want_to_spend, to_spend_currency, pair_id) {\n\n    const data = await _convertCurrencies(to_spend_currency, want_to_spend, pair_id);\n    // return console.log('||||||||||||||||||||||||||| convertCurrencies : ', data)\n    return { data }\n    // console.log('||||||||||||||| convertCurrencies: ', data)\n\n    // const user = this.user\n    // const body = {\n    //   data:{\n    //     to_spend_currency,\n    //     want_to_spend,\n    //     pair_id,\n    //     \"country\":user.country\n    //   }\n    // }\n    // const result = await this.Post(SWAP_CONVERT_CURRENCIES, body);\n    // return result\n  }\n\n\n  async getPairs(primary, secondary, all) {\n    if (!primary && !secondary) return;\n\n    if (primary || secondary) {\n      const query = !secondary\n        ? `{\"where\": {\"primary_currency.currency\": \"${primary}\"}}`\n        : `{\"where\": {\"secondary_currency.currency\": \"${secondary}\"}}`;\n      const response = await this.pairsRequest(query);\n      if (this.isEmpty(response)) return;\n      if (all) {\n        return response;\n      }\n      return response[0];\n    }\n    const query = `{\"where\": {\"primary_currency.currency\": \"${primary}\", \"secondary_currency.currency\": \"${secondary}\"}}`;\n    const response = await this.pairsRequest(query);\n    if (this.isEmpty(response)) return;\n    return response[0];\n  }\n\n  async _getPairs(primary, secondary, all) {\n    if (!primary || !secondary) {\n      return false;\n    }\n    let res, query;\n    if (primary && !secondary) {\n      query = `{\"where\": {\"primary_currency.currency\": \"${primary}\"}}`;\n    }\n    if (!primary && secondary) {\n      query = `{\"where\": {\"secondary_currency.currency\": \"${secondary}\"}}`;\n    }\n    query && (res = await this.pairsRequest(query));\n    if (res) {\n      if (all) {\n        return res;\n      }\n      return res[0];\n    }\n\n    query = `{\"where\": {\"primary_currency.currency\": \"${primary}\", \"secondary_currency.currency\": \"${secondary}\"}}`;\n    res = await this.pairsRequest(query);\n    if (this.isEmpty(res)) return;\n    return res[0];\n  }\n\n  // TODO: review this fn:getDefaultPair\n  async getDefaultPair(currentWallet, localCurrency, currentPair) {\n    if ((currentPair && currentPair.pair_id) || !currentWallet) {\n      return false;\n    }\n    const currency = currentWallet.currency.currency;\n    let pair = await this._getPairs(currency, localCurrency);\n    !pair && (pair = await this._getPairs(\"bitcoin\", currency));\n    !pair && (pair = await this._getPairs(currency));\n    !pair && (pair = await this._getPairs(null, currency));\n\n    let pair_id = pair.id;\n\n    const data = await convertCurrencies(currentWallet.currency, \"1\", pair_id);\n\n    if (data) {\n      const { to_spend_currency } = data;\n      return this.dispatch(\n        pairsForAccount(currentWallet.id, {\n          current_pair: {\n            pair_id,\n            currency: to_spend_currency.currency\n          },\n        })\n      );\n    }\n  }\n\n\n\n\n  async addNewSwap(accountId, pairId, value) {\n    const user = this.user;\n\n    const body = {\n      data: {\n        want_to_spend: value.toString(),\n        pair_id: pairId,\n        account_from: accountId,\n        country: user.country,\n      },\n    };\n\n    const result = await this.Post(ADD_NEW_SWAP, body);\n\n    if (!result || result === 465) {\n      return false;\n    }\n\n    const { data } = result;\n\n    return data;\n  }\n\n  async completeSwap(swaps, user, completeSwap, updateList) {\n    let newSwap = {\n      ...swaps[completeSwap.id],\n      state: \"accepted\",\n    };\n\n    let updatedSwaps = {\n      ...swaps,\n      [newSwap.id]: {\n        ...newSwap,\n      },\n    };\n\n    let swapsAsArray = await desNormalizedList(updatedSwaps, user.swaps);\n\n    if (updateList) {\n      await updateList(swapsAsArray);\n    }\n\n    let updatedUser = {\n      id: user.id,\n      swaps: [...swapsAsArray],\n    };\n\n    let normalizedUser = await normalizeUser(updatedUser);\n    await this.dispatch(updateNormalizedDataAction(normalizedUser));\n    return normalizedUser;\n  }\n\n  async updateCurrentPair(query, currentPair) {\n    const result = await this.Get(`${PAIRS_URL}${query}`);\n    if (!result || result === 465) {\n      return;\n    }\n    if (currentPair) {\n      this.dispatch(\n        update_item_state({ currentPair: { ...result[0] } }, \"pairs\")\n      );\n    } else {\n      this.dispatch(\n        update_item_state({ [result[0].id]: { ...result[0] } }, \"all_pairs\")\n      );\n    }\n  }\n\n  async get_swaps(accountId, limit = 20, skip = 0) {\n    const user = this.user;\n    let filter = `{\"where\":{\"or\":[{\"account_to\":\"${accountId}\"}, {\"account_from\":\"${accountId}\"} ] }, \"limit\":${limit}, \"skip\":${skip}, \"order\":\"id DESC\", \"include\":{\"relation\":\"user\"}}`;\n    const finalUrl = `${GET_SWAPS_BY_USERS_URL}/${user.id}/swaps?country=${user.country}&filter=${filter}`;\n\n    let swaps = await this.Get(finalUrl);\n\n    if (!swaps || swaps === 465) {\n      return false;\n    }\n\n    if (await this.isCached(\"swaps\", swaps)) {\n      return swaps;\n    }\n\n    let swapResult = [...swaps];\n\n    swapResult = this.parseActivty(swaps, \"swaps\", accountId);\n    await this.dispatch(normalized_list(swapResult, \"swaps\"));\n    await this.updateActivityState(accountId, \"swaps\", swapResult);\n\n    return swaps;\n  }\n}\n","import { WebService } from \"../actions/API/WebService\";\nimport {\n  resetModelData,\n  updateNormalizedDataAction,\n  // manageBalanceAction,\n} from \"../actions/dataModelActions\";\nimport normalizeUser from \"../schemas\";\nimport {\n  ACCOUNT_URL,\n  DEPOSITS_URL,\n  CREATE_WALLET_URL,\n  DELETE_WALLET_URL,\n  loadLabels,\n} from \"../const/const\";\nimport { appLoadLabelAction } from \"../actions/loader\";\nimport initialAccounts from \"../components/api/accountInitialEnvironment.json\";\nimport { serve_orders, matchItem } from \"../utils\";\nimport update_activity, { pending_activity } from \"../actions/storage\";\nimport { current_section_params } from \"../actions/uiActions\";\n\nexport class AccountService extends WebService {\n  async getWalletsByUser(onlyBalances = false, lastActionDetail) {\n    this.dispatch(\n      appLoadLabelAction(loadLabels.OBTENIENDO_TUS_BILLETERAS_Y_BALANCES)\n    );\n    const user = this.user;\n    const accountUrl = `${ACCOUNT_URL}/${user.id}/accounts`;\n    const wallets = await this.Get(accountUrl);\n    if (!wallets || wallets === 404) {\n      return false;\n    }\n\n    const availableWallets = wallets.filter((wallet) => {\n      return wallet.visible && wallet.currency.currency !== \"usd\"\n        ? wallet\n        : false;\n    });\n\n    if (!availableWallets.length) {\n      let userWithOutW = {\n        id: user.id,\n        wallets: [],\n      };\n      const toNormalize = await normalizeUser(userWithOutW);\n      await this.dispatch(updateNormalizedDataAction(toNormalize));\n      await this.dispatch(resetModelData({ wallets: [] }));\n      return;\n    }\n\n    const balanceList = availableWallets.map((wallet) => {\n      let newWallet = {\n        id: wallet.id,\n        currency: wallet.currency.currency,\n        reserved: wallet.reserved,\n        available: wallet.available,\n        total: parseFloat(wallet.reserved) + parseFloat(wallet.available),\n        lastAction: null,\n        actionAmount: 0,\n      };\n\n      if (lastActionDetail && wallet.id === lastActionDetail.id) {\n        newWallet = { ...newWallet, ...lastActionDetail };\n      }\n\n      return newWallet;\n    });\n\n    let updatedUser = {\n      id: user.id,\n      wallets: [...availableWallets],\n      balances: [...balanceList],\n    };\n\n    const updatedOnlyBalances = {\n      id: user.id,\n      balances: [...balanceList],\n    };\n\n    let userWallets = await normalizeUser(\n      onlyBalances ? updatedOnlyBalances : updatedUser\n    );\n\n    if (await this.isCached(onlyBalances ? `balances` : `wallets`, wallets)) {\n      return userWallets;\n    }\n\n    await this.dispatch(updateNormalizedDataAction(userWallets));\n    return userWallets;\n  }\n\n  async createInitialEnvironmentAccount() {\n    const { accounts } = initialAccounts;\n    for (let body of accounts) {\n      // TODO: assign currency by country\n      await this.createAccountAndInsertDepositProvider(body)\n    }\n  }\n\n  async createAccountAndInsertDepositProvider(body) {\n    body.data.country = this.user.country;\n    const newAccount = await this.createWallet(body);\n    if (!newAccount) {return}\n    await this.getWalletsByUser();\n    const { account } = newAccount;\n    const dep_prov = await this.createAndInsertDepositProvider(account);\n    if (!dep_prov) {return}\n    return newAccount\n  }\n\n  async getWalletById(walletId) {\n    const user = this.user;\n    const accountUrl = `${ACCOUNT_URL}/${user.id}/accounts?filter={\"where\": {\"id\": \"${walletId}\"}}`;\n\n    const [wallets] = await this.Get(accountUrl);\n    if (this.isEmpty(wallets)) return;\n\n    const depositProvders = wallets.dep_prov;\n    let depositProviderDetails = [{}];\n\n    if (depositProvders.length > 0) {\n      let providerId = await depositProvders.slice(-1)[0];\n\n      const depositProviderUrl = `${DEPOSITS_URL}users/${user.id}/depositProviders?country=${user.country}&filter={\"where\": {\"id\":\"${providerId}\"}}`;\n\n      depositProviderDetails = await this.Get(depositProviderUrl);\n    }\n\n    const result = {\n      ...wallets,\n      depositProvider: { ...depositProviderDetails[0] },\n    };\n\n    return result;\n  }\n\n  async createWallet(body) {\n    return this.Post(CREATE_WALLET_URL, body);\n  }\n\n  async deleteWallet(account) {\n    const { id, country } = account;\n    // const user = this.user;\n\n    const body = {\n      data: {\n        account_id: id,\n        country,\n        visible: false,\n      },\n    };\n    const deleteAccount = await this.Post(\n      DELETE_WALLET_URL,\n      body\n    );\n\n    if (!deleteAccount || deleteAccount === 404 || deleteAccount === 465) {\n      return false;\n    }\n    return deleteAccount;\n  }\n\n  async manageBalance(id, lastAction, actionAmount) {\n    await this.getWalletsByUser(true, {\n      id,\n      lastAction,\n      actionAmount,\n    });\n  }\n\n  // async getBalancesByAccount() {\n  //     const user = this.user\n  //     this.dispatch(appLoadLabelAction(loadLabels.OBTENIENDO_TUS_BALANCES))\n  //     const accountUrl = `${ACCOUNT_URL}/${user.id}/accounts`\n\n\n  //     const balances = await this.Get(accountUrl, headers)\n\n  //     if (this.isEmpty(balances)) return\n\n  //     const balanceList = balances.map(balanceItem => ({\n  //         id: balanceItem.id,\n  //         currency: balanceItem.currency.currency,\n  //         reserved: balanceItem.reserved,\n  //         available: balanceItem.available,\n  //         total: parseFloat(balanceItem.reserved) + parseFloat(balanceItem.available),\n  //         lastAction: null,\n  //         actionAmount: 0\n  //     }))\n\n  //     const updatedUser = {\n  //         ...user,\n  //         balances: [\n  //             ...balanceList\n  //         ]\n  //     }\n\n  //     const userBalances = await normalizeUser(updatedUser)\n  //     await this.dispatch(updateNormalizedDataAction(userBalances))\n  // }\n\n  async countOfAccountTransactions(account_id) {\n    const response = await this.Get(\n      `${ACCOUNT_URL}/${this.user.id}/transactions/count?where={\"account_id\": \"${account_id}\"}`\n    );\n    return response;\n  }\n\n  async updatePendingActivity(accountId, type, activityList) {\n    const { modelData, ui } = this.globalState;\n    if (!modelData.wallets) return;\n\n    // const fallbackCurrentWallet = ui.current_section.params.current_wallet\n    const fallbackActivityType = ui.current_section.params.currentFilter;\n    const currentAccount = (modelData.withdraw_accounts && modelData.withdraw_accounts[accountId]) || (modelData.wallets && modelData.wallets[accountId]);\n\n    if (!currentAccount) return;\n\n    const activityType = type || fallbackActivityType;\n\n    if (!activityList && currentAccount) {\n      activityList = await serve_orders(currentAccount.id, activityType);\n      if (!activityList) return;\n    }\n\n    // const isWithdraws = activityType === 'withdraws'\n    let pendingData;\n    const filterActivitiesByStatus = async (primary) => await matchItem(activityList, { primary }, \"state\", true);\n\n    // If activity is equal to withdraws filter, always set up as 0 value\n    let pending = await filterActivitiesByStatus(\"pending\");\n    const confirmed = await filterActivitiesByStatus(\"confirmed\");\n    // const rejected = await filterActivitiesByStatus('rejected')\n    \n    if(currentAccount.currency_type === 'crypto' && type !== 'swaps'){\n      pending = 0\n    }\n\n    const expandidoMax = ((pending.length || 0) + (confirmed.length || 0)) * 100;\n\n    if (pending) {\n      pendingData = {\n        pending: true,\n        lastPending:\n          activityType === \"withdrawals\"\n            ? confirmed[0] && confirmed[0].id\n            : pending[0].id,\n      };\n    } else if (confirmed) {\n      pendingData = {\n        pending: true,\n        lastPending: confirmed[0] && confirmed[0].id,\n      };\n    }\n\n    let finalResult = {\n      ...pendingData,\n      expandidoMax,\n      account_id: currentAccount.id,\n      activity_type: activityType,\n    };\n\n    this.dispatch(pending_activity(finalResult));\n  }\n\n  async updateActivityState(accountId, type, activities) {\n    if (!activities) {\n      activities = await serve_orders(accountId, type);\n    }\n\n    await this.dispatch(current_section_params({ currentFilter: type }));\n    await this.dispatch(update_activity(accountId, type, activities));\n    await this.updatePendingActivity(accountId, type, activities);\n  }\n\n  async getFiatAccountByUserId() {\n    const user = this.user;\n    const filter = `filter={\"where\": {\"currency_type\": \"fiat\"}}`;\n    const URL = `${ACCOUNT_URL}/${user.id}/accounts?country=${user.country}&${filter}`;\n\n    const response = await this.Get(URL);\n\n    if (!response || response.length < 1) {\n      return false;\n    }\n    return response;\n  }\n}\n","import { WebService } from \"../actions/API/WebService\";\n\nexport class FreshChatService extends WebService {\n  async freshChatInitUser() {\n    if (!window.fcWidget) return;\n    await window.fcWidget.init({\n      token: \"86e166f6-5421-4aaf-bdf6-746ac7a54525\",\n      host: \"https://wchat.freshchat.com\",\n      locale: \"es-LA\",\n      externalId: this.user.id,\n      restoreId: (this.user && this.user.restore_id) || null,\n    });\n\n    window.fcWidget.user.get((resp) => {\n      let status = resp && resp.status;\n\n      if (status !== 200) {\n        // Si el usuario no existe y recibimos los datos del mismo desde el dashboard, enviamos esta información a freshChat\n\n        if (this.user.surname || this.user.name) {\n          window.fcWidget.user.setProperties({\n            firstName: this.user.name,\n            lastName: this.user.surname,\n            email: this.user.email,\n            phone: this.user.phone,\n            country: this.user.country,\n          });\n        }\n        window.fcWidget.on(\"user:created\", (resp) => {\n          // El usuario se crea cuando inicia el chat\n          let status = resp && resp.status,\n            data = resp && resp.data;\n          if (status === 200) {\n            if (data.restoreId) {\n              this.addRestoreId(data.restoreId);\n            }\n          }\n        });\n      }\n    });\n  }\n\n  // const user_update = async(user) => {\n  //   let load = await isLoaded()\n  //   if(load){\n  //     let verify_status = await store.dispatch(get_verification_state())\n  //     // console.log('||||||||||||||°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°°|||| ||||||||||||||||||user_update', user)\n  //       window.fcWidget.user.update({\n  //         firstName:user.name,\n  //         lastName:user.surname,\n  //         email:user.email,\n  //         phone:user.phone,\n  //         meta:{\n  //           twofactor:user.security_center.authenticator.auth,\n  //           deposits:user.deposits.length,\n  //           withdraws:user.withdrawals.length,\n  //           verify_status:verify_status ? verify_status : 'without verify',\n  //           id_type:user.id_type,\n  //           city:user.city\n  //         }\n  //       });\n  //   }\n  // }\n  //\n  //\n  //\n\n  //\n  //\n  // const show_channels = async(channels) => {\n  //   // @param channels:array\n  //   let load = await isLoaded()\n  //   if(load){\n  //     window.fcWidget.setTags(channels)\n  //   }\n  // }\n  //\n  //\n\n  //\n  //\n  // const destroy = async() => {\n  //   let load = await isLoaded()\n  //   alert()\n  //   if(load){\n  //     return window.fcWidget.destroy()\n  //   }\n  // }\n  //\n  //\n  //\n  //\n  //\n  //\n  //\n  isLoaded() {\n    return new Promise(async (resolve, reject) => {\n      if (window.fcWidget && window.fcWidget.isLoaded() === true) {\n        return resolve(true);\n      } else {\n        this.tryLoad(resolve);\n      }\n    });\n  }\n\n  tryLoad(resolve) {\n    let intervalLoad = setInterval(() => {\n      console.log(\"No Cargado\");\n      if (window.fcWidget.isLoaded() === true) {\n        clearInterval(intervalLoad);\n        console.log(\"_________ load success\");\n        return resolve(true);\n      }\n    }, 500);\n  }\n\n  async freshChatShowTags(tags, filterType) {\n    // @Params\n    // tags:array\n    // filterType:string\n    let load = await this.isLoaded();\n    if (load) {\n      window.fcWidget.setFaqTags({\n        tags,\n        filterType,\n      });\n    }\n  }\n\n  async freshChatTrack(item, payload) {\n    // @param item:string\n    // @param payload:object\n    let load = await this.isLoaded();\n    if (load) {\n      // console.log('|||||||||||||||______________________- tracking____', item, payload)\n      window.fcWidget.track(item, payload);\n    }\n  }\n}\n","import { WebService } from \"../actions/API/WebService\";\n\nexport class PushNotificationService extends WebService {\n  async initPushNotificator(item, payload) {\n    if (!(\"Notification\" in window) || !(\"serviceWorker\" in navigator)) {\n      return alert(\"Tu browser no soporta notificaciones\");\n    }\n\n    if (!(\"PushManager\" in window)) {\n      throw new Error(\"No Push API Support!\");\n    }\n\n    if (Notification.permission === \"default\") {\n      await Notification.requestPermission();\n    }\n\n    if (Notification.permission === \"blocked\") {\n      // return alert('bloqueaste las notificaciones')\n    }\n\n    if (Notification.permission === \"granted\") {\n      // return alert('Permitiste las notificaciones en este browser')\n    }\n  }\n\n  async showNotification(title, body) {\n    const registration = await navigator.serviceWorker.getRegistration();\n    if (!registration) {\n      return console.log(\"Ups, algo ha sucedido con la notificación. \", title);\n    }\n    registration.showNotification(title, {\n      body,\n    });\n  }\n}\n","import {\n  ALL_PAIRS,\n  CURRENT_PAIR,\n  LOCAL_CURRENCY,\n  USER_PAIRS,\n  UPDATE_NORMALIZED_STATE,\n  RESET_DATA,\n  UPDATE_ALL_CURRENCIES,\n  LOCAL_PAIRS,\n  UPDATE_SWAP_PENDING,\n  REDUCE_BALANCE,\n  ADD_BALANCE,\n  ALL_PAIRS_LANDING,\n  UPDATE_ITEM_STATE,\n  SET_SESSION_RESTORE,\n} from \"./action_types\";\n\nexport const update_item_state = (item, item_type) => {\n  // console.log('|||||||||||          ||||||||||||||||||||||             ||||||||||||||        update_item_state', item_type, item)\n  // @params\n  // item:object => ex: normalized_object: {item_id:{}}\n  // item_type:string => ex: users\n\n  let payload = {\n    item,\n    item_type,\n  };\n\n  // console.log('=========> update_item_state', payload)\n\n  return {\n    type: UPDATE_ITEM_STATE,\n    payload,\n  };\n};\n\nexport const set_session_restore = (payload) => {\n  return {\n    type: SET_SESSION_RESTORE,\n    payload,\n  };\n};\n\nexport const manageBalanceAction = (account_id, action, amount) => {\n  switch (action) {\n    case \"reduce\":\n      return {\n        type: REDUCE_BALANCE,\n        payload: {\n          id: account_id,\n          amount: amount,\n        },\n      };\n    default:\n      return {\n        type: ADD_BALANCE,\n        payload: {\n          id: account_id,\n          amount: amount,\n        },\n      };\n  }\n};\n\nexport const all_pairs_landing = (payload) => {\n  return {\n    type: ALL_PAIRS_LANDING,\n    payload,\n  };\n};\n\nexport const UpdatePendingSwap = (payload) => {\n  return {\n    type: UPDATE_SWAP_PENDING,\n    payload: payload,\n  };\n};\n\nexport const updateAllCurrenciesAction = (payload) => {\n  return {\n    type: UPDATE_ALL_CURRENCIES,\n    payload: payload,\n  };\n};\n\nexport const resetModelData = (payload) => {\n  return {\n    type: RESET_DATA,\n    payload,\n  };\n};\n\nexport const updateNormalizedDataAction = (payload) => {\n  return {\n    type: UPDATE_NORMALIZED_STATE,\n    payload,\n  };\n};\n\nexport const loadLocalPairsAction = (payload) => {\n  return {\n    type: LOCAL_PAIRS,\n    payload: payload,\n  };\n};\n\nexport const getAllPairsAction = (payload) => {\n  return {\n    type: ALL_PAIRS,\n    payload: payload,\n  };\n};\n\nexport const UserPairs = (payload) => {\n  return {\n    type: USER_PAIRS,\n    payload: payload,\n  };\n};\n\nexport const searchCurrentPairAction = (payload, prop) => {\n  return {\n    type: CURRENT_PAIR,\n    payload,\n    prop,\n  };\n};\n\nexport const loadLocalCurrencyAction = (payload) => {\n  return {\n    type: LOCAL_CURRENCY,\n    payload,\n  };\n};\n\nexport default loadLocalPairsAction;\n","import { UPDATE_ACTIVITY, UPDATE_PENDING_ACTIVITY } from \"./action_types\";\n\nexport const update_activity = (account_id, activity_type, activity_list) => {\n  return {\n    type: UPDATE_ACTIVITY,\n    payload: {\n      account_id,\n      activity_type,\n      activity_list,\n    },\n  };\n};\n\nexport const pending_activity = (payload) => {\n  // console.log('Desde el reducer', payload)\n  return {\n    type: UPDATE_PENDING_ACTIVITY,\n    payload,\n  };\n};\n\nexport default update_activity;\n","import { CDN_PATH_ASSETS } from '../const/const'\nlet Environment;\n\n\nexport const getHostName = () => {\n  const hostId = process.env.REACT_APP_BUILD_CONFIG || process.env.NODE_ENV \n  const nodeList = {\n    development:'bitsenda',\n    staging:'bitsenda',\n    pre_prod:'cryptosenda',\n    production:'coinsenda'\n  }\n  return nodeList[hostId]\n  // return \"cryptosenda\"\n}\n\n\nexport const getCdnPath = (target) => {\n\n  const nodeList = {\n    ...CDN_PATH_ASSETS\n  }\n\n  return `https://app.${getHostName()}.com/${nodeList[target]}`\n}\n\n// export const getBaseUrl = (prefix) => {\n//   // let { hostname } = window.location\n//   let _prefix = prefix ? `${prefix}.` : ''\n//   // let BASE_URL = hostname.includes('localhost') ? `https://${_prefix}${getHostName()}.com` : `https://${_prefix}${hostname}`\n//   const BASE_URL = `https://${_prefix}${getHostName()}.com`\n//   console.log('|||||| BASE_URL', BASE_URL)\n//   return BASE_URL\n// }\n\n\nEnvironment = {\n  ApiUrl: `https://tx.${getHostName()}.com/api/`,\n  SocketUrl: `https://tx.${getHostName()}.com/`,\n  IdentityApIUrl: `https://identity.${getHostName()}.com/api/`,\n  CountryApIUrl: `https://info.${getHostName()}.com/api/`,\n  AccountApiUrl: `https://account.${getHostName()}.com/api/`,\n  DepositApiUrl: `https://deposit.${getHostName()}.com/api/`,\n  WithdrawApiUrl: `https://withdraw.${getHostName()}.com/api/`,\n  SwapApiUrl: `https://swap.${getHostName()}.com/api/`,\n  CountryUrl: `https://info.${getHostName()}.com/`,\n  BASE_URL:`https://${getHostName()}.com/`,\n  Oauth: {\n    url: `https://auth.${getHostName()}.com/`\n  }\n};\n\n\n\n\nif (process.env.REACT_APP_LOCAL_CONFIG === \"local\") {\n  Environment = {\n    ApiUrl: \"http://localhost:3001/api/\",\n    SocketUrl: \"http://localhost:3001/\",\n    IdentityApIUrl: \"http://localhost:3002/api/\",\n    CountryApIUrl: \"http://localhost:3010/api/\",\n    AccountApiUrl: \"http://localhost:4007/api/\",\n    DepositApiUrl: \"http://localhost:4006/api/\",\n    WithdrawApiUrl: \"http://localhost:4005/api/\",\n    SwapApiUrl: \"http://localhost:4008/api/\",\n    CountryUrl: \"http://localhost:3010/\",\n    BASE_URL:\"https://bitsenda.com/\",\n    Oauth: {\n      url: \"http://127.0.0.1:3000/\"\n    }\n  };\n} \n\nconsole.log('||||||||||||| Environment ====>|', Environment)\n\nexport default Environment;\n","import { LOGGED_IN, SET_AUTH_DATA } from \"./action_types\";\n\nexport const isLoggedInAction = (payload) => {\n  return {\n    type: LOGGED_IN,\n    payload,\n  };\n};\n\nexport const setAuthData = (payload) => {\n  return {\n    type: SET_AUTH_DATA,\n    payload,\n  };\n};\n","import { store } from \"..\";\nimport { currencyFormatByCoin } from \"../const/const\";\n\nexport const formatToCurrency = (n, short_currency, delete_surplus_decimals = true) => {\n  const amount = String(n).slice();\n  const currency = short_currency.is_token\n    ? short_currency.contract_data.token_name\n    : short_currency.currency;\n\n  if (delete_surplus_decimals) {\n    return currencyFormatByCoin[currency](amount).div(\"1\");\n  } else {\n    return currencyFormatByCoin[currency](amount);\n  }\n};\n\nconst extractCurrencies = (currencies_instances) => {\n  let arr = [];\n  currencies_instances.forEach((currency_instance) => {\n    let token_name = currency_instance.contract_data\n      ? currency_instance.contract_data.token_name\n      : null;\n    let currency_data = [\n      currency_instance.currency,\n      currency_instance.is_token,\n      token_name,\n    ];\n    arr.push(JSON.stringify(currency_data));\n  });\n  return arr;\n};\n\nconst convertCurrencies = async (currency, amount_spend, pair_id) => {\n  let data = {\n    to_spend_currency: currency,\n    want_to_spend: amount_spend.toString(),\n    pair_id: pair_id,\n  };\n\n  let objetive_pair_instance = store.getState().modelData.all_pairs && store.getState().modelData.all_pairs[pair_id];\n\n  if(!objetive_pair_instance){return}\n\n  let to_spend_currency = extractCurrencies([data.to_spend_currency]);\n  let primary_objetive_currency = extractCurrencies([\n    objetive_pair_instance.primary_currency,\n  ]);\n  let objetive_data = Object.assign({}, data);\n\n  objetive_data.pair_id = objetive_pair_instance.id;\n\n  // console.log('||||||||||||||||| converter, to_spend_currency', to_spend_currency[0], primary_objetive_currency[0])\n  if (to_spend_currency[0] === primary_objetive_currency[0]) {\n    // Es una venta\n    data.want_to_spend = await formatToCurrency(data.want_to_spend, objetive_pair_instance.primary_currency);\n    objetive_data.to_spend_currency = objetive_pair_instance.secondary_currency;\n    //Formateo según la moneda a la que necesito transformar\n    let want_to_spend = await formatToCurrency(data.want_to_spend, objetive_pair_instance.secondary_currency, false);\n    objetive_data.want_to_spend = await want_to_spend.multipliedBy(objetive_pair_instance.sell_price).toFormat();\n  } else {\n    //Es una compra\n    data.want_to_spend = await formatToCurrency(data.want_to_spend, objetive_pair_instance.secondary_currency);\n    objetive_data.to_spend_currency = objetive_pair_instance.primary_currency;\n    //Formateo según la moneda a la que necesito transformar\n    let want_to_spend = await formatToCurrency(data.want_to_spend, objetive_pair_instance.primary_currency, false);\n    objetive_data.want_to_spend = want_to_spend.div(objetive_pair_instance.buy_price).toFormat();\n  }\n  return objetive_data;\n};\n\n\nexport const _convertCurrencies = async (currency, amount_spend, pair_id) => {\n  let data = {\n    to_spend_currency: currency,\n    want_to_spend: amount_spend.toString(),\n    pair_id: pair_id,\n  };\n\n  let objetive_pair_instance = store.getState().modelData.all_pairs[pair_id];\n\n  let to_spend_currency = JSON.stringify(data.to_spend_currency);\n  let primary_objetive_currency = JSON.stringify(objetive_pair_instance.primary_currency);\n\n  let objetive_data = Object.assign({}, data);\n\n  objetive_data.pair_id = objetive_pair_instance.id;\n  if (to_spend_currency === primary_objetive_currency){\n    // Es una venta\n    data.want_to_spend = await formatToCurrency(data.want_to_spend, objetive_pair_instance.primary_currency);\n\n    objetive_data.to_spend_currency = objetive_pair_instance.secondary_currency;\n    //Formateo según la moneda a la que necesito transformar\n    let want_to_spend = await formatToCurrency(data.want_to_spend, objetive_pair_instance.secondary_currency, false);\n    objetive_data.want_to_spend = await want_to_spend.multipliedBy(objetive_pair_instance.sell_price).div(\"1\");\n  } else {\n    //Es una compra\n    data.want_to_spend = await formatToCurrency(data.want_to_spend, objetive_pair_instance.secondary_currency);\n\n    objetive_data.to_spend_currency = objetive_pair_instance.primary_currency;\n    //Formateo según la moneda a la que necesito transformar\n    let want_to_spend = await formatToCurrency(data.want_to_spend, objetive_pair_instance.primary_currency, false);\n    objetive_data.want_to_spend = want_to_spend.div(objetive_pair_instance.buy_price);\n  }\n  return objetive_data;\n};\n\n\n\n\n\n\n\n\nexport default convertCurrencies;\n","const sleep = (time) =>\n  new Promise((resolve) => {\n    setTimeout(() => resolve(), time);\n  });\n\nexport default sleep;\n","import { IncreaseStep, ReduceStep } from \"./formActions\";\nimport { show_sound } from \"./soundActions\";\n\nimport { current_section_params } from \"./uiActions\";\n\nexport const FlowAnimationLayoutAction = (\n  animation,\n  action,\n  current_section,\n  explicitStep\n) => {\n  return async (dispatch) => {\n    // dispatch(FlowAnimationUi(animation))\n    switch (action) {\n      case \"next\":\n        // setTimeout(()=>{\n        dispatch(IncreaseStep(current_section, explicitStep));\n        // }, 130)\n        break;\n      case \"back\":\n        // setTimeout(()=>{\n        dispatch(ReduceStep(current_section, explicitStep));\n        // }, 130)\n        break;\n      default:\n        return false;\n    }\n  };\n};\n\nexport const add_new_transaction_animation = () => {\n  return async (dispatch) => {\n    dispatch(current_section_params({ new_order_style: true }));\n    setTimeout(() => {\n      dispatch(current_section_params({ new_order_style: false }));\n    }, 1000);\n    setTimeout(() => {\n      dispatch(show_sound());\n    }, 550);\n  };\n};\n","import * as formActions from \"./formActions\";\nimport * as dataModelActions from \"./dataModelActions\";\nimport * as APIactions from \"./APIactions\";\nimport * as isAppLoading from \"./loader\";\nimport * as ui_actions from \"./uiActions\";\nimport * as sounds from \"./soundActions\";\nimport * as auth from \"./auth\";\nimport * as storage from \"./storage\";\n\nconst actions = {\n  ...isAppLoading,\n  ...formActions,\n  ...APIactions,\n  ...dataModelActions,\n  ...ui_actions,\n  ...sounds,\n  ...auth,\n  ...storage\n};\n\nexport default actions;\n\n// se debe importar así: import actions from './action'\n"],"sourceRoot":""}