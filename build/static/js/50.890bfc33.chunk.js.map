{"version":3,"sources":["components/wallets/views/withdrawFiat.js","components/wallets/views/withdraw.js"],"names":["FiatView","props","active_trade_operation","current_wallet","loader","current_section_params","toggleModal","dispatch","WithdrawViewState","idForMainButton","useKeyActionAsClick","movil_viewport","window","innerWidth","atributos","icon","size","color","id","className","style","textTransform","currency","formValidate","label","handleAction","e","currentFilter","WithdrawView","withdraws","coinsendaServices","useCoinsendaServices","useEffect","get_withdraws","currency_type"],"mappings":"uMAuEeA,MAjEGC,IAChB,OACE,uBAAEC,EAAF,eAA0BC,EAA1B,OAA0CC,IAC1C,uBAAEC,EAAF,YAA0BC,GAC1BC,GACEC,cACEC,EAAkBC,aACtB,EACA,uBACA,IACA,EACA,WAGF,IAAIC,EAAiBC,OAAOC,WAAa,IAEzC,MAAMC,EAAY,CAChBC,KAAM,YACNC,KAAML,EAAiB,GAAK,IAC5BM,MAAO,WAQT,OACE,0BACEC,GAAG,GACHC,UAAS,qCACPR,EAAiB,QAAU,GADpB,iBAFX,UAME,qBAAKQ,UAAU,kBAAf,SACE,cAAC,UAAD,IAAgBL,MAGlB,qBAAKK,UAAU,sBAAf,SACGjB,EACC,mBAAGiB,UAAU,gCAAb,+FAKA,oBAAGA,UAAU,SAAb,2DACgD,uBAAMC,MAAO,CAACC,cAAc,cAA5B,cAC7ClB,EAAemB,SAASA,SADqB,OADhD,+CAQJ,cAAC,IAAD,CACElB,OAAQA,EAERc,GAAIT,EACJc,cAAerB,EACfsB,MAAM,qBACNC,aArCgBC,IACpBnB,EAASF,EAAuB,CAAEsB,cAAe,eACjDpB,EAASD,YCHEsB,UArBM,KACnB,OAAO,UAAEC,EAAF,eAAa1B,IAAoBK,eACjCsB,GAAqBC,cAQ5B,OANAC,qBAAU,KACHH,GACHC,EAAkBG,cAAc9B,EAAee,MAEhD,IAGD,mCACoC,WAAjCf,EAAe+B,cACd,cAAC,IAAD,IAEA,cAAC,EAAD","file":"static/js/50.890bfc33.chunk.js","sourcesContent":["import React from \"react\";\nimport useKeyActionAsClick from \"../../../hooks/useKeyActionAsClick\";\nimport WithdrawViewState from \"../../hooks/withdrawStateHandle\";\nimport ControlButton from \"../../widgets/buttons/controlButton\";\nimport IconSwitch from \"../../widgets/icons/iconSwitch\";\n\nconst FiatView = (props) => {\n  const [\n    { active_trade_operation, current_wallet, loader },\n    { current_section_params, toggleModal },\n    dispatch,\n  ] = WithdrawViewState();\n  const idForMainButton = useKeyActionAsClick(\n    true,\n    \"main-button-withdraw\",\n    13,\n    true,\n    \"onkeyup\"\n  );\n\n  let movil_viewport = window.innerWidth < 768;\n\n  const atributos = {\n    icon: \"withdraw2\",\n    size: movil_viewport ? 80 : 100,\n    color: \"#989898\",\n  };\n\n  const handleSubmit = (e) => {\n    dispatch(current_section_params({ currentFilter: \"withdraws\" }));\n    dispatch(toggleModal());\n  };\n\n  return (\n    <section\n      id=\"\"\n      className={`DepositView itemWalletView ${\n        movil_viewport ? \"movil\" : \"\"\n      } withdrawView`}\n    >\n      <div className=\"contIcontSwitch\">\n        <IconSwitch {...atributos} />\n      </div>\n\n      <div className=\"contIcontSwitchCont\">\n        {active_trade_operation ? (\n          <p className=\"fuente active_trade_operation\">\n            Operación de intercambio en proceso, una vez finalice podrás hacer\n            retiros.\n          </p>\n        ) : (\n          <p className=\"fuente\">\n            Gestiona y realiza retiros en tu moneda local <span style={{textTransform:\"capitalize\"}}>(\n            {current_wallet.currency.currency})</span>, desde Coinsenda a tu cuenta\n            bancaria.\n          </p>\n        )}\n      </div>\n\n      <ControlButton\n        loader={loader}\n        // loader={loader || Object.keys(withdraw_accounts).length === 0}\n        id={idForMainButton}\n        formValidate={!active_trade_operation}\n        label=\"Realizar un retiro\"\n        handleAction={handleSubmit}\n      />\n    </section>\n  );\n};\n\nexport default FiatView;\n","import React, { useEffect } from \"react\";\nimport WithdrawViewState from \"../../hooks/withdrawStateHandle\";\nimport { CriptoSupervisor } from \"./withdrawCripto\";\nimport { useCoinsendaServices } from \"../../../services/useCoinsendaServices\";\nimport FiatView from \"./withdrawFiat\";\n\nconst WithdrawView = () => {\n  const [{ withdraws, current_wallet }] = WithdrawViewState();\n  const [coinsendaServices] = useCoinsendaServices();\n\n  useEffect(() => {\n    if (!withdraws) {\n      coinsendaServices.get_withdraws(current_wallet.id);\n    }\n  }, []);\n\n  return (\n    <>\n      {current_wallet.currency_type === \"crypto\" ? (\n        <CriptoSupervisor />\n      ) : (\n        <FiatView />\n      )}\n    </>\n  );\n};\n\nexport default WithdrawView;\n"],"sourceRoot":""}