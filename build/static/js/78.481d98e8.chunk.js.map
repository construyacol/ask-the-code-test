{"version":3,"sources":["hooks/useNavigationKeyActions.js","components/widgets/modal/render/orderDetail/detailGenerator.js","components/forms/widgets/fiatDeposit/styles.js","components/forms/widgets/fiatDeposit/success.js","components/widgets/items/new-items-layout.js","components/widgets/cropimg/Cropper/BarSlider.js","components/widgets/cropimg/Cropper/CropperIMG.js","components/widgets/cropimg/Cropper/do-img-crop.js","components/widgets/cropimg/index.js","components/widgets/modal/render/orderDetail/paymentProof.js","components/widgets/modal/render/orderDetail/orderStatus.js","components/widgets/modal/render/orderDetail/confirmationCounter.js","components/widgets/modal/render/orderDetail/inProcessOrder.js","components/widgets/modal/render/orderDetail/infoComponent.js","components/widgets/modal/render/orderDetail/index.js","components/wallets/deposit/views/modality.js","components/wallets/deposit/flows/index.js","components/withdrawAccounts/new/views/finalTicket.js"],"names":["DEFAULT_ARGS","modalRestriction","prev","next","default","originalLength","useNavigationKeyActions","config","valuesAsProps","uniqueIdForElement","loader","items","currentSelection","setCurrentSelection","useState","isModalVisible","useSelector","state","form","isModalRenderShowing","ui","modal","render","useEffect","length","el","document","getElementById","focus","window","innerWidth","KEY_CODES_META","onkeydown","onkeyup","onkeypress","event","currentSelectionIsDownZero","elementId","keyCode","Math","max","min","newSelection","useItemsInteractions","props","keyActions","suprKeyAction","enterKeyAction","isSelected","setIsSelected","element","focusedId","onfocus","number","onblur","blur","stopPropagation","preventDefault","uniqid","setFocus","moment","locale","DetailGenerator","order","title","TitleSuffix","theme","orders","setOrders","deposit_providers","tx_path","path","UseTxState","formatCurrency","useFormatCurrency","currencies","selectWithConvertToObjectWithCustomIndex","currencySimbol","currency","symbol","toUpperCase","orderType","location","pathname","includes","formatDepositOrder","async","isPending","created_at","format","id","getState","amount_neto","cost","amount","formatWithdrawOrder","ORDER_DETAIL_BY_TYPE","deposits","withdraws","swaps","spent","to_spend_currency","bought","to_buy_currency","to_buy_symbol","deposit","withdraw","currency_type","depositProviderInfo","deposit_provider_id","depositProvider","depositAccount","ui_name","account","type","account_id","bussines_name","nit","dv","costs","cost_id","fixed","amountNeto","confirmations","inProcesOrder","parsedOrder","formatOrder","init","pendingDeposit","Container","className","TitleContainer","Title","DataOrderHeader","ORDER_TYPE_UI_NAME","toLowerCase","map","item","indx","ItemContainer","LeftText","MiddleSection","RightText","Array","fill","referral","ReferralSwapCopy","style","fontSize","color","total_percentage","compra_de_referidos","short_currency","href","getHostName","target","rel","alt","styled","div","Text","p","span","OnlySkeletonAnimation","section","device","tablet","Layout","AmountLayout","CostIdLayout","SuccessModalCont","FiatDepositSuccess","closeModal","actions","params","depositProvData","new_ticket","final","setFinal","finalButton","setFinalButton","on_click","deposit_way","finalizar","history","push","add_new_transaction_animation","setTimeout","BankDataContainer","accountData","bankUiName","accountType","accountIdUiName","accountId","bussinesNameUiName","bussinesName","nitUiName","dvUiName","IconSwitch","loadable","BankData","CorpAccountContainer","IconContainer","size","icon","DetailAccountProv","timerId","NewItemsLayout","actives","name","code","placeholder","primarySelect","itemType","pair_id","actualizarEstado","handleClick","specialMode","classNames","doSelectionForItem","clearTimeout","_handleClick","_activated","autoComplete","onClick","src","getCdnPath","width","React","memo","BarSlider","CropperIMG","image","onCropComplete","crop","setChange","x","y","zoom","setZoom","deg","setDeg","cropAreaStyle","minWidth","minHeight","rotation","onRotationChange","aspect","onCropChange","onZoomChange","_","croppedAreaPixels","value","onChange","e","currentTarget","step","newDeg","getRadianAngle","degreeValue","PI","createImage","url","Promise","resolve","reject","Image","addEventListener","error","setAttribute","CropImg","Component","imageSrc","this","imgRotation","croppedImage","setState","current_zoom","showCroppedImage","img","cropArea","action","isAppLoading","pixelCrop","canvas","createElement","ctx","getContext","safeArea","height","sqrt","translate","rotate","drawImage","data","getImageData","putImageData","UrlToImg","toBlob","file","URL","createObjectURL","base64","toDataURL","urlImg","getCroppedImg","subirImg","cancelCroppedImg","cancelarSubidaImg","componentWillReceiveProps","_id","idCancel","active","siguiente","idAccept","connect","dispatch","bindActionCreators","withKeyActions","PaymentProof","payload","coinsendaServices","currentOrder","imgProof","setImgProof","txId","setTxId","urlExplorer","setUrlExplorer","getPaymentProof","paymentProof","proof_of_payment","raw","QRCode","node_url","proof","PP","getDepositById","updateOrder","update_item_state","getData","PaymentProofContainer","LoaderContainer","justify","ProofContainer","HoverProof","copy","open","FiatPaymentProofZoom","StatusItem","skeleton","activated","toString","Status","Indicator","Description","Skeleton","StatusTitle","ui_text","DateStatusText","updated_at","OrderStatus","movil","orderState","setOrderState","skeletons","prop","api","completed","Object","entries","OrderStatusContainer","TopSectionStatus","orderStatus","SubTitle","description","StatusContainer","index","ConfirmationCounter","total","draw","c","clearInterval","draw_interval","tasaPercent","beginPath","arc","lineWidth","strokeStyle","stroke","prevProps","setInterval","total_confirmations","AbsoluteContainer2","RelativeContainer","AbsoluteContainer","ContCanvasConfirmation","ConfirmationContainer","TextContainer","Canvas","InProcessOrder","onErrorCatch","FiatOrder","CryptoOrder","isTabletOrMovilViewport","useViewport","InProcessOrderContainer","OrderContainer","TopSection","getTitle","Currency","DateIdContainter","DateText","GetIcon","BottomSectionContainer","UploadComponent","BottomSection","colorState","onDrag","setOnDrag","imgSrc","setImgSrc","toBigNumber","toastMessage","useToastMessage","goFileLoader","files","img_compressor","dataBase64","readFile","includesAnyImageMime","split","alert","user","globalState","modelData","orderAmount","limitAmount","BIOMETRIC_FIAT_LITMIT_AMOUNT","security_center","transactionSecurity","biometric","enabled","isGreaterThanOrEqualTo","Element","BiometricKyc","renderModal","orderData","confirmation","confirmDepositOrder","console","log","onDragOver","DropZoneComponent","dragLeave","DropZoneContainer","onDragLeave","capture","accept","unButtom","idForFileUpload","useKeyActionAsClick","UploadContainer","UploadMiddle","UploadTextMiddle","UploadText","Buttom","coloIcon","RenderIcon","AiOutlineClockCircle","Section","laptop","tabletL","ReferralInfo","MAIN_COLOR","WithdrawFiatInfo","order_id","useParams","withdraw_account_id","withdrawAccount","withdraw_accounts","WithdrawAccountCont","IconCont","bank_name","DataContainer","account_type","account_number","GetInfoComponentToRender","info","targetKey","is_referral","toRender","targetElement","querySelector","innerHTML","component","OrderSupervisor","forceClose","dataset","close_modal","OrderDetail","isMovilViewport","TitleText","orderTypeUiName","textState","ConsolidatedOrder","OrderIcon","DateTitle","CircleIconContainer","ContBackTopSection","BackTopSection","_amount","amountTitle","select","TOTAL_ORDER_AMOUNT_COPYS","getAmountTitle","InfoComponent","consolidatedOrder","TotalAmount","Icon","i","backTopSection","h3","orderStateColors","swing_in_bottom_bck","ModalityView","update_service_mode","service_mode","buttonActive","create_deposit_order","movil_viewport","alignSelf","marginTop","key","TransferFlow","deposit_service","idForAcceptButtonInDepositView","service_modes","Success","CashFlow","short_bank_name","update_local_state","cash_payment","label","xmlns","strokeWidth","cx","cy","r","d","zIndex","toggleModal","FinalTicket","idCancelButton","idFinalizarButton","finishAction","cta_primary_label","cta_secondary","cta_secondary_label","cta_secondary_action","wAccount","text","finalText","join","replace","charAt","parseUiName","gridTemplateColumns"],"mappings":"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","file":"static/js/78.481d98e8.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst DEFAULT_ARGS = {\n  modalRestriction: true,\n  prev: 37,\n  next: 39,\n  default: 0,\n  originalLength: false,\n};\n\n/**\n * useNavigationKeyActions simula la navegacion entre un grupo de objetos en el DOM.\n *\n * @param {Object} config representa la configuracion y datos del hook\n * @param {Array} config.items items representativos entre los cuales se navegara por medio de key event\n * @param {Boolean} config.loader indentifica cuando el componente esta listo para ejecutar la accion de navegar\n * @param {String} config.uniqueIdForElement id que identificara los elementos navegables\n * @param {Boolean} config.modalRestriction restringe el uso de esta funcion en modales, por defecto es true\n * @param {Event.keyCode|Number} config.prev representa el keyCode a ser referenciendo como previo o anterior,\n * por defecto es 37\n * @param {Event.keyCode|Number} config.next representa el keyCode a ser referenciendo siguiente,\n * por defecto es 39\n * @param {Number} config.default numero del elemento a seleccionar por default, por defecto es el Elmento 0\n * @return _setCurrentSelection\n *\n * @example\n * const setCurrentElement = useNavigationKeyActions({ items: [...n], loader: subscription(), uniqueIdForElement: \"my-uniqueIdForElement-\" })\n * @see useItemsInteractions\n * @see window.onkeydown\n */\nexport default function useNavigationKeyActions(config) {\n  const valuesAsProps = { ...DEFAULT_ARGS, ...config };\n  const { modalRestriction, uniqueIdForElement, loader, items } = valuesAsProps;\n  const [currentSelection, setCurrentSelection] = useState(-1);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let isModalVisible = modalRestriction && useSelector((state) => state.form.isModalVisible);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let isModalRenderShowing = modalRestriction && useSelector((state) => state.ui.modal.render);\n\n  useEffect(() => {\n    if (items && items.length > 0 && !loader) {\n      if (isModalVisible) return;\n      const el = document.getElementById(\n        `${uniqueIdForElement}${valuesAsProps.default}`\n      );\n      el && el.focus();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [items, loader]);\n\n  useEffect(() => {\n    if (modalRestriction && (isModalRenderShowing || isModalVisible)) {\n      setCurrentSelection(-1);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isModalRenderShowing, isModalVisible]);\n\n  useEffect(() => {\n    // this is for mobile\n    if (window.innerWidth < 900) {\n      window.KEY_CODES_META = null;\n      window.onkeydown = null;\n      window.onkeyup = null;\n      window.onkeypress = null;\n      return () => null;\n    } else {\n      window.onkeydown = (event) => {\n        if (\n          !isModalRenderShowing &&\n          !isModalVisible &&\n          items &&\n          items.length > 0\n        ) {\n          if (isModalVisible) return;\n          const length = valuesAsProps.originalLength\n            ? items.length\n            : items.length - 1;\n          const currentSelectionIsDownZero = currentSelection < 0;\n          let elementId = 0;\n          let el = null;\n          if (event.keyCode === valuesAsProps.prev) {\n            elementId = currentSelectionIsDownZero\n              ? length\n              : currentSelection - 1;\n            el = document.getElementById(\n              `${uniqueIdForElement}${Math.max(0, elementId)}`\n            );\n          }\n          if (event.keyCode === valuesAsProps.next) {\n            elementId = currentSelectionIsDownZero ? 0 : currentSelection + 1;\n            el = document.getElementById(\n              `${uniqueIdForElement}${Math.min(length, elementId)}`\n            );\n          }\n          if (event.keyCode === 13) {\n            elementId = currentSelectionIsDownZero ? 0 : currentSelection;\n            el = document.getElementById(\n              `${uniqueIdForElement}${Math.min(length, elementId)}`\n            );\n          }\n          if (el) {\n            el.focus();\n            // event.preventDefault()\n            // event.stopPropagation()\n          }\n        }\n      };\n    }\n\n    return () => {\n      window.onkeydown = false;\n    };\n    \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    window.onkeydown,\n    isModalVisible,\n    items,\n    loader,\n    isModalRenderShowing,\n    currentSelection,\n  ]);\n\n  const _setCurrentSelection = (newSelection) => {\n    if (currentSelection !== newSelection) {\n      setCurrentSelection(newSelection);\n    }\n  };\n  return [_setCurrentSelection];\n}\n\n/**\n * useItemsInteractions contiene toda las interacciones del elemento, como seleccionarlo como puntero actual hasta\n * las acciones que presenta cuando el seleccionado.\n *\n * @param {Object} props properties heredadas del componente que usara este hook\n * @param {Function} props.setCurrentSelection function retornada de useNavigationKeyActions usada para seleccionar\n * el elemento como puntero actual\n * @param {Number} props.number number index del elemento en el array\n * @param {String} props.focusedId id referencial del elemento en el DOM\n *\n * @param {Object} keyActions restringe el uso de esta funcion en modales, por defecto es true\n * @param {Function} keyActions.suprKeyAction accion al presionar la tecla suprimir\n * @param {Function} keyActions.enterKeyAction accion al presionar la tecla enter\n * @param {Boolean} modalRestriction restringe este hook en modales\n * @return {[Boolean, Function]} [isSelected, setFocus]\n *\n * @example\n * const setCurrentElement = useItemsInteractions(props, {...}, false)\n * @see useNavigationKeyActions\n * @see Element.onkeydown\n */\nexport function useItemsInteractions(\n  props,\n  keyActions,\n  modalRestriction = true\n) {\n  const { suprKeyAction, enterKeyAction } = keyActions;\n  const [isSelected, setIsSelected] = useState(false);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const isModalVisible = modalRestriction && useSelector((state) => state.form.isModalVisible);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const isModalRenderShowing = modalRestriction && useSelector((state) => state.ui.modal.render);\n\n  useEffect(() => {\n    // this is for mobile\n    if (window.innerWidth < 900) {\n      window.KEY_CODES_META = null;\n      window.onkeydown = null;\n      window.onkeyup = null;\n      window.onkeypress = null;\n      return () => null;\n    } else {\n      const element = document.getElementById(props.focusedId);\n      if (element) {\n        element.onfocus = () => {\n          setIsSelected(true);\n          props.setCurrentSelection(props.number);\n        };\n\n        element.onblur = () => {\n          setIsSelected(false);\n        };\n\n        element.onkeydown = (event) => {\n          element.blur();\n          if (isModalVisible || isModalRenderShowing) return;\n          if (event.keyCode === 46) {\n            event.stopPropagation();\n            suprKeyAction(() => element.focus());\n          }\n          if (event.keyCode === 13) {\n            enterKeyAction();\n            event.stopPropagation();\n            event.preventDefault();\n          }\n        };\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isModalVisible, props.uniqid]);\n\n  const setFocus = () => {\n    const element = document.getElementById(props.focusedId);\n    element && element.focus();\n  };\n\n  return [isSelected, setFocus];\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { OnlySkeletonAnimation } from \"../../../loaders/skeleton\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport { useFormatCurrency } from \"../../../../hooks/useFormatCurrency\";\nimport { getState } from \"./\";\nimport { device, ORDER_TYPE_UI_NAME } from \"../../../../../const/const\";\nimport { selectWithConvertToObjectWithCustomIndex } from \"../../../../hooks/useTxState.js\"\nimport { useSelector } from \"react-redux\";\nimport { getHostName } from '../../../../../environment'\n// import { useParams } from \"react-router-dom\";\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nmoment.locale(\"es\");\n\nconst DetailGenerator = ({ order, title, TitleSuffix, theme }) => {\n  const [orders, setOrders] = useState([]);\n  const { deposit_providers, tx_path, path } = UseTxState();\n  const [, formatCurrency] = useFormatCurrency();\n  const currencies = useSelector((state) => selectWithConvertToObjectWithCustomIndex(state))\n  const currencySimbol = currencies ? currencies[order?.currency?.currency]?.symbol : order?.currency?.currency?.toUpperCase()\n\n\n\n  // const params = useParams();\n  const orderType = tx_path || path || (window.location.pathname.includes(\"referral\") && \"deposits\") || \"withdraw\"\n  // const orderType = tx_path || path || \"withdraw\"\n  \n\n  // const formatOrderText = async (itemText) => {\n  //   switch (itemText[0]) {\n  //     case \"to_spend_currency\":\n  //       return [\"Moneda gastada:\", itemText[1].currency];\n  //     case \"to_buy_currency\":\n  //       return [\"Moneda adquirida:\", itemText[1].currency];\n  //     case \"currency\":\n  //       return [\"Divisa:\", itemText[1].currency];\n  //     case \"spent\":\n  //       return [\n  //         \"Cantidad gastada:\",\n  //         await formatCurrency(order.spent, order.to_spend_currency),\n  //       ];\n  //     case \"bought\":\n  //       return [\n  //         \"Cantidad adquirida:\",\n  //         await formatCurrency(order.bought, order.to_buy_currency),\n  //       ];\n  //     case \"state\":\n  //       return [\"Estado:\", getState(itemText[1])];\n  //     case \"price_percent\":\n  //       return [\"Comisión:\", itemText[1]];\n  //     case \"id\":\n  //       return [\"Número de orden:\", itemText[1]];\n  //     case \"created_at\":\n  //       return [\"Creado en:\", moment(itemText[1]).format(\"LL\")];\n  //     case \"updated_at\":\n  //       return [\"Actualizado en:\", moment(itemText[1]).format(\"LL\")];\n  //     case \"expiration_date\":\n  //       return [\"Expira en:\", moment(itemText[1]).format(\"LL\")];\n  //     case \"amount\":\n  //       return [\n  //         \"Cantidad:\",\n  //         await formatCurrency(order.amount, order.currency),\n  //       ];\n  //     // case \"amount_neto\":\n  //     //   return [\n  //     //     \"Cantidad neta:\",\n  //     //     await formatCurrency(order.amount_neto, order.currency),\n  //     //   ];\n  //     case \"confirmations\":\n  //       return [\"Confirmations:\", order.confirmations];\n  //     case \"cost\":\n  //       return [`Costo ${tx_path === 'withdraws' ? 'retiro' : 'depósito'}:`, order.cost];\n  //     case \"sent\":\n  //       return [\"Operación:\", itemText[1] ? \"Debitado\" : \"-- Sin debitar --\"];\n\n  //     case \"referral\":\n  //     case \"amount_neto\":\n  //     case \"to_buy_symbol\":\n  //     case \"to_spend_symbol\":\n  //     case \"need_referral_process\":\n  //     case \"referrer_payment_info\":\n  //     case \"fee\":\n  //     case \"tax\":\n  //     case \"withdraw_provider\":\n  //     case \"withdraw_account\":\n  //     case \"metadata\":\n  //     case \"withdraw_account_id\":\n  //     case \"withdraw_provider_id\":\n  //     case \"account_to\":\n  //     case \"account_from\":\n  //     case \"type\":\n  //     case \"pair_id\":\n  //     case \"taged\":\n  //     case \"action_price\":\n  //     case \"country\":\n  //     case \"userId\":\n  //     case \"user\":\n  //     case \"cost_struct\":\n  //     case \"fee_struct\":\n  //     case \"info\":\n  //     case \"tax_struct\":\n  //     case \"account_id\":\n  //     case \"locked\":\n  //     case \"currency_type\":\n  //     case \"cost_id\":\n  //     case \"deposit_provider_id\":\n  //     case \"type_order\":\n  //     case \"activeTrade\":\n  //     case \"paymentProof\":\n  //     case \"withdraw_proof\":\n  //     case \"requestedFundsOrigin\":\n  //     case \"proof\":\n  //     case \"comment\":\n  //     case \"provider_type\":\n  //     case \"visible\":\n  //     case \"inscribed\":\n  //     case \"inscriptions\":\n  //     case \"used_counter\":\n  //       return;\n  //     default:\n  //       return itemText;\n  //   }\n  // };\n\n  const inProcesOrder = async (order) => {\n    const isPending = order.state === 'pending'\n    switch (order.currency_type) {\n      case \"fiat\":\n        let depositProviderInfo = [];\n        if (deposit_providers && deposit_providers[order.deposit_provider_id]) {\n          const depositProvider = deposit_providers[order.deposit_provider_id];\n          depositProviderInfo = [\n            [\n              \"Entidad del depósito:\",\n              `${depositProvider.depositAccount.ui_name}`,\n            ],\n            [\n              `${depositProvider.depositAccount.account.type.ui_name}`,\n              `${depositProvider.depositAccount.account.type.type}`,\n            ],\n            [\n              `${depositProvider.depositAccount.account.account_id.ui_name}`,\n              `${depositProvider.depositAccount.account.account_id.account_id}`,\n            ],\n            [\n              `${depositProvider.depositAccount.account.bussines_name.ui_name}`,\n              `${depositProvider.depositAccount.account.bussines_name.bussines_name}`,\n            ],\n            [\n              `${depositProvider.depositAccount.account.nit.ui_name}`,\n              `${depositProvider.depositAccount.account.nit.nit}`,\n            ],\n            [\n              `${depositProvider.depositAccount.account.dv.ui_name}`,\n              `${depositProvider.depositAccount.account.dv.dv}`,\n            ],\n            [\n              `Cantidad ${isPending ? 'por acreditar' : 'acreditada'}`,\n              `${await formatCurrency(order.amount, order.currency)} ${order.currency?.currency?.toUpperCase()}`,\n            ],\n            [\n              `Costo del depósito`,\n              `${await formatCurrency(depositProvider?.depositAccount?.costs[order?.cost_id]?.fixed, order.currency)} ${order.currency?.currency?.toUpperCase()}`,\n            ],\n          ];\n        }\n        // console.log('deposit_providers', order)\n        const amountNeto = await formatCurrency(order.amount_neto, order.currency);\n        // const amount_neto = await formatCurrency(\n        //   order.amount_neto,\n        //   order.currency\n        // );\n\n        setOrders([\n          ...depositProviderInfo,\n          [\"Total a depositar:\", `$${amountNeto}`],\n        ]);\n        break;\n      case \"crypto\":\n        setOrders([\n          [\"ID:\", order.id],\n          [\"Estado:\", getState(order.state)],\n          [\"Divisa:\", `${order.currency.currency}`],\n          [\"Orden creada en:\", moment(order.created_at).format(\"LL\")],\n          [\"Confirmaciones:\", order.confirmations],\n          [\n            \"Cantidad acreditada:\",\n            await formatCurrency(order.amount, order.currency),\n          ],\n          [\"Costo de operación:\", order.cost],\n          [\n            \"Total depósito:\",\n            await formatCurrency(order.amount_neto, order.currency),\n          ],\n        ]);\n        break;\n      default:\n    }\n  };\n\n\n\n  const formatDepositOrder = async(order) => {\n    const isPending = order.state === 'pending'\n    let parsedOrder = [\n      [\"Fecha de creación:\", moment(order?.created_at).format(\"LL\")],\n      [\"ID del depósito:\", order?.id],\n      [\"Estado:\", getState(order?.state)],\n      [`Cantidad ${isPending ? 'por depositar' : 'depositada'}:`, `${await formatCurrency(order?.amount_neto, order?.currency)} ${currencySimbol}`],\n      [\"Costo del depósito:\",  `${order?.cost && await formatCurrency(order?.cost, order?.currency)} ${currencySimbol}`],\n      [`Cantidad ${isPending ? 'por acreditar' : 'acreditada'}:`, `${await formatCurrency(order?.amount, order?.currency)} ${currencySimbol}`],\n    ]\n    return parsedOrder \n  }\n\n  const formatWithdrawOrder = async(order) => {\n    let parsedOrder = [\n      [\"Fecha de creación:\", moment(order?.created_at).format(\"LL\")],\n      [\"ID del retiro:\", order?.id],\n      [\"Estado:\", getState(order?.state)],\n      [\"Total del retiro:\", `${await formatCurrency(order?.amount, order?.currency)} ${currencySimbol}`],\n      [\"Costo del retiro:\",  `${order?.cost && await formatCurrency(order?.cost, order?.currency)} ${currencySimbol}`],\n      [\"Cantidad recibida:\", `${await formatCurrency(order?.amount_neto, order?.currency)} ${currencySimbol}`],\n    ]\n    return parsedOrder \n  }\n\n  const formatSwapsOrder = async(order) => {\n    let parsedOrder = [\n      [\"ID del intercambio:\", order?.id],\n      [\"Fecha de creación:\", moment(order?.created_at).format(\"LL\")],\n      [\"Estado:\", getState(order?.state)],\n      [\"Cantidad gastada:\", `${await formatCurrency(order?.spent, order?.to_spend_currency)} ${order?.to_spend_currency?.currency?.toUpperCase()}`],\n      [\"Cantidad adquirida:\", `${await formatCurrency(order?.bought, order?.to_buy_currency)} ${order?.to_buy_symbol?.toUpperCase()}`],\n    ]\n    return parsedOrder \n  }\n\n\n  const ORDER_DETAIL_BY_TYPE = {\n    deposits:formatDepositOrder,\n    withdraws:formatWithdrawOrder,\n    swaps:formatSwapsOrder,\n    deposit:formatDepositOrder,\n    withdraw:formatWithdrawOrder\n  }\n\n  const formatOrder = async(order) => {\n    let parsedOrder = []\n    if(!order) return \"\";\n    parsedOrder = await ORDER_DETAIL_BY_TYPE[orderType](order)\n    return parsedOrder\n  }\n\n\n  useEffect(() => {\n    // the order is converted to an array and formatted\n    if (!order) {\n      return;\n    }\n    const init = async () => {\n      if ((order.state === \"pending\" || order.state === \"confirmed\") && tx_path === \"deposits\") {\n        return await inProcesOrder(order);\n      }\n      const parsedOrder = await formatOrder(order)\n      setOrders(parsedOrder);\n    };\n    init();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [deposit_providers]);\n\n\n  const pendingDeposit = orderType === 'deposits' && [\"pending\"].includes(order.state)\n\n\n  return (\n    <Container className={`${title ? \"withTitle\" : \"\"} ${pendingDeposit ? 'withPendingDeposit' : ''} ${theme}`}>\n      {title && (\n        <TitleContainer\n          className={`${TitleSuffix ? \"titleSuffix\" : \"\"} ${order.state}`}\n        >\n          <Title className=\"fuente\">{title}</Title>\n          {TitleSuffix && <TitleSuffix />}\n        </TitleContainer>\n      )}\n      \n      {\n        (pendingDeposit) &&\n          <DataOrderHeader >\n            <p className=\"fuente\">Datos para hacer el {ORDER_TYPE_UI_NAME[orderType]?.ui_name?.toLowerCase()}</p>\n            <div className=\"__line__\"/>\n          </DataOrderHeader>\n         \n      }\n\n      {orders && orders.length\n        ? orders.map((item, indx) => {\n            return (\n              <ItemContainer\n                key={indx}\n                className={`${orders.length === indx + 1 &&  order.state && tx_path === \"deposits\" && order.state\n                }`}\n              >\n                <LeftText className=\"fuente\">{item[0]}</LeftText>\n                <MiddleSection />\n                <RightText className=\"fuente2\">{item[1]}</RightText>\n              </ItemContainer>\n            );\n          })\n        : new Array(7).fill(\"1\").map((item, indx) => {\n            return (\n              <ItemContainer className=\"skeleton\" key={indx}>\n                <LeftText>skeleton --</LeftText>\n                <MiddleSection />\n                <RightText>skeleton -------- </RightText>\n              </ItemContainer>\n            );\n          })}\n          { \n            (orderType === 'swaps' && order?.referral && [\"accepted\"].includes(order?.state)) &&\n              <ReferralSwapCopy order={order} currencies={currencies}/>\n          }\n    </Container>\n  );\n};\n// currencies\nexport default DetailGenerator;\n\n\nconst ReferralSwapCopy = ({ order, currencies }) => {\n\n  return(\n      <p className=\"fuente referalBySwap\" style={{fontSize: \"12px\", color:\"gray\"}}>\n        Quién te refirió obtuvo el &nbsp;  \n        <span className=\"fuente2\"> \n          {order?.referral?.total_percentage}%&nbsp;\n          ({order?.referral?.compra_de_referidos?.amount} {currencies && currencies[order?.referral?.compra_de_referidos?.short_currency?.currency]?.symbol})\n          </span> de este intercambio. <a href={`https://${getHostName()}.com/docs/incentives`} target=\"_blank\"  rel=\"noreferrer\" alt=\"\">Aprende cómo hacerlo</a>\n      </p>\n  )\n\n}\n\ngetHostName()\n\nexport const DataOrderHeader = styled.div`\n    display: grid;\n    grid-template-columns: auto 1fr;\n    column-gap: 20px;\n    color:gray;\n    width: 100%;\n\n    p{\n        font-size: 17px;\n        font-weight: bold;\n    }\n\n    .__line__{\n        border-bottom: 1px solid #bfbfbf;;\n        height: 2px;\n        padding-top: 10px;\n    }\n`\n\n\n\nconst Text = styled.p`\n  width: auto;\n  margin: 0;\n  font-size: 14px;\n`;\n\n// const TotalAmountContainer = styled.div`\n//   width: 100%;\n//   height: 50px;\n//   margin-top: 10px;\n//   border-top: 1px solid #bfbfbf;\n//   display: flex;\n//   justify-content: space-between;\n// `;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  &.titleSuffix {\n    justify-content: space-between;\n  }\n  &.pending p {\n    color: #ff8660;\n  }\n  &.confirmed p {\n    color: #1cb179;\n  }\n`;\n\nconst Title = styled(Text)`\n  font-size: 17px;\n  font-weight: bold;\n`;\nconst RightText = styled(Text)`\n  text-align: right;\n  padding-left: 15px;\n  text-transform: capitalize;\n  white-space: nowrap;\n  max-width: 350px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst LeftText = styled(Text)`\n  text-align: left;\n  padding-right: 15px;\n  font-weight: bold;\n`;\nconst MiddleSection = styled.span`\n  border-bottom: 1px dotted;\n  opacity: 0.15;\n`;\n\nconst ItemContainer = styled.div`\n  width: 100%;\n  height: 20px;\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n\n  &.skeleton {\n    ${OnlySkeletonAnimation}\n    ${RightText}, ${LeftText} {\n      background: gray;\n      height: 16px;\n      border-radius: 3px;\n      opacity: 0.5;\n    }\n  }\n\n  &.pending,\n  &.confirmed {\n    height: 50px;\n    margin-top: 10px;\n    border-top: 1px solid #bfbfbf;\n    align-items: center;\n    ${RightText}, ${LeftText} {\n      font-size: 18px;\n      color: #383838;\n    }\n    ${RightText} {\n      font-size: 20px;\n      font-weight: bold;\n    }\n  }\n`;\n\nconst Container = styled.section`\n  width: calc(100% - 70px);\n  height: calc(100% - 50px);\n  display: grid;\n  grid-template-rows: repeat(auto-fill, 20px);\n  row-gap: 7px;\n  padding: 25px 35px;\n  position:relative;\n\n  .referalBySwap{\n    font-size: 12px;\n    color: gray;\n    width: calc(100% - 100px);\n    max-width: calc(500px - 100px);\n    text-align: justify;\n    justify-self: center;\n    padding: 0 50px 0 15px;\n    position: absolute;\n    font-size: 13px;\n    color: gray;\n    left: 20px;\n    bottom: -20px;\n  }\n\n  @media ${device.tablet} {\n    padding: 25px 20px;\n    width: calc(100% - 40px);\n  }\n\n  &.withTitle {\n    height: calc(100% - 95px);\n    padding-top: 70px;\n    grid-template-rows: 70px repeat(auto-fill, 20px);\n  }\n\n  &.withTitle.withPendingDeposit{\n    grid-template-rows: 45px 45px repeat(auto-fill, 20px);\n  }\n\n  ${Text}, ${MiddleSection} {\n    color: gray;\n  }\n\n  &.darkTheme {\n    p {\n      color: white;\n    }\n  }\n`;\n\n//\n","import styled from 'styled-components'\n\n\nconst Layout = styled.div`\n    grid-row-gap: 10px;\n    display: grid;\n    height: 100%;\n    justify-items: center;\n    align-items: center;\n    perspective: 900px;3\n    transform-style: preserve-3d; \n    text-align: center;\n    width: calc(100% - 40px);\n    padding: 0 20px;\n\n    .botonForm{\n        width:220px;\n    }\n`\n\nexport const AmountLayout = styled(Layout)`\n    grid-template-rows: 120px 1fr 120px;\n`\n\nexport const CostIdLayout = styled(Layout)`\n    grid-template-rows: 120px 1fr 120px;\n\n    @media (max-width: 768px) {\n        ._costIdContent{\n            padding: 0;\n            width: 100%; \n            .mobileView{\n                width: 100%;\n                transform: scale(1) !important;\n            }\n        }\n    }\n`\n\nexport const SuccessModalCont = styled.section`\n    position: absolute;\n    height: calc(100vh - 80px);\n    width: 100vw;\n    padding: 40px 0;\n    background: linear-gradient(to bottom right,#129a8e,#37ed7d);\n`","import { useState } from \"react\"\nimport OtherModalLayout from \"../../../widgets/modal/otherModalLayout\";\nimport  { SuccessModalCont } from './styles'\nimport { Success } from '../../../wallets/deposit/flows'\nimport styled from 'styled-components'\nimport { history } from '../../../../const/const'\nimport loadable from \"@loadable/component\";\n\n\n\nconst FiatDepositSuccess = ({ closeModal, actions, params, depositProvData, new_ticket }) => {\n\n    const [ final, setFinal ] = useState(false)\n    const [ finalButton, setFinalButton ] = useState(false)\n    // const depositProvider = useSelector((state) => state?.modelData?.wallets[params?.account_id]);\n    \n    const finalizar = async () => {\n        if (final) {\n            closeModal()\n            history.push(`/wallets/activity/${params.account_id}/deposits`);\n            return actions.add_new_transaction_animation();\n        }else{\n          setFinal(true)\n          setFinalButton(true)\n          setTimeout(() => {\n            setFinalButton(false)\n          }, 5000)\n        }\n    }\n\n\n    return(\n        <OtherModalLayout\n      id=\"close-button-with-OtherModalLayout\"\n      onkeydown={false}\n      on_click={closeModal}\n    >\n      <SuccessModalCont>\n        <Container>        \n            <Success\n            deposit_way=\"cash\"\n            final={final}\n            finalizar={finalizar}\n            finalButton={finalButton}\n            depositProvData={depositProvData}\n            new_ticket={new_ticket}\n            />\n        </Container>\n      </SuccessModalCont>\n    </OtherModalLayout>\n    )\n} \n\nexport default FiatDepositSuccess\n\n\nexport const BankDataContainer = ({accountData:{ \n        title,\n        bankUiName,\n        accountType,\n        accountIdUiName,\n        accountId,\n        bussinesNameUiName,\n        bussinesName,\n        nitUiName,\n        nit,\n        dvUiName,\n        dv\n    }}) => {\n\n    \n    const IconSwitch = loadable(() => import(\"../../../widgets/icons/iconSwitch\"));\n\n\n    return(\n        <BankData>\n            <TitleContainer >\n                <p className=\"fuente\">{title}</p>\n                <div className=\"__line__\"/>\n            </TitleContainer>\n\n            <CorpAccountContainer className=\"corpAccountContainer\">\n                <IconContainer className=\"_corpAccIcon\">\n                    <IconSwitch size={45} icon={bankUiName} />\n                </IconContainer>\n                <DetailAccountProv>\n                    <h3 className=\"fuente\">{bankUiName}</h3>\n                    <p className=\"fuente bold\"> <strong>{accountType}</strong></p>\n                    <p className=\"fuente bold\"><strong>{accountIdUiName}:</strong> <span className=\"fuente2\">{accountId}</span></p>\n                    <p className=\"fuente\"> <strong> {bussinesNameUiName}: </strong> {bussinesName}</p>\n                    <p className=\"fuente\"><strong> {nitUiName}:</strong> <span className=\"fuente2\">{nit}</span></p>\n                    <p className=\"fuente\"><strong>{dvUiName}:</strong> <span className=\"fuente2\">{dv}</span></p>\n                </DetailAccountProv>\n            </CorpAccountContainer>\n\n            <TitleContainer >\n                <p className=\"fuente\">Datos del depósito</p>\n                <div className=\"__line__\"/>\n            </TitleContainer>\n        </BankData>\n    )\n}\n\n\nexport const DetailAccountProv = styled.div`\n    display:grid;\n    grid-template-columns: 1fr;\n    color:white;\n    .bussines_name, .nit{\n        font-size:14px;\n    }\n    h3{\n        text-transform:capitalize;\n        margin: 0 0 10px 0;\n    }\n    p{\n        margin:5px 0;\n    }\n\n`\n\n\nexport const BankData = styled.div`\n    width:100%;\n    @media (max-width: 768px) {\n\n        ${DetailAccountProv}{\n            text-align:left;\n        }\n\n        ._corpAccIcon{\n            width:70px;\n            height:70px;\n        }\n\n        .corpAccountContainer{\n            align-items: start;\n        }\n\n        .bussines_name_span{\n            display:none;\n        }\n    }\n`\n\nexport const TitleContainer = styled.div`\n    display: grid;\n    grid-template-columns: auto 1fr;\n    column-gap: 20px;\n    color:white;\n    width: 100%;\n\n    p{\n        font-size: 18px;\n        font-weight: bold;\n    }\n\n    .__line__{\n        border-bottom: 1px solid white;\n        height: 2px;\n        align-self: center;\n    }\n`\n\n\n\n\nexport const CorpAccountContainer = styled.div`\n    display:grid;\n    grid-template-columns:auto 1fr;\n    column-gap:20px;\n    width:auto;\n    align-items:center;\n`\nexport const IconContainer = styled.div`\n    width:110px;\n    height:110px;\n    background:#e6e6e6;\n    border-radius:6px;\n    display:grid;\n    align-items: center;\n    justify-items: center;\n`\n\n\n\n\nconst Container = styled.div`\n    height: 100%;\n    width: 100%;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr;\n    align-items: center;\n    justify-items: center;\n    position:relative;\n\n    .nWCabeza{\n        border-bottom:0px;\n    }\n\n    #DLstep2{\n        display: grid;\n        justify-items: center;\n        align-items: center;\n        grid-template-rows: 200px 1fr 100px;\n        width: 100%;\n        max-height: calc(100vh - 80px);\n        height: calc(100vh - 80px);\n        max-width: 650px;\n        border: 1px solid transparent;\n    }\n`","import React, { useEffect } from \"react\";\nimport loadable from \"@loadable/component\";\nimport { useItemsInteractions } from \"../../../hooks/useNavigationKeyActions\";\nimport { InputKeyActionHandler } from \"../accountList/styles\";\nimport { getCdnPath } from '../../../environment'\n\n\nconst IconSwitch = loadable(() => import(\"../icons/iconSwitch\"));\n\nlet timerId;\nfunction NewItemsLayout(props) {\n  const {\n    type,\n    actives,\n    name,\n    code,\n    placeholder,\n    primarySelect,\n    format,\n    itemType,\n    currency_type,\n    pair_id,\n    actualizarEstado,\n    handleClick,\n    specialMode = false,\n    classNames,\n    cost_id\n  } = props;\n\n  const doSelectionForItem = () => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      actualizarEstado && actualizarEstado(name, code, currency_type, pair_id, cost_id);\n    }, 100);\n  };\n  const _handleClick = specialMode ? doSelectionForItem : handleClick;\n  const [isSelected, setFocus] = useItemsInteractions(\n    {...props, uniqid: pair_id},\n    { suprKeyAction: () => false, enterKeyAction: _handleClick },\n    false\n  );\n\n  useEffect(() => {\n    specialMode && actives && setFocus();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (!specialMode && isSelected && !actives) {\n      doSelectionForItem(false);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isSelected, actives]);\n\n  const _activated = specialMode ? isSelected : actives;\n\n\n  return (\n    <div\n      id={`${primarySelect ? \"primarySelect\" : \"\"}`}\n      className={`${classNames} ${type === \"payment_method\" ? \"ILtuvieja\" : \"\"} `}\n    >\n      <InputKeyActionHandler\n        aria-label=\"itemFromList\"\n        name=\"itemFromList\"\n        autoComplete=\"off\"\n        id={props.focusedId}\n      />\n      <div\n        className={`item ${_activated ? \"itemSelection\" : \"\"}`}\n        onClick={!actives || itemType === \"banks\" ? doSelectionForItem : null}\n      >\n        {!format && code && type ? (\n          type === \"coins\" ||\n          type === \"payment_method\" ||\n          type === \"service_mode\" ? (\n            _activated ? (\n              <div title={name} id={code}>\n                <img\n                  className=\"itemSobre activaos\"\n                  src={`${getCdnPath('assets')}${type}/${code}2.png`}\n                  alt=\"\"\n                  width=\"60\"\n                />\n              </div>\n            ) : (\n              <div title={name} id={code}>\n                <img\n                  className=\"itemFuera\"\n                  src={`${getCdnPath('assets')}${type}/${code}.png`}\n                  width=\"60\"\n                  alt=\"\"\n                  id={code}\n                  title={name}\n                />\n                <img\n                  className=\"itemSobre\"\n                  src={`${getCdnPath('assets')}${type}/${code}2.png`}\n                  width=\"60\"\n                  alt=\"\"\n                  id={code}\n                  title={name}\n                />\n              </div>\n            )\n          ) : (\n            <img\n              className={`banquis ${_activated ? \"itemVisible\" : \"\"}`}\n              src={`${getCdnPath('assets')}${type}/${code}.png`}\n              alt=\"\"\n              id={code}\n              title={name}\n              width=\"85\"\n            />\n          )\n        ) : (\n          <IconSwitch icon={code} size={45} />\n        )}\n        {primarySelect ? (\n          <div id=\"primarySelectText\" className=\"primarySelectText\">\n            <p className=\"title-deposit-fiat_ fuente\" title={name}>{name}</p>\n            {placeholder &&\n              placeholder.map((item) => {\n                return (\n                  <p className=\"fuente item-type-tx\" key={item.id}>\n                    {item.name}\n                  </p>\n                );\n              })}\n          </div>\n        ) : (\n          <p title={name}>{name}</p>\n        )}\n      </div>\n      {placeholder && !primarySelect && (\n        <div className=\"placeHoldCont\">\n          {placeholder.map((item) => {\n            return (\n              <p className=\"ILplaceholder fuente\" key={item.id}>\n                {item.name}\n              </p>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(NewItemsLayout);\n","import React from \"react\";\nimport \"./bar-slider-styles.css\";\n\nexport default function BarSlider({ ...props }) {\n  return <input type=\"range\" {...props} />;\n}\n","import React, { useState } from \"react\";\nimport Cropper from \"react-easy-crop\";\nimport BarSlider from \"./BarSlider\";\nimport { AiOutlineMinus } from \"react-icons/ai\";\nimport { FiRotateCcw, FiPlus } from \"react-icons/fi\";\n\nconst MAX_ZOOM = 3;\nconst MIN_ZOOM = 0.5;\nconst ASPECT = 4 / 3;\nconst SLIDER_STEP = 0.05;\n\nexport default function CropperIMG({ image, onCropComplete }) {\n  const [crop, setChange] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n  const [deg, setDeg] = useState(360);\n\n  return (\n    <>\n      <div className=\"crop-container\">\n        <Cropper\n          image={image}\n          style={{\n            cropAreaStyle: {\n              minWidth: 256,\n              minHeight: 192,\n            },\n          }}\n          rotation={deg}\n          onRotationChange={setDeg}\n          crop={crop}\n          aspect={ASPECT}\n          zoom={zoom}\n          onCropChange={setChange}\n          onZoomChange={setZoom}\n          onCropComplete={(_, croppedAreaPixels) =>\n            onCropComplete(croppedAreaPixels, deg)\n          }\n        />\n      </div>\n      <div className=\"crop-controls\">\n        <div>\n          <AiOutlineMinus\n            color=\"gray\"\n            size={20}\n            onClick={() => zoom > 0.1 && setZoom(zoom - 0.3)}\n          />\n          <BarSlider\n            value={zoom}\n            onChange={(e) => setZoom(e.currentTarget.value)}\n            step={SLIDER_STEP}\n            min={MIN_ZOOM}\n            max={MAX_ZOOM}\n          />\n          <FiPlus\n            color=\"gray\"\n            size={20}\n            onClick={() => zoom < 7 && setZoom(zoom + 0.3)}\n          />\n        </div>\n        <div>\n          <FiRotateCcw\n            color=\"gray\"\n            size={20}\n            onClick={() => {\n              const newDeg = deg - 90;\n              setDeg(newDeg < 0 ? 360 : newDeg);\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","function getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180;\n}\n\nexport const createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener(\"load\", () => resolve(image));\n    image.addEventListener(\"error\", (error) => reject(error));\n    image.setAttribute(\"crossOrigin\", \"anonymous\");\n    image.src = url;\n  });\n\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc);\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  if (!ctx) {\n    return null;\n  }\n\n  const maxSize = Math.max(image.width, image.height);\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\n\n  canvas.width = safeArea;\n  canvas.height = safeArea;\n\n  ctx.translate(safeArea / 2, safeArea / 2);\n  ctx.rotate(getRadianAngle(rotation));\n  ctx.translate(-safeArea / 2, -safeArea / 2);\n\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  );\n  const data = ctx.getImageData(0, 0, safeArea, safeArea);\n\n  canvas.width = pixelCrop.width;\n  canvas.height = pixelCrop.height;\n\n  ctx.putImageData(\n    data,\n    0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x,\n    0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y\n  );\n\n  const UrlToImg = new Promise((resolve, reject) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file));\n    }, \"image/jpeg\");\n  });\n\n  return {\n    base64: canvas.toDataURL(\"image/jpeg\"),\n    urlImg: UrlToImg,\n  };\n}\n","import React, { Fragment } from \"react\";\nimport { ButtonForms } from \"../buttons/buttons\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport actions from \"../../../actions\";\nimport CropperIMG from \"./Cropper/CropperIMG\";\nimport \"./styles.css\";\nimport getCroppedImg from \"./Cropper/do-img-crop\";\nimport withKeyActions from \"../../withKeyActions\";\n\nclass CropImg extends React.Component {\n  state = {\n    imageSrc: this.props.imageSrc || null,\n    crop: { x: 0, y: 0 },\n    zoom: 1,\n    aspect: 4 / 3,\n    croppedAreaPixels: null,\n    imgRotation: 0,\n    croppedImage: null,\n  };\n\n  onCropChange = (crop) => {\n    this.setState({ crop });\n  };\n\n  onCropComplete = (croppedAreaPixels, imgRotation) => {\n    // console.log(croppedArea, croppedAreaPixels)\n    this.setState({ croppedAreaPixels, imgRotation });\n  };\n\n  onZoomChange = (zoom) => {\n    let current_zoom = this.state.zoom;\n\n    if (zoom > current_zoom && zoom <= 3) {\n      current_zoom += 0.06;\n    } else {\n      current_zoom = zoom;\n    }\n\n    // if(zoom<current_zoom){\n    //   current_zoom -= 0.06\n    // }\n\n    this.setState({ zoom: current_zoom });\n  };\n\n  // onFileChange = async e => {\n  //   if (e.target.files && e.target.files.length > 0) {\n  //     const imageDataUrl = await readFile(e.target.files[0])\n  //\n  //     this.setState({\n  //       imageSrc: imageDataUrl,\n  //       crop: { x: 0, y: 0 },\n  //       zoom: 1,\n  //     })\n  //   }\n  // }\n\n  showCroppedImage = async (img, cropArea, rotation) => {\n\n    await this.props.action.isAppLoading(true);\n    const croppedImage = await getCroppedImg(\n      this.state.imageSrc,\n      this.state.croppedAreaPixels,\n      this.state.imgRotation\n    );\n    if (!croppedImage) {\n      return this.props.action.isAppLoading(false);\n    }\n\n    const { urlImg } = croppedImage;\n\n    await this.setState({ croppedImage: urlImg });\n    this.props.subirImg(croppedImage);\n    // await this.props.action.isAppLoading(false)\n  };\n\n  cancelCroppedImg = () => {\n    this.setState({\n      croppedImage: null,\n    });\n    this.props.cancelarSubidaImg();\n  };\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      imageSrc: props.imageSrc,\n    });\n  }\n\n  render() {\n    // console.log('DESDE CROP IMG COMPONENT_______', this.state, this.props)\n    return (\n      <div className=\"App\">\n        {this.state.imageSrc && (\n          <Fragment>\n            <CropperIMG\n              onCropComplete={this.onCropComplete}\n              image={this.state.imageSrc}\n            />\n            <div className=\"ImgCropcontrols\">\n              <ButtonForms\n                _id={this.props.idCancel}\n                active={true}\n                type=\"secundary\"\n                siguiente={this.cancelCroppedImg}\n              >\n                Cancelar\n              </ButtonForms>\n              {/* <img src={this.state.croppedImage} alt=\"\" width=\"40\"/> */}\n\n              <ButtonForms\n                _id={this.props.idAccept}\n                active={true}\n                type=\"primary\"\n                siguiente={this.showCroppedImage}\n              >\n                Guardar\n              </ButtonForms>\n            </div>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(withKeyActions(CropImg));\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport CropImg from \"../../../cropimg\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport QRCode from \"qrcode\";\nimport SimpleLoader from \"../../../loaders\";\nimport { MdContentCopy } from \"react-icons/md\";\nimport { BsUpload } from \"react-icons/bs\";\nimport { copy } from \"../../../../../utils\";\nimport useToastMessage from \"../../../../../hooks/useToastMessage\";\nimport Zoom from \"react-medium-image-zoom\";\nimport \"react-medium-image-zoom/dist/styles.css\";\n\nconst PaymentProofComponent = ({ imgSrc, setImgSrc, order_id }) => {\n  const [activeSection, setActiveSection] = useState(true);\n  const { coinsendaServices, actions } = UseTxState();\n  const [toastMessage] = useToastMessage();\n\n  const subirImg = async ({ base64 }) => {\n    setImgSrc(base64);\n    setActiveSection(null);\n    actions.isAppLoading(true);\n    let confirmation = await coinsendaServices.confirmDepositOrder(\n      order_id,\n      base64\n    );\n    if (!confirmation) {\n      actions.isAppLoading(false);\n      toastMessage(\"El deposito No se ha confirmado\", \"error\");\n      setImgSrc(null);\n    }\n  };\n\n  const cancelarSubidaImg = () => {\n    setActiveSection(null);\n    setImgSrc(null);\n  };\n\n  useEffect(() => {\n    let element = document.getElementById(\"close-button-with-OtherModalLayout\");\n    if (activeSection) {\n      if (element) {\n        element.scrollTo(0, 0);\n        element.classList.add(\"inactive\");\n      }\n    }\n    return () => {\n      if (element) {\n        element.classList.remove(\"inactive\");\n      }\n    };\n  }, [activeSection]);\n\n  return (\n    <OverflowContainer>\n      <Container className={`${activeSection ? \"activated\" : \"\"}`}>\n        <CropImg\n          imageSrc={imgSrc}\n          subirImg={subirImg}\n          cancelarSubidaImg={cancelarSubidaImg}\n        />\n      </Container>\n    </OverflowContainer>\n  );\n};\n\n// const CropEdit = styled.div`\n//   width: 100%;\n//   height: 50px;\n//   background: #f5f5f5;\n//   border-radius: 4px;\n//   box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.1);\n// `;\n\n// const ImgContainer = styled.div`\n//   width: 100%;\n//   max-width: 550px;\n//   background: rgba(255, 255, 255, 0.4);\n//   border-radius: 6px;\n// `;\n\nconst OverflowContainer = styled.section`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  z-index: 3;\n  display: grid;\n  overflow: hidden;\n\n  @media (max-width: 768px) {\n    height: 100vh;\n  }\n`;\n\nconst Container = styled.div`\n  padding: 50px;\n  background: #232c35;\n  transition: 0.3s;\n  transform: translateX(100%);\n  display: grid;\n  grid-template-rows: 1fr;\n  row-gap: 20px;\n  justify-items: center;\n\n  .App {\n    height: 100% !important;\n    width: 100%;\n  }\n\n  .ImgCropcontrols {\n    background: transparent !important;\n  }\n\n  &.activated {\n    animation-name: activated;\n    animation-duration: 0.8s;\n    animation-fill-mode: forwards;\n  }\n\n  @keyframes activated {\n    0% {\n      transform: translateX(100%);\n    }\n    50% {\n      transform: translateX(100%);\n    }\n    100% {\n      transform: translateX(0%);\n    }\n  }\n`;\n\nexport default PaymentProofComponent;\n\nexport const PaymentProof = ({ payload }) => {\n  // console.log('PaymentProof', payload)\n  const {\n    // primary_path,\n    coinsendaServices,\n    actions,\n    currencies,\n    currentOrder,\n    loader,\n    tx_path,\n  } = UseTxState();\n  const [imgProof, setImgProof] = useState(payload);\n  const [txId, setTxId] = useState();\n  const [urlExplorer, setUrlExplorer] = useState();\n\n  const getPaymentProof = async (currentOrder) => {\n    // alert('getpayment')\n    if (currentOrder.paymentProof) {\n      // alert('tiene pp')\n      const { proof_of_payment } = currentOrder.paymentProof;\n      // console.log(`${currencies[currentOrder.currency.currency].node_url}tx/${proof_of_payment.proof}`)\n      setImgProof(\n        currentOrder.currency_type === \"fiat\"\n          ? `data:image/png;base64, ${proof_of_payment.raw}`\n          : await QRCode.toDataURL(\n              `${currencies[currentOrder.currency.currency].node_url}tx/${\n                proof_of_payment.proof\n              }`\n            )\n      );\n      if (currentOrder.currency_type === \"crypto\") {\n        setTxId(proof_of_payment.proof);\n        setUrlExplorer(\n          `${currencies[currentOrder.currency.currency].node_url}tx/${\n            proof_of_payment.proof\n          }`\n        );\n      }\n    } else if (currentOrder.proof) {\n      setImgProof(\n        await QRCode.toDataURL(\n          `${currencies[currentOrder.currency.currency].node_url}tx/${\n            currentOrder.proof\n          }`\n        )\n      );\n      setTxId(currentOrder.proof);\n      setUrlExplorer(\n        `${currencies[currentOrder.currency.currency].node_url}tx/${\n          currentOrder.proof\n        }`\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (\n      !currentOrder.paymentProof &&\n      currentOrder.state !== \"pending\" &&\n      tx_path === \"deposits\"\n    ) {\n      const getData = async () => {\n        const PP = await coinsendaServices.getDepositById(currentOrder.id);\n        if (!PP) {\n          return;\n        }\n        // const { proof_of_payment } = PP.paymentProof;\n\n        let updateOrder = {\n          [PP.id]: { ...PP },\n        };\n        actions.update_item_state(updateOrder, \"deposits\");\n        getPaymentProof(PP);\n      };\n      getData();\n    } else {\n      getPaymentProof(currentOrder);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (imgProof !== payload) {\n      setImgProof(payload);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [payload]);\n\n  const openBlockchain = () => {\n    window.open(urlExplorer, \"_blank\");\n  };\n\n  // console.log('Payment Proof ==> ', currentOrder.currency_type)\n  return (\n    <>\n      <PaymentProofContainer\n        className={`paymentProofCont ${currentOrder.currency_type} ${currentOrder.state}`}\n      >\n        {(!imgProof || loader) && (\n          <LoaderContainer>\n            <SimpleLoader loader={2} justify=\"center\" color=\"#206f65\" />\n          </LoaderContainer>\n        )}\n\n        {imgProof && (\n          <ProofContainer>\n            <Zoom>\n              <img src={imgProof} width=\"100%\" height=\"90px\" alt=\"\" />\n            </Zoom>\n            {currentOrder.currency_type === \"crypto\" && (\n              <HoverProof>\n                <IconContainer\n                  className=\"tooltip\"\n                  data-copy={txId}\n                  onClick={copy}\n                >\n                  <MdContentCopy size={16} />\n                  <span className=\"tooltiptext fuente\">Copiar</span>\n                </IconContainer>\n\n                <IconContainer className=\"tooltip\" onClick={openBlockchain}>\n                  <BsUpload size={20} />\n                  <span className=\"tooltiptext fuente\">Ver en Blockchain</span>\n                </IconContainer>\n              </HoverProof>\n            )}\n          </ProofContainer>\n        )}\n      </PaymentProofContainer>\n\n      {/* {imgProof && (\n      <FiatPaymentProofZoom state={currentOrder.state}>\n        <ProofCont>\n          <img src={imgProof} width=\"100%\" alt=\"\" />\n        </ProofCont>\n      </FiatPaymentProofZoom>\n    )} */}\n    </>\n  );\n};\n\n// const ProofCont = styled.div`\n//   width: 90%;\n//   height: 90%;\n//   justify-self: center;\n//   align-self: center;\n//   display: grid;\n//   align-items: center;\n//   overflow: hidden;\n//   img {\n//     border-radius: 4px;\n//   }\n// `;\n\nconst FiatPaymentProofZoom = styled.div`\n  position: absolute;\n  width: calc(100% - 20px);\n  height: ${(props) =>\n    props.state === \"confirmed\" ? \"calc(100% - 230px)\" : \"calc(100% - 170px)\"};\n  background: #eeeeee;\n  top: 10px;\n  justify-self: center;\n  border-radius: 3px;\n  display: none;\n`;\n\nconst PaymentProofContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 4px;\n  align-self: center;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  max-height: 100px;\n  max-width: 110px;\n  position: relative;\n  justify-self: start;\n\n  img {\n    border-radius: 3px;\n    max-width: 100px;\n    min-width: 90%;\n  }\n  &.accepted,\n  &.confirmed {\n    background: #206f65;\n    padding: 0 5px;\n  }\n  &.rejected,\n  &.canceled {\n    background: gray;\n    opacity: 0.5;\n  }\n\n  &.fiat.accepted:hover\n    ~ ${FiatPaymentProofZoom},\n    &.fiat.confirmed:hover\n    ~ ${FiatPaymentProofZoom} {\n    display: grid;\n  }\n\n  &.fiat {\n    cursor: pointer;\n  }\n`;\n\nconst LoaderContainer = styled.div`\n  width: 90%;\n  height: 90%;\n  background: white;\n  opacity: 0.6;\n  border-radius: 3px;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  position: absolute;\n  justify-self: center;\n  align-self: center;\n  z-index: 1;\n`;\n\n\n\nconst HoverProof = styled.div`\n  position: absolute;\n  height: 100%;\n  width: calc(100% - 20px);\n  top: 0;\n  transition: 0.15s !important;\n  align-items: baseline;\n  display: grid;\n  padding: 0 10px;\n  justify-items: center;\n  grid-template-columns: repeat(2, 1fr);\n  transform: translateX(100%);\n`;\n\nconst ProofContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n\n  :hover ${HoverProof} {\n    opacity: 1;\n  }\n  button {\n    cursor: pointer;\n  }\n`;\n\nconst IconContainer = styled.div`\n  cursor: pointer;\n  width: 30px;\n  height: 30px;\n  border-radius: 3px;\n  border: 1px solid gray;\n  display: grid !important;\n  align-items: center;\n  justify-items: center;\n  position: relative;\n  align-self: flex-start;\n\n  ::after {\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n  }\n\n  .tooltiptext {\n    padding-left: 4px !important;\n    padding-right: 4px !important;\n    width: auto !important;\n    min-width: 60px !important;\n  }\n\n  i,\n  svg {\n    color: gray;\n  }\n\n  :hover {\n    i,\n    svg {\n      color: #0c96fa;\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport api, { orderStatus } from \"./rest.json\";\nimport { OnlySkeletonAnimation } from \"../../../loaders/skeleton\";\nimport styled from \"styled-components\";\nimport { device } from \"../../../../../const/const\";\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nmoment.locale(\"es\");\n\nconst OrderStatus = ({ order, movil }) => {\n  const [orderState, setOrderState] = useState();\n  const { currentOrder, tx_path } = UseTxState();\n\n  const skeletons = new Array(4).fill([\"created\"]);\n\n  useEffect(() => {\n    let orders = {};\n    for (let prop in api[tx_path]) {\n      orders = {\n        ...orders,\n        [prop]: {\n          ...api[tx_path][prop],\n          completed: currentOrder.state === prop,\n        },\n      };\n    }\n    // console.log(orders, api[tx_path])\n    setOrderState(Object.entries(orders));\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentOrder.state]);\n\n  // console.log('|||||||||||||||| OrderSupervisor ::', order)\n\n  return (\n    <OrderStatusContainer>\n      <TopSectionStatus>\n        <Text className=\"fuente\">\n          {orderStatus[tx_path][order.state][order.currency_type].title}\n        </Text>\n        <SubTitle className=\"fuente\">\n          {orderStatus[tx_path][order.state][order.currency_type].description}\n        </SubTitle>\n      </TopSectionStatus>\n      {!movil && (\n        <StatusContainer>\n          {orderState\n            ? orderState.map((state, index) => {\n                return (\n                  <StatusItem\n                    state={state}\n                    order={currentOrder}\n                    key={index}\n                    active={state[1].completed}\n                    className={`\n                  ${\n                    orderState.length === index + 1\n                      ? \"statusStep finalStep\"\n                      : \"statusStep\"\n                  }\n                  ${state[1].completed ? \"activeStep\" : \"\"}\n                  `}\n                  />\n                );\n              })\n            : skeletons.map((state, index) => {\n                return (\n                  <StatusItem\n                    state={state}\n                    key={index}\n                    className={`${\n                      skeletons.length === index + 1\n                        ? \"statusStep finalStep\"\n                        : \"statusStep\"\n                    } skeleton`}\n                    skeleton\n                  />\n                );\n              })}\n        </StatusContainer>\n      )}\n    </OrderStatusContainer>\n  );\n};\n\nconst StatusItem = ({ className, state, order, active, skeleton }) => {\n  const activated = active && active.toString();\n  // console.log((state[0] === \"confirmed\" && (order.state === 'pending' || order.state === 'confirmed')), state )\n\n  return (\n    <Status className={`status ${className}`}>\n      <Indicator className={className} />\n      <Description>\n        {skeleton ? (\n          <Skeleton />\n        ) : (\n          <>\n            <StatusTitle className=\"fuente\" active={activated}>\n              {state[1].ui_text[order.currency_type] || state[1].ui_text}\n            </StatusTitle>\n            <DateStatusText className=\"fuente2\" active={activated}>\n              {active && order.state === \"pending\"\n                ? \"Pendiente\"\n                : active\n                ? \"En proceso...\"\n                : state[0] === \"created\"\n                ? moment(order.created_at).format(\"LL\")\n                : state[0] === \"pending\"\n                ? moment(order.updated_at).format(\"LL\")\n                : state[0] === \"confirmed\" && order.state === \"confirmed\"\n                ? moment(order.updated_at).format(\"LL\")\n                : \"\"}\n            </DateStatusText>\n          </>\n        )}\n      </Description>\n    </Status>\n  );\n};\n\nexport default OrderStatus;\n\nexport const Text = styled.p`\n  margin: 0;\n`;\n\nconst OrderStatusContainer = styled.div`\n  background: #f5f5f5;\n  box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.05);\n  display: grid;\n  grid-template-rows: auto 1fr;\n  row-gap: 25px;\n  padding: 30px 40px;\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n\n  @media ${device.tablet} {\n    grid-template-rows: 1fr;\n    padding: 25px 20px;\n  }\n`;\nconst TopSectionStatus = styled.div`\n  display: grid;\n  row-gap: 10px;\n  height: auto;\n`;\n\nconst SubTitle = styled(Text)`\n  font-size: 13px;\n  color: gray;\n`;\n\nconst StatusContainer = styled.div`\n  padding: 45px 0;\n  display: grid;\n  grid-template-rows: repeat(auto-fill, 70px);\n  row-gap: 10px;\n`;\n\nconst Status = styled.div`\n  height: 70px;\n  padding: 0 20px;\n  display: grid;\n  align-items: center;\n  grid-template-columns: 20px 1fr;\n\n  &.activeStep ~ .status .statusStep {\n    background: #dadada;\n    ::after {\n      background: #dadada;\n    }\n  }\n\n  &.activeStep .statusStep {\n    ::after {\n      background: #dadada;\n    }\n  }\n`;\n\nconst Indicator = styled.div`\n  justify-self: center;\n  width: 14px;\n  height: 14px;\n  background: #0198ff;\n  border-radius: 50%;\n  position: relative;\n  z-index: 2;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  border: 2px solid #f5f5f5;\n\n  &.activeStep {\n    width: 14px;\n    height: 14px;\n    border: 2px solid #0198ff;\n    background: transparent !important;\n    position: relative;\n    ::after {\n      top: 16px !important;\n    }\n    ::before {\n      content: \"\";\n      width: 6px;\n      height: 6px;\n      background: #0198ff;\n      border-radius: 50%;\n    }\n  }\n\n  &.statusStep::after {\n    content: \"\";\n    width: 2px;\n    height: 64px;\n    background: #0198ff;\n    position: absolute;\n    -webkit-align-self: center;\n    align-self: start;\n    top: 14px;\n    z-index: 1;\n  }\n\n  &.statusStep.finalStep::after {\n    display: none;\n  }\n\n  &.skeleton {\n    background: #c1c1c1;\n    ::after {\n      background: #c1c1c1;\n    }\n  }\n`;\nconst Description = styled.div`\n  padding-left: 20px;\n  display: grid;\n  row-gap: 5px;\n  p {\n    margin: 0;\n  }\n`;\n\nconst Skeleton = styled.div`\n  width: 100%;\n  height: 16px;\n  background: #c1c1c1;\n  border-radius: 3px;\n  ${OnlySkeletonAnimation}\n`;\n\nconst StatusTitle = styled(Text)`\n  font-size: 14px;\n  color: ${(props) => (props.active === \"true\" ? \"#0198FF\" : \"gray\")};\n`;\n\nconst DateStatusText = styled(Text)`\n  font-size: 12px;\n  color: ${(props) => (props.active === \"true\" ? \"#0198FF\" : \"#adadad\")};\n`;\n\n//\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nexport default class ConfirmationCounter extends Component {\n  state = {\n    ctx: null,\n    total: 6,\n    loader: true,\n    color: \"#159e8c\",\n  };\n\n  draw_interval;\n\n  // init_draw = async props => {\n  //   let c = document.getElementById(\"myCanvas\")\n  //   await this.setState({\n  //     ctx: c.getContext(\"2d\")\n  //   })\n  //\n\n  draw = async (amount) => {\n    // const {\n    //   ctx\n    // } = this.state\n    await this.setState({ loader: false });\n    let c = document.getElementById(\"myCanvas\");\n    if (!c) {\n      return false;\n    }\n    const ctx = c.getContext(\"2d\");\n    clearInterval(this.draw_interval);\n    let tasaPercent = (100 * amount) / this.state.total;\n    ctx.beginPath();\n    ctx.arc(150, 63, 58, 0, ((2 * Math.PI) / 100) * tasaPercent);\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"#1cb179\";\n    ctx.stroke();\n    // ctx.closePath()\n  };\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.confirmations !== prevProps.confirmations) {\n      await this.setState({ loader: true });\n      this.draw(this.props.confirmations);\n    }\n  }\n\n  async componentDidMount() {\n    await this.setState({ loader: true });\n    this.draw_interval = setInterval(() => {\n      this.draw(this.props.confirmations);\n    }, 250);\n  }\n\n  render() {\n    const { confirmations, total_confirmations } = this.props;\n\n    // const { color } = this.state;\n\n    return (\n      <AbsoluteContainer2>\n        <RelativeContainer>\n          <AbsoluteContainer>\n            <ContCanvasConfirmation>\n              <ConfirmationContainer>\n                <TextContainer>\n                  <p className=\"fuente2\">\n                    {confirmations}\n                    <span>\n                      / {total_confirmations ? total_confirmations : \"6\"}\n                    </span>\n                  </p>\n                </TextContainer>\n              </ConfirmationContainer>\n              {!this.state.loader && (\n                <Canvas id=\"myCanvas\" width=\"300\" height=\"125\" />\n              )}\n            </ContCanvasConfirmation>\n          </AbsoluteContainer>\n        </RelativeContainer>\n      </AbsoluteContainer2>\n    );\n  }\n}\n\nconst AbsoluteContainer = styled.div`\n  position: absolute;\n`;\n\nconst AbsoluteContainer2 = styled(AbsoluteContainer)`\n  right: 0;\n  transform: scale(0.9);\n`;\n\nconst RelativeContainer = styled.div`\n  width: 130px;\n  height: 170px;\n  position: relative;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n`;\n\nconst ConfirmationContainer = styled.div`\n  width: 80px;\n  height: 50%;\n  position: absolute;\n  align-self: center;\n  justify-self: center;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  p {\n    font-size: 30px;\n    margin: 0;\n  }\n`;\n\nconst TextContainer = styled.div`\n  width: 80px;\n  height: 50%;\n  position: absolute;\n  align-self: center;\n  justify-self: center;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  p {\n    font-size: 30px;\n    color: #1cb179;\n    margin: 0;\n  }\n  span {\n    color: #1cb179;\n    margin-left: 5px;\n    font-size: 18px;\n  }\n`;\n\n// const CounterText = styled.article`\n//   color: ${(props) => (props.color ? `${props.color} !important` : \"red\")};\n//   font-size: 40px !important;\n//   margin: 0 !important;\n//   padding: 0 !important;\n//   align-self: center !important;\n// `;\n\nconst ContCanvasConfirmation = styled.section`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n`;\n\nconst Canvas = styled.canvas`\n  transform: rotate(-90deg);\n  transition: 0.3s;\n`;\n\n//\n","import React, { useState, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlineUpload } from \"react-icons/ai\";\n// import PaymentProofComponent, { PaymentProof } from \"./paymentProof\";\nimport { PaymentProof } from \"./paymentProof\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport SimpleLoader from \"../../../loaders\";\n// import QRCode from \"qrcode\";\nimport { readFile, img_compressor, includesAnyImageMime } from \"../../../../../utils\";\nimport OrderStatus from \"./orderStatus\";\nimport DetailGenerator from \"./detailGenerator\";\nimport { OnlySkeletonAnimation } from \"../../../loaders/skeleton\";\nimport IconSwitch from \"../../../icons/iconSwitch\";\nimport { AiOutlineClockCircle } from \"react-icons/ai\";\nimport ConfirmationCounter from \"./confirmationCounter\";\nimport useViewport from \"../../../../../hooks/useWindowSize\";\nimport { device, BIOMETRIC_FIAT_LITMIT_AMOUNT } from \"../../../../../const/const\";\nimport { IconClose } from \"../../../shared-styles\";\nimport useToastMessage from \"../../../../../hooks/useToastMessage\";\nimport { useFormatCurrency } from \"../../../../hooks/useFormatCurrency\";\nimport { BottomSection } from './'\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nimport useKeyActionAsClick from \"../../../../../hooks/useKeyActionAsClick\";\nmoment.locale(\"es\");\n \n// const orderModel = {\n//   created_at: new Date(),\n//   updated_at: new Date(),\n//   state: \"pending\",\n//   currency_type: \"fiat\",\n// };\n\nconst InProcessOrder = ({ onErrorCatch }) => {\n  const { currentOrder } = UseTxState();\n\n  if (!currentOrder || !currentOrder.currency) return onErrorCatch();\n\n  return (\n    <>\n      {currentOrder.currency_type === \"fiat\" ? (\n        <FiatOrder order={currentOrder} />\n      ) : (\n        <CryptoOrder order={currentOrder} tx_path />\n      )}\n    </>\n  );\n};\n\nexport default InProcessOrder;\n\nconst CryptoOrder = ({ order }) => {\n  const { tx_path, currencies } = UseTxState();\n  const { isTabletOrMovilViewport } = useViewport();\n\n  return (\n    <InProcessOrderContainer>\n      <IconClose theme=\"dark\" size={20} />\n      <OrderContainer>\n        <TopSection>\n          <IconSwitch\n            className=\"TitleIconOrder\"\n            size={35}\n            icon={order.currency.currency || \"cop\"}\n          />\n          <TitleContainer>\n            <Text className=\"fuente\">{getTitle(tx_path)}</Text>\n            <Currency className=\"fuente\">{order.currency.currency}</Currency>\n          </TitleContainer>\n          <DateIdContainter>\n            <Text className=\"fuente2\">#{order.id}</Text>\n            <DateText className=\"fuente2\">\n              {moment(order.updated_at).format(\"LL\")}\n            </DateText>\n          </DateIdContainter>\n        </TopSection>\n\n        {isTabletOrMovilViewport && <OrderStatus order={order} movil />}\n\n        <MiddleSection state={order.state}>\n          <DetailGenerator\n            order={order}\n            title={`${getState(order)}`}\n            TitleSuffix={() => <GetIcon order={order} />}\n          />\n        </MiddleSection>\n\n        {\n          tx_path === \"deposits\" ? (\n            <BottomSectionContainer className={`crypto`}>\n              <UploadComponent />\n              <ConfirmationCounter\n                confirmations={order.confirmations}\n                total_confirmations={\n                  currencies[order.currency.currency].confirmations\n                }\n              />\n            </BottomSectionContainer>)\n          :\n            <BottomSection colorState={\"gray\"} currentOrder={order} tx_path={tx_path} />\n        }\n      </OrderContainer>\n\n      {!isTabletOrMovilViewport && <OrderStatus order={order} />}\n    </InProcessOrderContainer>\n  );\n};\n\nconst FiatOrder = ({ order }) => {\n  const [onDrag, setOnDrag] = useState(false);\n  const [imgSrc, setImgSrc] = useState(false);\n  const { actions, tx_path, coinsendaServices } = UseTxState();\n  const { isTabletOrMovilViewport } = useViewport();\n  const [ , , toBigNumber ] = useFormatCurrency()\n  const [toastMessage] = useToastMessage();\n\n  const dragOver = (event) => {\n    event.preventDefault();\n    if (!onDrag) {\n      setOnDrag(!onDrag);\n    }\n  };\n\n  const dragLeave = (event) => {\n    event.preventDefault();\n    if (onDrag) {\n      setOnDrag(!onDrag);\n    } \n  };\n\n  const goFileLoader = async (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      setOnDrag(false);\n      const data = e.target.files[0];\n      const file = await img_compressor(data, 0.25);\n      const dataBase64 = await readFile(file);\n      const isAnImage = includesAnyImageMime(dataBase64.split(\",\")[1])\n      if(!isAnImage){\n        return alert('Solo se aceptan imagenes')\n      }\n      setImgSrc(dataBase64);\n      actions.isAppLoading(true);\n\n      const { user } = coinsendaServices.globalState.modelData\n      const orderAmount = await toBigNumber(order.amount, order.currency)\n      const limitAmount = await toBigNumber(BIOMETRIC_FIAT_LITMIT_AMOUNT, order.currency)\n      \n      if(user.security_center?.transactionSecurity?.biometric?.enabled && orderAmount.isGreaterThanOrEqualTo(limitAmount)){\n        const Element = await import(\"../../../../forms/widgets/biometricKycComponent/init\");\n        if(!Element) return;\n        const BiometricKyc = Element.default\n        return actions.renderModal(() => <BiometricKyc orderData={{order, paymentProof:dataBase64}} />);\n      }\n\n      // cropImgOFf\n      // activate oncomment line ><167\n      let confirmation = await coinsendaServices.confirmDepositOrder(\n        order.id,\n        dataBase64\n      );\n      if (!confirmation || !confirmation.data) {\n        actions.isAppLoading(false);\n        toastMessage(\"El depósito No se ha confirmado\", \"error\");\n        setImgSrc(null);\n      }\n    }\n  };\n\n  console.log('|||||||||||||||| FiatOrderDespoit ::', tx_path)\n  // debugger\n\n\n  return (\n    <InProcessOrderContainer>\n      <IconClose theme=\"dark\" size={20} />\n\n      <OrderContainer onDragOver={dragOver}>\n        {onDrag && !imgSrc && order.state === \"pending\" && (\n          <DropZoneComponent\n            dragLeave={dragLeave}\n            goFileLoader={goFileLoader}\n          />\n        )} \n        {/* {imgSrc && order.state === \"pending\" && (\n          <PaymentProofComponent\n            order_id={order.id} \n            imgSrc={imgSrc}\n            setImgSrc={setImgSrc}\n          />\n        )} */}\n\n        <TopSection>\n          <IconSwitch\n            className=\"TitleIconOrder\"\n            size={35}\n            icon={order.currency.currency || \"cop\"}\n          />\n          <TitleContainer>\n            <Text className=\"fuente\">{getTitle(tx_path)}</Text>\n            <Currency className=\"fuente\">{order.currency.currency}</Currency>\n          </TitleContainer>\n          <DateIdContainter>\n            <Text className=\"fuente2\">#{order.id}</Text>\n            <DateText className=\"fuente2\">\n              {moment(order.updated_at).format(\"LL\")}\n            </DateText>\n          </DateIdContainter>\n        </TopSection>\n\n        {isTabletOrMovilViewport && <OrderStatus order={order} movil />}\n\n        <MiddleSection state={order.state}>\n          <DetailGenerator\n            order={order}\n            title={`${getState(order)}`}\n            TitleSuffix={() => <GetIcon order={order} />}\n          />\n        </MiddleSection>\n\n        {\n          tx_path === \"deposits\" ? (\n          <BottomSectionContainer>\n            <UploadComponent\n              imgSrc={imgSrc}\n              goFileLoader={goFileLoader}\n              setImgSrc={setImgSrc}\n            />\n          </BottomSectionContainer>)\n          :\n          <BottomSection colorState={\"gray\"} currentOrder={order} tx_path={tx_path} />\n        }\n\n      </OrderContainer>\n\n      {!isTabletOrMovilViewport && <OrderStatus order={order} />}\n    </InProcessOrderContainer>\n  );\n};\n\nconst DropZoneComponent = ({ dragLeave, goFileLoader }) => {\n  return (\n    <DropZoneContainer>\n      <input\n        id=\"TFileUpload\"\n        type=\"file\"\n        // accept=\"image/png,image/jpeg\"\n        onChange={goFileLoader}\n        onDragLeave={dragLeave}\n        capture=\"user\" \n        accept=\"image/*\"\n      />\n      <UploadComponent\n        unButtom\n        title=\"Suelta aquí el archivo que quieres subir...\"\n      />\n    </DropZoneContainer>\n  );\n};\n\nconst UploadComponent = ({ unButtom, title, goFileLoader, imgSrc, ...props}) => {\n  const { currentOrder } = UseTxState();\n  const idForFileUpload = useKeyActionAsClick(\n    true,\n    \"TFileUpload\",\n    13,\n    true,\n    \"onkeyup\",\n    true\n  );\n\n  return (\n    <UploadContainer\n      className={`${\n        imgSrc || currentOrder.state === \"confirmed\" ? \"loaded\" : \"unload\"\n      }`}\n    >\n      {!imgSrc && currentOrder.state !== \"confirmed\" ? (\n        <Fragment>\n          <AiOutlineUpload size={45} color=\"gray\" />\n          <UploadText className=\"fuente\">\n            {title || \"Arrastra el comprobante que quieres subir\"}\n          </UploadText>\n          {!unButtom && (\n            <Fragment>\n              <UploadMiddle>\n                <UploadTextMiddle className=\"fuente\">\n                  o selecciona un archivo\n                </UploadTextMiddle>\n                <hr />\n              </UploadMiddle>\n\n              <Buttom>\n                <input\n                  id={idForFileUpload}\n                  type=\"file\"\n                  accept=\"image/png,image/jpeg\"\n                  onChange={goFileLoader}\n                />\n                <Text style={{ color: \"white\" }} className=\"fuente\">\n                  Subir comprobante\n                </Text>\n              </Buttom>\n            </Fragment>\n          )}\n        </Fragment>\n      ) : (\n        <Fragment>\n          <UploadMiddle className=\"titleSection payment fuente\">\n            <UploadTextMiddle className=\"titleSection\">\n              Comprobante de pago\n            </UploadTextMiddle>\n            <hr />\n          </UploadMiddle>\n          <PaymentProof payload={imgSrc} />\n        </Fragment>\n      )}\n    </UploadContainer>\n  );\n};\n\nconst getTitle = (tx_path) => {\n  return tx_path === \"deposits\" ? \"Depósito\" : \"Retiro\";\n};\n\nconst GetIcon = ({ order }) => {\n  const coloIcon = order.state === \"pending\" ? \"#ff8660\" : \"#1cb179\";\n  const RenderIcon =\n    order.state === \"pending\"\n      ? AiOutlineClockCircle\n      : order.state === \"confirmed\" &&\n        (() => <SimpleLoader loader={2} color={coloIcon} justify=\"center\" />);\n\n  return (\n    <IconContainer>\n      <RenderIcon size={25} color={coloIcon} />\n    </IconContainer>\n  );\n};\n\nconst getState = ({ state, currency_type }) => {\n  switch (currency_type) {\n    case \"fiat\":\n      return state === \"pending\"\n        ? \"Pendiente\"\n        : state === \"confirmed\" && currency_type === \"fiat\"\n        ? \"Procesando...\"\n        : \"En proceso de aceptación...\";\n    case \"crypto\":\n      return state === \"pending\" ? \"Pendiente\" : \"Confirmando en blockchain...\";\n    default:\n  }\n};\n\nconst IconContainer = styled.div`\n  position: relative;\n  width: 25px;\n  height: 25px;\n  display: grid;\n`;\n\nconst DropZoneContainer = styled.section`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.85);\n  z-index: 3;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  ${\"\" /* border: 5px solid #0198FF; */}\n\n  svg {\n    fill: #0198ff;\n  }\n  p {\n    color: #0198ff;\n  }\n`;\n\n// const ImgContainer = styled.div`\n//   width: 80px;\n//   height: 55px;\n//   position: relative;\n//   border: 3px solid #0198ff;\n//   border-radius: 4px;\n//   background: white;\n//   display: grid;\n//   align-items: center;\n//   &.loader::after {\n//     content: \"\";\n//     width: 100%;\n//     position: absolute;\n//     height: 100%;\n//     background: rgba(255, 255, 255, 0.8);\n//   }\n//   .lds-roller {\n//     z-index: 2;\n//   }\n// `;\n\n// const Img = styled.img`\n//   width: 80px;\n//   height: 55px;\n//   border-radius: 3px;\n// `;\n\n// const ProgressBar = styled.span`\n//   height: 4px;\n//   width: 100%;\n//   background: #c5c5c5;\n//   transition: 0.3s;\n//   position: relative;\n//   ::after {\n//     content: \"\";\n//     width: ${(props) => props.progresed};\n//     background: #0198ff;\n//     height: 100%;\n//     position: absolute;\n//     transition: 3s;\n//     left: 0;\n//     top: 0;\n//   }\n// `;\n\nexport const Text = styled.p`\n  margin: 0;\n`;\n\n// const PaymentTitle = styled(Text)`\n//   text-align: center;\n//   font-size: 14px;\n//   color: gray;\n// `;\n\n// const PaymentProofDetail = styled.div`\n//   width: 100%;\n//   display: grid;\n//   grid-template-rows: auto auto auto;\n//   row-gap: 10px;\n//   justify-items: center;\n//   align-items: center;\n//   padding-top: 40px;\n// `;\n\nconst Buttom = styled.div`\n  width: 320px;\n  height: 45px;\n  border-radius: 6px;\n  border: 2px solid #0198ff;\n  background: #0198ff;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  cursor: pointer;\n  position: relative;\n`;\n\nexport const UploadTextMiddle = styled(Text)`\n  z-index: 2;\n  font-size: 12px;\n  width: 150px;\n  background: #eeeeee;\n  text-align: center;\n  color: gray;\n\n  &.titleSection {\n    font-size: 15px;\n    width: auto;\n    padding: 0 20px;\n    align-self: center;\n    justify-self: baseline;\n  }\n\n  &.consolidatedStyle{\n    background:white;\n    margin-left:20px;\n  }\n`;\n\nexport const UploadMiddle = styled.div`\n  font-size: 14px;\n  position: relative;\n  display: grid;\n  width: 100%;\n  justify-items: center;\n  max-width: 320px;\n  hr{\n    position: absolute;\n    width: 100%;\n    align-self: center;\n  }\n\n  &.titleSection{\n    max-width: inherit;\n    position: absolute;\n    align-self: start;\n    hr{\n      border-top: 1px solid;\n      color: #c5c5c5;\n      position: absolute;\n      width: 80%;\n      right: 0;\n    }\n  }\n  &.payment{\n    p{\n      padding-left: 0 !important;\n    }\n    position: relative !important;\n  }\n\n  &.swaps{\n    hr{\n      width: 98%;\n    }\n  }\n}\n`;\n\nconst UploadText = styled(Text)`\n  font-size: 16px;\n  color: gray;\n`;\n\nconst UploadContainer = styled.section`\n  display: grid;\n  justify-items: center;\n  row-gap: 12px;\n  width: 100%;\n  min-height: 170px;\n  height: auto;\n  &.loaded {\n    grid-template-rows: auto 1fr;\n  }\n  &.unload {\n    grid-template-columns: 1fr;\n    max-width: 400px;\n    grid-template-rows: repeat(4, auto);\n  }\n`;\n\nexport const Section = styled.div``;\n\nconst BottomSectionContainer = styled(Section)`\n  height: auto;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n\n  &.crypto {\n    position: relative;\n  }\n`;\n\nconst DateIdContainter = styled.div`\n  display: flex;\n  grid-area: dateIdContainter;\n  ${Text} {\n    font-size: 12px;\n    color: gray;\n  }\n`;\n\nconst DateText = styled(Text)`\n  margin-left: 9px !important;\n  padding-left: 7px;\n  border-left: 1px solid gray;\n`;\n\nconst TitleContainer = styled.div`\n  margin: 0;\n  display: flex;\n  align-items: center;\n  grid-area: titleContainer;\n  ${Text} {\n    font-size: 20px;\n  }\n`;\n\nconst Currency = styled(Text)`\n  margin-left: 7px !important;\n  text-transform: uppercase;\n`;\n\n// const Icon = styled.span`\n//   width: 35px;\n//   height: 35px;\n//   border-radius: 50%;\n//   background: #c3c3c3;\n//   grid-area: icon;\n//   ${\"\" /* box-shadow: 0px 0px 5px 3px rgba(0,0,0,0.1); */}\n// `;\n\nconst MiddleSection = styled(Section)`\n  background: white;\n  border-radius: 4px;\n  position: relative;\n  overflow: hidden;\n  ::after {\n    content: \"\";\n    position: absolute;\n    height: 7px;\n    background: ${(props) =>\n      props.state === \"pending\" ? \"#ff8660\" : \"#1cb179\"};\n    top: 0;\n    width: 100%;\n    ${(props) => props.state === \"confirmed\" && OnlySkeletonAnimation}\n  }\n  .withTitle {\n    padding-top: 55px !important;\n  }\n`;\n\nconst TopSection = styled(Section)`\n  display: grid;\n  align-items: center;\n  grid-template-rows: auto auto;\n  column-gap: 12px;\n  row-gap: 5px;\n  grid-template-columns: auto 1fr;\n  grid-template-areas:\n    \"icon titleContainer\"\n    \"icon dateIdContainter\";\n  span {\n    margin-right: 15px;\n  }\n\n  .TitleIconOrder {\n    grid-area: icon;\n  }\n`;\n\n// const Container = styled.section`\n//   width: 100vw;\n//   height: 100vh;\n//   background: #000000ba;\n//   display: grid;\n//   align-items: center;\n//   justify-items: center;\n// `;\n\nconst OrderContainer = styled.div`\n  background: #eeeeee;\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  row-gap: 30px;\n  position: relative;\n  border-top-left-radius: 6px;\n  border-bottom-left-radius: 6px;\n\n  @media ${device.tablet} {\n    grid-template-rows: auto auto 1fr auto;\n  }\n`;\n\nconst InProcessOrderContainer = styled.section`\n  #TFileUpload {\n    position: absolute;\n    z-index: 4;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    cursor: pointer;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  ${OrderContainer} {\n    padding: 30px 40px;\n  }\n\n  position: relative;\n  width: 1000px;\n  height: auto;\n  min-height: 750px;\n  background: white;\n  display: grid;\n  border-radius: 6px;\n  box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.1);\n  grid-template-columns: 1fr 400px;\n\n  @media ${device.laptop} {\n    width: 100%;\n  }\n\n  @media ${device.tabletL} {\n    grid-template-columns: 1fr;\n    position: absolute;\n    top: 10px;\n  }\n\n  @media ${device.tablet} {\n    ${OrderContainer} {\n      padding: 30px 15px;\n    }\n  }\n`;\n","import { useEffect } from \"react\";\nimport { PaymentProof } from \"./paymentProof\";\nimport loadable from \"@loadable/component\";\nimport { Icon, IconContainer } from '../../../../referrals/shareStyles'\nimport { MAIN_COLOR } from '../../../../../const/const'\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport styled from 'styled-components'\n\n\nconst ReferralInfo = () => {\n    const IconSwitch = loadable(() => import(\"../../../icons/iconSwitch\"));\n    return(\n      <IconContainer>\n        <Icon>\n          <IconSwitch color={MAIN_COLOR}  size={40} icon=\"referral\" />\n        </Icon>\n      </IconContainer>\n    )\n}\n  \n  \n  const WithdrawFiatInfo = () => {\n\n    const IconSwitch = loadable(() => import(\"../../../icons/iconSwitch\"));\n    const { tx_path, order_id } = useParams();\n    const modelData = useSelector(({ modelData }) => modelData);\n    const { withdraw_account_id } = modelData[tx_path][order_id]\n    const withdrawAccount = modelData?.withdraw_accounts && modelData?.withdraw_accounts[withdraw_account_id]\n\n    return(\n        <WithdrawAccountCont className={`${!withdrawAccount ? 'unAvalaible' : ''}`}>\n          <IconCont>\n            {\n                withdrawAccount && <IconSwitch size={45} icon={withdrawAccount?.bank_name?.value} />\n            }\n          </IconCont>\n          <DataContainer>\n            <p className=\"fuente\">{!withdrawAccount ? 'Cuenta no disponible' : withdrawAccount?.bank_name?.ui_name?.toLowerCase()}</p>\n            <p className=\"fuente accountType\">{!withdrawAccount ? '' : withdrawAccount?.account_type?.ui_name}</p>\n            <p className=\"fuente2\">{!withdrawAccount ? '' : `No. ${withdrawAccount?.account_number?.value}`}</p>\n            \n          </DataContainer>\n        </WithdrawAccountCont>\n    )\n  }\n\n  export const IconCont = styled.div`\n    height:80px;\n    width:80px;\n    border-radius:6px;\n    position: relative;\n    display: grid;\n    background:#d8d8d8;\n    border-radius:6px;\n\n    .iconSty{\n        position: absolute;\n        justify-self: center;\n        align-self: center; \n    }\n  `\n\n  export const WithdrawAccountCont = styled.div`\n    width:auto;\n    height:80px;\n    display:grid;\n    grid-template-columns:auto 1fr;\n    column-gap: 12px;\n\n    &.unAvalaible{\n       ${IconCont}{\n            background:#c4c4c4;\n        }\n       .fuente{\n        font-size:14px;\n       }\n    }\n  ` \n \n  export const DataContainer = styled.div`\n    height:100%;\n    width:auto;\n    display: grid;\n    grid-template-rows: 20px 18px auto;\n    row-gap: 5px;\n    .accountType{\n        font-size:12px;\n    }\n    .fuente2{\n      font-size:12px;\n    }\n    p{\n      text-transform: capitalize;\n      color:gray;\n      margin:0;\n    }\n  `\n\n\n  \n  \n  const GetInfoComponentToRender = (order) => {\n  \n    const { tx_path, info } = order\n    const targetKey = info?.is_referral ? 'is_referral' : order?.currency_type\n\n    const toRender = {\n      \"deposits\":{\n        \"is_referral\":{\n            \"title\":\"Depósito por referido\",\n            \"component\":ReferralInfo\n        }        \n      },\n      \"withdraws\":{\n        \"fiat\":{\n            \"title\":\"Información cuenta de retiro\",\n            \"component\":WithdrawFiatInfo\n        }\n      },\n      \"swaps\":{\n        \"title\":\"\",\n        \"component\":() => (<div></div>)\n      }\n    }\n    \n    useEffect(()=> {\n       const title = tx_path === 'swaps' ? '' : toRender[tx_path][targetKey]?.title || 'Comprobante de pago'\n       const targetElement = document.querySelector('#titleInfoComponent')\n       if(targetElement){\n         targetElement.innerHTML = title\n       }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    if(tx_path === 'swaps'){\n      return toRender[tx_path]?.component\n    }\n  \n    return toRender[tx_path][targetKey]?.component ||  PaymentProof\n  }\n\n\n  export default GetInfoComponentToRender","import React from \"react\";\nimport OtherModalLayout from \"../../otherModalLayout\";\nimport styled from \"styled-components\";\nimport {\n  swing_in_bottom_bck,\n  // socketIconContainerIntro,\n  backTopSection,\n} from \"../../../animations\";\nimport { orderStateColors, device, ORDER_TYPE_UI_NAME, TOTAL_ORDER_AMOUNT_COPYS } from \"../../../../../const/const\";\nimport IconSwitch from \"../../../icons/iconSwitch\";\n// import { useActions } from \"../../../../../hooks/useActions\";\nimport useViewport from \"../../../../../hooks/useWindowSize\";\nimport DetailGenerator from \"./detailGenerator\";\nimport { useFormatCurrency } from \"../../../../hooks/useFormatCurrency\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport InProcessOrder from \"./inProcessOrder\";\nimport { IconClose } from \"../../../shared-styles\";\nimport GetInfoComponentToRender from './infoComponent'\n// import useKeyActionAsClick from '../../../../../hooks/useKeyActionAsClick'\nimport { UploadTextMiddle, UploadMiddle } from './inProcessOrder'\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nmoment.locale(\"es\");\n\nconst OrderSupervisor = () => {\n\n  const { actions, currentOrder, tx_path } = UseTxState();\n\n  // const { isMovilViewport } = useViewport();\n\n  const cerrar = (e, forceClose) => {\n    if (e && (e.target.dataset.close_modal || forceClose)) {\n      actions.isAppLoading(false);\n      actions.renderModal(null);\n      // history.goBack()\n    }\n  };\n\n  // const idForCloseModal = useKeyActionAsClick(true, 'close-modal-button-orders', 27, true, 'onkeyup', true)\n\n  // useEffect(() => {\n  //   document.onkeyup = (event) => {\n  //     if (event.keyCode === 27) {\n  //       cerrar(event, true)\n  //       // event.preventDefault();\n  //     }\n  //   }\n  //\n  //   return () => {\n  //     document.onkeyup = false\n  //   }\n  // }, [document.onkeyup])\n\n  const closeAll = () => {\n    actions.renderModal(null);\n    return <div></div>;\n  };\n\n  if (!currentOrder || !currentOrder.state) {\n    actions.renderModal(null);\n    return <div></div>;\n  }\n\n  return (\n    <OtherModalLayout\n      id=\"close-button-with-OtherModalLayout\"\n      onkeydown={true}\n      on_click={cerrar}\n    >\n      {[\"accepted\", \"rejected\", \"canceled\"].includes(currentOrder.state) ? \n      <OrderDetail currentOrder={currentOrder} tx_path={tx_path}/>\n      :\n      (<InProcessOrder onErrorCatch={closeAll}/>)}\n    </OtherModalLayout>\n  );\n};\n\nexport default OrderSupervisor;\n\nexport const getState = (state) => {\n  return state === \"accepted\"\n    ? \"Aceptado\"\n    : state === \"confirmed\"\n    ? \"Confirmado\"\n    : state === \"pending\"\n    ? \"Pendiente\"\n    : state === \"rejected\"\n    ? \"Rechazado\"\n    : \"Cancelado\";\n};\n\n\nconst orderTypeUiName = (orderType) => {\n  return ORDER_TYPE_UI_NAME[orderType]?.ui_name || orderType\n}\n\nexport const OrderDetail = ({ currentOrder, tx_path }) => {\n  // const actions = useActions();\n  // const {\n    // tx_path,\n    // currencies,\n    // currentOrder,\n    // primary_path,\n    // history,\n  // } = UseTxState();\n  // console.log(currentOrder, currentOrder.id, tx_path, primary_path)\n  const { isMovilViewport } = useViewport();\n\n  // console.log('currentOrder', currentOrder)\n  // debugger\n\n  if(!currentOrder) return null;\n  const { state } = currentOrder;\n  const TitleText = orderTypeUiName(tx_path)\n\n  const textState =\n    state === \"accepted\"\n      ? \"Aceptado\"\n      : state === \"confirmed\"\n      ? \"Confirmado\"\n      : state === \"pending\"\n      ? \"Pendiente\"\n      : state === \"rejected\"\n      ? \"Rechazado\"\n      : \"Cancelado\";\n  const colorState =\n    state === \"accepted\"\n      ? \"#1cb179\"\n      : state === \"confirmed\"\n      ? \"#77b59d\"\n      : state === \"pending\"\n      ? \"#ff8660\"\n      : \"red\";\n\n      const ConsolidatedOrder = [\"accepted\", \"rejected\", \"canceled\"].includes(state)\n\n\n  return (\n    <Layout className={`layout3 ${(tx_path !== 'swaps' && (isMovilViewport && ConsolidatedOrder)) ? 'mobileInfoStyles' : ''}`} >\n      <IconClose theme=\"dark\" size={20} />\n\n      <TopSection state={currentOrder.state}>\n        <TitleContainer>\n          <OrderIcon className={`fa ${tx_path}`} />\n          <IconSwitch\n            className=\"TitleIconOrder\"\n            size={28}\n            icon={\n              (currentOrder.currency && currentOrder.currency.currency) || \"cop\"\n            }\n          />\n          <Title className=\"fuente\">{TitleText}</Title>\n          <DateTitle className=\"fuente2\">\n            Actualizado {moment(currentOrder.updated_at).format(\"LL\")}\n          </DateTitle>\n        </TitleContainer>\n\n        <CircleIconContainer>\n          <IconSwitch\n            size={isMovilViewport ? 25 : 45}\n            icon={state === \"accepted\" ? \"accepted2\" : state}\n            color={colorState}\n          />\n          <p className=\"fuente\" style={{ color: `${colorState}` }}>\n            {textState}\n          </p>\n        </CircleIconContainer>\n\n        <ContBackTopSection>\n          <BackTopSection />\n        </ContBackTopSection>\n      </TopSection>\n\n      <DetailGenerator\n        order={currentOrder}\n        title={`Resumen del ${TitleText}`}\n      />\n\n      <BottomSection colorState={colorState} currentOrder={currentOrder} tx_path={tx_path} />\n    </Layout>\n  );\n};\n\n\n\n\nconst getAmountTitle = (orderType, order) => {\n  const select =  TOTAL_ORDER_AMOUNT_COPYS[orderType]\n  const uiName = select && (select[order?.state] || select?.ui_name) \n  return uiName || \"Cantidad\"\n}\n\n\nexport const BottomSection = ({ currentOrder, tx_path, colorState }) => {\n  const { currencies } = UseTxState();\n\n  const _amount =  (tx_path.includes(\"withdraw\") && currentOrder?.amount_neto) ? currentOrder?.amount_neto : currentOrder?.amount\n  const [amount] = useFormatCurrency(\n    _amount || currentOrder.bought,\n    currentOrder.currency || currentOrder?.to_buy_currency\n  );\n\n\n  const { isMovilViewport } = useViewport();\n\n  // const textTotal =\n  //   tx_path === \"swaps\" && currentOrder.state === \"accepted\"\n  //     ? \"Saldo adquirido:\"\n  //     : currentOrder.state === \"accepted\"\n  //     ? \"Saldo acreditado:\"\n  //     : \"Saldo SIN acreditar:\";\n\n  const amountTitle = getAmountTitle(tx_path, currentOrder)\n\n  const currency = \n    tx_path === \"swaps\"\n      ? currencies[currentOrder.to_buy_currency.currency]\n      : currencies[currentOrder.currency.currency];\n      \n  const InfoComponent = GetInfoComponentToRender({...currentOrder, tx_path})\n  const ConsolidatedOrder = [\"accepted\", \"rejected\", \"canceled\"].includes(currentOrder.state)\n\n  return (\n    <BottomSectionContainer>\n\n    <UploadMiddle className={`titleSection payment fuente ${tx_path}`}>\n       {/* Title gets from GetInfoComponentToRender */}\n      <UploadTextMiddle id=\"titleInfoComponent\" className={`titleSection ${ConsolidatedOrder ? 'consolidatedStyle' : ''}`}/>\n      <hr />\n    </UploadMiddle>\n\n\n      <Container consolidatedOrder={ConsolidatedOrder || ''} isMovilViewport={isMovilViewport || ''}>\n        <InfoComponent/>\n        <TotalAmount color={colorState} className={`${currentOrder.state}`}>\n          <p className=\"fuente saldo\">{amountTitle}</p>\n          <p className=\"fuente2 amount\">\n            {currentOrder.currency_type === \"fiat\" && \"$ \"}\n            {amount}{\" \"}\n            {currency && <span className=\"fuente\">{currency?.code?.toUpperCase()}</span>}\n          </p>\n        </TotalAmount>\n      </Container>\n    </BottomSectionContainer>\n  );\n};\n\nconst TotalAmount = styled.div`\n  width: auto;\n  height: 70px;\n  justify-self: end;\n  align-self: end;\n\n  &.rejected,\n  &.canceled {\n    .amount {\n      text-decoration: line-through;\n    }\n  }\n\n  p {\n    color: ${(props) => props.color};\n    margin: 0;\n    text-align: right;\n  }\n  & > p {\n    margin-bottom: 10px;\n  }\n  .amount {\n    font-size: 30px;\n    span {\n      font-size: 18px;\n    }\n  }\n  .saldo {\n    font-size: 16px;\n  }\n`;\n\nconst Container = styled.div`\n  width: ${props => !props.consolidatedOrder ? '100%' : 'calc(100% - 60px)'};\n  padding: ${props => !props.consolidatedOrder ? '0' : '0 30px'};\n  height: 100%;\n  display: grid;\n  grid-template-columns: ${props => props.isMovilViewport ? '1fr' : 'auto 1fr'};\n  grid-template-rows: ${props => props.isMovilViewport ? 'auto auto' : '1fr'};\n`;\n\n\n\nconst BottomSectionContainer = styled.section`\n  height: calc(200px - 40px);\n  width: 100%;\n  padding: 20px 0;\n  display: grid;\n  grid-template-rows: auto 1fr;\n  row-gap: 20px;\n`;\n\nconst TitleContainer = styled.div`\n  display: grid;\n  .TitleIconOrder {\n    grid-area: IconSwitch;\n  }\n  align-items: center;\n  column-gap: 15px;\n  row-gap: 4px;\n  align-self: center;\n  position: absolute;\n  left: 30px;\n  grid-template-columns: 25px 25px minmax(100px, 200px);\n  grid-template-areas:\n    \"OrderIcon IconSwitch Title\"\n    \"OrderIcon IconSwitch DateTitle\";\n`;\n\nconst DateTitle = styled.p`\n  font-size: 12px;\n  color: white;\n  grid-area: DateTitle;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  display: grid;\n  margin-left: 4px;\n`;\n\nconst Icon = styled.i``;\nconst OrderIcon = styled(Icon)`\n    margin-right: 10px;\n    font-size: 22px;\n    grid-area: OrderIcon;\n    color: white;\n    margin: 0;\n    display: grid !important;\n    justify-items: center;\n\n    &.swaps:before{\n       content: \"\\f079\";\n      }\n    }\n    &.withdraws:before{\n       content: \"\\f062\";\n      }\n    }\n    &.deposits:before{\n       content: \"\\f063\";\n      }\n    }\n\n  `;\n\nconst BackTopSection = styled.div`\n  width: 120%;\n  height: 120%;\n  position: absolute;\n  background-image: url(/static/media/back.fe9a1b62.png);\n  background-size: contain;\n  background-repeat: repeat;\n  background-position: right;\n  opacity: 0.05 !important;\n  animation: ${backTopSection};\n  animation-duration: 80s;\n  animation-iteration-count: infinite;\n  transform: scale(1.5);\n`;\n\nconst ContBackTopSection = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  overflow: hidden;\n`;\n\nconst CircleIconContainer = styled.div`\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  justify-self: end;\n  width: 90px;\n  height: 90px;\n  background: white;\n  border-radius: 50%;\n  align-self: flex-end;\n  position: relative;\n  transform: translate(-30px, 45px) !important;\n\n  p {\n    position: absolute;\n    margin: 0;\n    bottom: -3px;\n    font-size: 14px;\n    justify-self: center;\n  }\n\n  @media ${device.tablet} {\n    width: 60px;\n    height: 60px;\n    transform: translate(-20px, 45px) !important;\n    p {\n      bottom: -8px;\n    }\n  }\n`;\n\nconst Title = styled.h3`\n  text-align: left;\n  color: white;\n  margin: 0;\n  grid-area: Title;\n  font-size: 22px;\n  margin-left: 4px;\n`;\n\nconst TopSection = styled.section`\n  background: ${(props) =>\n    props.state ? orderStateColors[props.state] : \"gray\"};\n  width: 100%;\n  height: 100%;\n  display: grid;\n  position: relative;\n  border-top-right-radius: 6px;\n  border-top-left-radius: 6px;\n`;\n\nexport const Layout = styled.div`\n  width: 100%;\n  max-width: 550px;\n  height: auto;\n  min-height: 650px;\n  background: white;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  -webkit-transition: 0.3s;\n  transition: 0.3s;\n  border-radius: 11px;\n  position: relative;\n  grid-template-rows: 115px 1fr auto;\n\n  &.mobileInfoStyles{\n    grid-template-rows: 115px 1fr 300px;\n  }\n\n  -webkit-animation: ${swing_in_bottom_bck} 1s\n    cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n  animation: ${swing_in_bottom_bck} 1s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    both;\n`;\n","import React, { useEffect } from \"react\";\nimport useNavigationKeyActions from \"../../../../hooks/useNavigationKeyActions\";\nimport { ButtonForms } from \"../../../widgets/buttons/buttons\";\nimport NewItemsLayout from \"../../../widgets/items/new-items-layout\";\n\nconst ModalityView = (props) => {\n  const {\n    items,\n    update_service_mode,\n    service_mode,\n    buttonActive,\n    // deposit_service,\n    create_deposit_order,\n    title,\n    // subtitle,\n  } = props;\n  let movil_viewport = window.innerWidth < 768;\n\n  const [setCurrentSelection] = useNavigationKeyActions({\n    items,\n    loader: false,\n    uniqueIdForElement: \"modality-item-\",\n    modalRestriction: false,\n  });\n\n  useEffect(() => {\n    update_service_mode(\"Sucursal virtual\", \"app\");\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"DLstep modality\">\n      <div className=\"DLcontain\" style={{alignSelf: \"baseline\", marginTop: \"15px\"}}>\n        <p className=\"fuente DLtitle2\">\n          {title}\n        </p>\n      </div>\n\n      <div\n        className={`${\n          window.innerWidth > 768\n            ? \"DLItemSelectionContainer\"\n            : \"ItemSelectionContainerMovil\"\n        }`}\n      >\n        <div\n          className={`${\n            window.innerWidth > 768 ? \"DLcontainerItems\" : \"containerItems\"\n          } chooseMethod`}\n        >\n          {items.map((item, index) => {\n            return (\n              <NewItemsLayout\n                setCurrentSelection={setCurrentSelection}\n                focusedId={`modality-item-${index}`}\n                number={index}\n                handleClick={create_deposit_order}\n                primarySelect={movil_viewport}\n                actualizarEstado={update_service_mode}\n                actives={service_mode === item.code && true}\n                {...item}\n                key={item.id}\n              />\n            );\n          })}\n        </div>\n      </div>\n      <ButtonForms\n        type=\"primary\"\n        active={buttonActive}\n        siguiente={create_deposit_order}\n      >\n        Crear orden\n      </ButtonForms>\n    </div>\n  );\n};\n\nexport default ModalityView;\n","import React, { Fragment } from \"react\";\nimport { SimpleLoader } from \"../../../widgets/loaders\";\nimport {\n  ButtonSuccess,\n  ButtonSuccess2,\n} from \"../../../widgets/buttons/buttons\";\nimport { service_modes, cash_payment } from \"../../../api/ui/api.json\";\n// import proof from \"../../../../assets/proof.png\";\nimport ModalityView from \"../views/modality\";\n// import IconSwitch from \"../../../widgets/icons/iconSwitch\";\nimport DetailGenerator from \"../../../widgets/modal/render/orderDetail/detailGenerator\";\nimport { getCdnPath } from '../../../../environment'\nimport { BankDataContainer } from '../../../forms/widgets/fiatDeposit/success'\n\n\nimport \"./flows.css\";\nimport \"../deposit.css\"\n\n// {/* ---------------------------------------------------------FLUJO TRANSFERENCIA BANCARIA.-------------------------------------------------------------------- */}\n\nexport const TransferFlow = (props) => {\n  const {\n    deposit_way,\n    deposit_service,\n    step,\n    buttonActive,\n    update_service_mode,\n    service_mode,\n    create_deposit_order,\n    idForAcceptButtonInDepositView,\n  } = props;\n\n  return (\n    <section className=\"DepositLayout\">\n      {/* {\n        (step === 3 && deposit_way === \"bankaccount\") &&\n        <div className=\"DLstep\">\n          <div className=\"DLcontain\">\n            <p className=\"fuente DLtitle2\" >Procesaré el deposito por medio</p>\n            <p className=\"fuente DLstitle\" >de la entidad Bancaria:</p>\n          </div>\n          {\n            !deposit_provider_list ?\n            <SimpleLoader label=\"cargando proveedores\"/>\n            :\n            <ItemSelectionContainer\n              items={deposit_provider_list}\n              type=\"banks\"\n              itemSelect={deposit_service}\n              actualizarEstado={actualizarEstado}\n              update_control_form={update_control_form}\n            />\n          }\n\n          <ButtonForms type=\"primary\" active={buttonActive} siguiente={siguiente}>Continuar</ButtonForms>\n        </div>\n      } */}\n\n      {step === 3 && deposit_way === \"bankaccount\" && (\n        <ModalityView\n          title=\"Elige el medio de pago\"\n          items={service_modes}\n          update_service_mode={update_service_mode}\n          service_mode={service_mode}\n          buttonActive={buttonActive}\n          deposit_service={deposit_service}\n          create_deposit_order={create_deposit_order}\n        />\n      )}\n\n      {step === 4 && deposit_way === \"bankaccount\" && (\n        <Success\n          idForAcceptButtonInDepositView={idForAcceptButtonInDepositView}\n          {...props}\n        />\n      )}\n    </section>\n  );\n};\n\nexport const CashFlow = (props) => {\n  // console.log('LAAAAAA NUEVA PROPIEDAD DE SERVICIOOOOOOOO------------------', props)\n\n  const {\n    deposit_way,\n    short_bank_name,\n    deposit_service,\n    step,\n    update_local_state,\n    buttonActive,\n    create_deposit_order,\n    idForAcceptButtonInDepositView,\n  } = props;\n\n  return (\n    <section className=\"DepositLayout\">\n      {step === 3 && deposit_way === \"cash\" && (\n        <ModalityView\n          title=\"Elige el medio de pago:\"\n          items={cash_payment}\n          update_service_mode={update_local_state}\n          service_mode={short_bank_name}\n          buttonActive={buttonActive}\n          deposit_service={deposit_service}\n          create_deposit_order={create_deposit_order}\n        />\n      )}\n\n      {step === 4 && deposit_way === \"cash\" && (\n        <Success\n          idForAcceptButtonInDepositView={idForAcceptButtonInDepositView}\n          {...props}\n        />\n      )}\n    </section>\n  );\n};\n\nexport const Success = (props) => {\n  const {\n    loader,\n    deposit_way,\n    // deposit_service,\n    finalizar,\n    final,\n    finalButton,\n    step,\n    new_ticket,\n    // idForAcceptButtonInDepositView,\n    depositProvData\n  } = props;\n\n  // console.log('|||||||||||||| °°°°° depositProvData', depositProvData)\n\n  return (\n    <div\n      id=\"DLstep2\"\n      className={`DLstep ${\n        step === 4 || (step === 4 && deposit_way === \"cash\") ? \"DLstep2\" : \"\"\n      }`}\n    >\n      {\n        loader ? (\n          <Fragment>\n            <div></div>\n            <SimpleLoader label={`Creando orden de depósito`} />\n          </Fragment>\n        ) : (\n          // <section className={`stepFinish ${final ? 'cambiarGrid': ''}`}>\n          <Fragment>\n            {/* <span className=\"DLsave\" onClick={guardarMetodo}>\n              <i className=\"far fa-bookmark tooltip\" >\n              <span className=\"tooltiptext tooltiptexts fuente\">Guardar Medio de pago</span>\n              </i>\n            </span> */}\n\n            <div className={`succ nWCabeza ${final ? \"desaparece1\" : \"\"}`}>\n              <div className=\"icon icon--order-success svg\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"72px\"\n                  height=\"72px\"\n                  alt=\"\"\n                >\n                  <g fill=\"none\" stroke=\"white\" strokeWidth=\"3\">\n                    <circle cx=\"36\" cy=\"36\" r=\"35\"></circle>\n                    <path\n                      className=\"check\"\n                      d=\"M17.417,37.778l9.93,9.909l25.444-25.393\"\n                    ></path>\n                  </g>\n                </svg>\n              </div>\n              <p className=\"titleWhite fuente\">Depósito creado exitosamente</p>\n            </div>\n\n            <div className=\"asaras\">\n              <div\n                style={{ marginTop: \"-20%\", zIndex: 999 }}\n                className={`${\n                  final ? \"apareces1\" : \"\"\n                } nWbody2 Fbody2 FlowCont fuente DLmessage`}\n              >\n                <div className=\"FolowTexts\">\n                  <p className=\"fuente Fimportant\">IMPORTANTE!</p>\n                  <p className=\"Ftexto fuente \">\n                    Una vez realizada la consignación, debes confirmar el depósito subiendo una fotografía del <strong> COMPROBANTE DE PAGO </strong>\n                  </p>\n                  <img className=\"tocatoca\" src={`${getCdnPath('assets')}proof.png`} alt=\"\" width=\"34%\" />\n                </div>\n              </div>\n\n              <div className={`bodyTcket nWbody2 Fbody2 eya fuente ${final ? \"desaparece1\" : \"\"}`}>\n\n                {\n                  depositProvData && \n                  <BankDataContainer accountData={{\n                      title:\"Datos para hacer el depósito\",\n                      bankUiName:depositProvData?.name,\n                      accountType:depositProvData?.account?.type?.type,\n                      accountIdUiName:depositProvData?.account?.account_id?.ui_name,\n                      accountId:depositProvData?.account?.account_id?.account_id,\n                      bussinesNameUiName:depositProvData?.account?.bussines_name?.ui_name,\n                      bussinesName:depositProvData?.account?.bussines_name?.bussines_name,\n                      nitUiName:depositProvData?.account?.nit?.ui_name,\n                      nit:depositProvData?.account?.nit?.nit,\n                      dvUiName:depositProvData?.account?.dv?.ui_name,\n                      dv:depositProvData?.account?.dv?.dv\n                  }} />\n                }\n\n                {new_ticket && (\n                  <DetailGenerator order={new_ticket} theme=\"darkTheme\" />\n                )}\n              </div>\n            </div>\n\n            <div id=\"nWcta\" className=\"nWcta\">\n              {finalButton ? (\n                <ButtonSuccess2\n                  // id={idForAcceptButtonInDepositView}\n                  id=\"accept-deposit-view-modal\"\n                  toggleModal={finalizar}\n                >\n                  Finalizar\n                </ButtonSuccess2>\n              ) : (\n                <ButtonSuccess\n                  // id={idForAcceptButtonInDepositView}\n                  id=\"accept-deposit-view-modal\"\n                  toggleModal={finalizar}\n                >\n                  Finalizar\n                </ButtonSuccess>\n              )}\n            </div>\n          </Fragment>\n        )\n        // </section>\n      }\n    </div>\n  );\n};\n\n","import React from \"react\";\nimport loadable from \"@loadable/component\";\nimport { ButtonSuccess } from \"../../../widgets/buttons/buttons\";\nimport useKeyActionAsClick from \"../../../../hooks/useKeyActionAsClick\";\nimport { \n  BankData,\n  TitleContainer,\n  CorpAccountContainer,\n  IconContainer,\n  DetailAccountProv\n} from '../../../forms/widgets/fiatDeposit/success'\nimport DetailGenerator from \"../../../widgets/modal/render/orderDetail/detailGenerator\";\n\n\nimport \"./finalTicket.css\";\n\nconst IconSwitch = loadable(() => import(\"../../../widgets/icons/iconSwitch\"));\n\n\n\n\nfunction FinalTicket(props) {\n  // const [current_ticket, setCurrentTicket] = useState(null);\n  const idCancelButton = useKeyActionAsClick(true, \"cancel-button-ticket\", 8, false, \"onkeyup\", true);\n  const idFinalizarButton = useKeyActionAsClick(true, \"finalizar-button-ticket\", 13,false, \"onkeyup\", true);\n\n  const {\n    finishAction,\n    cta_primary_label,\n    cta_secondary,\n    cta_secondary_label,\n    cta_secondary_action,\n    wAccount,\n    order,\n    title\n  } = props;\n\n  const atributos = {\n    icon: \"success\",\n    size: 75,\n    color: \"white\",\n  };\n\n  \n  const parseUiName = (text) => {\n\n    if(typeof text !== 'string') return text;\n    \n    const finalText = text?.split(\"_\")?.join(\" \")\n    const capitalizeText = finalText?.replace(text?.charAt(0), text?.charAt(0)?.toUpperCase())\n    return capitalizeText\n  }\n\n\n\n  return (\n    <div className=\"finalTicket TicketDetail _wAccountSuccess\">\n      <>\n        <div className=\"finalTicket ticketHeader wAccountSuccess\">\n          <IconSwitch {...atributos} />\n          <h1 className=\"fuente finalTicket TicketTitle\">{`${title || \"Cuenta de retiro creada exitosamente\"}`}</h1>\n        </div>\n\n        <div className=\"finalTicket contenidoTicket wAccountSuccess\">\n\n        <BankData>\n\n          <TitleContainer className=\"__titleCont\">\n           <p className=\"fuente\">{'Datos de tu cuenta de retiro'}</p>\n           <div className=\"__line__\"/>\n          </TitleContainer>\n\n          <CorpAccountContainer className=\"corpAccountContainer\">\n                <IconContainer className=\"_corpAccIcon\">\n                    <IconSwitch size={45} icon={wAccount?.info?.bank_name} />\n                </IconContainer>\n                <DetailAccountProv> \n                    <h3 className=\"fuente\">{parseUiName(wAccount?.info?.bank_name)}</h3>\n                    <p className=\"fuente\">{wAccount?.info?.account_type === 'cuenta_ahorro' ? 'Cuenta de ahorros' : \"Cuenta corriente\"}</p>\n                    <p className=\"fuente\">Número de cuenta:</p>\n                    <p className=\"fuente2\">{wAccount?.info?.account_number}</p>\n                </DetailAccountProv>\n            </CorpAccountContainer>\n\n            {\n              order &&\n              <>\n              {/* <TitleContainer className=\"__titleCont\">\n              <p className=\"fuente\">{'Datos de tu retiro'}</p>\n              <div className=\"__line__\"/>\n              </TitleContainer> */}\n              <DetailGenerator\n                title=\"Detalle del retiro\"\n                order={order}\n                theme=\"darkTheme\"\n              />\n              </>\n            }\n\n        </BankData>\n       \n        </div>\n\n        <div\n          className=\"nWcta2\"\n          style={{\n            gridTemplateColumns: cta_secondary ? \"repeat(2, 1fr)\" : \"1fr\",\n            width: cta_secondary ? \"400px\" : \"auto\",\n          }}\n        >\n          {cta_secondary && (\n            <ButtonSuccess\n              id={idCancelButton}\n              cta_secondary={true}\n              toggleModal={cta_secondary_action}\n            >\n              {cta_secondary_label ? cta_secondary_label : \"Cancelar\"}\n            </ButtonSuccess>\n          )}\n          <ButtonSuccess id={idFinalizarButton} toggleModal={finishAction}>\n            {cta_primary_label ? cta_primary_label : \"Finalizar\"}\n          </ButtonSuccess>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default FinalTicket;\n\n// const ItemTicket = (payload) => {\n//   const { ui_name, value, icon } = payload;\n//\n//   return (\n//     <div className=\"TicketDetailItem\">\n//       <p className=\"fuente TicketItemTitle\">{ui_name}</p>\n//       <span className=\"fuentePrin fuenteTicket\">\n//         {value}\n//         {icon && <IconSwitch icon={icon} size={20} color=\"white\" />}\n//       </span>\n//     </div>\n//   );\n// };\n"],"sourceRoot":""}