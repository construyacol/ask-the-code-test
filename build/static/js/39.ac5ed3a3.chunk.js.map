{"version":3,"sources":["components/widgets/modal/render/orderDetail/detailGenerator.js","components/widgets/cropimg/Cropper/BarSlider.js","components/widgets/cropimg/Cropper/CropperIMG.js","components/widgets/cropimg/Cropper/do-img-crop.js","components/widgets/cropimg/index.js","components/widgets/modal/render/orderDetail/paymentProof.js","components/widgets/modal/render/orderDetail/orderStatus.js","components/widgets/modal/render/orderDetail/confirmationCounter.js","components/widgets/modal/render/orderDetail/inProcessOrder.js","components/widgets/modal/render/orderDetail/infoComponent.js","components/widgets/modal/render/orderDetail/index.js","components/withdrawAccounts/new/views/finalTicket.js"],"names":["moment","locale","DetailGenerator","order","title","TitleSuffix","theme","orders","setOrders","useState","deposit_providers","tx_path","UseTxState","formatCurrency","useFormatCurrency","formatOrderText","async","itemText","currency","spent","to_spend_currency","bought","to_buy_currency","getState","format","amount","confirmations","cost","useEffect","state","currency_type","depositProviderInfo","deposit_provider_id","depositProvider","depositAccount","ui_name","account","type","account_id","bussines_name","nit","id","created_at","amount_neto","inProcesOrder","transOrders","orderItem","Object","entries","ui_items","push","init","Container","className","TitleContainer","Title","length","map","item","indx","ItemContainer","LeftText","MiddleSection","RightText","Array","fill","Text","styled","p","div","span","OnlySkeletonAnimation","section","device","tablet","BarSlider","props","CropperIMG","image","onCropComplete","crop","setChange","x","y","zoom","setZoom","deg","setDeg","style","cropAreaStyle","minWidth","minHeight","rotation","onRotationChange","aspect","onCropChange","onZoomChange","_","croppedAreaPixels","color","size","onClick","value","onChange","e","currentTarget","step","min","max","newDeg","getRadianAngle","degreeValue","Math","PI","createImage","url","Promise","resolve","reject","Image","addEventListener","error","setAttribute","src","CropImg","React","Component","imageSrc","this","imgRotation","croppedImage","setState","current_zoom","showCroppedImage","img","cropArea","action","isAppLoading","pixelCrop","canvas","document","createElement","ctx","getContext","safeArea","width","height","sqrt","translate","rotate","drawImage","data","getImageData","putImageData","UrlToImg","toBlob","file","URL","createObjectURL","base64","toDataURL","urlImg","getCroppedImg","subirImg","cancelCroppedImg","cancelarSubidaImg","componentWillReceiveProps","render","_id","idCancel","active","siguiente","idAccept","connect","dispatch","bindActionCreators","actions","withKeyActions","PaymentProof","payload","coinsendaServices","currencies","currentOrder","loader","imgProof","setImgProof","txId","setTxId","urlExplorer","setUrlExplorer","getPaymentProof","paymentProof","proof_of_payment","raw","QRCode","node_url","proof","PP","getDepositById","updateOrder","update_item_state","getData","PaymentProofContainer","LoaderContainer","justify","ProofContainer","alt","HoverProof","IconContainer","copy","window","open","FiatPaymentProofZoom","StatusItem","skeleton","activated","toString","Status","Indicator","Description","Skeleton","StatusTitle","ui_text","DateStatusText","updated_at","OrderStatus","movil","orderState","setOrderState","skeletons","prop","api","completed","OrderStatusContainer","TopSectionStatus","orderStatus","SubTitle","description","StatusContainer","index","ConfirmationCounter","total","draw","c","getElementById","clearInterval","draw_interval","tasaPercent","beginPath","arc","lineWidth","strokeStyle","stroke","prevProps","setInterval","total_confirmations","AbsoluteContainer2","RelativeContainer","AbsoluteContainer","ContCanvasConfirmation","ConfirmationContainer","TextContainer","Canvas","InProcessOrder","onErrorCatch","FiatOrder","CryptoOrder","isTabletOrMovilViewport","useViewport","InProcessOrderContainer","OrderContainer","TopSection","icon","getTitle","Currency","DateIdContainter","DateText","GetIcon","BottomSectionContainer","UploadComponent","BottomSection","colorState","onDrag","setOnDrag","imgSrc","setImgSrc","toBigNumber","toastMessage","useToastMessage","goFileLoader","target","files","img_compressor","dataBase64","readFile","includesAnyImageMime","split","alert","user","globalState","modelData","orderAmount","limitAmount","BIOMETRIC_FIAT_LITMIT_AMOUNT","security_center","transactionSecurity","biometric","enabled","isGreaterThanOrEqualTo","Element","FormsComponent","default","renderModal","confirmation","confirmDepositOrder","console","log","onDragOver","event","preventDefault","DropZoneComponent","dragLeave","DropZoneContainer","onDragLeave","capture","accept","unButtom","idForFileUpload","useKeyActionAsClick","UploadContainer","UploadMiddle","UploadTextMiddle","UploadText","Buttom","coloIcon","RenderIcon","AiOutlineClockCircle","Section","laptop","tabletL","ReferralInfo","IconSwitch","loadable","MAIN_COLOR","WithdrawFiatInfo","order_id","useParams","useSelector","withdraw_account_id","withdrawAccount","withdraw_accounts","WithdrawAccountCont","IconCont","bank_name","DataContainer","toLowerCase","account_type","account_number","GetInfoComponentToRender","info","targetKey","is_referral","toRender","targetElement","querySelector","innerHTML","component","OrderSupervisor","onkeydown","on_click","forceClose","dataset","close_modal","includes","OrderDetail","isMovilViewport","TitleText","textState","ConsolidatedOrder","Layout","OrderIcon","DateTitle","CircleIconContainer","ContBackTopSection","BackTopSection","InfoComponent","consolidatedOrder","TotalAmount","code","Icon","i","backTopSection","h3","orderStateColors","swing_in_bottom_bck","FinalTicket","idCancelButton","idFinalizarButton","finishAction","cta_primary_label","cta_secondary","cta_secondary_label","cta_secondary_action","ticket","gridTemplateColumns","toggleModal"],"mappings":"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","file":"static/js/39.ac5ed3a3.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { OnlySkeletonAnimation } from \"../../../loaders/skeleton\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport { useFormatCurrency } from \"../../../../hooks/useFormatCurrency\";\nimport { getState } from \"./\";\nimport { device } from \"../../../../../const/const\";\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nmoment.locale(\"es\");\n\nconst DetailGenerator = ({ order, title, TitleSuffix, theme }) => {\n  const [orders, setOrders] = useState([]);\n  const { deposit_providers, tx_path } = UseTxState();\n  const [, formatCurrency] = useFormatCurrency();\n\n  const formatOrderText = async (itemText) => {\n    // console.log(itemText, tx_path)\n    switch (itemText[0]) {\n      case \"to_spend_currency\":\n        return [\"Moneda gastada:\", itemText[1].currency];\n      case \"to_buy_currency\":\n        return [\"Moneda adquirida:\", itemText[1].currency];\n      case \"currency\":\n        return [\"Divisa:\", itemText[1].currency];\n      case \"spent\":\n        return [\n          \"Cantidad gastada:\",\n          await formatCurrency(order.spent, order.to_spend_currency),\n        ];\n      case \"bought\":\n        return [\n          \"Cantidad adquirida:\",\n          await formatCurrency(order.bought, order.to_buy_currency),\n        ];\n      case \"state\":\n        return [\"Estado:\", getState(itemText[1])];\n      case \"price_percent\":\n        return [\"Comisión:\", itemText[1]];\n      case \"id\":\n        return [\"Número de orden:\", itemText[1]];\n      case \"created_at\":\n        return [\"Creado en:\", moment(itemText[1]).format(\"LL\")];\n      case \"updated_at\":\n        return [\"Actualizado en:\", moment(itemText[1]).format(\"LL\")];\n      case \"expiration_date\":\n        return [\"Expira en:\", moment(itemText[1]).format(\"LL\")];\n      case \"amount\":\n        return [\n          \"Cantidad:\",\n          await formatCurrency(order.amount, order.currency),\n        ];\n      // case \"amount_neto\":\n      //   return [\n      //     \"Cantidad neta:\",\n      //     await formatCurrency(order.amount_neto, order.currency),\n      //   ];\n      case \"confirmations\":\n        return [\"Confirmations:\", order.confirmations];\n      case \"cost\":\n        return [`Costo ${tx_path === 'withdraws' ? 'retiro' : 'depósito'}:`, order.cost];\n      case \"sent\":\n        return [\"Operación:\", itemText[1] ? \"Debitado\" : \"-- Sin debitar --\"];\n\n      case \"referral\":\n      case \"amount_neto\":\n      case \"to_buy_symbol\":\n      case \"to_spend_symbol\":\n      case \"need_referral_process\":\n      case \"referrer_payment_info\":\n      case \"fee\":\n      case \"tax\":\n      case \"withdraw_provider\":\n      case \"withdraw_account\":\n      case \"metadata\":\n      case \"withdraw_account_id\":\n      case \"withdraw_provider_id\":\n      case \"account_to\":\n      case \"account_from\":\n      case \"type\":\n      case \"pair_id\":\n      case \"taged\":\n      case \"action_price\":\n      case \"country\":\n      case \"userId\":\n      case \"user\":\n      case \"cost_struct\":\n      case \"fee_struct\":\n      case \"info\":\n      case \"tax_struct\":\n      case \"account_id\":\n      case \"locked\":\n      case \"currency_type\":\n      case \"cost_id\":\n      case \"deposit_provider_id\":\n      case \"type_order\":\n      case \"activeTrade\":\n      case \"paymentProof\":\n      case \"withdraw_proof\":\n      case \"requestedFundsOrigin\":\n      case \"proof\":\n      case \"comment\":\n      case \"provider_type\":\n      case \"visible\":\n      case \"inscribed\":\n      case \"inscriptions\":\n      case \"used_counter\":\n        return;\n      default:\n        return itemText;\n    }\n  };\n\n  const inProcesOrder = async (order) => {\n    switch (order.currency_type) {\n      case \"fiat\":\n        let depositProviderInfo = [];\n        if (deposit_providers && deposit_providers[order.deposit_provider_id]) {\n          const depositProvider = deposit_providers[order.deposit_provider_id];\n          depositProviderInfo = [\n            [\n              \"Entidad de depósito:\",\n              `${depositProvider.depositAccount.ui_name}`,\n            ],\n            [\n              `${depositProvider.depositAccount.account.type.ui_name}`,\n              `${depositProvider.depositAccount.account.type.type}`,\n            ],\n            [\n              `${depositProvider.depositAccount.account.account_id.ui_name}`,\n              `${depositProvider.depositAccount.account.account_id.account_id}`,\n            ],\n            [\n              `${depositProvider.depositAccount.account.bussines_name.ui_name}`,\n              `${depositProvider.depositAccount.account.bussines_name.bussines_name}`,\n            ],\n            [\n              `${depositProvider.depositAccount.account.nit.ui_name}`,\n              `${depositProvider.depositAccount.account.nit.nit}`,\n            ],\n          ];\n        }\n        // console.log('deposit_providers', order)\n        const amount = await formatCurrency(order.amount, order.currency);\n        // const amount_neto = await formatCurrency(\n        //   order.amount_neto,\n        //   order.currency\n        // );\n\n        setOrders([\n          ...depositProviderInfo,\n          // [\n          //   \"Comisión:\",\n          //   `${order.fee_struct && `${order.fee_struct.percent}%`} ~ ${\n          //     order.fee\n          //   }`,\n          // ],\n          // [\"Impuesto:\", `~ ${order.tax}`],\n          [\"Cantidad acreditada:\", `~ $${amount}`],\n          [\"Total a depositar:\", `~ $${amount}`],\n        ]);\n        break;\n      case \"crypto\":\n        setOrders([\n          [\"Número de orden:\", order.id],\n          [\"Estado:\", getState(order.state)],\n          [\"Divisa:\", `${order.currency.currency}`],\n          [\"Orden creada en:\", moment(order.created_at).format(\"LL\")],\n          [\"Confirmaciones:\", order.confirmations],\n          [\n            \"Cantidad acreditada:\",\n            await formatCurrency(order.amount, order.currency),\n          ],\n          [\"Costo de operación:\", order.cost],\n          [\n            \"Total depósito:\",\n            await formatCurrency(order.amount_neto, order.currency),\n          ],\n        ]);\n        break;\n      default:\n    }\n  };\n\n  useEffect(() => {\n    // the order is converted to an array and formatted\n    if (!order) {\n      return;\n    }\n    const init = async () => {\n      if (\n        (order.state === \"pending\" || order.state === \"confirmed\") &&\n        tx_path === \"deposits\"\n      ) {\n        return await inProcesOrder(order);\n      }\n      const transOrders = [];\n      for (let orderItem of Object.entries(order)) {\n        const ui_items = await formatOrderText(orderItem);\n        // console.log(ui_items)\n        if (ui_items) {\n          transOrders.push(ui_items);\n        }\n      }\n      setOrders(transOrders);\n    };\n    init();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [deposit_providers]);\n\n  // console.log(order, orders)\n\n  return (\n    <Container className={`${title ? \"withTitle\" : \"\"} ${theme}`}>\n      {title && (\n        <TitleContainer\n          className={`${TitleSuffix ? \"titleSuffix\" : \"\"} ${order.state}`}\n        >\n          <Title className=\"fuente\">{title}</Title>\n          {TitleSuffix && <TitleSuffix />}\n        </TitleContainer>\n      )}\n      {orders && orders.length\n        ? orders.map((item, indx) => {\n            return (\n              <ItemContainer\n                key={indx}\n                className={`${\n                  orders.length === indx + 1 &&\n                  order.state &&\n                  tx_path === \"deposits\" &&\n                  order.state\n                }`}\n              >\n                <LeftText className=\"fuente\">{item[0]}</LeftText>\n                <MiddleSection />\n                <RightText className=\"fuente2\">{item[1]}</RightText>\n              </ItemContainer>\n            );\n          })\n        : new Array(10).fill(\"1\").map((item, indx) => {\n            return (\n              <ItemContainer className=\"skeleton\" key={indx}>\n                <LeftText>skeleton --</LeftText>\n                <MiddleSection />\n                <RightText>skeleton -------- </RightText>\n              </ItemContainer>\n            );\n          })}\n    </Container>\n  );\n};\n\nexport default DetailGenerator;\n\nconst Text = styled.p`\n  width: auto;\n  margin: 0;\n  font-size: 14px;\n`;\n\n// const TotalAmountContainer = styled.div`\n//   width: 100%;\n//   height: 50px;\n//   margin-top: 10px;\n//   border-top: 1px solid #bfbfbf;\n//   display: flex;\n//   justify-content: space-between;\n// `;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  &.titleSuffix {\n    justify-content: space-between;\n  }\n  &.pending p {\n    color: #ff8660;\n  }\n  &.confirmed p {\n    color: #1cb179;\n  }\n`;\n\nconst Title = styled(Text)`\n  font-size: 17px;\n  font-weight: bold;\n`;\nconst RightText = styled(Text)`\n  text-align: right;\n  padding-left: 15px;\n  text-transform: capitalize;\n  white-space: nowrap;\n  max-width: 350px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst LeftText = styled(Text)`\n  text-align: left;\n  padding-right: 15px;\n  font-weight: bold;\n`;\nconst MiddleSection = styled.span`\n  border-bottom: 1px dotted;\n  opacity: 0.15;\n`;\n\nconst ItemContainer = styled.div`\n  width: 100%;\n  height: 20px;\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n\n  &.skeleton {\n    ${OnlySkeletonAnimation}\n    ${RightText}, ${LeftText} {\n      background: gray;\n      height: 16px;\n      border-radius: 3px;\n      opacity: 0.5;\n    }\n  }\n\n  &.pending,\n  &.confirmed {\n    height: 50px;\n    margin-top: 10px;\n    border-top: 1px solid #bfbfbf;\n    align-items: center;\n    ${RightText}, ${LeftText} {\n      font-size: 18px;\n      color: #383838;\n    }\n    ${RightText} {\n      font-size: 20px;\n      font-weight: bold;\n    }\n  }\n`;\n\nconst Container = styled.section`\n  width: calc(100% - 70px);\n  height: calc(100% - 50px);\n  display: grid;\n  grid-template-rows: repeat(auto-fill, 20px);\n  row-gap: 7px;\n  padding: 25px 35px;\n\n  @media ${device.tablet} {\n    padding: 25px 20px;\n    width: calc(100% - 40px);\n  }\n\n  &.withTitle {\n    height: calc(100% - 95px);\n    padding-top: 70px;\n    grid-template-rows: 70px repeat(auto-fill, 20px);\n  }\n\n  ${Text}, ${MiddleSection} {\n    color: gray;\n  }\n\n  &.darkTheme {\n    p {\n      color: white;\n    }\n  }\n`;\n\n//\n","import React from \"react\";\nimport \"./bar-slider-styles.css\";\n\nexport default function BarSlider({ ...props }) {\n  return <input type=\"range\" {...props} />;\n}\n","import React, { useState } from \"react\";\nimport Cropper from \"react-easy-crop\";\nimport BarSlider from \"./BarSlider\";\nimport { AiOutlineMinus } from \"react-icons/ai\";\nimport { FiRotateCcw, FiPlus } from \"react-icons/fi\";\n\nconst MAX_ZOOM = 3;\nconst MIN_ZOOM = 0.5;\nconst ASPECT = 4 / 3;\nconst SLIDER_STEP = 0.05;\n\nexport default function CropperIMG({ image, onCropComplete }) {\n  const [crop, setChange] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n  const [deg, setDeg] = useState(360);\n\n  return (\n    <>\n      <div className=\"crop-container\">\n        <Cropper\n          image={image}\n          style={{\n            cropAreaStyle: {\n              minWidth: 256,\n              minHeight: 192,\n            },\n          }}\n          rotation={deg}\n          onRotationChange={setDeg}\n          crop={crop}\n          aspect={ASPECT}\n          zoom={zoom}\n          onCropChange={setChange}\n          onZoomChange={setZoom}\n          onCropComplete={(_, croppedAreaPixels) =>\n            onCropComplete(croppedAreaPixels, deg)\n          }\n        />\n      </div>\n      <div className=\"crop-controls\">\n        <div>\n          <AiOutlineMinus\n            color=\"gray\"\n            size={20}\n            onClick={() => zoom > 0.1 && setZoom(zoom - 0.3)}\n          />\n          <BarSlider\n            value={zoom}\n            onChange={(e) => setZoom(e.currentTarget.value)}\n            step={SLIDER_STEP}\n            min={MIN_ZOOM}\n            max={MAX_ZOOM}\n          />\n          <FiPlus\n            color=\"gray\"\n            size={20}\n            onClick={() => zoom < 7 && setZoom(zoom + 0.3)}\n          />\n        </div>\n        <div>\n          <FiRotateCcw\n            color=\"gray\"\n            size={20}\n            onClick={() => {\n              const newDeg = deg - 90;\n              setDeg(newDeg < 0 ? 360 : newDeg);\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","function getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180;\n}\n\nexport const createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener(\"load\", () => resolve(image));\n    image.addEventListener(\"error\", (error) => reject(error));\n    image.setAttribute(\"crossOrigin\", \"anonymous\");\n    image.src = url;\n  });\n\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc);\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  if (!ctx) {\n    return null;\n  }\n\n  const maxSize = Math.max(image.width, image.height);\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\n\n  canvas.width = safeArea;\n  canvas.height = safeArea;\n\n  ctx.translate(safeArea / 2, safeArea / 2);\n  ctx.rotate(getRadianAngle(rotation));\n  ctx.translate(-safeArea / 2, -safeArea / 2);\n\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  );\n  const data = ctx.getImageData(0, 0, safeArea, safeArea);\n\n  canvas.width = pixelCrop.width;\n  canvas.height = pixelCrop.height;\n\n  ctx.putImageData(\n    data,\n    0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x,\n    0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y\n  );\n\n  const UrlToImg = new Promise((resolve, reject) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file));\n    }, \"image/jpeg\");\n  });\n\n  return {\n    base64: canvas.toDataURL(\"image/jpeg\"),\n    urlImg: UrlToImg,\n  };\n}\n","import React, { Fragment } from \"react\";\nimport { ButtonForms } from \"../buttons/buttons\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport actions from \"../../../actions\";\nimport CropperIMG from \"./Cropper/CropperIMG\";\nimport \"./styles.css\";\nimport getCroppedImg from \"./Cropper/do-img-crop\";\nimport withKeyActions from \"../../withKeyActions\";\n\nclass CropImg extends React.Component {\n  state = {\n    imageSrc: this.props.imageSrc || null,\n    crop: { x: 0, y: 0 },\n    zoom: 1,\n    aspect: 4 / 3,\n    croppedAreaPixels: null,\n    imgRotation: 0,\n    croppedImage: null,\n  };\n\n  onCropChange = (crop) => {\n    this.setState({ crop });\n  };\n\n  onCropComplete = (croppedAreaPixels, imgRotation) => {\n    // console.log(croppedArea, croppedAreaPixels)\n    this.setState({ croppedAreaPixels, imgRotation });\n  };\n\n  onZoomChange = (zoom) => {\n    let current_zoom = this.state.zoom;\n\n    if (zoom > current_zoom && zoom <= 3) {\n      current_zoom += 0.06;\n    } else {\n      current_zoom = zoom;\n    }\n\n    // if(zoom<current_zoom){\n    //   current_zoom -= 0.06\n    // }\n\n    this.setState({ zoom: current_zoom });\n  };\n\n  // onFileChange = async e => {\n  //   if (e.target.files && e.target.files.length > 0) {\n  //     const imageDataUrl = await readFile(e.target.files[0])\n  //\n  //     this.setState({\n  //       imageSrc: imageDataUrl,\n  //       crop: { x: 0, y: 0 },\n  //       zoom: 1,\n  //     })\n  //   }\n  // }\n\n  showCroppedImage = async (img, cropArea, rotation) => {\n\n    await this.props.action.isAppLoading(true);\n    const croppedImage = await getCroppedImg(\n      this.state.imageSrc,\n      this.state.croppedAreaPixels,\n      this.state.imgRotation\n    );\n    if (!croppedImage) {\n      return this.props.action.isAppLoading(false);\n    }\n\n    const { urlImg } = croppedImage;\n\n    await this.setState({ croppedImage: urlImg });\n    this.props.subirImg(croppedImage);\n    // await this.props.action.isAppLoading(false)\n  };\n\n  cancelCroppedImg = () => {\n    this.setState({\n      croppedImage: null,\n    });\n    this.props.cancelarSubidaImg();\n  };\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      imageSrc: props.imageSrc,\n    });\n  }\n\n  render() {\n    // console.log('DESDE CROP IMG COMPONENT_______', this.state, this.props)\n    return (\n      <div className=\"App\">\n        {this.state.imageSrc && (\n          <Fragment>\n            <CropperIMG\n              onCropComplete={this.onCropComplete}\n              image={this.state.imageSrc}\n            />\n            <div className=\"ImgCropcontrols\">\n              <ButtonForms\n                _id={this.props.idCancel}\n                active={true}\n                type=\"secundary\"\n                siguiente={this.cancelCroppedImg}\n              >\n                Cancelar\n              </ButtonForms>\n              {/* <img src={this.state.croppedImage} alt=\"\" width=\"40\"/> */}\n\n              <ButtonForms\n                _id={this.props.idAccept}\n                active={true}\n                type=\"primary\"\n                siguiente={this.showCroppedImage}\n              >\n                Guardar\n              </ButtonForms>\n            </div>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(withKeyActions(CropImg));\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport CropImg from \"../../../cropimg\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport QRCode from \"qrcode\";\nimport SimpleLoader from \"../../../loaders\";\nimport { MdContentCopy } from \"react-icons/md\";\nimport { BsUpload } from \"react-icons/bs\";\nimport { copy } from \"../../../../../utils\";\nimport useToastMessage from \"../../../../../hooks/useToastMessage\";\nimport Zoom from \"react-medium-image-zoom\";\nimport \"react-medium-image-zoom/dist/styles.css\";\n\nconst PaymentProofComponent = ({ imgSrc, setImgSrc, order_id }) => {\n  const [activeSection, setActiveSection] = useState(true);\n  const { coinsendaServices, actions } = UseTxState();\n  const [toastMessage] = useToastMessage();\n\n  const subirImg = async ({ base64 }) => {\n    setImgSrc(base64);\n    setActiveSection(null);\n    actions.isAppLoading(true);\n    let confirmation = await coinsendaServices.confirmDepositOrder(\n      order_id,\n      base64\n    );\n    if (!confirmation) {\n      actions.isAppLoading(false);\n      toastMessage(\"El deposito No se ha confirmado\", \"error\");\n      setImgSrc(null);\n    }\n  };\n\n  const cancelarSubidaImg = () => {\n    setActiveSection(null);\n    setImgSrc(null);\n  };\n\n  useEffect(() => {\n    let element = document.getElementById(\"close-button-with-OtherModalLayout\");\n    if (activeSection) {\n      if (element) {\n        element.scrollTo(0, 0);\n        element.classList.add(\"inactive\");\n      }\n    }\n    return () => {\n      if (element) {\n        element.classList.remove(\"inactive\");\n      }\n    };\n  }, [activeSection]);\n\n  return (\n    <OverflowContainer>\n      <Container className={`${activeSection ? \"activated\" : \"\"}`}>\n        <CropImg\n          imageSrc={imgSrc}\n          subirImg={subirImg}\n          cancelarSubidaImg={cancelarSubidaImg}\n        />\n      </Container>\n    </OverflowContainer>\n  );\n};\n\n// const CropEdit = styled.div`\n//   width: 100%;\n//   height: 50px;\n//   background: #f5f5f5;\n//   border-radius: 4px;\n//   box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.1);\n// `;\n\n// const ImgContainer = styled.div`\n//   width: 100%;\n//   max-width: 550px;\n//   background: rgba(255, 255, 255, 0.4);\n//   border-radius: 6px;\n// `;\n\nconst OverflowContainer = styled.section`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  z-index: 3;\n  display: grid;\n  overflow: hidden;\n\n  @media (max-width: 768px) {\n    height: 100vh;\n  }\n`;\n\nconst Container = styled.div`\n  padding: 50px;\n  background: #232c35;\n  transition: 0.3s;\n  transform: translateX(100%);\n  display: grid;\n  grid-template-rows: 1fr;\n  row-gap: 20px;\n  justify-items: center;\n\n  .App {\n    height: 100% !important;\n    width: 100%;\n  }\n\n  .ImgCropcontrols {\n    background: transparent !important;\n  }\n\n  &.activated {\n    animation-name: activated;\n    animation-duration: 0.8s;\n    animation-fill-mode: forwards;\n  }\n\n  @keyframes activated {\n    0% {\n      transform: translateX(100%);\n    }\n    50% {\n      transform: translateX(100%);\n    }\n    100% {\n      transform: translateX(0%);\n    }\n  }\n`;\n\nexport default PaymentProofComponent;\n\nexport const PaymentProof = ({ payload }) => {\n  // console.log('PaymentProof', payload)\n  const {\n    // primary_path,\n    coinsendaServices,\n    actions,\n    currencies,\n    currentOrder,\n    loader,\n    tx_path,\n  } = UseTxState();\n  const [imgProof, setImgProof] = useState(payload);\n  const [txId, setTxId] = useState();\n  const [urlExplorer, setUrlExplorer] = useState();\n\n  const getPaymentProof = async (currentOrder) => {\n    // alert('getpayment')\n    if (currentOrder.paymentProof) {\n      // alert('tiene pp')\n      const { proof_of_payment } = currentOrder.paymentProof;\n      // console.log(`${currencies[currentOrder.currency.currency].node_url}tx/${proof_of_payment.proof}`)\n      setImgProof(\n        currentOrder.currency_type === \"fiat\"\n          ? `data:image/png;base64, ${proof_of_payment.raw}`\n          : await QRCode.toDataURL(\n              `${currencies[currentOrder.currency.currency].node_url}tx/${\n                proof_of_payment.proof\n              }`\n            )\n      );\n      if (currentOrder.currency_type === \"crypto\") {\n        setTxId(proof_of_payment.proof);\n        setUrlExplorer(\n          `${currencies[currentOrder.currency.currency].node_url}tx/${\n            proof_of_payment.proof\n          }`\n        );\n      }\n    } else if (currentOrder.proof) {\n      setImgProof(\n        await QRCode.toDataURL(\n          `${currencies[currentOrder.currency.currency].node_url}tx/${\n            currentOrder.proof\n          }`\n        )\n      );\n      setTxId(currentOrder.proof);\n      setUrlExplorer(\n        `${currencies[currentOrder.currency.currency].node_url}tx/${\n          currentOrder.proof\n        }`\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (\n      !currentOrder.paymentProof &&\n      currentOrder.state !== \"pending\" &&\n      tx_path === \"deposits\"\n    ) {\n      const getData = async () => {\n        const PP = await coinsendaServices.getDepositById(currentOrder.id);\n        if (!PP) {\n          return;\n        }\n        // const { proof_of_payment } = PP.paymentProof;\n\n        let updateOrder = {\n          [PP.id]: { ...PP },\n        };\n        actions.update_item_state(updateOrder, \"deposits\");\n        getPaymentProof(PP);\n      };\n      getData();\n    } else {\n      getPaymentProof(currentOrder);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (imgProof !== payload) {\n      setImgProof(payload);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [payload]);\n\n  const openBlockchain = () => {\n    window.open(urlExplorer, \"_blank\");\n  };\n\n  // console.log('Payment Proof ==> ', currentOrder.currency_type)\n  return (\n    <>\n      <PaymentProofContainer\n        className={`${currentOrder.currency_type} ${currentOrder.state}`}\n      >\n        {(!imgProof || loader) && (\n          <LoaderContainer>\n            <SimpleLoader loader={2} justify=\"center\" color=\"#206f65\" />\n          </LoaderContainer>\n        )}\n\n        {imgProof && (\n          <ProofContainer>\n            <Zoom>\n              <img src={imgProof} width=\"100%\" height=\"90px\" alt=\"\" />\n            </Zoom>\n            {currentOrder.currency_type === \"crypto\" && (\n              <HoverProof>\n                <IconContainer\n                  className=\"tooltip\"\n                  data-copy={txId}\n                  onClick={copy}\n                >\n                  <MdContentCopy size={16} />\n                  <span className=\"tooltiptext fuente\">Copiar</span>\n                </IconContainer>\n\n                <IconContainer className=\"tooltip\" onClick={openBlockchain}>\n                  <BsUpload size={20} />\n                  <span className=\"tooltiptext fuente\">Ver en Blockchain</span>\n                </IconContainer>\n              </HoverProof>\n            )}\n          </ProofContainer>\n        )}\n      </PaymentProofContainer>\n\n      {/* {imgProof && (\n      <FiatPaymentProofZoom state={currentOrder.state}>\n        <ProofCont>\n          <img src={imgProof} width=\"100%\" alt=\"\" />\n        </ProofCont>\n      </FiatPaymentProofZoom>\n    )} */}\n    </>\n  );\n};\n\n// const ProofCont = styled.div`\n//   width: 90%;\n//   height: 90%;\n//   justify-self: center;\n//   align-self: center;\n//   display: grid;\n//   align-items: center;\n//   overflow: hidden;\n//   img {\n//     border-radius: 4px;\n//   }\n// `;\n\nconst FiatPaymentProofZoom = styled.div`\n  position: absolute;\n  width: calc(100% - 20px);\n  height: ${(props) =>\n    props.state === \"confirmed\" ? \"calc(100% - 230px)\" : \"calc(100% - 170px)\"};\n  background: #eeeeee;\n  top: 10px;\n  justify-self: center;\n  border-radius: 3px;\n  display: none;\n`;\n\nconst PaymentProofContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 4px;\n  align-self: center;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  max-height: 100px;\n  max-width: 110px;\n  position: relative;\n  justify-self: start;\n\n  img {\n    border-radius: 3px;\n    max-width: 100px;\n    min-width: 90%;\n  }\n  &.accepted,\n  &.confirmed {\n    background: #206f65;\n    padding: 0 5px;\n  }\n  &.rejected,\n  &.canceled {\n    background: gray;\n    opacity: 0.5;\n  }\n\n  &.fiat.accepted:hover\n    ~ ${FiatPaymentProofZoom},\n    &.fiat.confirmed:hover\n    ~ ${FiatPaymentProofZoom} {\n    display: grid;\n  }\n\n  &.fiat {\n    cursor: pointer;\n  }\n`;\n\nconst LoaderContainer = styled.div`\n  width: 90%;\n  height: 90%;\n  background: white;\n  opacity: 0.6;\n  border-radius: 3px;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  position: absolute;\n  justify-self: center;\n  align-self: center;\n  z-index: 1;\n`;\n\n\n\nconst HoverProof = styled.div`\n  position: absolute;\n  height: 100%;\n  width: calc(100% - 20px);\n  top: 0;\n  transition: 0.15s !important;\n  align-items: baseline;\n  display: grid;\n  padding: 0 10px;\n  justify-items: center;\n  grid-template-columns: repeat(2, 1fr);\n  transform: translateX(100%);\n`;\n\nconst ProofContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n\n  :hover ${HoverProof} {\n    opacity: 1;\n  }\n  button {\n    cursor: pointer;\n  }\n`;\n\nconst IconContainer = styled.div`\n  cursor: pointer;\n  width: 30px;\n  height: 30px;\n  border-radius: 3px;\n  border: 1px solid gray;\n  display: grid !important;\n  align-items: center;\n  justify-items: center;\n  position: relative;\n  align-self: flex-start;\n\n  ::after {\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n  }\n\n  .tooltiptext {\n    padding-left: 4px !important;\n    padding-right: 4px !important;\n    width: auto !important;\n    min-width: 60px !important;\n  }\n\n  i,\n  svg {\n    color: gray;\n  }\n\n  :hover {\n    i,\n    svg {\n      color: #0c96fa;\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport api, { orderStatus } from \"./rest.json\";\nimport { OnlySkeletonAnimation } from \"../../../loaders/skeleton\";\nimport styled from \"styled-components\";\nimport { device } from \"../../../../../const/const\";\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nmoment.locale(\"es\");\n\nconst OrderStatus = ({ order, movil }) => {\n  const [orderState, setOrderState] = useState();\n  const { currentOrder, tx_path } = UseTxState();\n\n  const skeletons = new Array(4).fill([\"created\"]);\n\n  useEffect(() => {\n    let orders = {};\n    for (let prop in api[tx_path]) {\n      orders = {\n        ...orders,\n        [prop]: {\n          ...api[tx_path][prop],\n          completed: currentOrder.state === prop,\n        },\n      };\n    }\n    // console.log(orders, api[tx_path])\n    setOrderState(Object.entries(orders));\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentOrder.state]);\n\n  // console.log('|||||||||||||||| OrderSupervisor ::', order)\n\n  return (\n    <OrderStatusContainer>\n      <TopSectionStatus>\n        <Text className=\"fuente\">\n          {orderStatus[tx_path][order.state][order.currency_type].title}\n        </Text>\n        <SubTitle className=\"fuente\">\n          {orderStatus[tx_path][order.state][order.currency_type].description}\n        </SubTitle>\n      </TopSectionStatus>\n      {!movil && (\n        <StatusContainer>\n          {orderState\n            ? orderState.map((state, index) => {\n                return (\n                  <StatusItem\n                    state={state}\n                    order={currentOrder}\n                    key={index}\n                    active={state[1].completed}\n                    className={`\n                  ${\n                    orderState.length === index + 1\n                      ? \"statusStep finalStep\"\n                      : \"statusStep\"\n                  }\n                  ${state[1].completed ? \"activeStep\" : \"\"}\n                  `}\n                  />\n                );\n              })\n            : skeletons.map((state, index) => {\n                return (\n                  <StatusItem\n                    state={state}\n                    key={index}\n                    className={`${\n                      skeletons.length === index + 1\n                        ? \"statusStep finalStep\"\n                        : \"statusStep\"\n                    } skeleton`}\n                    skeleton\n                  />\n                );\n              })}\n        </StatusContainer>\n      )}\n    </OrderStatusContainer>\n  );\n};\n\nconst StatusItem = ({ className, state, order, active, skeleton }) => {\n  const activated = active && active.toString();\n  // console.log((state[0] === \"confirmed\" && (order.state === 'pending' || order.state === 'confirmed')), state )\n\n  return (\n    <Status className={`status ${className}`}>\n      <Indicator className={className} />\n      <Description>\n        {skeleton ? (\n          <Skeleton />\n        ) : (\n          <>\n            <StatusTitle className=\"fuente\" active={activated}>\n              {state[1].ui_text[order.currency_type] || state[1].ui_text}\n            </StatusTitle>\n            <DateStatusText className=\"fuente2\" active={activated}>\n              {active && order.state === \"pending\"\n                ? \"Pendiente\"\n                : active\n                ? \"En proceso...\"\n                : state[0] === \"created\"\n                ? moment(order.created_at).format(\"LL\")\n                : state[0] === \"pending\"\n                ? moment(order.updated_at).format(\"LL\")\n                : state[0] === \"confirmed\" && order.state === \"confirmed\"\n                ? moment(order.updated_at).format(\"LL\")\n                : \"\"}\n            </DateStatusText>\n          </>\n        )}\n      </Description>\n    </Status>\n  );\n};\n\nexport default OrderStatus;\n\nexport const Text = styled.p`\n  margin: 0;\n`;\n\nconst OrderStatusContainer = styled.div`\n  background: #f5f5f5;\n  box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.05);\n  display: grid;\n  grid-template-rows: auto 1fr;\n  row-gap: 25px;\n  padding: 30px 40px;\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n\n  @media ${device.tablet} {\n    grid-template-rows: 1fr;\n    padding: 25px 20px;\n  }\n`;\nconst TopSectionStatus = styled.div`\n  display: grid;\n  row-gap: 10px;\n  height: auto;\n`;\n\nconst SubTitle = styled(Text)`\n  font-size: 13px;\n  color: gray;\n`;\n\nconst StatusContainer = styled.div`\n  padding: 45px 0;\n  display: grid;\n  grid-template-rows: repeat(auto-fill, 70px);\n  row-gap: 10px;\n`;\n\nconst Status = styled.div`\n  height: 70px;\n  padding: 0 20px;\n  display: grid;\n  align-items: center;\n  grid-template-columns: 20px 1fr;\n\n  &.activeStep ~ .status .statusStep {\n    background: #dadada;\n    ::after {\n      background: #dadada;\n    }\n  }\n\n  &.activeStep .statusStep {\n    ::after {\n      background: #dadada;\n    }\n  }\n`;\n\nconst Indicator = styled.div`\n  justify-self: center;\n  width: 14px;\n  height: 14px;\n  background: #0198ff;\n  border-radius: 50%;\n  position: relative;\n  z-index: 2;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  border: 2px solid #f5f5f5;\n\n  &.activeStep {\n    width: 14px;\n    height: 14px;\n    border: 2px solid #0198ff;\n    background: transparent !important;\n    position: relative;\n    ::after {\n      top: 16px !important;\n    }\n    ::before {\n      content: \"\";\n      width: 6px;\n      height: 6px;\n      background: #0198ff;\n      border-radius: 50%;\n    }\n  }\n\n  &.statusStep::after {\n    content: \"\";\n    width: 2px;\n    height: 64px;\n    background: #0198ff;\n    position: absolute;\n    -webkit-align-self: center;\n    align-self: start;\n    top: 14px;\n    z-index: 1;\n  }\n\n  &.statusStep.finalStep::after {\n    display: none;\n  }\n\n  &.skeleton {\n    background: #c1c1c1;\n    ::after {\n      background: #c1c1c1;\n    }\n  }\n`;\nconst Description = styled.div`\n  padding-left: 20px;\n  display: grid;\n  row-gap: 5px;\n  p {\n    margin: 0;\n  }\n`;\n\nconst Skeleton = styled.div`\n  width: 100%;\n  height: 16px;\n  background: #c1c1c1;\n  border-radius: 3px;\n  ${OnlySkeletonAnimation}\n`;\n\nconst StatusTitle = styled(Text)`\n  font-size: 14px;\n  color: ${(props) => (props.active === \"true\" ? \"#0198FF\" : \"gray\")};\n`;\n\nconst DateStatusText = styled(Text)`\n  font-size: 12px;\n  color: ${(props) => (props.active === \"true\" ? \"#0198FF\" : \"#adadad\")};\n`;\n\n//\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nexport default class ConfirmationCounter extends Component {\n  state = {\n    ctx: null,\n    total: 6,\n    loader: true,\n    color: \"#159e8c\",\n  };\n\n  draw_interval;\n\n  // init_draw = async props => {\n  //   let c = document.getElementById(\"myCanvas\")\n  //   await this.setState({\n  //     ctx: c.getContext(\"2d\")\n  //   })\n  //\n\n  draw = async (amount) => {\n    // const {\n    //   ctx\n    // } = this.state\n    await this.setState({ loader: false });\n    let c = document.getElementById(\"myCanvas\");\n    if (!c) {\n      return false;\n    }\n    const ctx = c.getContext(\"2d\");\n    clearInterval(this.draw_interval);\n    let tasaPercent = (100 * amount) / this.state.total;\n    ctx.beginPath();\n    ctx.arc(150, 63, 58, 0, ((2 * Math.PI) / 100) * tasaPercent);\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"#1cb179\";\n    ctx.stroke();\n    // ctx.closePath()\n  };\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.confirmations !== prevProps.confirmations) {\n      await this.setState({ loader: true });\n      this.draw(this.props.confirmations);\n    }\n  }\n\n  async componentDidMount() {\n    await this.setState({ loader: true });\n    this.draw_interval = setInterval(() => {\n      this.draw(this.props.confirmations);\n    }, 250);\n  }\n\n  render() {\n    const { confirmations, total_confirmations } = this.props;\n\n    // const { color } = this.state;\n\n    return (\n      <AbsoluteContainer2>\n        <RelativeContainer>\n          <AbsoluteContainer>\n            <ContCanvasConfirmation>\n              <ConfirmationContainer>\n                <TextContainer>\n                  <p className=\"fuente2\">\n                    {confirmations}\n                    <span>\n                      / {total_confirmations ? total_confirmations : \"6\"}\n                    </span>\n                  </p>\n                </TextContainer>\n              </ConfirmationContainer>\n              {!this.state.loader && (\n                <Canvas id=\"myCanvas\" width=\"300\" height=\"125\" />\n              )}\n            </ContCanvasConfirmation>\n          </AbsoluteContainer>\n        </RelativeContainer>\n      </AbsoluteContainer2>\n    );\n  }\n}\n\nconst AbsoluteContainer = styled.div`\n  position: absolute;\n`;\n\nconst AbsoluteContainer2 = styled(AbsoluteContainer)`\n  right: 0;\n  transform: scale(0.9);\n`;\n\nconst RelativeContainer = styled.div`\n  width: 130px;\n  height: 170px;\n  position: relative;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n`;\n\nconst ConfirmationContainer = styled.div`\n  width: 80px;\n  height: 50%;\n  position: absolute;\n  align-self: center;\n  justify-self: center;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  p {\n    font-size: 30px;\n    margin: 0;\n  }\n`;\n\nconst TextContainer = styled.div`\n  width: 80px;\n  height: 50%;\n  position: absolute;\n  align-self: center;\n  justify-self: center;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  p {\n    font-size: 30px;\n    color: #1cb179;\n    margin: 0;\n  }\n  span {\n    color: #1cb179;\n    margin-left: 5px;\n    font-size: 18px;\n  }\n`;\n\n// const CounterText = styled.article`\n//   color: ${(props) => (props.color ? `${props.color} !important` : \"red\")};\n//   font-size: 40px !important;\n//   margin: 0 !important;\n//   padding: 0 !important;\n//   align-self: center !important;\n// `;\n\nconst ContCanvasConfirmation = styled.section`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n`;\n\nconst Canvas = styled.canvas`\n  transform: rotate(-90deg);\n  transition: 0.3s;\n`;\n\n//\n","import React, { useState, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlineUpload } from \"react-icons/ai\";\n// import PaymentProofComponent, { PaymentProof } from \"./paymentProof\";\nimport { PaymentProof } from \"./paymentProof\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport SimpleLoader from \"../../../loaders\";\n// import QRCode from \"qrcode\";\nimport { readFile, img_compressor, includesAnyImageMime } from \"../../../../../utils\";\nimport OrderStatus from \"./orderStatus\";\nimport DetailGenerator from \"./detailGenerator\";\nimport { OnlySkeletonAnimation } from \"../../../loaders/skeleton\";\nimport IconSwitch from \"../../../icons/iconSwitch\";\nimport { AiOutlineClockCircle } from \"react-icons/ai\";\nimport ConfirmationCounter from \"./confirmationCounter\";\nimport useViewport from \"../../../../../hooks/useWindowSize\";\nimport { device, BIOMETRIC_FIAT_LITMIT_AMOUNT } from \"../../../../../const/const\";\nimport { IconClose } from \"../../../shared-styles\";\nimport useToastMessage from \"../../../../../hooks/useToastMessage\";\nimport { useFormatCurrency } from \"../../../../hooks/useFormatCurrency\";\nimport { BottomSection } from './'\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nimport useKeyActionAsClick from \"../../../../../hooks/useKeyActionAsClick\";\nmoment.locale(\"es\");\n \n// const orderModel = {\n//   created_at: new Date(),\n//   updated_at: new Date(),\n//   state: \"pending\",\n//   currency_type: \"fiat\",\n// };\n\nconst InProcessOrder = ({ onErrorCatch }) => {\n  const { currentOrder } = UseTxState();\n\n  if (!currentOrder || !currentOrder.currency) return onErrorCatch();\n\n  return (\n    <>\n      {currentOrder.currency_type === \"fiat\" ? (\n        <FiatOrder order={currentOrder} />\n      ) : (\n        <CryptoOrder order={currentOrder} />\n      )}\n    </>\n  );\n};\n\nexport default InProcessOrder;\n\nconst CryptoOrder = ({ order }) => {\n  const { tx_path, currencies } = UseTxState();\n  const { isTabletOrMovilViewport } = useViewport();\n\n  return (\n    <InProcessOrderContainer>\n      <IconClose theme=\"dark\" size={20} />\n      <OrderContainer>\n        <TopSection>\n          <IconSwitch\n            className=\"TitleIconOrder\"\n            size={35}\n            icon={order.currency.currency || \"cop\"}\n          />\n          <TitleContainer>\n            <Text className=\"fuente\">{getTitle(tx_path)}</Text>\n            <Currency className=\"fuente\">{order.currency.currency}</Currency>\n          </TitleContainer>\n          <DateIdContainter>\n            <Text className=\"fuente2\">#{order.id}</Text>\n            <DateText className=\"fuente2\">\n              {moment(order.updated_at).format(\"LL\")}\n            </DateText>\n          </DateIdContainter>\n        </TopSection>\n\n        {isTabletOrMovilViewport && <OrderStatus order={order} movil />}\n\n        <MiddleSection state={order.state}>\n          <DetailGenerator\n            order={order}\n            title={`${getState(order)}`}\n            TitleSuffix={() => <GetIcon order={order} />}\n          />\n        </MiddleSection>\n\n        {\n          tx_path === \"deposits\" ? (\n            <BottomSectionContainer className={`crypto`}>\n              <UploadComponent />\n              <ConfirmationCounter\n                confirmations={order.confirmations}\n                total_confirmations={\n                  currencies[order.currency.currency].confirmations\n                }\n              />\n            </BottomSectionContainer>)\n          :\n            <BottomSection colorState={\"gray\"}/>\n        }\n      </OrderContainer>\n\n      {!isTabletOrMovilViewport && <OrderStatus order={order} />}\n    </InProcessOrderContainer>\n  );\n};\n\nconst FiatOrder = ({ order }) => {\n  const [onDrag, setOnDrag] = useState(false);\n  const [imgSrc, setImgSrc] = useState(false);\n  const { actions, tx_path, coinsendaServices } = UseTxState();\n  const { isTabletOrMovilViewport } = useViewport();\n  const [ , , toBigNumber ] = useFormatCurrency()\n  const [toastMessage] = useToastMessage();\n\n  const dragOver = (event) => {\n    event.preventDefault();\n    if (!onDrag) {\n      setOnDrag(!onDrag);\n    }\n  };\n\n  const dragLeave = (event) => {\n    event.preventDefault();\n    if (onDrag) {\n      setOnDrag(!onDrag);\n    } \n  };\n\n  const goFileLoader = async (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      setOnDrag(false);\n      const data = e.target.files[0];\n      const file = await img_compressor(data, 0.25);\n      const dataBase64 = await readFile(file);\n      const isAnImage = includesAnyImageMime(dataBase64.split(\",\")[1])\n      if(!isAnImage){\n        return alert('Solo se aceptan imagenes')\n      }\n      setImgSrc(dataBase64);\n      actions.isAppLoading(true);\n\n      const { user } = coinsendaServices.globalState.modelData\n      const orderAmount = await toBigNumber(order.amount, order.currency)\n      const limitAmount = await toBigNumber(BIOMETRIC_FIAT_LITMIT_AMOUNT, order.currency)\n      \n      if(user.security_center?.transactionSecurity?.biometric?.enabled && orderAmount.isGreaterThanOrEqualTo(limitAmount)){\n        const Element = await import(\"../../../../BiometricIdentity\");\n        if(!Element) return;\n        const FormsComponent = Element.default\n        return actions.renderModal(() => <FormsComponent/>);\n      }\n\n      // cropImgOFf\n      // activate oncomment line ><167\n      let confirmation = await coinsendaServices.confirmDepositOrder(\n        order.id,\n        dataBase64\n      );\n      if (!confirmation || !confirmation.data) {\n        actions.isAppLoading(false);\n        toastMessage(\"El depósito No se ha confirmado\", \"error\");\n        setImgSrc(null);\n      }\n    }\n  };\n\n  console.log('|||||||||||||||| FiatOrderDespoit ::', tx_path)\n  // debugger\n\n\n  return (\n    <InProcessOrderContainer>\n      <IconClose theme=\"dark\" size={20} />\n\n      <OrderContainer onDragOver={dragOver}>\n        {onDrag && !imgSrc && order.state === \"pending\" && (\n          <DropZoneComponent\n            dragLeave={dragLeave}\n            goFileLoader={goFileLoader}\n          />\n        )} \n        {/* {imgSrc && order.state === \"pending\" && (\n          <PaymentProofComponent\n            order_id={order.id} \n            imgSrc={imgSrc}\n            setImgSrc={setImgSrc}\n          />\n        )} */}\n\n        <TopSection>\n          <IconSwitch\n            className=\"TitleIconOrder\"\n            size={35}\n            icon={order.currency.currency || \"cop\"}\n          />\n          <TitleContainer>\n            <Text className=\"fuente\">{getTitle(tx_path)}</Text>\n            <Currency className=\"fuente\">{order.currency.currency}</Currency>\n          </TitleContainer>\n          <DateIdContainter>\n            <Text className=\"fuente2\">#{order.id}</Text>\n            <DateText className=\"fuente2\">\n              {moment(order.updated_at).format(\"LL\")}\n            </DateText>\n          </DateIdContainter>\n        </TopSection>\n\n        {isTabletOrMovilViewport && <OrderStatus order={order} movil />}\n\n        <MiddleSection state={order.state}>\n          <DetailGenerator\n            order={order}\n            title={`${getState(order)}`}\n            TitleSuffix={() => <GetIcon order={order} />}\n          />\n        </MiddleSection>\n\n        {\n          tx_path === \"deposits\" ? (\n          <BottomSectionContainer>\n            <UploadComponent\n              imgSrc={imgSrc}\n              goFileLoader={goFileLoader}\n              setImgSrc={setImgSrc}\n            />\n          </BottomSectionContainer>)\n          :\n          <BottomSection colorState={\"gray\"}/>\n        }\n\n      </OrderContainer>\n\n      {!isTabletOrMovilViewport && <OrderStatus order={order} />}\n    </InProcessOrderContainer>\n  );\n};\n\nconst DropZoneComponent = ({ dragLeave, goFileLoader }) => {\n  return (\n    <DropZoneContainer>\n      <input\n        id=\"TFileUpload\"\n        type=\"file\"\n        // accept=\"image/png,image/jpeg\"\n        onChange={goFileLoader}\n        onDragLeave={dragLeave}\n        capture=\"user\" \n        accept=\"image/*\"\n      />\n      <UploadComponent\n        unButtom\n        title=\"Suelta aquí el archivo que quieres subir...\"\n      />\n    </DropZoneContainer>\n  );\n};\n\nconst UploadComponent = ({ unButtom, title, goFileLoader, imgSrc, ...props}) => {\n  const { currentOrder } = UseTxState();\n  const idForFileUpload = useKeyActionAsClick(\n    true,\n    \"TFileUpload\",\n    13,\n    true,\n    \"onkeyup\",\n    true\n  );\n\n  return (\n    <UploadContainer\n      className={`${\n        imgSrc || currentOrder.state === \"confirmed\" ? \"loaded\" : \"unload\"\n      }`}\n    >\n      {!imgSrc && currentOrder.state !== \"confirmed\" ? (\n        <Fragment>\n          <AiOutlineUpload size={45} color=\"gray\" />\n          <UploadText className=\"fuente\">\n            {title || \"Arrastra el archivo que quieres subir\"}\n          </UploadText>\n          {!unButtom && (\n            <Fragment>\n              <UploadMiddle>\n                <UploadTextMiddle className=\"fuente\">\n                  o selecciona un archivo\n                </UploadTextMiddle>\n                <hr />\n              </UploadMiddle>\n\n              <Buttom>\n                <input\n                  id={idForFileUpload}\n                  type=\"file\"\n                  accept=\"image/png,image/jpeg\"\n                  onChange={goFileLoader}\n                />\n                <Text style={{ color: \"white\" }} className=\"fuente\">\n                  Subir comprobante\n                </Text>\n              </Buttom>\n            </Fragment>\n          )}\n        </Fragment>\n      ) : (\n        <Fragment>\n          <UploadMiddle className=\"titleSection payment fuente\">\n            <UploadTextMiddle className=\"titleSection\">\n              Comprobante de pago\n            </UploadTextMiddle>\n            <hr />\n          </UploadMiddle>\n          <PaymentProof payload={imgSrc} />\n        </Fragment>\n      )}\n    </UploadContainer>\n  );\n};\n\nconst getTitle = (tx_path) => {\n  return tx_path === \"deposits\" ? \"Depósito\" : \"Retiro\";\n};\n\nconst GetIcon = ({ order }) => {\n  const coloIcon = order.state === \"pending\" ? \"#ff8660\" : \"#1cb179\";\n  const RenderIcon =\n    order.state === \"pending\"\n      ? AiOutlineClockCircle\n      : order.state === \"confirmed\" &&\n        (() => <SimpleLoader loader={2} color={coloIcon} justify=\"center\" />);\n\n  return (\n    <IconContainer>\n      <RenderIcon size={25} color={coloIcon} />\n    </IconContainer>\n  );\n};\n\nconst getState = ({ state, currency_type }) => {\n  switch (currency_type) {\n    case \"fiat\":\n      return state === \"pending\"\n        ? \"Pendiente\"\n        : state === \"confirmed\" && currency_type === \"fiat\"\n        ? \"Procesando...\"\n        : \"En proceso de aceptación...\";\n    case \"crypto\":\n      return state === \"pending\" ? \"Pendiente\" : \"Confirmando en blockchain...\";\n    default:\n  }\n};\n\nconst IconContainer = styled.div`\n  position: relative;\n  width: 25px;\n  height: 25px;\n  display: grid;\n`;\n\nconst DropZoneContainer = styled.section`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.85);\n  z-index: 3;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  ${\"\" /* border: 5px solid #0198FF; */}\n\n  svg {\n    fill: #0198ff;\n  }\n  p {\n    color: #0198ff;\n  }\n`;\n\n// const ImgContainer = styled.div`\n//   width: 80px;\n//   height: 55px;\n//   position: relative;\n//   border: 3px solid #0198ff;\n//   border-radius: 4px;\n//   background: white;\n//   display: grid;\n//   align-items: center;\n//   &.loader::after {\n//     content: \"\";\n//     width: 100%;\n//     position: absolute;\n//     height: 100%;\n//     background: rgba(255, 255, 255, 0.8);\n//   }\n//   .lds-roller {\n//     z-index: 2;\n//   }\n// `;\n\n// const Img = styled.img`\n//   width: 80px;\n//   height: 55px;\n//   border-radius: 3px;\n// `;\n\n// const ProgressBar = styled.span`\n//   height: 4px;\n//   width: 100%;\n//   background: #c5c5c5;\n//   transition: 0.3s;\n//   position: relative;\n//   ::after {\n//     content: \"\";\n//     width: ${(props) => props.progresed};\n//     background: #0198ff;\n//     height: 100%;\n//     position: absolute;\n//     transition: 3s;\n//     left: 0;\n//     top: 0;\n//   }\n// `;\n\nexport const Text = styled.p`\n  margin: 0;\n`;\n\n// const PaymentTitle = styled(Text)`\n//   text-align: center;\n//   font-size: 14px;\n//   color: gray;\n// `;\n\n// const PaymentProofDetail = styled.div`\n//   width: 100%;\n//   display: grid;\n//   grid-template-rows: auto auto auto;\n//   row-gap: 10px;\n//   justify-items: center;\n//   align-items: center;\n//   padding-top: 40px;\n// `;\n\nconst Buttom = styled.div`\n  width: 320px;\n  height: 45px;\n  border-radius: 6px;\n  border: 2px solid #0198ff;\n  background: #0198ff;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  cursor: pointer;\n  position: relative;\n`;\n\nexport const UploadTextMiddle = styled(Text)`\n  z-index: 2;\n  font-size: 12px;\n  width: 150px;\n  background: #eeeeee;\n  text-align: center;\n  color: gray;\n\n  &.titleSection {\n    font-size: 15px;\n    width: auto;\n    padding: 0 20px;\n    align-self: center;\n    justify-self: baseline;\n  }\n\n  &.consolidatedStyle{\n    background:white;\n    margin-left:20px;\n  }\n`;\n\nexport const UploadMiddle = styled.div`\n  font-size: 14px;\n  position: relative;\n  display: grid;\n  width: 100%;\n  justify-items: center;\n  max-width: 320px;\n  hr{\n    position: absolute;\n    width: 100%;\n    align-self: center;\n  }\n\n  &.titleSection{\n    max-width: inherit;\n    position: absolute;\n    align-self: start;\n    hr{\n      border-top: 1px solid;\n      color: #c5c5c5;\n      position: absolute;\n      width: 80%;\n      right: 0;\n    }\n  }\n  &.payment{\n    p{\n      padding-left: 0 !important;\n    }\n    position: relative !important;\n  }\n\n  &.swaps{\n    hr{\n      width: 98%;\n    }\n  }\n}\n`;\n\nconst UploadText = styled(Text)`\n  font-size: 16px;\n  color: gray;\n`;\n\nconst UploadContainer = styled.section`\n  display: grid;\n  justify-items: center;\n  row-gap: 12px;\n  width: 100%;\n  min-height: 170px;\n  height: auto;\n  &.loaded {\n    grid-template-rows: auto 1fr;\n  }\n  &.unload {\n    grid-template-columns: 1fr;\n    max-width: 400px;\n    grid-template-rows: repeat(4, auto);\n  }\n`;\n\nexport const Section = styled.div``;\n\nconst BottomSectionContainer = styled(Section)`\n  height: auto;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n\n  &.crypto {\n    position: relative;\n  }\n`;\n\nconst DateIdContainter = styled.div`\n  display: flex;\n  grid-area: dateIdContainter;\n  ${Text} {\n    font-size: 12px;\n    color: gray;\n  }\n`;\n\nconst DateText = styled(Text)`\n  margin-left: 9px !important;\n  padding-left: 7px;\n  border-left: 1px solid gray;\n`;\n\nconst TitleContainer = styled.div`\n  margin: 0;\n  display: flex;\n  align-items: center;\n  grid-area: titleContainer;\n  ${Text} {\n    font-size: 20px;\n  }\n`;\n\nconst Currency = styled(Text)`\n  margin-left: 7px !important;\n  text-transform: uppercase;\n`;\n\n// const Icon = styled.span`\n//   width: 35px;\n//   height: 35px;\n//   border-radius: 50%;\n//   background: #c3c3c3;\n//   grid-area: icon;\n//   ${\"\" /* box-shadow: 0px 0px 5px 3px rgba(0,0,0,0.1); */}\n// `;\n\nconst MiddleSection = styled(Section)`\n  background: white;\n  border-radius: 4px;\n  position: relative;\n  overflow: hidden;\n  ::after {\n    content: \"\";\n    position: absolute;\n    height: 7px;\n    background: ${(props) =>\n      props.state === \"pending\" ? \"#ff8660\" : \"#1cb179\"};\n    top: 0;\n    width: 100%;\n    ${(props) => props.state === \"confirmed\" && OnlySkeletonAnimation}\n  }\n  .withTitle {\n    padding-top: 55px !important;\n  }\n`;\n\nconst TopSection = styled(Section)`\n  display: grid;\n  align-items: center;\n  grid-template-rows: auto auto;\n  column-gap: 12px;\n  row-gap: 5px;\n  grid-template-columns: auto 1fr;\n  grid-template-areas:\n    \"icon titleContainer\"\n    \"icon dateIdContainter\";\n  span {\n    margin-right: 15px;\n  }\n\n  .TitleIconOrder {\n    grid-area: icon;\n  }\n`;\n\n// const Container = styled.section`\n//   width: 100vw;\n//   height: 100vh;\n//   background: #000000ba;\n//   display: grid;\n//   align-items: center;\n//   justify-items: center;\n// `;\n\nconst OrderContainer = styled.div`\n  background: #eeeeee;\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  row-gap: 30px;\n  position: relative;\n  border-top-left-radius: 6px;\n  border-bottom-left-radius: 6px;\n\n  @media ${device.tablet} {\n    grid-template-rows: auto auto 1fr auto;\n  }\n`;\n\nconst InProcessOrderContainer = styled.section`\n  #TFileUpload {\n    position: absolute;\n    z-index: 4;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    cursor: pointer;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  ${OrderContainer} {\n    padding: 30px 40px;\n  }\n\n  position: relative;\n  width: 1000px;\n  height: auto;\n  min-height: 750px;\n  background: white;\n  display: grid;\n  border-radius: 6px;\n  box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.1);\n  grid-template-columns: 1fr 400px;\n\n  @media ${device.laptop} {\n    width: 100%;\n  }\n\n  @media ${device.tabletL} {\n    grid-template-columns: 1fr;\n    position: absolute;\n    top: 10px;\n  }\n\n  @media ${device.tablet} {\n    ${OrderContainer} {\n      padding: 30px 15px;\n    }\n  }\n`;\n","import { useEffect } from \"react\";\nimport { PaymentProof } from \"./paymentProof\";\nimport loadable from \"@loadable/component\";\nimport { Icon, IconContainer } from '../../../../referrals/shareStyles'\nimport { MAIN_COLOR } from '../../../../../const/const'\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport styled from 'styled-components'\n\n\nconst ReferralInfo = () => {\n    const IconSwitch = loadable(() => import(\"../../../icons/iconSwitch\"));\n    return(\n      <IconContainer>\n        <Icon>\n          <IconSwitch color={MAIN_COLOR}  size={40} icon=\"referral\" />\n        </Icon>\n      </IconContainer>\n    )\n}\n  \n  \n  const WithdrawFiatInfo = () => {\n\n    const IconSwitch = loadable(() => import(\"../../../icons/iconSwitch\"));\n    const { tx_path, order_id } = useParams();\n    const modelData = useSelector(({ modelData }) => modelData);\n    const { withdraw_account_id } = modelData[tx_path][order_id]\n    const withdrawAccount = modelData.withdraw_accounts[withdraw_account_id]\n    console.log('|||||||||||  WithdrawFiatInfo ==> ', withdrawAccount)\n\n    return(\n        <WithdrawAccountCont className={`${!withdrawAccount ? 'unAvalaible' : ''}`}>\n          <IconCont>\n            {\n                withdrawAccount && <IconSwitch size={45} icon={withdrawAccount?.bank_name?.value} />\n            }\n          </IconCont>\n          <DataContainer>\n            <p className=\"fuente\">{!withdrawAccount ? 'Cuenta no disponible' : withdrawAccount?.bank_name?.ui_name?.toLowerCase()}</p>\n            <p className=\"fuente accountType\">{!withdrawAccount ? '' : withdrawAccount?.account_type?.ui_name}</p>\n            <p className=\"fuente2\">{!withdrawAccount ? '' : `No. ${withdrawAccount?.account_number?.value}`}</p>\n            \n          </DataContainer>\n        </WithdrawAccountCont>\n    )\n  }\n\n  export const IconCont = styled.div`\n    height:80px;\n    width:80px;\n    border-radius:6px;\n    position: relative;\n    display: grid;\n    background:#d8d8d8;\n    border-radius:6px;\n\n    .iconSty{\n        position: absolute;\n        justify-self: center;\n        align-self: center; \n    }\n  `\n\n  export const WithdrawAccountCont = styled.div`\n    width:auto;\n    height:80px;\n    display:grid;\n    grid-template-columns:auto 1fr;\n    column-gap: 12px;\n\n    &.unAvalaible{\n       ${IconCont}{\n            background:#c4c4c4;\n        }\n       .fuente{\n        font-size:14px;\n       }\n    }\n  ` \n \n  export const DataContainer = styled.div`\n    height:100%;\n    width:auto;\n    display: grid;\n    grid-template-rows: 20px 18px auto;\n    row-gap: 5px;\n    .accountType{\n        font-size:12px;\n    }\n    .fuente2{\n      font-size:12px;\n    }\n    p{\n      text-transform: capitalize;\n      color:gray;\n      margin:0;\n    }\n  `\n\n\n  \n  \n  const GetInfoComponentToRender = (order) => {\n  \n    const { tx_path, info } = order\n    const targetKey = info?.is_referral ? 'is_referral' : order?.currency_type\n\n\n    const toRender = {\n      \"deposits\":{\n        \"is_referral\":{\n            \"title\":\"Depósito por referido\",\n            \"component\":ReferralInfo\n        }        \n      },\n      \"withdraws\":{\n        \"fiat\":{\n            \"title\":\"Info cuenta de retiro\",\n            \"component\":WithdrawFiatInfo\n        }\n      },\n      \"swaps\":{\n        \"title\":\"\",\n        \"component\":() => (<div></div>)\n      }\n    }\n    \n    useEffect(()=> {\n       const title = tx_path === 'swaps' ? '' : toRender[tx_path][targetKey]?.title || 'Comprobante de pago'\n       const targetElement = document.querySelector('#titleInfoComponent')\n       if(targetElement){\n         targetElement.innerHTML = title\n       }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    if(tx_path === 'swaps'){\n      return toRender[tx_path]?.component\n    }\n  \n    return toRender[tx_path][targetKey]?.component ||  PaymentProof\n  }\n\n\n  export default GetInfoComponentToRender","import React from \"react\";\nimport OtherModalLayout from \"../../otherModalLayout\";\nimport styled from \"styled-components\";\nimport {\n  swing_in_bottom_bck,\n  // socketIconContainerIntro,\n  backTopSection,\n} from \"../../../animations\";\nimport { orderStateColors, device } from \"../../../../../const/const\";\nimport IconSwitch from \"../../../icons/iconSwitch\";\n// import { useActions } from \"../../../../../hooks/useActions\";\nimport useViewport from \"../../../../../hooks/useWindowSize\";\nimport DetailGenerator from \"./detailGenerator\";\nimport { useFormatCurrency } from \"../../../../hooks/useFormatCurrency\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport InProcessOrder from \"./inProcessOrder\";\nimport { IconClose } from \"../../../shared-styles\";\nimport GetInfoComponentToRender from './infoComponent'\n// import useKeyActionAsClick from '../../../../../hooks/useKeyActionAsClick'\nimport { UploadTextMiddle, UploadMiddle } from './inProcessOrder'\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nmoment.locale(\"es\");\n\nconst OrderSupervisor = () => {\n  const { actions, currentOrder } = UseTxState();\n  // const { isMovilViewport } = useViewport();\n\n  const cerrar = (e, forceClose) => {\n    if (e && (e.target.dataset.close_modal || forceClose)) {\n      actions.isAppLoading(false);\n      actions.renderModal(null);\n      // history.goBack()\n    }\n  };\n\n  // const idForCloseModal = useKeyActionAsClick(true, 'close-modal-button-orders', 27, true, 'onkeyup', true)\n\n  // useEffect(() => {\n  //   document.onkeyup = (event) => {\n  //     if (event.keyCode === 27) {\n  //       cerrar(event, true)\n  //       // event.preventDefault();\n  //     }\n  //   }\n  //\n  //   return () => {\n  //     document.onkeyup = false\n  //   }\n  // }, [document.onkeyup])\n\n  const closeAll = () => {\n    actions.renderModal(null);\n    return <div></div>;\n  };\n\n  if (!currentOrder || !currentOrder.state) {\n    actions.renderModal(null);\n    return <div></div>;\n  }\n\n  return (\n    <OtherModalLayout\n      id=\"close-button-with-OtherModalLayout\"\n      onkeydown={true}\n      on_click={cerrar}\n    >\n      {[\"accepted\", \"rejected\", \"canceled\"].includes(currentOrder.state) ? (\n        <OrderDetail />\n      ) : (\n        <InProcessOrder onErrorCatch={closeAll} />\n      )}\n    </OtherModalLayout>\n  );\n};\n\nexport default OrderSupervisor;\n\nexport const getState = (state) => {\n  return state === \"accepted\"\n    ? \"Aceptado\"\n    : state === \"confirmed\"\n    ? \"Confirmado\"\n    : state === \"pending\"\n    ? \"Pendiente\"\n    : state === \"rejected\"\n    ? \"Rechazado\"\n    : \"Cancelado\";\n};\n\nconst OrderDetail = () => {\n  // const actions = useActions();\n  const {\n    tx_path,\n    // currencies,\n    currentOrder,\n    // primary_path,\n    // history,\n  } = UseTxState();\n  // console.log(currentOrder, currentOrder.id, tx_path, primary_path)\n  const { isMovilViewport } = useViewport();\n\n\n  console.log('currentOrder', currentOrder)\n  // debugger\n\n  if (!currentOrder) {\n    return null;\n  }\n\n  const { state } = currentOrder;\n  const TitleText =\n    tx_path === \"deposits\"\n      ? \"Deposito\"\n      : tx_path === \"withdraws\"\n      ? \"Retiro\"\n      : tx_path === \"swaps\" && \"Intercambio\";\n\n  const textState =\n    state === \"accepted\"\n      ? \"Aceptado\"\n      : state === \"confirmed\"\n      ? \"Confirmado\"\n      : state === \"pending\"\n      ? \"Pendiente\"\n      : state === \"rejected\"\n      ? \"Rechazado\"\n      : \"Cancelado\";\n  const colorState =\n    state === \"accepted\"\n      ? \"#1cb179\"\n      : state === \"confirmed\"\n      ? \"#77b59d\"\n      : state === \"pending\"\n      ? \"#ff8660\"\n      : \"red\";\n\n      const ConsolidatedOrder = [\"accepted\", \"rejected\", \"canceled\"].includes(state)\n\n\n  return (\n    <Layout className={`layout3 ${(tx_path !== 'swaps' && (isMovilViewport && ConsolidatedOrder)) ? 'mobileInfoStyles' : ''}`} >\n      <IconClose theme=\"dark\" size={20} />\n\n      <TopSection state={currentOrder.state}>\n        <TitleContainer>\n          <OrderIcon className={`fa ${tx_path}`} />\n          <IconSwitch\n            className=\"TitleIconOrder\"\n            size={28}\n            icon={\n              (currentOrder.currency && currentOrder.currency.currency) || \"cop\"\n            }\n          />\n          <Title className=\"fuente\">{TitleText}</Title>\n          <DateTitle className=\"fuente2\">\n            Actualizado {moment(currentOrder.updated_at).format(\"LL\")}\n          </DateTitle>\n        </TitleContainer>\n\n        <CircleIconContainer>\n          <IconSwitch\n            size={isMovilViewport ? 25 : 45}\n            icon={state === \"accepted\" ? \"accepted2\" : state}\n            color={colorState}\n          />\n          <p className=\"fuente\" style={{ color: `${colorState}` }}>\n            {textState}\n          </p>\n        </CircleIconContainer>\n\n        <ContBackTopSection>\n          <BackTopSection />\n        </ContBackTopSection>\n      </TopSection>\n\n      <DetailGenerator\n        order={currentOrder}\n        title={`Detalle del ${TitleText}`}\n      />\n\n      <BottomSection colorState={colorState} />\n    </Layout>\n  );\n};\n\n\n\n\nexport const BottomSection = ({ colorState }) => {\n  const { currentOrder, tx_path, currencies } = UseTxState();\n  const [amount] = useFormatCurrency(\n    currentOrder.amount || currentOrder.bought,\n    currentOrder.currency\n  );\n  const { isMovilViewport } = useViewport();\n\n  // const textTotal =\n  //   tx_path === \"swaps\" && currentOrder.state === \"accepted\"\n  //     ? \"Saldo adquirido:\"\n  //     : currentOrder.state === \"accepted\"\n  //     ? \"Saldo acreditado:\"\n  //     : \"Saldo SIN acreditar:\";\n  const currency =\n    tx_path === \"swaps\"\n      ? currencies[currentOrder.to_buy_currency.currency]\n      : currencies[currentOrder.currency.currency];\n      \n  const InfoComponent = GetInfoComponentToRender({...currentOrder, tx_path})\n  const ConsolidatedOrder = [\"accepted\", \"rejected\", \"canceled\"].includes(currentOrder.state)\n\n  return (\n    <BottomSectionContainer>\n\n    <UploadMiddle className={`titleSection payment fuente ${tx_path}`}>\n       {/* Title gets from GetInfoComponentToRender */}\n      <UploadTextMiddle id=\"titleInfoComponent\" className={`titleSection ${ConsolidatedOrder ? 'consolidatedStyle' : ''}`}/>\n      <hr />\n    </UploadMiddle>\n\n\n      <Container consolidatedOrder={ConsolidatedOrder || ''} isMovilViewport={isMovilViewport || ''}>\n        <InfoComponent/>\n        <TotalAmount color={colorState} className={`${currentOrder.state}`}>\n          <p className=\"fuente saldo\">Cantidad</p>\n          <p className=\"fuente2 amount\">\n            {currentOrder.currency_type === \"fiat\" && \"$ \"}\n            {amount}{\" \"}\n            {currency && <span className=\"fuente\">{currency.code}</span>}\n          </p>\n        </TotalAmount>\n      </Container>\n    </BottomSectionContainer>\n  );\n};\n\nconst TotalAmount = styled.div`\n  width: auto;\n  height: 70px;\n  justify-self: end;\n  align-self: end;\n\n  &.rejected,\n  &.canceled {\n    .amount {\n      text-decoration: line-through;\n    }\n  }\n\n  p {\n    color: ${(props) => props.color};\n    margin: 0;\n    text-align: right;\n  }\n  & > p {\n    margin-bottom: 10px;\n  }\n  .amount {\n    font-size: 30px;\n    span {\n      font-size: 18px;\n    }\n  }\n  .saldo {\n    font-size: 16px;\n  }\n`;\n\nconst Container = styled.div`\n  width: ${props => !props.consolidatedOrder ? '100%' : 'calc(100% - 60px)'};\n  padding: ${props => !props.consolidatedOrder ? '0' : '0 30px'};\n  height: 100%;\n  display: grid;\n  grid-template-columns: ${props => props.isMovilViewport ? '1fr' : 'auto 1fr'};\n  grid-template-rows: ${props => props.isMovilViewport ? 'auto auto' : '1fr'};\n`;\n\n\n\nconst BottomSectionContainer = styled.section`\n  height: calc(200px - 40px);\n  width: 100%;\n  padding: 20px 0;\n  display: grid;\n  grid-template-rows: auto 1fr;\n  row-gap: 20px;\n`;\n\nconst TitleContainer = styled.div`\n  display: grid;\n  .TitleIconOrder {\n    grid-area: IconSwitch;\n  }\n  align-items: center;\n  column-gap: 15px;\n  row-gap: 4px;\n  align-self: center;\n  position: absolute;\n  left: 30px;\n  grid-template-columns: 25px 25px minmax(100px, 200px);\n  grid-template-areas:\n    \"OrderIcon IconSwitch Title\"\n    \"OrderIcon IconSwitch DateTitle\";\n`;\n\nconst DateTitle = styled.p`\n  font-size: 12px;\n  color: white;\n  grid-area: DateTitle;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  display: grid;\n  margin-left: 4px;\n`;\n\nconst Icon = styled.i``;\nconst OrderIcon = styled(Icon)`\n    margin-right: 10px;\n    font-size: 22px;\n    grid-area: OrderIcon;\n    color: white;\n    margin: 0;\n    display: grid !important;\n    justify-items: center;\n\n    &.swaps:before{\n       content: \"\\f079\";\n      }\n    }\n    &.withdraws:before{\n       content: \"\\f062\";\n      }\n    }\n    &.deposits:before{\n       content: \"\\f063\";\n      }\n    }\n\n  `;\n\nconst BackTopSection = styled.div`\n  width: 120%;\n  height: 120%;\n  position: absolute;\n  background-image: url(/static/media/back.fe9a1b62.png);\n  background-size: contain;\n  background-repeat: repeat;\n  background-position: right;\n  opacity: 0.05 !important;\n  animation: ${backTopSection};\n  animation-duration: 80s;\n  animation-iteration-count: infinite;\n  transform: scale(1.5);\n`;\n\nconst ContBackTopSection = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  overflow: hidden;\n`;\n\nconst CircleIconContainer = styled.div`\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  justify-self: end;\n  width: 90px;\n  height: 90px;\n  background: white;\n  border-radius: 50%;\n  align-self: flex-end;\n  position: relative;\n  transform: translate(-30px, 45px) !important;\n\n  p {\n    position: absolute;\n    margin: 0;\n    bottom: -3px;\n    font-size: 14px;\n    justify-self: center;\n  }\n\n  @media ${device.tablet} {\n    width: 60px;\n    height: 60px;\n    transform: translate(-20px, 45px) !important;\n    p {\n      bottom: -8px;\n    }\n  }\n`;\n\nconst Title = styled.h3`\n  text-align: left;\n  color: white;\n  margin: 0;\n  grid-area: Title;\n  font-size: 22px;\n  margin-left: 4px;\n`;\n\nconst TopSection = styled.section`\n  background: ${(props) =>\n    props.state ? orderStateColors[props.state] : \"gray\"};\n  width: 100%;\n  height: 100%;\n  display: grid;\n  position: relative;\n  border-top-right-radius: 6px;\n  border-top-left-radius: 6px;\n`;\n\nexport const Layout = styled.div`\n  width: 100%;\n  max-width: 550px;\n  height: auto;\n  min-height: 650px;\n  background: white;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  -webkit-transition: 0.3s;\n  transition: 0.3s;\n  border-radius: 11px;\n  position: relative;\n  grid-template-rows: 115px 1fr auto;\n\n  &.mobileInfoStyles{\n    grid-template-rows: 115px 1fr 300px;\n  }\n\n  -webkit-animation: ${swing_in_bottom_bck} 1s\n    cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n  animation: ${swing_in_bottom_bck} 1s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    both;\n`;\n","import React from \"react\";\nimport loadable from \"@loadable/component\";\nimport { ButtonSuccess } from \"../../../widgets/buttons/buttons\";\nimport useKeyActionAsClick from \"../../../../hooks/useKeyActionAsClick\";\nimport DetailGenerator from \"../../../widgets/modal/render/orderDetail/detailGenerator\";\nimport \"./finalTicket.css\";\n\nconst IconSwitch = loadable(() => import(\"../../../widgets/icons/iconSwitch\"));\n\nfunction FinalTicket(props) {\n  // const [current_ticket, setCurrentTicket] = useState(null);\n  const idCancelButton = useKeyActionAsClick(true, \"cancel-button-ticket\", 8, false, \"onkeyup\", true);\n  const idFinalizarButton = useKeyActionAsClick(true, \"finalizar-button-ticket\", 13,false, \"onkeyup\", true);\n\n  const {\n    finishAction,\n    cta_primary_label,\n    cta_secondary,\n    cta_secondary_label,\n    cta_secondary_action,\n    ticket,\n  } = props;\n\n  const atributos = {\n    icon: \"success\",\n    size: 75,\n    color: \"white\",\n  };\n\n  return (\n    <div className=\"finalTicket TicketDetail\">\n      <>\n        <div className=\"finalTicket ticketHeader\">\n          <IconSwitch {...atributos} />\n          <h1 className=\"fuente finalTicket TicketTitle\">Operación exitosa</h1>\n        </div>\n\n        <div className=\"finalTicket contenidoTicket\">\n          <DetailGenerator\n            title=\"Detalle del retiro\"\n            order={ticket}\n            theme=\"darkTheme\"\n          />\n        </div>\n\n        <div\n          className=\"nWcta2\"\n          style={{\n            gridTemplateColumns: cta_secondary ? \"repeat(2, 1fr)\" : \"1fr\",\n            width: cta_secondary ? \"400px\" : \"auto\",\n          }}\n        >\n          {cta_secondary && (\n            <ButtonSuccess\n              id={idCancelButton}\n              cta_secondary={true}\n              toggleModal={cta_secondary_action}\n            >\n              {cta_secondary_label ? cta_secondary_label : \"Cancelar\"}\n            </ButtonSuccess>\n          )}\n          <ButtonSuccess id={idFinalizarButton} toggleModal={finishAction}>\n            {cta_primary_label ? cta_primary_label : \"Finalizar\"}\n          </ButtonSuccess>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default FinalTicket;\n\n// const ItemTicket = (payload) => {\n//   const { ui_name, value, icon } = payload;\n//\n//   return (\n//     <div className=\"TicketDetailItem\">\n//       <p className=\"fuente TicketItemTitle\">{ui_name}</p>\n//       <span className=\"fuentePrin fuenteTicket\">\n//         {value}\n//         {icon && <IconSwitch icon={icon} size={20} color=\"white\" />}\n//       </span>\n//     </div>\n//   );\n// };\n"],"sourceRoot":""}