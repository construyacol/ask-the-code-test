{"version":3,"sources":["components/forms/widgets/newWallet/index.js","components/forms/widgets/newWallet/styles.js","components/forms/widgets/newWallet/skeleton.js","components/forms/widgets/newWallet/tagItem.js","components/widgets/items/itemLayout.js"],"names":["NewWalletComponent","handleState","handleDataForm","dataForm","props","actions","useActions","availableCurrencies","useAvailableWalletCreator","searchList","setSearchList","useState","matchItem","setMatchItem","loader","setLoader","value","setValue","coinsendaServices","useCoinsendaServices","toastMessage","useToastMessage","idSubmitButton","useKeyActionAsClick","selectItem","query","uniqueMatch","filter","currency","toLowerCase","searchMatch","loadDefaultState","document","querySelector","length","matches","includes","useEffect","console","log","className","autoFocus","type","placeholder","name","handleChange","inputName","label","state","AuxComponent","item","deleteTag","map","index","actualizarEstado","key","actives","id","formValidate","handleAction","async","newWallet","createWallet","capitalizeWord","getWalletsByUser","account","createAndInsertDepositProvider","msg","success_sound","renderModal","history","push","Title","styled","h1","OnlySkeletonAnimation","Option","div","ButtonContainer","ListContainer","device","tablet","Content","mobile","Layout","section","WalletSkeleton","skeleton","TagItem","TagBlocker","TagContainer","LabelTextCont","DeleteButton","onClick","size","color","Address","p","AddressContainer","IconSwitch","loadable","ItemLayout","doSelectionForItem","code","currency_type","pair_id","primarySelect","format","itemType","icon","title","src","getCdnPath","alt","width"],"mappings":"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","file":"static/js/13.f638305c.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useActions } from '../../../../hooks/useActions'\nimport InputForm from \"../../../widgets/inputs/inputForm\";\nimport ControlButton from \"../../../widgets/buttons/controlButton\";\nimport useAvailableWalletCreator from \"../../../hooks/useAvailableWalletCreator\";\nimport ItemLayout from \"../../../widgets/items/itemLayout\";\nimport useKeyActionAsClick from '../../../../hooks/useKeyActionAsClick';\n// import { useSelector } from \"react-redux\";\nimport { useCoinsendaServices } from \"../../../../services/useCoinsendaServices\";\nimport useToastMessage from \"../../../../hooks/useToastMessage\";\nimport TagItem from './tagItem'\nimport WalletSkeleton from './skeleton'\nimport { history } from '../../../../const/const'\nimport { capitalizeWord } from '../../../../utils'\n\n\nimport {\n  ListContainer,\n  ButtonContainer\n} from './styles'\n\n\n// import loadable from '@loadable/component'\n\n// const DynamicLoadComponent = loadable(() => import('../../dynamicLoadComponent'))\n\nconst NewWalletComponent = ({ handleState, handleDataForm:{ dataForm }, ...props }) => {\n\n \n  // const {\n  //   finalStage,\n  //   nextStage,\n  //   prevStage,\n  //   stageData,\n  //   currentStage\n  //   // stageStatus,\n  //   // setStageStatus\n  // } = stageManager\n\n\n  const actions = useActions();\n  const [ availableCurrencies ] = useAvailableWalletCreator();\n  const [ searchList, setSearchList ] = useState()\n  const [ matchItem, setMatchItem ] = useState(null)\n  const [ loader, setLoader ] = useState(null)\n  const [ value, setValue ] = useState(\"\")\n  const [coinsendaServices] = useCoinsendaServices();\n  const [toastMessage] = useToastMessage();\n\n  const idSubmitButton = useKeyActionAsClick(\n      true,\n      \"next-stage-kyc\",\n      13,\n      false,\n      \"onkeypress\",\n      true\n    );\n  \n\n\n  const selectItem = (query) => {\n      // applys uniqueMatch when there are 2 or more currencies with the same nomenclature for example: bitcoin - bitcoin_testnet, matched over the currency clicked\n      const uniqueMatch = availableCurrencies.filter(currency => currency.currency.toLowerCase() === query);\n      searchMatch(query?.toLowerCase(), uniqueMatch)\n  }\n\n  const handleChange = (inputName, query) => {\n      searchMatch(query?.toLowerCase()) \n  }\n\n  const loadDefaultState = () => {\n      setMatchItem(null)\n      setSearchList(availableCurrencies)\n      setValue(\"\")\n      document.querySelector(\"[name='walletCurrency']\").value = \"\"\n  }\n\n  const searchMatch = (query, uniqueMatch) => {\n      if(!searchList?.length) return;\n      setValue(query)\n      const matches = uniqueMatch || (query && availableCurrencies.filter(currency => currency.currency.toLowerCase().includes(query)));\n      matches?.length === 1 ? setMatchItem(matches[0]) : setMatchItem(null);\n      if(!matches?.length)return setSearchList(availableCurrencies);\n      setSearchList(matches)\n  }\n\n  const createWallet = async () => {\n\n      setLoader(true)\n      const newWallet = await coinsendaServices.createWallet({...matchItem, currency:capitalizeWord(matchItem?.currency)});\n      if (!newWallet) {\n        setLoader(false)\n        return toastMessage(\"Error al crear la billetera...\", \"error\");\n      }\n      await coinsendaServices.getWalletsByUser();\n      const { account } = newWallet;\n      const dep_prov = await coinsendaServices.createAndInsertDepositProvider(account);\n\n\n\n      if (!dep_prov) {\n        setLoader(false)\n        return toastMessage(\"Error al crear el proveedor de deposito de la billetera...\", \"error\");\n      }\n      let msg = `Nueva wallet ${account?.currency?.currency} creada!`;\n      toastMessage(msg, \"success\");\n      actions.success_sound();\n      actions.renderModal(null);\n      setLoader(false)\n      return history.push(`/wallets/deposit/${account.id}`);\n  };\n\n\n  useEffect(() => {\n      if(availableCurrencies && !loader){\n          console.log(availableCurrencies)\n          setSearchList(availableCurrencies)\n      }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [availableCurrencies])\n\n\n  return(\n        <>\n                {\n                  searchList?.length ? \n                    <>\n                        <h1 className=\"fuente\">Crea una billetera</h1>\n                        <InputForm \n                            autoFocus\n                            type=\"text\" \n                            placeholder={`Ej: Litecoin`}\n                            name=\"walletCurrency\"\n                            value={value}\n                            handleChange={handleChange}\n                            label={`Elige la moneda de la billetera que deseas crear`}\n                            state={matchItem ? 'good' : 'other'}\n                            AuxComponent={[\n                                () => (<TagItem item={matchItem} deleteTag={loadDefaultState}/>)\n                            ]}\n                        />\n                        <ListContainer>\n                            {\n                                searchList?.length && searchList.map((item, index) => {\n                                    return <ItemLayout\n                                                actualizarEstado={selectItem}\n                                                {...item}\n                                                key={index}\n                                                className=\"itemSelection\"\n                                                actives={matchItem}\n                                            />\n                                })\n                            }\n                        </ListContainer>\n\n                        <ButtonContainer>\n                            <ControlButton\n                                id={idSubmitButton}\n                                loader={loader}\n                                formValidate={matchItem}\n                                label=\"Crear\"\n                                handleAction={createWallet}\n                            />\n                        </ButtonContainer>\n                    </>\n                    :\n                    <WalletSkeleton/>\n                }   \n         </>                 \n  )\n\n}\n\nexport default NewWalletComponent\n\n","import styled from 'styled-components'\nimport { device } from \"../../../../const/const\"\nimport { OnlySkeletonAnimation } from '../../../widgets/loaders/skeleton'\n\n\nexport const Title = styled.h1`\n    &.skeleton{\n        position:relative;\n        color:transparent;\n        display: flex;\n        justify-content: center;\n        ${OnlySkeletonAnimation}\n    }\n    &.skeleton::after{\n        content:\"Crea una billetera\";\n        position:absolute;\n        color:#bfbfbf;\n        background:#bfbfbf;\n        border-radius:4px;\n    }\n`\n\nexport const Option = styled.div`\n  height: 142px;\n  width: 172px;\n  border: 1px solid #bfbfbf;\n  position: relative;\n  border-radius: 6px;\n  display: grid;\n\n  &::after{\n    position: absolute;\n    content: \"\";\n    width: 50px;\n    height: 45px;\n    background: #bfbfbf;\n    align-self: center;\n    justify-self: center;\n    border-radius: 5px;\n    margin-bottom: 40px;\n  }\n\n  &::before{\n    position: absolute;\n    content: \"\";\n    width: 100px;\n    height: 15px;\n    background: #bfbfbf;\n    border-radius: 3px;\n    justify-self: center;\n    align-self:flex-end;\n    margin-bottom: 15px;\n  }\n`\n\nexport const ButtonContainer = styled.div`\n    height:80px;\n    display: flex;\n    place-content: center;\n`\n\nexport const ListContainer = styled.div`\n    display: grid;\n    overflow-y: scroll;\n    grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\n    grid-template-rows: repeat(auto-fill, 150px);\n    column-gap: 15px;\n    row-gap: 15px;\n    padding:25px 0;\n    height:calc(100% - 50px);\n\n    &.skeleton{\n        ${Option}{\n            ${OnlySkeletonAnimation}\n        }\n    }\n\n    &::-webkit-scrollbar {\n        width: 7px;\n    }\n\n    &::-webkit-scrollbar-thumb {\n        background: #475a681f;\n    }\n\n    .__itemContainerL__ .item:hover{\n        transform: scale(1) !important;\n    }\n\n    @media ${device.tablet} {\n\n        padding:25px 0;\n\n\n        .__itemContainerL__{\n            display: grid;\n            justify-items: center;\n        }\n\n        .__itemContainerL__ .item, ${Option}{\n            width:160px;\n            height:140px;\n        }\n        \n    }\n`\n\nexport const Content = styled.div`\n\n    max-width:580px;\n    height: calc(100% - 50px);\n    width: calc(100% - 50px);\n    padding: 25px;\n    display:grid;\n    grid-template-rows:auto auto 1fr auto;\n    row-gap:20px;\n\n    h1{\n        color:var(--title1);\n        font-size:1.5em;\n        text-align:center;\n    }\n\n    @media ${device.mobile} {\n        h1{\n           margin-bottom:0;\n        }\n        height: calc(100% - 70px);\n        width: calc(100% - 40px);\n        padding: 20px 20px 50px;\n    }\n\n`\n\nexport const Layout = styled.section`\n    width:100vw;\n    height:100vh;\n    background:white;\n    display:flex;\n    background:white;\n    position:absolute;\n    top:0;\n    left:0;\n    display: flex;\n    place-content: center;\n`\n\n","import InputForm from \"../../../widgets/inputs/inputForm\";\nimport {\n  ListContainer,\n  Option,\n  Title\n} from './styles'\n\n\nconst WalletSkeleton = props => {\n\n  return(\n      <>\n          <Title className=\"fuente skeleton\">Crea una billetera</Title>\n          <InputForm skeleton />\n          <ListContainer className=\"skeleton\">\n              <Option/>\n              <Option/>\n        </ListContainer>\n      </>\n  )\n\n}\n\nexport default WalletSkeleton\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nconst TagItem = ({ item, deleteTag }) => {\n  // console.log('||||||||||||||||||||| item : ', item)\n  // debugger\n\n  if (!item) {\n    return null;\n  }\n\n  return (\n    <>\n      <TagBlocker />\n      <TagContainer id=\"tagAddress\">\n        <LabelTextCont>\n          <p className=\"fuente label_\">{item?.currency}</p>\n        </LabelTextCont>\n        <DeleteButton onClick={deleteTag}>\n          <AiOutlineClose size={16} color=\"white\" />\n        </DeleteButton>\n      </TagContainer>\n    </>\n  );\n};\n\nexport default TagItem;\n\nconst DeleteButton = styled.div`\n  width: 18px;\n  height: 18px;\n  background: gray;\n  justify-self: center;\n  border-radius: 3px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: 0.15s;\n  transform: scale(1);\n  cursor: pointer;\n  position: relative;\n  top: 6px;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Address = styled.p`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  font-size: 13px;\n`;\n\nexport const AddressContainer = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 200px;\n  cursor: pointer;\n\n  &::after {\n    transition: 0.15s;\n    content: attr(data-final-address);\n    position: absolute;\n    right: -75px;\n    top: 0;\n    color: #505050;\n    font-size: 13px;\n    line-height: 30px;\n    opacity: 0;\n  }\n\n  @media (max-width: 768px) {\n    max-width: 100px;\n  }\n`;\n\nconst LabelTextCont = styled.div`\n  height: 60px;\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  position: relative;\n  transition: 0.3s;\n  top: 0;\n\n  p {\n    line-height: 30px;\n    transition: 0.15s;\n  }\n\n  .address_ {\n    opacity: 0;\n    font-size: 13px;\n  }\n`;\n\nconst TagContainer = styled.div`\n  overflow: hidden;\n  position: absolute;\n  bottom: 9px;\n  left: 12px;\n  height: 30px;\n  background: #d8d8d8;\n  border-radius: 4px;\n  display: grid;\n  width: auto;\n  grid-template-columns: minmax(210px, 275px) 38px;\n  cursor: pointer;\n\n  @media (max-width: 768px) {\n    grid-template-columns: minmax(90px, 180px) 38px;\n  }\n\n  ${'' /* &:hover {\n    ${LabelTextCont} {\n      top: -30px;\n      .label_ {\n        opacity: 0;\n      }\n\n      .address_,\n      ${AddressContainer}::after {\n        opacity: 1;\n      }\n    }\n  } */}\n\n  &.disappear {\n    transform: translateY(10px);\n    opacity: 0;\n  }\n\n  &.appear {\n    transform: translateY(0);\n    opacity: 1;\n  }\n\n  p {\n    margin: 0;\n    padding-left: 15px;\n    color: #505050;\n  }\n`;\n\nconst TagBlocker = styled.section`\n  content: \"\";\n  position: absolute;\n  bottom: 5px;\n  width: calc(100% - 2px);\n  height: 40px;\n  left: 2px;\n  ${\"\" /* background: rgb(255 255 255 / 51%); */}\n  background: linear-gradient(to right, rgb(255 255 255), rgb(255 255 255), transparent);\n  backdrop-filter: blur(1px);\n`;\n","import React, { useEffect } from \"react\";\nimport loadable from \"@loadable/component\";\nimport { getCdnPath } from '../../../environment'\nimport \"./items.css\";\n\nconst IconSwitch = loadable(() => import(\"../icons/iconSwitch\"));\n\nfunction ItemLayout(props) {\n  const doSelectionForItem = () => {\n    const { name, code, currency_type, pair_id, actualizarEstado } = props;\n\n    actualizarEstado && actualizarEstado(name, code, currency_type, pair_id);\n  };\n\n  useEffect(() => {\n    props.actives && doSelectionForItem();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.actives]);\n\n  const {\n    type,\n    actives,\n    name,\n    code,\n    placeholder,\n    primarySelect,\n    format,\n    itemType,\n  } = props;\n\n  // console.log('|||||||||||||||  ItemLayout ==> ', type)\n\n  return (\n    <div\n      id={`${primarySelect ? \"primarySelect\" : \"\"}`}\n      className={`${type === \"payment_method\" ? \"ILtuvieja\" : \"\"} __itemContainerL__`}\n    >\n      <div\n        className={`item ${actives ? \"itemSelection\" : \"\"}`}\n        onClick={!actives || itemType === \"banks\" ? doSelectionForItem : null}\n      >\n        {!format ? (\n          type === \"coins\" ||\n          type === \"payment_method\" ||\n          type === \"service_mode\" ? (\n            actives ? (\n              <div title={name} id={code}>\n                {type === \"bank\" && (\n                  <img\n                    className=\"itemSobre activaos\"\n                    src={`${getCdnPath('assets')}coins/${code}.png`}\n                    alt=\"\"\n                    width=\"60\"\n                  />\n                )}\n                <img\n                  className=\"itemSobre activaos\"\n                  src={`${getCdnPath('assets')}${type}/${code}2.png`}\n                  alt=\"\"\n                  width=\"60\"\n                />\n              </div>\n            ) : (\n              <div title={name} id={code}>\n                <img\n                  className=\"itemFuera\"\n                  src={`${getCdnPath('assets')}${type}/${code}.png`}\n                  width=\"60\"\n                  alt=\"\"\n                  id={code}\n                  title={name}\n                />\n                <img\n                  className=\"itemSobre\"\n                  src={`${getCdnPath('assets')}${type}/${code}2.png`}\n                  width=\"60\"\n                  alt=\"\"\n                  id={code}\n                  title={name}\n                />\n              </div>\n            )\n          ) : (\n            <img\n              className={`banquis ${actives ? \"itemVisible\" : \"\"}`}\n              src={`${getCdnPath('assets')}${type}/${code}.png`}\n              alt=\"\"\n              id={code}\n              title={name}\n              width=\"85\"\n            />\n          )\n        ) : (\n          <IconSwitch icon={code} size={45} />\n        )}\n        {primarySelect ? (\n          <div id=\"primarySelectText\" className=\"primarySelectText\">\n            <p title={name}>{name}</p>\n            {placeholder &&\n              placeholder.map((item) => {\n                return (\n                  <p id=\"ILplaceholder2\" className=\"fuente\" key={item.id}>\n                    {item.name}\n                  </p>\n                );\n              })}\n          </div>\n        ) : (\n          <p title={name}>{name}</p>\n        )}\n      </div>\n      {placeholder && !primarySelect && (\n        <div className=\"placeHoldCont\">\n          {placeholder.map((item) => {\n            return (\n              <p className=\"ILplaceholder fuente\" key={item.id}>\n                {item.name}\n              </p>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ItemLayout;\n"],"sourceRoot":""}