{"version":3,"sources":["components/widgets/video_player/videoPlayer.js"],"names":["VideoPlayer","state","isFull","goFull","_this","setState","minimize","_this2","this","video","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","style","display","play","onClick","action","default_video_state","react_full_screen__WEBPACK_IMPORTED_MODULE_10___default","enabled","onChange","react_player_lib_players_YouTube__WEBPACK_IMPORTED_MODULE_6___default","ref","id","width","height","url","playing","controls","onStart","onPause","onEnded","Component","connect","user","modelData","_state$ui","ui","videos","verification_state","dispatch","bindActionCreators","actions"],"mappings":"gPASMA,qNAKJC,MAAQ,CACNC,QAAQ,KAGVC,OAAS,WACPC,EAAKC,SAAS,CAAEH,QAAQ,OAG1BI,SAAW,WACTF,EAAKC,SAAS,CAAEH,QAAQ,6HAGjB,IAAAK,EAAAC,KACCC,EAAUD,KAAKE,MAAfD,MACAP,EAAWM,KAAKP,MAAhBC,OAER,OACES,EAAAC,EAAAC,cAAA,OACEC,UAAU,cACVC,MAAO,CAAEC,QAASP,GAASA,EAAMQ,KAAO,QAAU,SAEjDR,GAASA,EAAMQ,MACdN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,oBACVI,QAASV,KAAKE,MAAMS,OAAOC,qBAE3BT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAGfH,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CACEU,QAASpB,EACTqB,SAAU,SAACrB,GAAD,OAAYK,EAAKF,SAAS,CAAEH,aAEtCS,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CACEa,IAAI,SACJC,GAAG,QACHC,MAAM,OACNC,OAAO,OACPC,IAAKpB,EAAMoB,IACXC,QAASrB,EAAMQ,KACfc,UAAQ,EACRC,QAASxB,KAAKL,OAEd8B,QAASzB,KAAKF,SACd4B,QAAS1B,KAAKE,MAAMS,OAAOC,gCAlDjBe,cAiFXC,sBArBf,SAAyBnC,EAAOS,GAAO,IAC7B2B,EAASpC,EAAMqC,UAAfD,KAD6BE,EAEEtC,EAAMuC,GAArCC,EAF6BF,EAE7BE,OAAQC,EAFqBH,EAErBG,mBAMhB,MAAO,CACLL,KAAMA,EACN5B,MAAOgC,EANgB,aAAvBC,GAAsCA,EAEX,YAAvBA,GAAoC,eADpC,aAMJA,uBAIJ,SAA4BC,GAC1B,MAAO,CACLxB,OAAQyB,6BAAmBC,IAASF,KAIzBP,CAA6CpC","file":"static/js/45.10eaef92.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n// import ReactPlayer from 'react-player'\nimport YouTubePlayer from \"react-player/lib/players/YouTube\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport actions from \"../../../actions\";\nimport Fullscreen from \"react-full-screen\";\nimport \"./videoPlayer.css\";\n\nclass VideoPlayer extends Component {\n  componentWillUnmount() {\n    // YouTubePlayer.removeCustomPlayers()\n  }\n\n  state = {\n    isFull: false,\n  };\n\n  goFull = () => {\n    this.setState({ isFull: true });\n  };\n\n  minimize = () => {\n    this.setState({ isFull: false });\n  };\n\n  render() {\n    const { video } = this.props;\n    const { isFull } = this.state;\n\n    return (\n      <div\n        className=\"VideoPlayer\"\n        style={{ display: video && video.play ? \"block\" : \"none\" }}\n      >\n        {video && video.play && (\n          <div className=\"videoPlayerContainer\">\n            <div\n              className=\"closeButtonPlayer\"\n              onClick={this.props.action.default_video_state}\n            >\n              <i className=\"far fa-times-circle\"></i>\n            </div>\n\n            <Fullscreen\n              enabled={isFull}\n              onChange={(isFull) => this.setState({ isFull })}\n            >\n              <YouTubePlayer\n                ref=\"player\"\n                id=\"putis\"\n                width=\"100%\"\n                height=\"100%\"\n                url={video.url}\n                playing={video.play}\n                controls\n                onStart={this.goFull}\n                // onPlay={this.goFull}\n                onPause={this.minimize}\n                onEnded={this.props.action.default_video_state}\n              />\n            </Fullscreen>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  const { user } = state.modelData;\n  const { videos, verification_state } = state.ui;\n  let verification_video =\n    verification_state === \"rejected\" || !verification_state\n      ? \"kyc_basic\"\n      : verification_state === \"pending\" && \"kyc_advanced\";\n\n  return {\n    user: user,\n    video: videos[verification_video],\n    verification_state,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoPlayer);\n"],"sourceRoot":""}