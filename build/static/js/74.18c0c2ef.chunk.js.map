{"version":3,"sources":["components/forms/widgets/personalKycComponent/styles.js","components/forms/widgets/personalKycComponent/labelComponent.js"],"names":["IconButtonContainer","styled","div","props","disabled","width","IconBackContainer","IconNextContainer","ButtonModule","Button","button","LabelContainer","StickyGroup","background","TitleContainer","rotate","keyframes","MainContainer","ButtonContainer","Layout","LabelText","p","PrefixContainer","InputContainer","form","inputStatus","PRIMARY_COLOR","Titles","height","position","TitleLabelContainer","LabelComponent","children","currentStage","stages","stageController","className","length","map","stageId","keyId","settings","label","uiName","React","memo"],"mappings":"y2BAIA,MAAMA,EAAsBC,IAAOC,IAAV,gQAKdC,GAASA,EAAMC,SAAW,MAASD,EAAME,OAAS,SAC5CF,GAASA,EAAMC,SAAW,IAAM,QAYpCE,EAAoBL,YAAOD,EAAPC,CAAH,kDAIjBM,EAAoBN,YAAOD,EAAPC,CAAH,8JAWjBO,EAAeP,IAAOC,IAAV,8DAKZO,EAASR,IAAOS,OAAV,+CAINC,EAAiBV,IAAOC,IAAV,gJAQdU,EAAcX,IAAOC,IAAV,uMAITC,GAASA,EAAMU,WAAaV,EAAMU,WAAa,gBAWjDC,EAAiBb,IAAOC,IAAV,wdAwBrBa,EAASC,YAAH,6HAcCC,EAAgBhB,IAAOC,IAAV,wPAUTa,GAKJG,EAAkBjB,IAAOC,IAAV,sGAMfiB,EAASlB,IAAOC,IAAV,sNAaNkB,EAAYnB,IAAOoB,EAAV,obAwBTC,EAAkBrB,IAAOC,IAAV,6DAKfqB,EAAiBtB,IAAOuB,KAAV,o2BAILrB,GAA+B,YAAtBA,EAAMsB,YAA4BC,IAAgB,yBAgDpEC,EAAS1B,IAAOC,IAAV,kRAERC,GAASA,EAAMyB,OAAN,UAA+B,IAAbzB,EAAMyB,OAAxB,KAAwC,SAKpDzB,GAASA,EAAM0B,SAAN,WAAoC,IAAf1B,EAAM0B,SAA3B,KAA6C,OAYjDC,EAAsB7B,IAAOC,IAAV,m3B,iCCjPhC,2CAQA,MAAM6B,EAAiB,QAAC,SAAEC,EAAF,aAAYC,EAAZ,OAA0BC,EAA1B,gBAAkCC,GAAnC,SAEnB,eAAC,iBAAD,CAAgBC,UAAU,SAA1B,UACGJ,EACD,cAAC,sBAAD,UACE,cAAC,SAAD,CAAQJ,OAAQO,EAAgBE,OAAQR,SAAUI,EAAlD,SAEME,EAAgBG,KAAI,CAACC,EAASC,KAAW,IAAD,IACtC,OAAO,6BAAiB,UAAAN,EAAOK,UAAP,mBAAiBE,gBAAjB,eAA2BC,QAASR,EAAOK,GAASI,QAA7DH,cAQhBI,cAAMC,KAAKd","file":"static/js/74.18c0c2ef.chunk.js","sourcesContent":["import styled, { keyframes } from 'styled-components'\nimport { PRIMARY_COLOR } from '../../const'\n\n\nconst IconButtonContainer = styled.div`\n  display:grid;\n  align-items:center;\n  height:100%;\n  cursor:pointer;\n  width: ${props => props.disabled ? '0px' : (props.width || 'auto')};\n  margin-right:${props => props.disabled ? '0' : '7px'};\n  overflow: hidden;\n\n  &::after{\n    content:'';\n    position:absolute;\n    width:100%;\n    height:100%;\n  }\n`\n\n\nexport const IconBackContainer = styled(IconButtonContainer)`\n  position:relative;\n`\n\nexport const IconNextContainer = styled(IconButtonContainer)`\n  position:absolute;\n  right:0;\n  align-self:center;\n  justify-items:center;\n  z-index:1;\n  svg{\n    stroke-width: 3;\n  }\n`\n\nexport const ButtonModule = styled.div `\n  width:auto;\n  transition:.3s;\n`\n\nexport const Button = styled.button`\n  cursor:pointer;\n`\n\nexport const LabelContainer = styled.div`\n  font-size: 20px;\n  margin-bottom: 0px;\n  position:relative;\n  display:flex;\n  color: var(--paragraph_color);\n`\n\nexport const StickyGroup = styled.div`\n  display: grid;\n  padding: 0 10px;\n  top: 0px;\n  background:${props => props.background ? props.background : 'transparent'};\n  height: fit-content;\n  align-self: center;\n\n  h1{\n    position: absolute;\n    top: 0;\n  }\n\n`\n\nexport const TitleContainer = styled.div`\n  width: 100%;\n  max-height: 150px;\n  display: grid;\n  grid-template-columns:1fr;\n  grid-template-rows: 1fr;\n  .titleContainer__h1{\n    margin: 50px 0 80px;\n    text-align: center;\n    font-size: 35px;\n    color: var(--title1);\n    font-weight: 400;\n  }\n\n  &.skeleton h1{\n    background:#d1d4d7;\n    width: fit-content;\n    height: fit-content;\n    color: transparent;\n    border-radius: 4px;\n    justify-self: center;\n  }\n`\n\nconst rotate = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  50%{\n    opacity: .5;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\n\nexport const MainContainer = styled.div`\n  display: grid;\n  max-width: 650px;\n  width: 100%;\n  justify-self:center;\n  align-self: center;\n  grid-template-rows: auto 1fr auto;\n  height: 100%;\n\n  .skeleton{\n    animation: ${rotate} .7s linear infinite;\n  }\n\n`\n\nexport const ButtonContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 15px;\n`\n\nexport const Layout = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  left: 0;\n  width: 500px;\n  height: 200px;\n  margin: auto;\n  margin-top: 50px;\n  display: grid;\n  grid-template-columns: auto 1fr;\n`\n\nexport const LabelText = styled.p`\n  position: absolute;\n  bottom: -30px;\n  margin: 0;\n  font-size: 14px;\n  color: var(--paragraph_color);\n\n  &.skeleton{\n    background:#d1d4d7;\n    width: fit-content;\n    height: fit-content;\n    color: transparent;\n    border-radius: 4px;\n  }\n\n  @media (max-width: 400px) {\n    &.label___message{\n      bottom: -45px !important;\n      display:grid;\n      Padding-right: 30px;\n    }\n  }\n`\n\nexport const PrefixContainer = styled.div`\n  height: 100%;\n  width: auto;\n`\n\nexport const InputContainer = styled.form`\n  margin:15px 0 60px;\n  width: 100%;\n  height: 63px;\n  border: 1px solid ${props => props.inputStatus === 'success' ? PRIMARY_COLOR : 'rgba(80,102,122,.38)'};\n  border-radius: 6px;\n  display: grid;\n  position: relative;\n  background: white;\n  padding: 1px;\n  transition:.01s;\n\n  &._progress_bar{\n    grid-template-rows:1fr auto;\n  }\n\n  input{\n    border-color: transparent;\n    outline: none;\n    padding: 0 10px;\n    font-size: 19px;\n    width:calc(97% - 20px);\n    &.success{\n      color: #005000;\n    }\n  }\n\n  input[name=\"birthday\"].date_success{\n    padding: 0 25px 0 10px;\n    width: calc(97% - 35px);\n    transition: .15s;\n  }\n\n\n  &.skeleton {\n    align-items: center;\n    input{\n      background:#d1d4d7;\n      width: fit-content;\n      height: 17px;\n      color: transparent;\n      border-radius: 4px;\n      justify-align:center;\n      margin-left:20px;\n    }\n  }\n  \n`\n\n\n\n\nexport const Titles = styled.div`\n  width:90%;\n  height:${props => props.height ? `${props.height*100}%` : '100%'};\n  display:grid;\n  grid-template-rows:repeat(auto-fill, 1fr);\n  position:relative;\n  transition:.3s;\n  top:${props => props.position ? `-${props.position*100}%` : '0%'};\n\n\n  p{\n    margin:0;\n    display:flex;\n    align-items:center;\n    width: max-content;\n  }\n\n`\n\nexport const TitleLabelContainer = styled.div`\n  width:100%;\n  height:35px;\n  display:flex;\n  overflow:hidden;\n  position:relative;\n\n  &::after{\n    content:'';\n    pointer-events: none;\n    height:10px;\n    width:100%;\n    position:absolute;\n    z-index:2;\n    background: rgb(255,255,255);\n    background: linear-gradient(180deg, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 100%);\n  }\n\n  &::before{\n    content:'';\n    pointer-events: none;\n    background:red;\n    height:10px;\n    width:100%;\n    position:absolute;\n    bottom:0;\n    z-index:2;\n    background: rgb(255,255,255);\n    background: linear-gradient(0deg, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 100%);\n  }\n\n\n  &.skeleton{\n    background:#d1d4d7;\n    width: fit-content;\n    height: 27px;\n    color: transparent;\n    border-radius: 4px;\n    &::before, &::after{\n      content:none;\n    }\n  }\n`","import React from 'react'\nimport { \n  LabelContainer,\n  TitleLabelContainer,\n  Titles\n} from './styles'\n\n\nconst LabelComponent = ({ children, currentStage, stages, stageController }) => (\n  \n    <LabelContainer className=\"fuente\">\n      {children}\n      <TitleLabelContainer>\n        <Titles height={stageController.length} position={currentStage}>\n            {\n              stageController.map((stageId, keyId) => {\n                return <p key={keyId} >{stages[stageId]?.settings?.label || stages[stageId].uiName}</p>\n              })\n            }\n        </Titles>\n      </TitleLabelContainer>\n    </LabelContainer>\n)\n\nexport default React.memo(LabelComponent)\n"],"sourceRoot":""}