{"version":3,"sources":["components/wallets/views/depositFiat.js","components/wallets/views/deposit.js"],"names":["DepositForm","styled","OperationForm","_templateObject","DepositFiat","props","movil_viewport","window","innerWidth","idForMainButton","useKeyActionAsClick","_useCoinsendaServices","useCoinsendaServices","_useCoinsendaServices2","Object","slicedToArray","_useCoinsendaServices3","current_wallet","params","ui","current_section","deposit_providers","modelData","_useCoinsendaServices4","toggleModal","FiatDeposit","dispatch","atributos","icon","size","color","useEffect","currency","fiat_deposit","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","e","wrap","_context","prev","next","stop","_x","apply","this","arguments","react_default","createElement","className","iconSwitch","active_trade_operation","controlButton","id","handleAction","loader","formValidate","label","DepositView","Fragment","currency_type","depositCripto","depositFiat"],"mappings":"qZAQA,IAoEMA,EAAcC,YAAOC,IAAPD,CAAHE,KAOFC,EA3EK,SAACC,GACnB,IAAMC,EAAiBC,OAAOC,WAAa,IACrCC,EAAkBC,aACtB,EACA,sBACA,IACA,EACA,WAP2BC,EAoBzBC,cApByBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAAK,EAAAH,EAAA,GAYzBI,EAZyBD,EAYzBC,eAEqBC,EAdIF,EAazBG,GACEC,gBAAmBF,OAERG,EAhBYL,EAgBzBM,UAAaD,kBAhBYE,EAAAV,EAAA,GAkBzBW,EAlByBD,EAkBzBC,YAAaC,EAlBYF,EAkBZE,YACfC,EAnB2Bb,EAAA,GAsBvBc,EAAY,CAChBC,KAAM,UACNC,KAAMvB,EAAiB,GAAK,IAC5BwB,MAAO,WAGTC,oBAAU,WACRL,EAASD,EAAYR,EAAee,SAASA,UAAY,SACxD,IAEH,IAAMC,EAAY,eAAAC,EAAApB,OAAAqB,EAAA,EAAArB,CAAAsB,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACblB,EAASD,EAAYR,EAAee,SAASA,UAAY,QAD5C,OAEnBN,EAASF,KAFU,wBAAAkB,EAAAG,SAAAN,MAAH,gBAAAO,GAAA,OAAAZ,EAAAa,MAAAC,KAAAC,YAAA,GAKlB,OACEC,EAAAb,EAAAc,cAACnD,EAAD,CAAaoD,UAAU,8BACrBF,EAAAb,EAAAc,cAAA,OAAKC,UAAU,mBACbF,EAAAb,EAAAc,cAACE,EAAA,QAAe1B,IAGlBuB,EAAAb,EAAAc,cAAA,OAAKC,UAAU,uBACZlC,EAAOoC,uBACNJ,EAAAb,EAAAc,cAAA,KAAGC,UAAU,iCAAb,uFAKAF,EAAAb,EAAAc,cAAA,KAAGC,UAAU,UAAb,mFAOJF,EAAAb,EAAAc,cAACI,EAAA,EAAD,CACEC,GAAI/C,EACJgD,aAAcxB,EACdyB,QAASrC,EACTsC,cAAY,EACZC,MAAM,2BCnDCC,UAdK,WAAM,IAAAlD,EACOC,cAApBK,EADaH,OAAAC,EAAA,EAAAD,CAAAH,EAAA,MACbM,eAEX,OACEiC,EAAAb,EAAAc,cAAAD,EAAAb,EAAAyB,SAAA,KACoC,WAAjC7C,EAAe8C,cACdb,EAAAb,EAAAc,cAACa,EAAA,EAAD,MAEAd,EAAAb,EAAAc,cAACc,EAAD","file":"static/js/52.de3826f3.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useCoinsendaServices } from \"../../../services/useCoinsendaServices\";\nimport styled from \"styled-components\";\nimport { OperationForm } from \"./withdrawCripto\";\nimport IconSwitch from \"../../widgets/icons/iconSwitch\";\nimport ControlButton from \"../../widgets/buttons/controlButton\";\nimport useKeyActionAsClick from \"../../../hooks/useKeyActionAsClick\";\n\nconst DepositFiat = (props) => {\n  const movil_viewport = window.innerWidth < 768;\n  const idForMainButton = useKeyActionAsClick(\n    true,\n    \"main-button-deposit\",\n    13,\n    true,\n    \"onkeyup\"\n  );\n  const [\n    ,\n    {\n      current_wallet,\n      ui: {\n        current_section: { params },\n      },\n      modelData: { deposit_providers },\n    },\n    { toggleModal, FiatDeposit },\n    dispatch,\n  ] = useCoinsendaServices();\n\n  const atributos = {\n    icon: \"deposit\",\n    size: movil_viewport ? 80 : 100,\n    color: \"#989898\",\n  };\n\n  useEffect(() => {\n    dispatch(FiatDeposit(current_wallet.currency.currency || \"usd\"));\n  }, []);\n\n  const fiat_deposit = async (e) => {\n    await dispatch(FiatDeposit(current_wallet.currency.currency || \"usd\"));\n    dispatch(toggleModal());\n  };\n\n  return (\n    <DepositForm className=\"DepositView itemWalletView\">\n      <div className=\"contIcontSwitch\">\n        <IconSwitch {...atributos} />\n      </div>\n\n      <div className=\"contIcontSwitchCont\">\n        {params.active_trade_operation ? (\n          <p className=\"fuente active_trade_operation\">\n            Operación de intercambio en proceso, una vez finalice podrás hacer\n            depositos.\n          </p>\n        ) : (\n          <p className=\"fuente\">\n            La mejor manera de iniciar operaciones en Coinsenda es realizando un\n            deposito.\n          </p>\n        )}\n      </div>\n\n      <ControlButton\n        id={idForMainButton}\n        handleAction={fiat_deposit}\n        loader={!deposit_providers}\n        formValidate\n        label=\"Realizar un deposito\"\n      />\n    </DepositForm>\n  );\n};\n\nconst DepositForm = styled(OperationForm)`\n  @media (max-width: 768px) {\n    height: calc(100% - 40px) !important;\n    max-height: none !important;\n  }\n`;\n\nexport default DepositFiat;\n","import React from \"react\";\nimport CriptoSupervisor from \"./depositCripto\";\nimport { useCoinsendaServices } from \"../../../services/useCoinsendaServices\";\nimport DepositFiat from \"./depositFiat\";\n\nconst DepositView = () => {\n  const [, { current_wallet }] = useCoinsendaServices();\n\n  return (\n    <>\n      {current_wallet.currency_type === \"crypto\" ? (\n        <CriptoSupervisor />\n      ) : (\n        <DepositFiat />\n      )}\n    </>\n  );\n};\n\nexport default DepositView;\n"],"sourceRoot":""}