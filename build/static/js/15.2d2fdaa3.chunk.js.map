{"version":3,"sources":["components/forms/widgets/layout/styles.js","components/forms/widgets/kyc/locationComponent/index.js","components/forms/hooks/useStage.js","components/forms/widgets/kyc/validations.js","components/forms/widgets/kyc/locationComponent/skeleton.js","components/forms/widgets/kyc/locationComponent/buttons.js","components/forms/widgets/kyc/locationComponent/labelComponent.js"],"names":["Wrapper","styled","div","show","DynamicLoadComponent","loadable","LocationComponent","handleDataForm","handleState","closeModal","actions","dataForm","setDataForm","state","setState","loading","setLoading","useState","stageManager","useStage","Object","keys","handleError","errors","stages","idNextStageKyc","useKeyActionAsClick","prevStage","nextStage","currentStage","stageController","finalStage","stageData","setStageData","stageStatus","setStageStatus","nextStep","async","document","querySelector","key","value","style","color","getNextSelectList","onChange","e","target","preventDefault","_value","_status","validations","prevState","useEffect","inputElement","length","res","ApiPostLocation","_dataForm","initStages","formName","execPost","background","component","title","id","className","onClick","disabled","inputStatus","defaultValue","name","message","settings","defaultMessage","placeholder","type","uiType","progressBar","start","end","showSteps","AuxComponent","auxComponent","list","selectList","handleAction","defaultStage","setCurrentStage","step","queryParams","query","getQuery","history","push","nextStageData","textInputValidator","data","validateLabelMsg","parseOnlyLetters","status","match","successPattern","selectListValidator","generalValidator","replace","result","forEach","itemList","includes","toLowerCase","addItemTag","uiName","kycValidation","location_country","province","address","city","phone","parseOnlyNumbers","meta_phone","filter","countryItem","nationality","id_type","surname","birthday","parseBirth","formatMaskDate","birthYear","Date","getFullYear","age","datePick","targetLabel","setTimeout","classList","add","writeOnLabel","remove","id_number","_data","JSON","parse","stringify","others","parseAlphanumeric","toUpperCase","KycSkeleton","LabelSkeleton","InputSkeleton","BackButtom","width","size","NextButtom","LabelComponent","children","height","position","map","stageId","keyId","label","React","memo"],"mappings":"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","file":"static/js/15.2d2fdaa3.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { show } from '../../../widgets/animations'\n\nexport const Wrapper = styled.div`\n  grid-template-columns: 1fr;\n  display: grid;\n  height: auto;\n  min-height: 100vh;\n  width:100vw;\n  position:absolute;\n  top:0;\n  left:0;\n  z-index:99;\n  backdrop-filter: blur(2px);\n  background: linear-gradient(to bottom right, #00000099, #000000f0);\n  \n  .selectedItemTag__title p{\n    text-transform:capitalize;    \n  }\n\n  &.infoPanel{\n    grid-template-columns: auto 1fr;\n  }\n\n  &._show{\n    animation-name: ${show};\n    animation-duration: 0.5s;\n    animation-iteration-count: forwards;\n  }\n\n`\n\n// export const MainContainer = styled.div`\n//   display: grid;\n//   max-width: 500px;\n//   width: 100%;\n//   justify-self:center;\n//   align-self: center;\n// `\n","import React, { useState, useEffect } from 'react'\nimport validations from '../validations'\nimport useStage from '../../../hooks/useStage'\nimport loadable from '@loadable/component'\nimport InputComponent from '../InputComponent'\nimport { getNextSelectList } from '../utils'\nimport { BackButtom, NextButtom } from './buttons'\nimport LabelComponent from './labelComponent'\nimport KycSkeleton from './skeleton'\nimport { ApiPostLocation } from './api'\n// import useToast from '../../../../hooks/useToastMessage'\n// import SuccessComponent from './success'\nimport useKeyActionAsClick from '../../../../../hooks/useKeyActionAsClick';\nimport { Wrapper as Layout } from '../../layout/styles'\n// import { mainService } from \"../../../../services/MainService\";\nimport { initStages } from '../../../utils'\n\nimport {\n  MainContainer,\n  StickyGroup,\n  TitleContainer,\n} from '../styles'\n\n\nconst DynamicLoadComponent = loadable(() => import('../../../dynamicLoadComponent'))\n\nconst LocationComponent = ({ handleDataForm, handleState, closeModal, actions }) => {\n\n  const { dataForm, setDataForm } = handleDataForm\n  const { state, setState } = handleState\n  const [ loading, setLoading ] = useState(false)\n  // const [ toastMessage ] = useToast()\n  const stageManager = useStage(\n    // create the form stages\n    Object.keys(dataForm?.handleError?.errors || dataForm.stages),\n    dataForm.stages\n  )\n\n  const idNextStageKyc = useKeyActionAsClick(\n    true,\n    \"next-stage-kyc\",\n    13,\n    false,\n    \"onkeypress\",\n    true\n  );\n  \n  const {\n    prevStage,\n    nextStage,\n    currentStage,\n    stageController,\n    finalStage,\n    stageData,\n    setStageData,\n    stageStatus,\n    setStageStatus\n  } = stageManager\n\n\n  const nextStep = async() => {\n    if(stageStatus !== 'success'){return}\n    setStageStatus(null)\n    document.querySelector(`[name=\"${stageData?.key}\"]`).value = \"\"\n    document.querySelector(\".label_text__\" + stageData?.key).style.color = 'gray'\n    setLoading(true)\n    nextStage()\n    // await getNextSelectList(stageData?.key)\n    await getNextSelectList({\n      state,\n      stageData,\n      setDataForm\n    })\n    setLoading(false)\n  }\n\n  const prevStep = () => {\n    setState(prevState => {\n      return { ...prevState, [stageData?.key]: \"\" }\n    })\n    return prevStage()\n  }\n\n  // console.log('dataForm', dataForm)\n\n  const onChange = (e) => {\n    e.target.preventDefault && e.target.preventDefault();\n    // if(!validations[stageData.key]) return;\n    const [ _value, _status ] = validations[stageData.key](e?.target?.value, {...stageData, state, dataForm});\n    e.target.value = _value\n    //// applies to update state through an effect when it comes from a default state\n    setState(prevState => {\n      return { ...prevState, [stageData?.key]: _value }\n    })\n    setStageStatus(_status)\n  }\n\n  // load state  by default\n  useEffect(() => {\n    let inputElement = document.querySelector(`[name=\"${stageData?.key}\"]`)\n    // except metada because is not include on state\n    if(inputElement && state[stageData.key]){\n      // if(!stageData?.key?.includes('meta') && inputElement && state[stageData.key]){\n      onChange({target:{value:state[stageData.key]}});\n      inputElement.value = state[stageData.key]\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state[stageData?.key]])\n\n\n\n\n  useEffect(() => {\n    if(currentStage >= stageController.length){\n      const execPost = async() => {\n        setLoading(true)\n        let res = await ApiPostLocation(state)\n        setLoading(false)\n        if(!res)return prevStage();\n        const _dataForm = await initStages({\n          formName:'identity',\n        })\n        setDataForm(_dataForm)\n      }\n      execPost()\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentStage])\n\n\n\n\n\n\n\n\n\n\n\n  if(loading){return <KycSkeleton/>}\n\n  if(!loading && finalStage){\n    // Render success Stage\n    return (\n      <KycSkeleton\n        closeModal={closeModal}\n      />\n    )\n  }\n\n  return(\n      <Layout style={{background:\"white\"}}>\n        { \n          dataForm?.handleError?.errors &&\n          <DynamicLoadComponent\n            component=\"infoPanel\"\n            title=\"Campos completados\"\n            state={state}\n            stageData={stageData}\n            dataForm={dataForm}\n          />\n        }\n\n        <MainContainer>\n          <TitleContainer id=\"titleContainer__\">\n            <h1 className=\"titleContainer__h1 fuente\">Agrega tu información de residencia</h1>\n          </TitleContainer>\n          <StickyGroup background=\"white\" id=\"stickyGroup__\" >\n            <LabelComponent \n              stageController={stageController}\n              stages={dataForm?.stages}\n              currentStage={currentStage}\n              >\n              <BackButtom onClick={prevStep} disabled={currentStage <= 0}/>\n            </LabelComponent>\n            <InputComponent\n              onChange={onChange} \n              inputStatus={stageStatus}\n              defaultValue={state[stageData?.key]}\n              name={stageData?.key} \n              message={stageData?.settings?.defaultMessage}\n              placeholder={stageData?.settings?.placeholder}\n              type={stageData?.uiType}\n              setStageData={setStageData}\n              dataForm={dataForm}\n              state={state}\n              progressBar={{start:currentStage+1, end:stageController.length, showSteps:true}}\n              AuxComponent={[\n                stageData?.settings?.auxComponent, \n                () => <NextButtom id={idNextStageKyc} onClick={nextStep} disabled={(currentStage >= stageController.length) || stageStatus !== 'success'} />\n              ]}\n            />\n          </StickyGroup>\n\n          <DynamicLoadComponent\n            component=\"kyc/selectList\"\n            list={stageData?.selectList}\n            name={stageData?.key}\n            state={state}\n            handleAction={onChange}\n            // pass useCallBack to inherited functions to this component\n          />\n\n        </MainContainer>\n      </Layout>\n  )\n}\n\nexport default LocationComponent\n\n\n","import { useState, useEffect } from 'react'\nimport { getQuery } from '../utils'\nimport { history } from 'const/const'\n\nconst useStage = (stageController, stages, defaultStage = 0) => {\n\n  const [ stageStatus, setStageStatus ] = useState()\n  const [ currentStage, setCurrentStage ] = useState(defaultStage)\n  const [ stageData, setStageData ] = useState(stages[stageController[currentStage]])\n\n  const nextStage = (step = 1) => {\n    // add ref or className on Json file Source to management the DOM components, e.x buttons states...\n    if(currentStage >= stageController.length){return}\n      setCurrentStage(prevState => prevState+step)\n  }\n\n  const prevStage = () => {\n    if(currentStage <= 0){return}\n    setCurrentStage(prevState => prevState-1)\n  }\n\n// Set url query params\n  useEffect(()=>{\n    if(stageData?.settings?.queryParams){\n      let query = getQuery(stageData.settings.queryParams)\n      history?.push(query)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stageData])\n\n  useEffect(()=>{\n    const nextStageData = stages[stageController[currentStage]] \n    setStageData(nextStageData)\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentStage, stages[stageController[currentStage]]])\n\n  return {\n    currentStage,\n    nextStage,\n    prevStage,\n    stageController,\n    stageData,\n    setStageData,\n    stageStatus,\n    setStageStatus,\n    finalStage:currentStage >= stageController.length\n  }\n\n}\n\nexport default useStage\n","import {\n    parseOnlyLetters,\n    validateLabelMsg,\n    parseOnlyNumbers,\n    addItemTag,\n    writeOnLabel,\n    parseAlphanumeric,\n    formatMaskDate\n} from './utils'\n\n\n\nconst birthday = (value, data) => {\n\n    const isMaskInput = data.state?.birthday?.includes('/') \n    let parseBirth = isMaskInput ? formatMaskDate(data.state?.birthday) : data.state?.birthday\n    let birthYear = new Date(parseBirth)?.getFullYear() || new Date().getFullYear()\n    let currentYear = new Date().getFullYear()\n    let age = currentYear - birthYear \n    let _value = value ? value : null\n    let status = ((age >= 18 && age < 100) && _value) && 'success' \n  \n    const datePick = document.querySelector('[name=\"birthday\"]')\n    const targetLabel = `.label_text__${data.key}`\n    if(status === 'success'){\n      setTimeout(()=>{datePick.classList.add('date_success')}, 10)\n      writeOnLabel(targetLabel, data.settings.defaultMessage)\n    }else{\n      if(age < 18){\n        writeOnLabel(targetLabel, 'Debes de ser mayor de edad(+18) para continuar', 'error')\n      }\n      if(age > 100){\n        writeOnLabel(targetLabel, 'Has superado los límites de longevidad humana', 'error')\n      }\n      setTimeout(()=>{datePick.classList.remove('date_success')}, 10)\n    }\n    return [ _value, status ]\n  }\n  \n  \n  \n   \n  const phone = (value, data) => {\n    validateLabelMsg(value, data)\n    let _value = parseOnlyNumbers(value)\n    // let status = (_value.match(data.settings.successPattern) && data.state['meta_phone']) && 'success'\n    let status = _value.match(data.settings.successPattern) && 'success';\n    return [ _value, status ]\n  }\n  \n  const meta_phone = (value, data) => {\n    validateLabelMsg(value, data)\n    //accepts only letters, spaces and underscore\n    let _value = value.replace(/[^a-zA-Z _]/g, '')\n    // Find and match the value with  select list key value\n    let result = Object.keys(data?.selectList).filter(countryItem => countryItem.includes(value.toLowerCase()))\n    // If it meets the pattern and matches 1 result from the entire list, the search was successful\n    let status = (_value.match(data.settings.successPattern) && result.length === 1) && 'success';\n    if(result.length === 1 && value){\n      _value = result && result[0]\n      addItemTag(data.key, data?.selectList[result[0]]?.uiName, \".prefixInputContainer\")\n    }\n    // console.log('||||||||||| metadata phone ==> ', value, data)\n    return [ _value, status ]\n  }\n  \n  \n  \n  const textInputValidator = (value, data) => {\n    validateLabelMsg(value, data)\n    let _value = parseOnlyLetters(value)\n    let status = _value.match(data.settings.successPattern) && 'success'\n    return [ _value, status ]\n  }\n  \n  const id_number = (value, data) => {\n    let _data = JSON.parse(JSON.stringify(data)) //deep object copy\n    const { id_type } = _data?.state\n    const successPattern = id_type === 'pasaporte' ? data.settings.successPattern[id_type] : data.settings.successPattern.others\n    _data.settings.errors = id_type === 'pasaporte' ? data?.settings?.errors[id_type] : data?.settings?.errors?.others\n    validateLabelMsg(value, _data)\n    let _value = id_type === 'pasaporte' ? parseAlphanumeric(value) : parseOnlyNumbers(value)\n    _value = _value.toUpperCase()\n    let status = _value.match(successPattern) && 'success'\n    return [ _value, status ]\n  }\n\n\nconst selectListValidator = (value, data) => {\n    if(!data?.selectList) return generalValidator(value, data);\n    validateLabelMsg(value, data)\n    //accepts only letters, spaces and underscore\n    let _value = value.replace(/[^a-zA-Z _]/g, '')\n  \n    let result = []\n    Object.keys(data?.selectList).forEach(itemList => {\n      if(itemList.includes(value.toLowerCase())){\n        result = [...result, itemList ]\n      }\n    })\n  \n    result.forEach(itemList => {\n      if(itemList === value.toLowerCase()){\n        result = [ itemList ]\n      }\n    })\n  \n    // If it meets the pattern and matches 1 result from the entire list, the search was successful\n    let status = (_value.match(data?.settings?.successPattern) && result.length === 1) && 'success';\n    if(result?.length === 1 && value){\n      _value = result && result[0]\n      addItemTag(data.key, data?.selectList[result[0]]?.uiName)\n    }\n    return [ _value, status ]\n  } \n  \n  const generalValidator = (value, data) => {\n    const status = value.length > 3 && 'success' \n    return [ value, status ]\n  }\n\n\n  const locationValidation = {\n    location_country:selectListValidator,\n    province:selectListValidator,\n    address:generalValidator,\n    city:selectListValidator\n  }\n\n  const contactValidation = {\n    phone,\n    meta_phone\n  }\n\n  const identityValidation = {\n    nationality:selectListValidator,\n    id_type:selectListValidator,\n    name:textInputValidator,\n    surname:textInputValidator,\n    birthday,\n    id_number\n  }\n\n  const kycValidation = {\n    ...locationValidation,\n    ...contactValidation,\n    ...identityValidation\n  }\n\nexport default kycValidation","import { Wrapper as Layout } from '../../layout/styles'\nimport {\n  MainContainer,\n  TitleContainer,\n  StickyGroup,\n  LabelContainer,\n  TitleLabelContainer,\n  InputContainer,\n  LabelText,\n} from '../styles'\n\n\nconst KycSkeleton = () => (\n      <Layout style={{background:\"white\"}}>\n        <MainContainer>\n          <TitleContainer className=\"skeleton\">\n            <h1 className=\"titleContainer__h1\">This is a awesome title</h1>\n          </TitleContainer>\n          <StickyGroup background=\"white\" id=\"stickyGroup__\">\n           <LabelSkeleton/>\n           <InputSkeleton/>\n          </StickyGroup>\n        </MainContainer>\n      </Layout>\n)\n\nexport default KycSkeleton\n\nconst LabelSkeleton = () => (\n    <LabelContainer >\n        <TitleLabelContainer className=\"skeleton\">\n            This is a awesome title label\n        </TitleLabelContainer>\n    </LabelContainer>\n)\n\nconst InputSkeleton = () => (\n   <InputContainer className=\"skeleton\">\n    <input defaultValue=\"This is a awesome input\" />\n    <LabelText className=\"skeleton\">This is a awesome label</LabelText>\n   </InputContainer>\n)","import React from 'react'\nimport { FiArrowRight, FiArrowLeft } from 'react-icons/fi'\n\nimport { \n    IconBackContainer,\n    IconNextContainer \n} from '../styles'\n\n\nexport const BackButtom = ({ onClick, disabled }) => {\n    return(\n            <IconBackContainer onClick={onClick} disabled={disabled || ''} width=\"22px\">\n                <FiArrowLeft size={22} />\n            </IconBackContainer>\n    )\n}\n\n\n// export const BackButtom = ({ onClick, disabled }) => {\n//     return(\n//         <Portal target={document.querySelector(\"#buttonModule__\")}>\n//             <IconBackContainer onClick={onClick} disabled={disabled || ''} width=\"22px\">\n//                 <FiArrowLeft size={22} />\n//             </IconBackContainer>\n//         </Portal>\n//     )\n// }\n\n\nexport const NextButtom = ({ onClick, disabled, id }) => {\n    return(\n        <IconNextContainer id={`${id || ''}`} className=\"personal_nextButtom_\" onClick={onClick} disabled={disabled || ''} width=\"35px\">\n                <FiArrowRight size={35} color=\"#06a\" />\n        </IconNextContainer>\n    )\n}\n\n","import React from 'react'\nimport { \n  LabelContainer,\n  TitleLabelContainer,\n  Titles\n} from '../styles'\n\n\nconst LabelComponent = ({ children, currentStage, stages, stageController }) => (\n  \n    <LabelContainer className=\"fuente\">\n      {children}\n      <TitleLabelContainer>\n        <Titles height={stageController.length} position={currentStage}>\n            {\n              stageController.map((stageId, keyId) => {\n                return <p key={keyId} >{stages[stageId]?.settings?.label || stages[stageId].uiName}</p>\n              })\n            }\n        </Titles>\n      </TitleLabelContainer>\n    </LabelContainer>\n)\n\nexport default React.memo(LabelComponent)\n"],"sourceRoot":""}