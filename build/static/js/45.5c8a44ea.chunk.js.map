{"version":3,"sources":["hooks/useNavigationKeyActions.js","components/widgets/balance/balance.js","components/widgets/accountList/item_account.js"],"names":["DEFAULT_ARGS","modalRestriction","prev","next","default","originalLength","useNavigationKeyActions","config","valuesAsProps","uniqueIdForElement","loader","items","currentSelection","setCurrentSelection","useState","isModalVisible","useSelector","state","form","isModalRenderShowing","ui","modal","render","useEffect","length","el","document","getElementById","focus","window","innerWidth","KEY_CODES_META","onkeydown","onkeyup","onkeypress","event","currentSelectionIsDownZero","elementId","keyCode","Math","max","min","newSelection","useItemsInteractions","props","keyActions","suprKeyAction","enterKeyAction","isSelected","setIsSelected","element","focusedId","onfocus","number","onblur","blur","stopPropagation","preventDefault","uniqid","setFocus","BalanceComponent","balance","currency","currency_type","current_amount","set_current_amount","actionType","setActionType","animation","setAnimation","prevBalance","useRef","current","formatToCurrency","available","toFormat","JSON","stringify","exec_operation","async","lastAction","actionAmount","actionAmountFormat","play_animation","sleep","availableAmount","anim","className","connect","balances","user","modelData","account_id","wallets","dispatch","action","bindActionCreators","actions","React","memo","IconSwitch","loadable","account","currentFilter","current_section","params","id","specifiedWallet","withRouter","coinsendaServices","useCoinsendaServices","useActions","toastMessage","useToastMessage","account_state","set_account_state","set_loader","shouldHaveDeleteClassName","setShouldHaveDeleteClassName","id_wallet_action","set_id_wallet_action","account_type","delete_account_confirmation","cancelCallback","confirmationModalToggle","confirmationModalPayload","title","description","txtPrimary","txtSecondary","delete_account","img","account_detail","LoaderAccount","payload","used_counter","history","push","cleanNotificationItem","undefined","count","countAccount","countOfAccountTransactions","update_item_state","areThereDeposits","getDepositByAccountId","getAccountTransactions","isWallet","total","msg","success","result","deleteWallet","deleteAccount","setTimeout","getWalletsByUser","fetchWithdrawAccounts","exit_sound","toProps","loaderAccount","handleAction","isStatic","name","autoComplete","Wallet","WithdrawAccount","icon","wallet","inscribed","AccountCta","OptionsAccount","src","getCdnPath","alt","width","height","size","notifier","item_type","type","color","bank_name","account_number","value","ui_name","style","display","map","e","key","redirectGo","target","dataset","address","onClick"],"mappings":"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","file":"static/js/45.5c8a44ea.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst DEFAULT_ARGS = {\n  modalRestriction: true,\n  prev: 37,\n  next: 39,\n  default: 0,\n  originalLength: false,\n};\n\n/**\n * useNavigationKeyActions simula la navegacion entre un grupo de objetos en el DOM.\n *\n * @param {Object} config representa la configuracion y datos del hook\n * @param {Array} config.items items representativos entre los cuales se navegara por medio de key event\n * @param {Boolean} config.loader indentifica cuando el componente esta listo para ejecutar la accion de navegar\n * @param {String} config.uniqueIdForElement id que identificara los elementos navegables\n * @param {Boolean} config.modalRestriction restringe el uso de esta funcion en modales, por defecto es true\n * @param {Event.keyCode|Number} config.prev representa el keyCode a ser referenciendo como previo o anterior,\n * por defecto es 37\n * @param {Event.keyCode|Number} config.next representa el keyCode a ser referenciendo siguiente,\n * por defecto es 39\n * @param {Number} config.default numero del elemento a seleccionar por default, por defecto es el Elmento 0\n * @return _setCurrentSelection\n *\n * @example\n * const setCurrentElement = useNavigationKeyActions({ items: [...n], loader: subscription(), uniqueIdForElement: \"my-uniqueIdForElement-\" })\n * @see useItemsInteractions\n * @see window.onkeydown\n */\nexport default function useNavigationKeyActions(config) {\n  const valuesAsProps = { ...DEFAULT_ARGS, ...config };\n  const { modalRestriction, uniqueIdForElement, loader, items } = valuesAsProps;\n  const [currentSelection, setCurrentSelection] = useState(-1);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let isModalVisible = modalRestriction && useSelector((state) => state.form.isModalVisible);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let isModalRenderShowing = modalRestriction && useSelector((state) => state.ui.modal.render);\n\n  useEffect(() => {\n    if (items && items.length > 0 && !loader) {\n      if (isModalVisible) return;\n      const el = document.getElementById(\n        `${uniqueIdForElement}${valuesAsProps.default}`\n      );\n      el && el.focus();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [items, loader]);\n\n  useEffect(() => {\n    if (modalRestriction && (isModalRenderShowing || isModalVisible)) {\n      setCurrentSelection(-1);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isModalRenderShowing, isModalVisible]);\n\n  useEffect(() => {\n    // this is for mobile\n    if (window.innerWidth < 900) {\n      window.KEY_CODES_META = null;\n      window.onkeydown = null;\n      window.onkeyup = null;\n      window.onkeypress = null;\n      return () => null;\n    } else {\n      window.onkeydown = (event) => {\n        if (\n          !isModalRenderShowing &&\n          !isModalVisible &&\n          items &&\n          items.length > 0\n        ) {\n          if (isModalVisible) return;\n          const length = valuesAsProps.originalLength\n            ? items.length\n            : items.length - 1;\n          const currentSelectionIsDownZero = currentSelection < 0;\n          let elementId = 0;\n          let el = null;\n          if (event.keyCode === valuesAsProps.prev) {\n            elementId = currentSelectionIsDownZero\n              ? length\n              : currentSelection - 1;\n            el = document.getElementById(\n              `${uniqueIdForElement}${Math.max(0, elementId)}`\n            );\n          }\n          if (event.keyCode === valuesAsProps.next) {\n            elementId = currentSelectionIsDownZero ? 0 : currentSelection + 1;\n            el = document.getElementById(\n              `${uniqueIdForElement}${Math.min(length, elementId)}`\n            );\n          }\n          if (event.keyCode === 13) {\n            elementId = currentSelectionIsDownZero ? 0 : currentSelection;\n            el = document.getElementById(\n              `${uniqueIdForElement}${Math.min(length, elementId)}`\n            );\n          }\n          if (el) {\n            el.focus();\n            // event.preventDefault()\n            // event.stopPropagation()\n          }\n        }\n      };\n    }\n\n    return () => {\n      window.onkeydown = false;\n    };\n    \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    window.onkeydown,\n    isModalVisible,\n    items,\n    loader,\n    isModalRenderShowing,\n    currentSelection,\n  ]);\n\n  const _setCurrentSelection = (newSelection) => {\n    if (currentSelection !== newSelection) {\n      setCurrentSelection(newSelection);\n    }\n  };\n  return [_setCurrentSelection];\n}\n\n/**\n * useItemsInteractions contiene toda las interacciones del elemento, como seleccionarlo como puntero actual hasta\n * las acciones que presenta cuando el seleccionado.\n *\n * @param {Object} props properties heredadas del componente que usara este hook\n * @param {Function} props.setCurrentSelection function retornada de useNavigationKeyActions usada para seleccionar\n * el elemento como puntero actual\n * @param {Number} props.number number index del elemento en el array\n * @param {String} props.focusedId id referencial del elemento en el DOM\n *\n * @param {Object} keyActions restringe el uso de esta funcion en modales, por defecto es true\n * @param {Function} keyActions.suprKeyAction accion al presionar la tecla suprimir\n * @param {Function} keyActions.enterKeyAction accion al presionar la tecla enter\n * @param {Boolean} modalRestriction restringe este hook en modales\n * @return {[Boolean, Function]} [isSelected, setFocus]\n *\n * @example\n * const setCurrentElement = useItemsInteractions(props, {...}, false)\n * @see useNavigationKeyActions\n * @see Element.onkeydown\n */\nexport function useItemsInteractions(\n  props,\n  keyActions,\n  modalRestriction = true\n) {\n  const { suprKeyAction, enterKeyAction } = keyActions;\n  const [isSelected, setIsSelected] = useState(false);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const isModalVisible = modalRestriction && useSelector((state) => state.form.isModalVisible);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const isModalRenderShowing = modalRestriction && useSelector((state) => state.ui.modal.render);\n\n  useEffect(() => {\n    // this is for mobile\n    if (window.innerWidth < 900) {\n      window.KEY_CODES_META = null;\n      window.onkeydown = null;\n      window.onkeyup = null;\n      window.onkeypress = null;\n      return () => null;\n    } else {\n      const element = document.getElementById(props.focusedId);\n      if (element) {\n        element.onfocus = () => {\n          setIsSelected(true);\n          props.setCurrentSelection(props.number);\n        };\n\n        element.onblur = () => {\n          setIsSelected(false);\n        };\n\n        element.onkeydown = (event) => {\n          element.blur();\n          if (isModalVisible || isModalRenderShowing) return;\n          if (event.keyCode === 46) {\n            event.stopPropagation();\n            suprKeyAction(() => element.focus());\n          }\n          if (event.keyCode === 13) {\n            enterKeyAction();\n            event.stopPropagation();\n            event.preventDefault();\n          }\n        };\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isModalVisible, props.uniqid]);\n\n  const setFocus = () => {\n    const element = document.getElementById(props.focusedId);\n    element && element.focus();\n  };\n\n  return [isSelected, setFocus];\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport actions from \"../../../actions\";\nimport { formatToCurrency } from \"../../../utils/convert_currency\";\nimport sleep from \"../../../utils/sleep\";\n\nimport \"./index.css\";\n\nconst BalanceComponent = ({ balance, currency, currency_type }) => {\n  const [current_amount, set_current_amount] = useState(\"0\");\n  const [actionType, setActionType] = useState(\"\");\n  const [animation, setAnimation] = useState(\"\");\n  const prevBalance = useRef(balance);\n\n  useEffect(() => {\n    prevBalance.current = balance;\n    let current_amount = formatToCurrency(balance.available, currency);\n    set_current_amount(current_amount.toFormat());\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (\n      balance &&\n      prevBalance.current &&\n      JSON.stringify(balance) !== JSON.stringify(prevBalance.current)\n    ) {\n      prevBalance.current = balance;\n      exec_operation(balance);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [balance]);\n\n  const exec_operation = async (balance) => {\n    const { lastAction, actionAmount, available } = balance;\n\n    if (actionAmount) {\n      // el actionAmount es la cantidad a reducir o sumar de la operación, solo con fines de dar feedback visual al usuario, no es indispensable para su funcionalidad\n      const actionAmountFormat = formatToCurrency(actionAmount, currency);\n      await play_animation(\"Out\");\n      setActionType(lastAction);\n      set_current_amount(actionAmountFormat.toFormat());\n      await play_animation(\"In\");\n    }\n\n    actionAmount && (await sleep(500));\n    actionAmount && (await play_animation(\"Out\"));\n    const availableAmount = formatToCurrency(available, currency);\n    setActionType(\"\");\n    set_current_amount(availableAmount.toFormat());\n    actionAmount && (await play_animation(\"In\"));\n  };\n\n  const play_animation = async (anim) => {\n    setAnimation(anim);\n    await sleep(250);\n  };\n\n  return (\n    <div className=\"BalanceComponent wallet\">\n      <p className=\"fuente title balanceTitle\">Balance </p>\n\n      <div className={`displayCont itt ${animation}`}>\n        <p className={`textin fuente2 ${actionType}`}>\n          {actionType === \"reduce\" ? \"-\" : actionType === \"add\" ? \"+\" : \"\"}\n          {currency_type === \"fiat\" ? `$${current_amount}` : current_amount}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nfunction mapStateToProps(state, props) {\n  const { balances, user } = state.modelData;\n\n  const { account_id } = props;\n\n  return {\n    balance: balances && balances[account_id],\n    user: user,\n    currency_type: state.modelData.wallets[account_id].currency_type,\n    currency: state.modelData.wallets[account_id].currency,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(BalanceComponent));\n","import React, { useState, useEffect } from \"react\";\nimport loadable from \"@loadable/component\";\n// import backcard from \"../../../assets/wallet_coins/back.webp\";\nimport { connect } from \"react-redux\";\nimport { useCoinsendaServices } from \"../../../services/useCoinsendaServices\";\nimport { LoaderContainer } from \"../loaders\";\nimport { useItemsInteractions } from \"../../../hooks/useNavigationKeyActions\";\nimport BalanceComponent from \"../balance/balance\";\nimport PopNotification from \"../notifications\";\nimport SimpleLoader from \"../loaders\";\nimport { getCdnPath } from '../../../environment'\n\nimport {\n  ACta,\n  BarIconCont,\n  Icon,\n  OptionsLayout,\n  AccountLayout,\n  WalletLayout,\n  WithdrawAccountL,\n  InputKeyActionHandler,\n} from \"./styles\";\n\nimport { withRouter } from \"react-router\";\nimport useToastMessage from \"../../../hooks/useToastMessage\";\nimport { useActions } from \"../../../hooks/useActions\";\nimport \"./item_wallet.css\";\n\nconst IconSwitch = loadable(() => import(\"../icons/iconSwitch\"));\n\nconst ItemAccount = (props) => {\n\n\n  const [coinsendaServices] = useCoinsendaServices();\n  const actions = useActions();\n  const [toastMessage] = useToastMessage();\n  const [account_state, set_account_state] = useState();\n  const [loader, set_loader] = useState();\n  const [shouldHaveDeleteClassName, setShouldHaveDeleteClassName] = useState(\n    false\n  );\n  const [id_wallet_action, set_id_wallet_action] = useState(\"\");\n  const { account_type } = props;\n  // 5d3dedf1bb245069d61021bb\n\n  useEffect(() => {\n    setShouldHaveDeleteClassName(\n      id_wallet_action === props?.account?.id && account_state\n    );\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account_state, props?.account?.id]);\n\n\n  const delete_account_confirmation = (cancelCallback) => {\n    actions.confirmationModalToggle();\n    actions.confirmationModalPayload({\n      title: \"Esto es importante, estas a punto de...\",\n      description:\n        \"Eliminar una cuenta, una vez hecho esto, no podrás recuperar los datos asociados a esta.\",\n      txtPrimary: \"Eliminar\",\n      txtSecondary: \"Cancelar\",\n      // payload:props.account.id,\n      action: delete_account,\n      img: \"deletewallet\",\n      cancelCallback,\n      // code:props.account_type\n    });\n  };\n\n  const [isSelected] = useItemsInteractions({...props, uniqid: props?.account?.id}, {\n    // eslint-disable-next-line no-use-before-define\n    suprKeyAction: delete_account_confirmation,\n    enterKeyAction: () => account_detail(account_type),\n  });\n\n\n\n  if (props.loader || !props.account) {\n    return <LoaderAccount />;\n  }\n\n  const getAccountTransactions = async () => {\n    set_loader(true);\n    const countAccount = await coinsendaServices.countOfAccountTransactions(\n      props.account.id\n    );\n    const { count } = countAccount;\n    await actions.update_item_state(\n      { [props.account.id]: { ...props.account, count } },\n      \"wallets\"\n    );\n    if (count < 1) {\n      let areThereDeposits = await coinsendaServices.getDepositByAccountId(\n        props.account.id\n      );\n      set_loader(false);\n      if (areThereDeposits && areThereDeposits.length) {\n        // console.log('||||||||||||||| -------------- |||||||||||||||||||||||||||   ARE THERE DEPOSITS :: ', props, props.wallets)\n        actions.update_item_state(\n          { [props.account.id]: { ...props.specifiedWallet, count: 1 } },\n          \"wallets\"\n        ); //actualiza el movimiento operacional de la wallet\n        return props.history.push(\n          `/wallets/activity/${props.account.id}/deposits`\n        );\n      }\n      return props.history.push(`/wallets/deposit/${props.account.id}`);\n    }\n    return props.history.push(\n      `/wallets/activity/${props.account.id}/${\n        props.currentFilter ? props.currentFilter : \"deposits\"\n      }`\n    );\n  };\n\n  const account_detail = async (payload) => {\n    if (payload !== \"wallets\") {\n      if (props.account.used_counter > 0) {\n        return props.history.push(\n          `/withdraw_accounts/activity/${props.account.id}/withdraws`\n        );\n      }\n      return;\n    }\n    if (account_state === \"deleting\" || account_state === \"deleted\") {\n      return;\n    }\n    actions.cleanNotificationItem(payload, \"account_id\");\n    if (props.account.count === undefined) {\n      return getAccountTransactions();\n    }\n    if (props.account.count < 1) {\n      return props.history.push(`/wallets/deposit/${props.account.id}`);\n    }\n    return props.history.push(\n      `/wallets/activity/${props.account.id}/${\n        props.currentFilter ? props.currentFilter : \"deposits\"\n      }`\n    );\n  };\n\n\n  const delete_account = async () => {\n    set_account_state(\"deleting\");\n    set_id_wallet_action(props.account.id);\n    const isWallet = props.account_type === \"wallets\";\n\n    if (isWallet) {\n      if (props.balances.total > 0) {\n        set_account_state(\"\");\n        return toastMessage(\n          \"Las cuentas con balance no pueden ser eliminadas\",\n          \"error\"\n        );\n      }\n\n      let areThereDeposits = await coinsendaServices.getDepositByAccountId(\n        props.account.id,\n        '\"state\":\"confirmed\"'\n      );\n      if (areThereDeposits && areThereDeposits.length) {\n        set_account_state(\"\");\n        return toastMessage(\n          \"Las cuentas con depositos pendientes no pueden ser eliminadas\",\n          \"error\"\n        );\n      }\n    }\n    // else if(props.account.used_counter){\n    //   setTimeout(()=>set_account_state(''), 700)\n    //   return toastMessage('Las cuentas de retiro con movimiento no pueden ser eliminadas...', 'error')\n    // }\n\n    let msg = \"Cuenta eliminada con éxito\";\n    let success = true;\n    let result = false;\n    if (isWallet) {\n      result = await coinsendaServices.deleteWallet(props.account);\n    } else {\n      result = await coinsendaServices.deleteAccount(props.account.id);\n    }\n    if (result === 404 || result === 465 || !result) {\n      msg = \"La cuenta no se ha podido eliminar\";\n      success = false;\n      set_account_state(\"\");\n      return toastMessage(msg, success ? \"success\" : \"error\");\n    }\n    set_account_state(\"deleted\");\n    setTimeout(async () => {\n      if (isWallet) {\n        await coinsendaServices.getWalletsByUser();\n      } else {\n        await coinsendaServices.fetchWithdrawAccounts();\n      }\n    }, 0);\n    actions.exit_sound();\n    toastMessage(msg, success ? \"success\" : \"error\");\n  };\n\n\n\n  const toProps = {\n    loaderAccount: loader,\n    handleAction: account_detail,\n    set_account_state,\n    shouldHaveDeleteClassName:\n      shouldHaveDeleteClassName && account_state === \"deleted\",\n    delete_account: delete_account_confirmation,\n    account: props.account,\n    balances: props.balances,\n    actions,\n    account_type,\n    focusedId: props.focusedId,\n    isStatic: props.isStatic,\n    history: props.history,\n  };\n\n  const isWallet = account_type === \"wallets\";\n\n \n\n  return (\n    <AccountLayout\n      className={`AccountLayout  ${shouldHaveDeleteClassName && account_state}`}\n    >\n      <InputKeyActionHandler\n        aria-label=\"itemFromList\"\n        name=\"itemFromList\"\n        autoComplete=\"off\"\n        id={props.focusedId}\n      />\n      {isWallet ? (\n        <Wallet isSelected={isSelected} {...toProps} />\n      ) : (\n        <WithdrawAccount\n          isSelected={isSelected}\n          loaderAccount={loader}\n          {...toProps}\n        />\n      )}\n    </AccountLayout>\n  );\n};\n\nconst mapStateToProps = (state, props) => {\n  const { account } = props;\n  const { balances, wallets } = state.modelData;\n  const { currentFilter } = state.ui.current_section.params;\n\n  // console.log('||||||||||||||||||||||||||||||| ACCOUNT ITEM ACCOUNT ==> ', account)\n\n  return {\n    currentFilter,\n    balances: balances && account && balances[account.id],\n    specifiedWallet: account && wallets[props.account.id],\n  };\n};\n\n// ¿Es necesario conectar redux tanto para Wallet como para Withdraw Account?\nexport default connect(mapStateToProps)(withRouter(ItemAccount));\n\nconst Wallet = (props) => {\n  const {\n    account,\n    balances,\n    delete_account,\n    shouldHaveDeleteClassName,\n    isSelected,\n    actions,\n    focusedId,\n    isStatic,\n  } = props;\n  const { name, id, currency } = account;\n  const icon =\n    account.currency.currency === \"cop\"\n      ? \"bank\"\n      : account.currency.currency === \"ethereum\"\n      ? \"ethereum_account\"\n      : account.currency.currency;\n\n  return (\n    <WalletLayout\n      id={`hoverable${focusedId}`}\n      isSelected={isSelected}\n      className={`walletLayout ${props.loaderAccount ? \"loading\" : \"\"} ${\n        currency.currency\n      } ${shouldHaveDeleteClassName && \"deleted\"}`}\n      wallet\n      inscribed\n    >\n      {props.loaderAccount && (\n        <LoaderContainer>\n          <SimpleLoader loader={2} />\n        </LoaderContainer>\n      )}\n\n      {!isStatic && actions && (\n        <>\n          <AccountCta\n            handleAction={props.handleAction}\n            payload={props.account_type}\n          />\n          <OptionsAccount\n            account_detail={props.handleAction}\n            delete_account={delete_account}\n            {...props}\n          />\n        </>\n      )}\n      <img src={`${getCdnPath('assets')}wallet_coins/back.webp`} id=\"backCard\" alt=\"\" width=\"100%\" height=\"100%\" />\n      <div className=\"iconWallet\">\n        <IconSwitch icon={icon} size={195} />\n      </div>\n      <div className=\"walletTitleCont IWText\">\n        <h1 className=\"IWText fuente tobe_continue\">\n          {name ? name : \"Mi cartera crypto\"}\n        </h1>\n        <PopNotification\n          notifier=\"wallets\"\n          item_type=\"account_id\"\n          id={id}\n          type=\"new\"\n        />\n      </div>\n      <p className=\"IWText fuente IWcurrencyText tobe_continue\">\n        {currency.currency}\n      </p>\n      <>\n        {balances ? (\n          <BalanceComponent account_id={id} />\n        ) : (\n          <div className=\"loadItem\">\n            <SimpleLoader color=\"white\" />\n          </div>\n        )}\n      </>\n    </WalletLayout>\n  );\n};\n\nconst WithdrawAccount = (props) => {\n  const {\n    account,\n    delete_account,\n    shouldHaveDeleteClassName,\n    actions,\n    isSelected,\n    focusedId,\n    isStatic,\n  } = props;\n  const { bank_name, id, account_number, inscribed, used_counter, state } = account;\n  return (\n    <WithdrawAccountL\n      id={`hoverable${focusedId}`}\n      isSelected={isSelected}\n      className={`withdrawAccount ${shouldHaveDeleteClassName && \"deleted\"}`}\n      inscribed={account.state === 'complete'}\n    >\n      {!isStatic && actions && (\n        <>\n          {used_counter > 0 && (\n            <AccountCta\n              handleAction={props.handleAction}\n              payload={props.account_type}\n            />\n          )}\n          <OptionsAccount\n            account_detail={props.handleAction}\n            delete_account={delete_account}\n            {...props}\n          />\n        </>\n      )}\n      <img src={`${getCdnPath('assets')}wallet_coins/back.webp`} id=\"backCard\" alt=\"\" width=\"100%\" height=\"100%\" />\n      <div className=\"iconBank\">\n        <IconSwitch\n          icon={account.bank_name && account.bank_name.value}\n          size={100}\n        />\n      </div>\n      <h1 className=\"IWText fuente tobe_continue\">\n        {bank_name.ui_name}{\" \"}\n        <PopNotification\n          notifier=\"withdraw_accounts\"\n          item_type=\"account_id\"\n          id={id}\n          type=\"new\"\n        />\n      </h1>\n      <p className=\"IWText fuente2 IWLittleTitle\">No. {account_number.value}</p>\n      <>\n        <div className=\"contSuscribed\">\n          {state === 'in_progress' ? (\n            <div className=\"contLoader2\">\n              <SimpleLoader color=\"white\" loader={2} />\n            </div>\n          ) : state === 'complete' && (\n            <i className=\"far fa-check-circle\"></i>\n          )}\n          <p className=\"IWText fuente IWLittleTitle\">\n            {\n              state === 'pending' ? 'Pendiente' :\n              state === 'in_progress' ? 'En proceso' :\n              state === 'complete' ? 'Inscrita' : 'Rechazada'\n            }\n          </p>\n        </div>\n        <p\n          className=\"IWText fuente IWLittleTitle\"\n          style={{ display: !inscribed ? \"none\" : \"flex\" }}\n        >\n          Movimientos: {used_counter}\n        </p>\n      </>\n    </WithdrawAccountL>\n  );\n};\n\nconst LoaderAccount = () => {\n  const items = [\"uno\", \"dos\", \"tres\"];\n  return (\n    <>\n      {items.map((e, key) => {\n        return (\n          <WalletLayout className={`loader ${e}`} key={key}>\n            <div />\n            <div />\n            <div />\n            <div />\n          </WalletLayout>\n        );\n      })}\n    </>\n  );\n};\n\nconst OptionsAccount = (props) => {\n  // console.log('|||||||||||||||||||  redirectGo ==>> ', e.target.dataset && e.target.dataset.address)\n  const redirectGo = (e) => {\n    if (e.target.dataset && e.target.dataset.address) {\n      return props.history.push(\n        `/wallets/${e.target.dataset.address}/${props.account.id}`\n      );\n    }\n  };\n\n  // console.log('|||||||||||||||||||||| OptionsAccount ===========================> ', props.account, props.account.count)\n\n  const { account_type } = props;\n\n  return (\n    // <div className={`ItemBarra ${account_type} ${(current_view === 'detail') ? 'noVisible' : ''}`} >\n    <OptionsLayout className={`OptionsLayout ${account_type}`}>\n      {props.account.count ? (\n        <>\n          <BarIconCont\n            account_type={account_type}\n            onClick={redirectGo}\n            data-address=\"withdraw\"\n          >\n            <Icon\n              className=\"far fa-arrow-alt-circle-up IdeleteButton tooltip\"\n              data-address=\"withdraw\"\n            >\n              <span className=\"tooltiptext2 fuente\" data-address=\"withdraw\">\n                Retirar\n              </span>\n            </Icon>\n          </BarIconCont>\n          <BarIconCont\n            account_type={account_type}\n            onClick={redirectGo}\n            data-address=\"deposit\"\n          >\n            <Icon\n              className=\"far fa-arrow-alt-circle-down Ideposit IdeleteButton tooltip\"\n              data-address=\"deposit\"\n            >\n              <span className=\"tooltiptext2 fuente\" data-address=\"deposit\">\n                Depositar\n              </span>\n            </Icon>\n          </BarIconCont>\n        </>\n      ) : (\n        <>\n          <div></div>\n          <div></div>\n        </>\n      )}\n\n      <BarIconCont\n        className=\"retweetCont\"\n        account_type={account_type}\n        onClick={props.delete_account}\n      >\n        <Icon className=\"fas fa-trash-alt IdeleteButton tooltip\">\n          <span className=\"tooltiptext2 fuente\">Borrar</span>\n        </Icon>\n      </BarIconCont>\n    </OptionsLayout>\n  );\n};\n\nconst AccountCta = (props) => {\n  const handleAction = () => {\n    props.handleAction(props.payload);\n  };\n\n  return (\n    <ACta onClick={handleAction}></ACta>\n    //<div className={`ItemWCta ${(current_view === 'detail' || type === 'withdraw') ? 'noVisible' : ''}`} onClick={this.wallet_detail} ></div>\n  );\n};\n"],"sourceRoot":""}