{"version":3,"sources":["components/withdrawAccounts/witdrawAccountContainer.js"],"names":["WitdrawAccountContainer","state","title","wallet_detail","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","_this","current_wallet","className","_widgets_accountList_items__WEBPACK_IMPORTED_MODULE_13__","wallet","history","this","action","CurrentForm","current_section_clean","items_menu","navigation_components","_this$props","withdraw_accounts","isAppLoaded","react_router_dom__WEBPACK_IMPORTED_MODULE_11__","_widgets_detailContainer_detailContainerLayout__WEBPACK_IMPORTED_MODULE_9__","Object","assign","style","height","exact","path","component","AccountList","_widgets_loaders__WEBPACK_IMPORTED_MODULE_14__","Component","connect","user","modelData","isLoading","ui","current_section","params","currencies","dispatch","bindActionCreators","actions"],"mappings":"kOAYMA,6MAIJC,MAAQ,CACNC,MAAO,2BAWTC,cAAgB,SAAAC,GAEd,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAEIC,EAAKL,MAAMM,gBACXL,EAAAC,EAAAC,cAAA,WAASI,UAAU,mBACjBN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEC,OAAQJ,EAAKL,MAAMM,eACnBI,QAASV,EAAMU,gGAhBzBC,KAAKX,MAAMY,OAAOC,YAAY,uDAI9BF,KAAKX,MAAMY,OAAOE,yDAqBX,IACCC,EAAeC,IAAsBP,OAArCM,WACAjB,EAAUa,KAAKd,MAAfC,MAFDmB,EAGoCN,KAAKX,MAAxCkB,EAHDD,EAGCC,kBAAmBC,EAHpBF,EAGoBE,YAE3B,OACElB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEV,QAASC,KAAKX,MAAMU,SAEpBT,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACEnB,EAAAC,EAAAC,cAACkB,EAAA,EAADC,OAAAC,OAAA,CACER,WAAYA,EACZjB,MAAOA,GACHa,KAAKX,MACLW,KAAKd,MAJX,CAKE2B,MAAO,CACLC,OAAQ,UAIPN,EAGEA,GAAeD,GAChBjB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOM,OAAK,EAACC,KAAK,iBAAiBC,UAAWC,MAH9C5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,gBAvDsBC,aAmGvBC,sBAxBf,SAAyBnC,GAAO,IAE5BoC,EACEpC,EAAMqC,UADRD,KAIAd,EACEtB,EAAMsC,UADRhB,YAGF,MAAO,CACLD,kBAAmBe,EAAKf,kBACxBe,KAAMA,EACN3B,eAAgBT,EAAMuC,GAAGC,gBAAgBC,OAAOhC,eAChDiC,WAAY1C,EAAMqC,UAAUK,YAAc,KAC1CpB,gBAIJ,SAA4BqB,GAC1B,MAAO,CACL5B,OAAQ6B,6BAAmBC,IAASF,KAIzBR,CAA6CpC","file":"static/js/6.a68e4873.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport actions from '../../actions'\nimport { bindActionCreators } from 'redux'\nimport DetailContainerLayout from '../widgets/detailContainer/detailContainerLayout'\nimport { navigation_components } from '../api/ui/api.json'\nimport { Router, Switch, Route } from 'react-router-dom'\nimport AccountList from '../widgets/accountList/item_account_list'\nimport ItemWallet from '../widgets/accountList/items'\nimport SimpleLoader from '../widgets/loaders'\nimport PropTypes from 'prop-types'\n\nclass WitdrawAccountContainer extends Component {\n\n  // userWallets, lo utilozamos para hacer validaciÃ³n de la respuesta del API\n\n  state = {\n    title: \"Mis Cuentas de retiro\",\n  }\n\n  componentDidMount() {\n    this.props.action.CurrentForm('bank')\n  }\n\n  componentWillUnmount() {\n    this.props.action.current_section_clean()\n  }\n\n  wallet_detail = props => {\n\n    return (\n      <>\n        {\n          this.props.current_wallet &&\n          <section className=\"WalletContainer\">\n            <ItemWallet\n              wallet={this.props.current_wallet}\n              history={props.history}\n            />\n          </section>\n        }\n      </>\n    )\n  }\n\n\n  render() {\n    const { items_menu } = navigation_components.wallet\n    const { title } = this.state\n    const { withdraw_accounts, isAppLoaded } = this.props\n\n    return (\n      <Router\n        history={this.props.history}\n      >\n        <Switch>\n          <DetailContainerLayout\n            items_menu={items_menu}\n            title={title}\n            {...this.props}\n            {...this.state}\n            style={{\n              height: '100%'\n            }}\n          >\n            {\n              !isAppLoaded ?\n                <SimpleLoader />\n                :\n                (isAppLoaded && withdraw_accounts) &&\n                <Route exact path=\"/:primary_path\" component={AccountList} />\n            }\n          </DetailContainerLayout>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nWitdrawAccountContainer.propTypes = {\n  isAppLoaded: PropTypes.bool,\n  currencies: PropTypes.array,\n  current_wallet: PropTypes.object,\n  user: PropTypes.object,\n  withdraw_accounts: PropTypes.array\n}\n\nfunction mapStateToProps(state) {\n  const {\n    user\n  } = state.modelData\n\n  const {\n    isAppLoaded\n  } = state.isLoading\n\n  return {\n    withdraw_accounts: user.withdraw_accounts,\n    user: user,\n    current_wallet: state.ui.current_section.params.current_wallet,\n    currencies: state.modelData.currencies || null,\n    isAppLoaded\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WitdrawAccountContainer)\n"],"sourceRoot":""}