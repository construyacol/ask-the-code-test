{"version":3,"sources":["components/wallets/newWallet/newWalletLayout.js","components/wallets/newWallet/newWalletContainer.js"],"names":["NewWalletLayout","props","handleSubmit","actualizarEstado","name","currency","step","loader","address","short_currency_name","qr","clearCurrency","_availableWalletCreat","availableWalletCreator","availableCurrencies","Object","slicedToArray","idForNewWalletButton","useKeyActionAsClick","react_default","a","createElement","className","Fragment","onSubmit","style","width","inputs","clase","type","label","placeholder","active","autoFocus","ItemSelectionContainer","itemSelect","update_control_form","items","clearItem","buttons","id","skeleton","loaders","concat","xmlns","height","alt","fill","stroke","strokeWidth","cx","cy","r","d","src","require","copyContainer","valueToCopy","color","toggleModal","finalizar","connect","state","user","modelData","search","form","search_coin","form_wallet","buttonActive","form_control_wallet","isLoading","current","currencies","wallets","dispatch","action","bindActionCreators","actions","_useState","useState","_useState2","setName","_useState3","length","_useState4","setCurrency","_useState5","_useState7","_useState8","setShortCurrencyName","_useCoinsendaServices","useCoinsendaServices","coinsendaServices","_useToastMessage","useToastMessage","toastMessage","crearWallet","_ref","asyncToGenerator","regenerator_default","mark","_callee","get_currency","body","account","msg","wrap","_context","prev","next","matchItem","primary","sent","data","description","country","enabled","is_token","createWallet","abrupt","errorHandle","getWalletsByUser","createAndInsertDepositProvider","isAppLoading","success_sound","CleanForm","history","push","stop","apply","this","arguments","ReduceStep","_ref2","_callee2","event","names","value","_context2","target","short_name","t0","_x","siguiente","IncreaseStep","useEffect","CurrentForm","states","newWalletLayout","assign","preventDefault","searchMatch"],"mappings":"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","file":"static/js/52.e613921d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./newWallet.css\";\nimport { InputButton, ButtonSuccess } from \"../../widgets/buttons/buttons\";\nimport InputForm from \"../../widgets/inputs\";\nimport ItemSelectionContainer from \"../../widgets/items/ItemSelectionContainer\";\nimport CopyContainer from \"../../widgets/copy/copyContainer\";\nimport { SimpleLoader } from \"../../widgets/loaders\";\nimport availableWalletCreator from \"../../hooks/availableWalletCreator\";\nimport useKeyActionAsClick from \"../../../hooks/useKeyActionAsClick\";\nimport NewWalletSkeleton from './skeleton'\n\nconst NewWalletLayout = (props) => {\n  const {\n    handleSubmit,\n    actualizarEstado,\n    name,\n    currency,\n    step,\n    loader,\n    address,\n    short_currency_name,\n    qr,\n    clearCurrency,\n  } = props;\n\n  const [availableCurrencies] = availableWalletCreator();\n  const idForNewWalletButton = useKeyActionAsClick(true, \"add-new-wallet-button\", 13, false, \"onkeypress\", true);\n\n  return (\n    <div className=\"containerFormWallet newWallet\">\n      {step === 1 && (\n        <div className=\"step1 newWallet\">\n          {availableCurrencies ? (\n            <>\n              <h1 className=\"fuente\"> Nueva billetera </h1>\n              <form onSubmit={handleSubmit} style={{ width: \"100%\" }}>\n                <InputForm\n                  clase=\"nameWallet containerInputComponent\"\n                  type=\"text\"\n                  label=\"Nombra tu nueva billetera\"\n                  placeholder=\"Billetera de trading\"\n                  name=\"name\"\n                  actualizarEstado={actualizarEstado}\n                  active={name && currency}\n                  autoFocus={true}\n                  // value={name}\n                />\n                <ItemSelectionContainer\n                  type=\"coins\"\n                  label=\"¿Cúal moneda manejarás en tu billetera?\"\n                  itemSelect={currency}\n                  actualizarEstado={actualizarEstado}\n                  update_control_form={props.update_control_form}\n                  items={availableCurrencies}\n                  clearItem={clearCurrency}\n                />\n                <InputButton\n                  id={idForNewWalletButton}\n                  label=\"Crear Billetera\"\n                  type=\"primary\"\n                  active={name && currency}\n                />\n              </form>\n            </>\n          ) : (\n            <NewWalletSkeleton />\n          )}\n        </div>\n      )}\n\n      {step === 2 && (\n        <div className=\"step2\">\n          {loader ? (\n            <SimpleLoader label={`Creando wallet ${currency}`} />\n          ) : (\n            <section className=\"stepFinish\">\n              <div className=\"nWCabeza\">\n                <div className=\"icon icon--order-success svg\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"72px\"\n                    height=\"72px\"\n                    alt=\"\"\n                  >\n                    <g fill=\"none\" stroke=\"white\" strokeWidth=\"3\">\n                      <circle cx=\"36\" cy=\"36\" r=\"35\"></circle>\n                      <path\n                        className=\"check\"\n                        d=\"M17.417,37.778l9.93,9.909l25.444-25.393\"\n                      ></path>\n                    </g>\n                  </svg>\n                </div>\n                <p className=\"titleWhite fuente\"> Operación Exitosa</p>\n              </div>\n\n              <div className=\"nWbody fuente\">\n                <div className=\"nWadress\">\n                  <div className=\"nWname\">\n                    {short_currency_name !== \"\" && (\n                      <img\n                        className=\"itemFuera\"\n                        src={require(`../../../assets/coins/${short_currency_name}.png`)}\n                        width=\"30\"\n                        alt=\"\"\n                      />\n                    )}\n                    <p>Nueva wallet de {props.currency} creada</p>\n                  </div>\n                  <p>{name}</p>\n                  <img className=\"itemFuera\" src={qr} width=\"180\" alt=\"\" />\n                  <CopyContainer valueToCopy={address} color=\"white\" />\n                </div>\n              </div>\n\n              <div className=\"nWcta\">\n                <ButtonSuccess\n                  id=\"add-new-wallet-button\"\n                  toggleModal={props.finalizar}\n                >\n                  Finalizar\n                </ButtonSuccess>\n              </div>\n            </section>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NewWalletLayout;\n","import React, { useEffect, useState } from \"react\";\nimport NewWalletLayout from \"./newWalletLayout\";\nimport { connect } from \"react-redux\";\n// import { updateFormControl, FormWallet } from '../../../actions'\nimport { bindActionCreators } from \"redux\";\nimport actions from \"../../../actions\";\nimport { matchItem } from \"../../../utils\";\nimport { useCoinsendaServices } from \"../../../services/useCoinsendaServices\";\nimport useToastMessage from \"../../../hooks/useToastMessage\";\n\nconst NewWallet = (props) => {\n  const [name, setName] = useState();\n  const [currency, setCurrency] = useState(\n    props.search.length && props.search[0].currency\n  );\n  const [address] = useState();\n  const [short_currency_name, setShortCurrencyName] = useState();\n  const [coinsendaServices] = useCoinsendaServices();\n  const [toastMessage] = useToastMessage();\n\n  const update_control_form = (searchMatch) => {\n    // if (!searchMatch || props.search.length > 1) {\n    //   props.action.UpdateFormControl('wallet', false)\n    // }\n    // if (name !== \"\" && props.search.length === 1) {\n    //   props.action.UpdateFormControl('wallet', true)\n    // }\n  };\n\n  const clearCurrency = () => {\n    setCurrency(null);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.action.isAppLoading(true);\n    siguiente();\n    actualizarEstado(event);\n    crearWallet();\n  };\n\n  const crearWallet = async () => {\n    // simulación Endpoint Crear wallet\n    const { user, currencies } = props;\n\n    let get_currency = await matchItem(\n      currencies,\n      { primary: currency },\n      \"currency\"\n    );\n\n    const body = {\n      data: {\n        name: name,\n        description: \"description\",\n        country: user && user.country,\n        enabled: true,\n        currency: {\n          currency: get_currency[0].currency,\n          is_token: get_currency[0].is_token,\n        },\n      },\n    };\n\n    const wallets = await coinsendaServices.createWallet(body);\n\n    if (!wallets) {\n      return errorHandle(\"Error al crear la billetera...\");\n    }\n    await coinsendaServices.getWalletsByUser();\n    const { account } = wallets;\n\n    const dep_prov = await coinsendaServices.createAndInsertDepositProvider(\n      account\n    );\n\n    if (!dep_prov) {\n      return errorHandle(\n        \"Error al crear el proveedor de deposito de la billetera...\"\n      );\n    }\n\n    // si la acción se lleva satisfactoriamente actualizamos el fondo del modal a un color verde\n    let msg = `Nueva wallet ${account.currency.currency} creada!`;\n    toastMessage(msg, \"success\");\n\n    // await props.action.add_item_state('wallets', { ...account, visible: true })\n    // await props.action.get_account_balances(props.user)\n    // return console.log('=================> CREATE WALLET CURRENCIE=>', wallets)\n\n    props.action.isAppLoading(false);\n    props.action.success_sound();\n    await props.action.toggleModal();\n    await props.action.CleanForm(\"wallet\");\n\n    return props.history.push(`/wallets/deposit/${account.id}`);\n  };\n\n  const errorHandle = (msg) => {\n    props.action.ReduceStep(\"wallets\");\n    props.action.isAppLoading(false);\n    return toastMessage(\n      msg ? msg : \"Ups, al parecer esto no podrá ser...\",\n      \"error\"\n    );\n  };\n\n  const actualizarEstado = async (event) => {\n    if (event.target.short_name) {\n      await setShortCurrencyName(event.target.short_name);\n    }\n    const names = event.target.name;\n    const value = event.target.value;\n    // update_control_form(value)\n    // update_form()\n    switch (names) {\n      case \"name\":\n        return setName(value);\n      case \"currency\":\n        return setCurrency(value);\n      default:\n    }\n  };\n\n  const siguiente = () => {\n    return props.action.IncreaseStep(props.current);\n  };\n\n  const finalizar = (event) => {\n    // reiniciamos el estado del formulario(./reducers/form)\n    props.action.toggleModal();\n    props.action.CleanForm(\"wallet\");\n  };\n\n  useEffect(() => {\n    return () => props.action.CurrentForm(\"wallets\");\n  }, []);\n\n  let states = {\n    name,\n    currency,\n    address,\n    short_currency_name,\n  };\n\n  return (\n    <NewWalletLayout\n      clearCurrency={clearCurrency}\n      actualizarEstado={actualizarEstado}\n      handleSubmit={handleSubmit}\n      update_control_form={update_control_form}\n      buttonActive={props.buttonActive}\n      loader={props.loader}\n      finalizar={finalizar}\n      step={props.step}\n      {...states}\n      {...props}\n    />\n  );\n};\n\nfunction mapStateToProps(state, props) {\n  const user = state.modelData.user;\n\n  return {\n    search: state.form.search_coin,\n    form_wallet: state.form.form_wallet,\n    buttonActive: state.form.form_control_wallet,\n    loader: state.isLoading.loader,\n    step: state.form.form_wallet.step,\n    current: state.form.current,\n    user,\n    state: state.modelData,\n    currencies: state.modelData.currencies,\n    wallets: state.modelData.wallets,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewWallet);\n"],"sourceRoot":""}