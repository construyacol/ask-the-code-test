{"version":3,"sources":["components/forms/index.js","components/forms/widgets/newWallet/styles.js","components/forms/widgets/newWallet/skeleton.js","components/forms/widgets/newWallet/init.js"],"names":["FormComponent","handleDataForm","Fallback","props","state","setState","useState","useEffect","getInitialState","dataForm","wrapperComponent","component","handleState","Title","styled","h1","OnlySkeletonAnimation","Option","div","ButtonContainer","ListContainer","device","tablet","Content","mobile","Layout","section","WalletSkeleton","className","skeleton","NewWalletComponent","setDataForm","actions","useActions","async","_dataForm","initStages","formName","init","on_click","e","forceClose","target","dataset","close_modal","renderModal","theme","top","right"],"mappings":"6HAAA,oDA4BeA,IArBO,IAA6C,IAAD,QAA3C,eAAEC,EAAF,SAAkBC,KAAaC,GAAY,EAGhE,MAAQC,EAAOC,GAAaC,qBAO5B,OALAC,qBAAU,KACRF,EAASG,YAAgBP,EAAeQ,aAEvC,QAACR,QAAD,IAACA,GAAD,UAACA,EAAgBQ,gBAAjB,aAAC,EAA0BC,mBAGxB,cAAC,UAAD,CACEC,UAAS,OAAEV,QAAF,IAAEA,GAAF,UAAEA,EAAgBQ,gBAAlB,aAAE,EAA0BC,iBACrCR,SAAUA,EACVD,eAAgBA,EAChBW,YAAa,CAACP,WAAUD,YACpBD,M,2XClBP,MAAMU,EAAQC,IAAOC,GAAV,qWAMRC,KAWGC,EAASH,IAAOI,IAAV,0mBAiCNC,EAAkBL,IAAOI,IAAV,8FAMfE,EAAgBN,IAAOI,IAAV,s1BAWhBD,EACID,IAgBDK,KAAOC,OAUiBL,GAQxBM,EAAUT,IAAOI,IAAV,yfAgBPG,KAAOG,QAWPC,EAASX,IAAOY,QAAV,oO,iCCtInB,oCAuBeC,UAfQxB,GAGjB,qCACI,cAAC,QAAD,CAAOyB,UAAU,kBAAjB,gCACA,cAAC,IAAD,CAAWC,UAAQ,IACnB,eAAC,gBAAD,CAAeD,UAAU,WAAzB,UACI,cAAC,SAAD,IACA,cAAC,SAAD,W,iCChBd,uFAgEeE,UAjDY3B,IAEvB,MAAQM,EAAUsB,GAAgBzB,qBAC5B0B,EAAUC,cAsBhB,OALA1B,qBAAU,KATG2B,WACX,MAAMC,QAAkBC,YACtB,CACEC,SAAU,cAGdN,EAAYI,IAIZG,KACC,IAID,eAAC,IAAD,CACAV,UAAU,aACVW,SAvBiB,CAACC,EAAGC,KACjBD,IAAMA,EAAEE,OAAOC,QAAQC,aAAeH,IACxCT,EAAQa,YAAY,OAmBtB,UAIA,cAAC,IAAD,CAAWC,MAAM,OAAOC,IAAK,GAAIC,MAAO,KACtC,cAAC,SAAD,UACE,cAAC,UAAD,CAASpB,UAAU,oBAAnB,SAEMnB,EACE,cAAC,IAAD,CACER,eAAgB,CAACQ,WAAUsB,eAC3B7B,SAAUyB,YAGZ,cAAC,UAAD","file":"static/js/43.83782748.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport DynamicLoadComponent from './dynamicLoadComponent'\n// import loadable from '@loadable/component'\nimport { getInitialState } from './utils'\nimport './mobile.css'\nimport './global.css'\n\nconst FormComponent = ({ handleDataForm, Fallback, ...props }) => {\n  \n  // const FormSkeleton = loadable(() => import(`./widgets/${handleDataForm.dataForm.wrapperComponent || 'personalKycComponent'}/skeleton`))\n  const [ state, setState ] = useState()\n\n  useEffect(()=>{\n    setState(getInitialState(handleDataForm.dataForm))\n    // eslint-disable-next-line \n  }, [handleDataForm?.dataForm?.wrapperComponent])\n  \n  return( \n        <DynamicLoadComponent\n          component={handleDataForm?.dataForm?.wrapperComponent}\n          Fallback={Fallback}\n          handleDataForm={handleDataForm}\n          handleState={{setState, state}}\n          {...props}\n        />\n  )\n}\n\nexport default FormComponent\n","import styled from 'styled-components'\nimport { device } from \"../../../../const/const\"\nimport { OnlySkeletonAnimation } from '../../../widgets/loaders/skeleton'\n\n\nexport const Title = styled.h1`\n    &.skeleton{\n        position:relative;\n        color:transparent;\n        display: flex;\n        justify-content: center;\n        ${OnlySkeletonAnimation}\n    }\n    &.skeleton::after{\n        content:\"Crea una billetera\";\n        position:absolute;\n        color:#bfbfbf;\n        background:#bfbfbf;\n        border-radius:4px;\n    }\n`\n\nexport const Option = styled.div`\n  height: 142px;\n  width: 172px;\n  border: 1px solid #bfbfbf;\n  position: relative;\n  border-radius: 6px;\n  display: grid;\n\n  &::after{\n    position: absolute;\n    content: \"\";\n    width: 50px;\n    height: 45px;\n    background: #bfbfbf;\n    align-self: center;\n    justify-self: center;\n    border-radius: 5px;\n    margin-bottom: 40px;\n  }\n\n  &::before{\n    position: absolute;\n    content: \"\";\n    width: 100px;\n    height: 15px;\n    background: #bfbfbf;\n    border-radius: 3px;\n    justify-self: center;\n    align-self:flex-end;\n    margin-bottom: 15px;\n  }\n`\n\nexport const ButtonContainer = styled.div`\n    height:80px;\n    display: flex;\n    place-content: center;\n`\n\nexport const ListContainer = styled.div`\n    display: grid;\n    overflow-y: scroll;\n    grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\n    grid-template-rows: repeat(auto-fill, 150px);\n    column-gap: 15px;\n    row-gap: 15px;\n    padding:25px 0;\n    height:calc(100% - 50px);\n\n    &.skeleton{\n        ${Option}{\n            ${OnlySkeletonAnimation}\n        }\n    }\n\n    &::-webkit-scrollbar {\n        width: 7px;\n    }\n\n    &::-webkit-scrollbar-thumb {\n        background: #475a681f;\n    }\n\n    .__itemContainerL__ .item:hover{\n        transform: scale(1) !important;\n    }\n\n    @media ${device.tablet} {\n\n        padding:25px 0;\n\n\n        .__itemContainerL__{\n            display: grid;\n            justify-items: center;\n        }\n\n        .__itemContainerL__ .item, ${Option}{\n            width:160px;\n            height:140px;\n        }\n        \n    }\n`\n\nexport const Content = styled.div`\n\n    max-width:580px;\n    height: calc(100% - 50px);\n    width: calc(100% - 50px);\n    padding: 25px;\n    display:grid;\n    grid-template-rows:auto auto 1fr auto;\n    row-gap:20px;\n\n    h1{\n        color:var(--title1);\n        font-size:1.5em;\n        text-align:center;\n    }\n\n    @media ${device.mobile} {\n        h1{\n           margin-bottom:0;\n        }\n        height: calc(100% - 70px);\n        width: calc(100% - 40px);\n        padding: 20px 20px 50px;\n    }\n\n`\n\nexport const Layout = styled.section`\n    width:100vw;\n    height:100vh;\n    background:white;\n    display:flex;\n    background:white;\n    position:absolute;\n    top:0;\n    left:0;\n    display: flex;\n    place-content: center;\n`\n\n","import InputForm from \"../../../widgets/inputs/inputForm\";\nimport {\n  ListContainer,\n  Option,\n  Title\n} from './styles'\n\n\nconst WalletSkeleton = props => {\n\n  return(\n      <>\n          <Title className=\"fuente skeleton\">Crea una billetera</Title>\n          <InputForm skeleton />\n          <ListContainer className=\"skeleton\">\n              <Option/>\n              <Option/>\n        </ListContainer>\n      </>\n  )\n\n}\n\nexport default WalletSkeleton\n","import { useEffect, useState } from 'react'\n// import loadable from '@loadable/component'\n// import { useActions } from '../../hooks/useActions'\nimport FormComponent from '../../' \nimport { initStages } from '../../utils'\nimport WalletSkeleton from './skeleton'\nimport { IconClose } from \"../../../widgets/shared-styles\";\nimport OtherModalLayout from '../../../widgets/modal/otherModalLayout'\nimport { useActions } from '../../../../hooks/useActions'\nimport {\n  Layout,\n  Content\n} from './styles'\n\n\nconst NewWalletComponent = props => {\n\n    const [ dataForm, setDataForm ] = useState()\n    const actions = useActions();\n\n    const closeModal = (e, forceClose) => {\n      if (e && (e.target.dataset.close_modal || forceClose)) {\n        actions.renderModal(null);\n      }\n    }\n    \n    const init = async() => {\n      const _dataForm = await initStages(\n        {\n          formName: 'newWallet'\n        }\n      )\n      setDataForm(_dataForm)\n    }\n  \n    useEffect(()=> { \n      init()\n    }, []) \n   \n\n    return(\n      <OtherModalLayout \n      className=\"fullScreen\"\n      on_click={closeModal}\n      > \n      <IconClose theme=\"dark\" top={15} right={20} />\n        <Layout>\n          <Content className=\"_contentNewWallet\">\n              {\n                dataForm ?\n                  <FormComponent\n                    handleDataForm={{dataForm, setDataForm}}\n                    Fallback={WalletSkeleton}\n                  />\n                :\n                  <WalletSkeleton/>\n              }\n          </Content>\n        </Layout>\n      </OtherModalLayout>\n    )\n\n}\n\nexport default NewWalletComponent"],"sourceRoot":""}