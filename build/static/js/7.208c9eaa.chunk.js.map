{"version":3,"sources":["hooks/useObserver.js","components/wallets/views/withdraw-activity.js","components/withdrawAccounts/witdrawAccountContainer.js"],"names":["useObserver","options","_useState","useState","_useState2","Object","slicedToArray","elements","setElements","_useState3","_useState4","entries","setEntries","observer","useRef","IntersectionObserver","observedEntries","useEffect","currentObserver","current","disconnect","length","forEach","element","observe","connect","state","props","loader","isLoading","isWithdraws","match","params","primary_path","dispatch","action","bindActionCreators","actions","setLoader","_useCoinsendaServices","useCoinsendaServices","CoinsendaService","_useObserver","root","rootMargin","threshold","_useObserver2","items_","showLoaderItems","setLoadingItems","_useState5","_useState6","page","setPage","getItems","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","fetchActivityByAccount","account_id","sent","concat","toConsumableArray","stop","apply","this","arguments","init","_ref2","_callee3","_context3","window","requestAnimationFrame","_callee2","_context2","document","querySelectorAll","_ref4","_callee4","entry","_context4","isIntersecting","unobserve","target","_x","react_default","createElement","className","filters","view","order_item","activityList_activity","assign","activity","style","paddingTop","arrayLength","modelData","ui","user","isAppLoaded","withdraw_accounts","current_wallet","current_section","currencies","data","cleanCurrentSection","CurrentForm","items_menu","navigation_components","wallets","history","react_router","path","render","routeProps","detailContainerLayout","title","strict","component","renderProps","walletContainer","Fragment","exact","account_list","isWithdrawView","dashboard_container","withdrawActivity"],"mappings":"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","file":"static/js/7.208c9eaa.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nconst useObserver = options => {\n  const [elements, setElements] = useState([]);\n  const [entries, setEntries] = useState([]);\n\n  const observer = useRef(new IntersectionObserver(observedEntries => {\n    setEntries(observedEntries);\n  }, options));\n\n  useEffect(() => {\n    const { current: currentObserver } = observer;\n    currentObserver.disconnect();\n    if (elements.length) {\n      elements.forEach(element => currentObserver.observe(element));\n    }\n    return () => {\n      if (currentObserver) {\n        currentObserver.disconnect();\n      }\n    };\n  }, [elements]);\n\n  return [observer.current, setElements, entries];\n};\n\nexport default useObserver;","import React, { useEffect, useState, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport actions from '../../../actions'\nimport ActivityList from '../../widgets/activityList/activity'\nimport ActivityFilters from '../../widgets/activityList/filters'\nimport LoaderActivity from '../../widgets/activityList/order_item'\n\nimport './wallet_views.css'\nimport { useCoinsendaServices } from '../../../services/useCoinsendaServices'\nimport useObserver from '../../../hooks/useObserver'\n\nconst ActivityView = props => {\n  const { params } = props.match\n  const [loader, setLoader] = useState(true)\n  const [CoinsendaService] = useCoinsendaServices()\n\n  const [observer, setElements, entries] = useObserver({\n    root: null,\n    rootMargin: \"0px\",\n    threshold: 0\n  });\n\n  const items_ = useRef([])\n  const [showLoaderItems, setLoadingItems] = useState(true)\n  const [page, setPage] = useState(0)\n\n  const getItems = async () => {\n    const res = await CoinsendaService.fetchActivityByAccount(params.account_id, page)\n    items_.current = [...items_.current, ...res]\n    res && setPage(page + 1)\n    if (res.length < 10) {\n      setLoadingItems(false)\n    }\n    setLoader(false)\n  }\n\n  const init = async () => {\n    window.requestAnimationFrame(async () => {\n      setLoadingItems(true)\n      setPage(0)\n      const elements = document.querySelectorAll(\".lazy\");\n      setElements(elements)\n    })\n  }\n\n  useEffect(() => {\n    init()\n  }, [])\n\n  useEffect(() => {    \n    entries && entries.forEach(async entry => {\n      if (entry.isIntersecting) {\n        await getItems()\n      }\n      if (!showLoaderItems) observer.unobserve(entry.target)\n    })\n  }, [entries, observer])\n\n  return (\n    <div className=\"ActivityView\">\n      <ActivityFilters view={params.primary_path} />\n      {\n        (loader) ?\n          <LoaderActivity />\n          :\n          <ActivityList\n            activity={items_.current}\n            {...props}\n          />\n      }\n      {showLoaderItems && (\n        <div\n          className=\"lazy\"\n          style={{ paddingTop: 20 }}\n        >\n          <LoaderActivity arrayLength={3} />\n        </div>\n      )}\n    </div>\n  )\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch)\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  const { loader } = state.isLoading\n  const { params } = props.match\n  const isWithdraws = params.primary_path === 'withdraw_accounts'\n\n  return {\n    loader,\n    isWithdraws\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityView)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport actions from '../../actions'\nimport { bindActionCreators } from 'redux'\nimport DetailContainerLayout from '../widgets/detailContainer/detailContainerLayout'\nimport { navigation_components } from '../api/ui/api.json'\nimport { Router, Route } from 'react-router-dom'\nimport AccountList from '../widgets/accountList/account-list'\n// import SimpleLoader from '../widgets/loaders'\nimport PropTypes from 'prop-types'\nimport { AccountListSkeletonLoader } from '../dashBoard/dashboard-container'\nimport { WalletDetail } from '../wallets/walletContainer'\nimport ActivityView from '../wallets/views/activity'\nimport withdrawActivity from '../wallets/views/withdraw-activity'\n\nfunction WitdrawAccountContainer(props) {\n\n  // userWallets, lo utilozamos para hacer validación de la respuesta del API\n  const title = \"Mis Cuentas de retiro\"\n\n  useEffect(() => {\n    props.action.cleanCurrentSection()\n    props.action.CurrentForm('bank')\n  }, [])\n\n  const { items_menu } = navigation_components.wallets\n  const { withdraw_accounts, isAppLoaded, data, history } = props\n\n  // console.log('||||||||||||||||||||||||||||||||| withdraw_accounts ', withdraw_accounts)\n\n  return (\n    <Router\n      history={history}\n    >\n\n      <Route path={[\"/:primary_path/:path/:account_id/\", \"/:primary_path\"]} render={routeProps => (\n        <DetailContainerLayout\n          items_menu={items_menu}\n          title={title}\n          {...props}\n          {...routeProps}\n        >\n          <Route strict path=\"/:primary_path/:path/:account_id\" component={(renderProps) => (\n            <WalletDetail wallets={data} {...renderProps} />\n          )} />\n          <>\n            <Route exact path=\"/:primary_path\" component={() => (\n              <>\n                {\n                  !withdraw_accounts ?\n                    <AccountListSkeletonLoader />\n                    :\n                    (isAppLoaded && withdraw_accounts) &&\n                    <AccountList isWithdrawView data={data} />\n                }\n              </>\n            )} />\n            <Route strict path={[\"/:primary_path/:path/:account_id\", \"/:primary_path/:path/:account_id/:tx_path\"]} component={withdrawActivity} />\n          </>\n        </DetailContainerLayout>\n      )} />\n\n    </Router>\n  )\n}\n\nWitdrawAccountContainer.propTypes = {\n  isAppLoaded: PropTypes.bool,\n  currencies: PropTypes.array,\n  current_wallet: PropTypes.object,\n  user: PropTypes.object,\n  withdraw_accounts: PropTypes.array\n}\n\nfunction mapStateToProps({ modelData, ui, isLoading }) {\n  const {\n    user\n  } = modelData\n\n  const {\n    isAppLoaded\n  } = isLoading\n\n  return {\n    withdraw_accounts: user.withdraw_accounts,\n    user,\n    current_wallet: ui.current_section.params.current_wallet,\n    currencies: modelData.currencies || null,\n    isAppLoaded,\n    data: modelData.withdraw_accounts\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WitdrawAccountContainer)\n"],"sourceRoot":""}