{"version":3,"sources":["components/withdrawAccounts/witdrawAccountContainer.js"],"names":["WitdrawAccountContainer","state","title","wallet_detail","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_5__","_this","current_wallet","className","_widgets_accountList_items__WEBPACK_IMPORTED_MODULE_13__","wallet","history","this","action","CurrentForm","console","log","current_section_clean","items_menu","navigation_components","_this$props","withdraw_accounts","app_loaded","react_router_dom__WEBPACK_IMPORTED_MODULE_11__","_widgets_detailContainer_detailContainerLayout__WEBPACK_IMPORTED_MODULE_9__","Object","assign","exact","path","component","AccountList","_widgets_loaders__WEBPACK_IMPORTED_MODULE_14__","Component","connect","_state$model_data","model_data","user","user_id","isLoading","ui","current_section","params","currencies","dispatch","bindActionCreators","actions"],"mappings":"kOAgBMA,6MAIJC,MAAQ,CACNC,MAAM,2BAgERC,cAAgB,SAAAC,GAGd,OACEC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KAEIC,EAAKL,MAAMM,gBACXL,EAAAC,EAAAC,cAAA,WAASI,UAAU,mBACjBN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAGEC,OAAQJ,EAAKL,MAAMM,eACnBI,QAASV,EAAMU,gGAtExBC,KAAKX,MAAMY,OAAOC,YAAY,QAC9BC,QAAQC,IAAI,yBAA0BJ,KAAKX,sDAI5CW,KAAKX,MAAMY,OAAOI,yDA0EV,IAEEC,EAAeC,IAAsBT,OAArCQ,WACAnB,EAAWa,KAAKd,MAAhBC,MAHFqB,EAImCR,KAAKX,MAAvCoB,EAJDD,EAICC,kBAAmBC,EAJpBF,EAIoBE,WAK1B,OACQpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEZ,QAASC,KAAKX,MAAMU,SAElBT,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACErB,EAAAC,EAAAC,cAACoB,EAAA,EAADC,OAAAC,OAAA,CACIR,WAAYA,EACZnB,MAAOA,GACHa,KAAKX,MACLW,KAAKd,OAKNwB,EAGAA,GAAcD,GACfnB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOI,OAAK,EAACC,KAAK,iBAAiBC,UAAWC,MAH5C5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,gBAlHUC,aAwKvBC,sBA7Bf,SAAyBnC,EAAOG,GAAM,IAAAiC,EAKhCpC,EAAMqC,WAFRC,EAHkCF,EAGlCE,KACAC,EAJkCH,EAIlCG,QAIAf,EACExB,EAAMwC,UADRhB,WAKF,MAAM,CACJD,kBAAkBe,EAAKC,GAAShB,kBAChCe,KAAKA,EAAKC,GACV9B,eAAeT,EAAMyC,GAAGC,gBAAgBC,OAAOlC,eAC/CmC,WAAW5C,EAAMqC,WAAWO,YAAc,KAC1CpB,eAKJ,SAA4BqB,GAC1B,MAAM,CACJ9B,OAAQ+B,6BAAmBC,IAASF,KAIzBV,CAA6CpC","file":"static/js/5.879c90d0.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport actions from '../../actions'\nimport { bindActionCreators } from 'redux'\nimport DetailContainerLayout from '../widgets/detailContainer/detailContainerLayout'\nimport { navigation_components } from '../api/ui/api.json'\nimport { Router, Switch, Route } from 'react-router-dom'\n// import ActivityView from '../wallets/views/activity'\nimport AccountList from '../widgets/accountList/item_account_list'\nimport ItemWallet from '../widgets/accountList/items'\nimport SimpleLoader from '../widgets/loaders'\nimport PropTypes from 'prop-types'\n// import { matchItem } from '../../services'\n\n\n\nclass WitdrawAccountContainer extends Component{\n\n// userWallets, lo utilozamos para hacer validación de la respuesta del API\n\n  state = {\n    title:\"Mis Cuentas de retiro\",\n  }\n\n\n  componentDidMount(){\n     // let path = this.props.match.path.replace('/', '')\n     this.props.action.CurrentForm('bank')\n     console.log('WithdrawAccount ====> ', this.props)\n  }\n\n  componentWillUnmount(){\n    this.props.action.current_section_clean()\n\t}\n\n\n\n  // init_sub_section = async(second_path, wallet_id) =>{\n  //   this.props.action.section_view_to('detail')\n  //   this.props.action.current_section_params({current_sub_section: second_path})\n  //\n  //\n  //   let current_wallet = this.props.current_wallet\n  //   // console.log('1!!!!!!!! CONSULTANDO::::::', current_wallet)\n  //   if(!current_wallet){\n  //     let wallet = await this.props.action.get_wallet_by_id(wallet_id)\n  //     if (wallet){\n  //       if(!this.props.currencies){await this.props.action.get_all_currencies()}\n  //       await this.get_short_currency(wallet)\n  //       // console.log('1!!!!!!!! CONSULTANDO DESDE SERVER....::::::', wallet)\n  //       return this.props.action.current_section_params({\n  //         current_wallet:wallet\n  //       })\n  //     }\n  //   }\n  //   await this.get_short_currency(current_wallet)\n  //   return current_wallet\n  // }\n\n  // get_short_currency = async(wallet) =>{\n  //   if(this.props.currencies && wallet){\n  //\n  //     let currencies = this.props.currencies\n  //     let currency_source = wallet.currency.currency\n  //\n  //     let currency = await matchItem(currencies, {primary:currency_source}, 'view')\n  //     return this.props.action.current_section_params({\n  //       short_name:currency.code\n  //     })\n  //   }\n  // }\n\n  // render_view = props =>{\n  //   const { match } = props\n  //   const { params } = match\n  //   return(\n  //     <Fragment>\n  //       {\n  //         params.path === 'activity' &&\n  //         <ActivityView initial={this.init_sub_section} {...props}/>\n  //       }\n  //     </Fragment>\n  //   )\n  // }\n\n  wallet_detail = props => {\n    // console.log('this is america___', props)\n    // console.log('this is AMERICAAA!!!', this.props)\n    return(\n      <Fragment>\n        {\n          this.props.current_wallet &&\n          <section className=\"WalletContainer\">\n            <ItemWallet\n            //   deposit_providers={this.props.deposit_providers}\n            //   delete_wallet={this.delete_wallet_confirmation}\n              wallet={this.props.current_wallet}\n              history={props.history}\n             />\n           </section>\n        }\n      </Fragment>\n    )\n  }\n\n\n    render(){\n\n      const { items_menu } = navigation_components.wallet\n      const { title }  = this.state\n      const {withdraw_accounts, app_loaded } = this.props\n\n\n      // console.log('|||||||||| °°°°°  WithdrawContainer  °°°°°||||||||||', this.props)\n\n      return(\n              <Router\n                history={this.props.history}\n              >\n                  <Switch>\n                    <DetailContainerLayout\n                        items_menu={items_menu}\n                        title={title}\n                        {...this.props}\n                        {...this.state}\n                      >\n                          {/* <Route exact path=\"/withdraw/:path/:id\" component={this.wallet_detail} /> */}\n                          {/* <Route exact path=\"/withdraw\" render={this.AccounList}  /> */}\n                        {\n                          !app_loaded ?\n                            <SimpleLoader/>\n                          :\n                          (app_loaded && withdraw_accounts) &&\n                          <Route exact path=\"/:primary_path\" component={AccountList}  />\n                        }\n                    </DetailContainerLayout>\n                  </Switch>\n              </Router>\n      )\n    }\n}\n\n\n\nWitdrawAccountContainer.propTypes = {\n  app_loaded:PropTypes.bool,\n  currencies:PropTypes.array,\n  current_wallet:PropTypes.object,\n  user:PropTypes.object,\n  withdraw_accounts:PropTypes.array\n}\n\n\n\n\nfunction mapStateToProps(state, props){\n\n  const {\n    user,\n    user_id,\n  } = state.model_data\n\n  const {\n    app_loaded\n  } = state.isLoading\n\n  // console.log('|||||||| withdraw_accounts', user[user_id], user[user_id].withdraw_accounts)\n\n  return{\n    withdraw_accounts:user[user_id].withdraw_accounts,\n    user:user[user_id],\n    current_wallet:state.ui.current_section.params.current_wallet,\n    currencies:state.model_data.currencies || null,\n    app_loaded\n    // ready:user && withdraw_accounts && withdraw_providers\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return{\n    action: bindActionCreators(actions, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WitdrawAccountContainer)\n"],"sourceRoot":""}