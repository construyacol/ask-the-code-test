{"version":3,"sources":["components/widgets/inputs/index.js","hooks/useNavigationKeyActions.js","components/widgets/modal/render/orderDetail/detailGenerator.js","components/withKeyActions.js","components/widgets/cropimg/Cropper/BarSlider.js","components/widgets/cropimg/Cropper/CropperIMG.js","components/widgets/cropimg/Cropper/do-img-crop.js","components/widgets/cropimg/index.js","components/widgets/modal/render/orderDetail/paymentProof.js","components/widgets/modal/render/orderDetail/orderStatus.js","components/widgets/modal/render/orderDetail/confirmationCounter.js","components/widgets/modal/render/orderDetail/inProcessOrder.js","components/widgets/modal/render/orderDetail/index.js","components/widgets/items/new-items-layout.js","components/wallets/views/viewAmount.js","components/withdrawAccounts/new/views/1method.js","components/wallets/deposit/views/modality.js","components/wallets/deposit/flows/index.js","components/wallets/deposit/depositLayout.js","components/widgets/toast/messages/index.js","components/wallets/deposit/depositContainer.js"],"names":["IconSwitch","loadable","CountryUrl","Environtment","InputForm","props","clase","disabled","address","focusAction","status","addressVerify","unFocusAction","state_item","autoFocus","className","style","display","label","active","type","placeholder","onChange","actualizarEstado","onFocus","onBlur","name","value","onKeyPress","handleKeyPress","autoComplete","icon","color","size","InputFormAuth","verifying","error","handleFocus","handleBlur","border","defaultValue","Component","InputDepositForm","state","placeHolder","window","innerWidth","finalValue","componentDidMount","this","setState","componentWillReceiveProps","number_format","render","actualizar","fontSize","length","InputCountryPrefix","toggleSection","search_result","open","update","clean_search_result","onClick","src","flag","alt","width","height","prefix","InputKycBasic","kyc","handleSubmit","step","_onFocus","search_results","Array","isArray","id","open_sect","top","map","item","inputProps","ui_type","console","log","min","max","pattern","classNames","onSubmit","data_state","colorMessage","message","InputCountry","update_country","country_match","reset_data","loader","idNextButton","useKeyActionAsClick","ui_name","DEFAULT_ARGS","modalRestriction","prev","next","default","originalLength","useNavigationKeyActions","config","valuesAsProps","uniqueIdForElement","items","currentSelection","setCurrentSelection","useState","isModalVisible","useSelector","form","isModalRenderShowing","ui","modal","useEffect","el","document","getElementById","focus","KEY_CODES_META","onkeydown","onkeyup","onkeypress","event","currentSelectionIsDownZero","elementId","keyCode","Math","newSelection","useItemsInteractions","keyActions","suprKeyAction","enterKeyAction","isSelected","setIsSelected","element","focusedId","onfocus","number","onblur","blur","stopPropagation","preventDefault","uniqid","setFocus","moment","locale","DetailGenerator","order","title","TitleSuffix","theme","orders","setOrders","deposit_providers","tx_path","UseTxState","formatCurrency","useFormatCurrency","formatOrderText","async","itemText","currency","spent","to_spend_currency","bought","to_buy_currency","getState","format","amount","confirmations","cost","currency_type","depositProviderInfo","deposit_provider_id","depositProvider","depositAccount","account","account_id","bussines_name","nit","created_at","amount_neto","inProcesOrder","transOrders","orderItem","Object","entries","ui_items","push","init","Container","TitleContainer","Title","indx","ItemContainer","LeftText","MiddleSection","RightText","fill","Text","styled","p","div","span","OnlySkeletonAnimation","section","device","tablet","withKeyActions","AsComponent","idCancel","eventName","idAccept","BarSlider","CropperIMG","image","onCropComplete","crop","setChange","x","y","zoom","setZoom","deg","setDeg","cropAreaStyle","minWidth","minHeight","rotation","onRotationChange","aspect","onCropChange","onZoomChange","_","croppedAreaPixels","e","currentTarget","newDeg","getRadianAngle","degreeValue","PI","createImage","url","Promise","resolve","reject","Image","addEventListener","setAttribute","CropImg","React","imageSrc","imgRotation","croppedImage","current_zoom","showCroppedImage","img","cropArea","action","isAppLoading","pixelCrop","canvas","createElement","ctx","getContext","safeArea","sqrt","translate","rotate","drawImage","data","getImageData","putImageData","UrlToImg","toBlob","file","URL","createObjectURL","base64","toDataURL","urlImg","getCroppedImg","subirImg","cancelCroppedImg","cancelarSubidaImg","_id","siguiente","connect","dispatch","bindActionCreators","actions","PaymentProof","payload","coinsendaServices","currencies","currentOrder","imgProof","setImgProof","txId","setTxId","urlExplorer","setUrlExplorer","getPaymentProof","paymentProof","proof_of_payment","raw","QRCode","node_url","proof","PP","getDepositById","updateOrder","update_item_state","getData","PaymentProofContainer","LoaderContainer","justify","ProofContainer","HoverProof","IconContainer","copy","FiatPaymentProofZoom","StatusItem","skeleton","activated","toString","Status","Indicator","Description","Skeleton","StatusTitle","ui_text","DateStatusText","updated_at","OrderStatus","movil","orderState","setOrderState","skeletons","prop","api","completed","OrderStatusContainer","TopSectionStatus","orderStatus","SubTitle","description","StatusContainer","index","ConfirmationCounter","total","draw","c","clearInterval","draw_interval","tasaPercent","beginPath","arc","lineWidth","strokeStyle","stroke","prevProps","setInterval","total_confirmations","AbsoluteContainer2","RelativeContainer","AbsoluteContainer","ContCanvasConfirmation","ConfirmationContainer","TextContainer","Canvas","InProcessOrder","onErrorCatch","FiatDespoitOrder","CryptoDespoitOrder","isTabletOrMovilViewport","useViewport","InProcessOrderContainer","OrderContainer","TopSection","getTitle","Currency","DateIdContainter","DateText","GetIcon","BottomSection","UploadComponent","onDrag","setOnDrag","imgSrc","setImgSrc","toBigNumber","toastMessage","useToastMessage","goFileLoader","target","files","img_compressor","dataBase64","readFile","includesAnyImageMime","split","alert","user","globalState","modelData","orderAmount","limitAmount","BIOMETRIC_FIAT_LITMIT_AMOUNT","security_center","transactionSecurity","biometric","enabled","isGreaterThanOrEqualTo","Element","FormsComponent","renderModal","confirmation","confirmDepositOrder","onDragOver","DropZoneComponent","dragLeave","DropZoneContainer","onDragLeave","capture","accept","unButtom","idForFileUpload","UploadContainer","UploadMiddle","UploadTextMiddle","UploadText","Buttom","coloIcon","RenderIcon","AiOutlineClockCircle","Section","laptop","tabletL","OrderSupervisor","on_click","forceClose","dataset","close_modal","includes","OrderDetail","isMovilViewport","TitleText","textState","colorState","Layout","OrderIcon","DateTitle","CircleIconContainer","ContBackTopSection","BackTopSection","textTotal","isFiatWithdraw","BottomSectionContainer","TitleBottom","TotalAmount","code","Icon","i","backTopSection","h3","orderStateColors","swing_in_bottom_bck","timerId","NewItemsLayout","actives","primarySelect","itemType","pair_id","handleClick","specialMode","doSelectionForItem","clearTimeout","setTimeout","_handleClick","_activated","getCdnPath","memo","ViewAmountComponent","statusInput","ui_currency_name","minAmount","min_amount","getMinAmount","withdrawProviders","withdraw_account_list","wProvider","forEach","_wProvider","provider_type","provider","_wAccount","bank_name","costs","same_bank","fixed","pp","parseInt","init_config","get_ui_name_currency","actualizarAmount","replace","substring","updateAmountOnState","load_amount","operation_type","available","componentWillUnmount","atributos","service","toUpperCase","parseFloat","mainCtaId","MethodView","select_method","item_active","subtitle","withdraw","movil_viewport","filter","key","idForAcceptButtonInDepositView","ModalityView","update_service_mode","service_mode","buttonActive","deposit_service","create_deposit_order","TransferFlow","deposit_way","service_modes","Success","CashFlow","short_bank_name","update_local_state","cash_payment","finalizar","final","finalButton","new_ticket","deposit_order","xmlns","strokeWidth","cx","cy","r","d","marginTop","zIndex","toggleModal","DepositLayout","type_currency","select_deposit_way","payment_method","SavePayment","DepositContainer","current_wallet","short_currency_name","itemActive","msgLoader","wallets_list","cost_id","match","params","deposit_provider_list","currentDepositProvider","update_control_form","searchMatch","search","UpdateFormControl","update_form","UpdateForm","select_currency","itemName","short_name","primerDeposito","wallets","res","getWalletsByUser","handleError","entities","current_wallets","services","matchNormalizeWallet","crearWallet","CurrentForm","unica_wallet","pop","to_deposit_wallet","msg","CleanForm","body","userId","country","settings","current_country","is_token","new_wallet","createWallet","id_wallet","history","maxDepositAmount","max_amount","decimalAmount","BigNumber","isLessThan","short","ppp","IncreaseStep","current","add_new_transaction_animation","deposit_provider","dep_prov","deposits","get_deposits","response","createDeposit","ReduceStep","new_deposit_model","unique_id","type_order","count","new_deposit","ModalView","success_sound","current_section_params","currentFilter","to_deposit_crypto","wallet","guardarMetodo","toast","position","POSITION","BOTTOM_RIGHT","pauseOnFocusLoss","draggablePercent","bodyClassName","progressClassName","toastId","autoClose","location","pathname","componentDidUpdate","route","coins","deposit","form_deposit","localCurrency","pairs","form_control_deposit","isLoading","search_deposit","globalServices","redux_route","menu_item_active","storage","activity_for_account","withCoinsendaServices","withRouter"],"mappings":"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","file":"static/js/35.b888e657.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport loadable from \"@loadable/component\";\nimport { number_format } from \"../../../utils\";\nimport { SimpleLoader } from \"../loaders\";\nimport Environtment from \"../../../environment\";\n// import MaskedInput from \"react-text-mask\";\n// import createAutoCorrectedDatePipe from \"text-mask-addons/dist/createAutoCorrectedDatePipe\";\nimport useKeyActionAsClick from \"../../../hooks/useKeyActionAsClick\";\nimport { getCdnPath } from '../../../environment'\nimport \"./inputStyles.css\";\n\nconst IconSwitch = loadable(() => import(\"../icons/iconSwitch\"));\nconst NumberInput = loadable(() => import(\"./numberInput\"));\n\n// const autoCorrectedDatePipe = createAutoCorrectedDatePipe(\"dd/mm/yyyy\");\nconst { CountryUrl } = Environtment;\n\nexport const InputFormConverter = (props) => {\n  return (\n    <div className=\"contInputFormConverter\">\n      {props.icon && (\n        <div className={`iconConverterContainer iConver ${props.iconPosition}`}>\n          <div className=\"contIconvert\">\n            <IconSwitch icon={props.icon} size={25} />\n          </div>\n          <p className=\"currencyNameConv fuente\">{props.currency_short_name}</p>\n        </div>\n      )}\n      <input\n        className={`inputElement ${props.iconPosition}`}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={props.onChange}\n        value={props.value}\n        // onFocus={props.focusAction}\n        // onBlur={unFocusAction}\n        name={props.name}\n        // defaultValue={props.value}\n        // disabled={disabled}\n      />\n    </div>\n  );\n};\n\nexport const InputForm = (props) => {\n  const {\n    clase,\n    disabled,\n    address,\n    focusAction,\n    status,\n    addressVerify,\n    unFocusAction,\n    state_item,\n    autoFocus,\n  } = props;\n  return (\n    <div className={`${!clase ? \"containerInputComponent\" : clase}`}>\n      <p\n        className=\"labelText fuente\"\n        style={{ display: !props.label ? \"none\" : \"initial\" }}\n      >\n        {props.label}\n      </p>\n      <div\n        className={`inputContainer ${\n          props.active ? \"inputActivado\" : \"\"\n        } ${state_item}`}\n      >\n        <input\n          className={`inputElement ${\n            props.active ? \"inputActivado\" : \"\"\n          } ${addressVerify}`}\n          type={props.type}\n          placeholder={props.placeholder}\n          onChange={props.actualizarEstado}\n          onFocus={focusAction}\n          onBlur={unFocusAction}\n          name={props.name}\n          value={props.value}\n          onKeyPress={\n            props.name === \"account_number\" ? props.handleKeyPress : null\n          }\n          disabled={disabled}\n          autoFocus={autoFocus}\n          autoComplete=\"off\"\n        />\n        {address && (\n          <div className=\"contIconAddress\">\n            <IconSwitch\n              icon={addressVerify === \"Verify\" ? \"verify\" : \"wallet\"}\n              color={addressVerify === \"Verify\" ? \"#4caf50\" : \"gray\"}\n              size={25}\n            />\n          </div>\n        )}\n      </div>\n      {(props.type === \"number\" || props.type === \"password\") && (\n        <p className=\"statusInput\">{status}</p>\n      )}\n    </div>\n  );\n};\n\nexport const InputFormAuth = (props) => {\n  const {\n    clase,\n    label,\n    active,\n    type,\n    placeholder,\n    actualizarEstado,\n    name,\n    value,\n    handleKeyPress,\n    status,\n    verifying,\n    error,\n    handleFocus,\n    handleBlur,\n    disabled,\n  } = props;\n\n  // console.log(`${}`)\n  // <SimpleLoader/>\n\n  return (\n    <div\n      className={`${!clase ? \"containerInputComponent AuthInputComp\" : clase}`}\n    >\n      <p\n        className=\"labelText fuente\"\n        style={{ display: !label ? \"none\" : \"initial\" }}\n      >\n        {label}\n      </p>\n      <div\n        // className={`inputContainer ${active ? 'inputActivado' : '' }`}\n        className=\"inputContainer inputAuths\"\n        style={{\n          border:\n            verifying && !active\n              ? \"1px solid #039aff\"\n              : active\n              ? \"1px solid #59b200\"\n              : error\n              ? \"1px solid red\"\n              : \"1px solid #50667a61\",\n        }}\n      >\n        {!verifying ? (\n          <input\n            className={`inputElement TwoFactorTypo fuente2`}\n            style={{ color: active ? \"#59b200\" : \"gray\" }}\n            type={type}\n            placeholder={placeholder}\n            onChange={actualizarEstado}\n            name={name}\n            defaultValue={value}\n            onKeyPress={name === \"account_number\" ? handleKeyPress : null}\n            onFocus={handleFocus ? handleFocus : null}\n            onBlur={handleBlur ? handleBlur : null}\n            disabled={disabled}\n            autoFocus={true}\n          />\n        ) : (\n          <div className=\"AuthLoader\">\n            <SimpleLoader />\n          </div>\n        )}\n      </div>\n      <p\n        className=\"statusInput fuente\"\n        style={{\n          color:\n            verifying && !active\n              ? \"#039aff\"\n              : active\n              ? \"#59b200\"\n              : error\n              ? \"red\"\n              : \"#50667a61\",\n        }}\n      >\n        <i\n          className=\"fas fa-check\"\n          style={{ display: active ? \"initial\" : \"none\" }}\n        ></i>\n        {status}\n      </p>\n    </div>\n  );\n};\n\nexport class ReadReceiveCoin extends Component {\n  render() {\n    const {\n      secondary_value,\n      placeholder,\n      secondary_coin,\n      isReadOnly,\n      active,\n      actualizarEstado,\n      name,\n      primary_value,\n      selectPair,\n      totalValue,\n    } = this.props;\n\n    return (\n      <>\n        {/* <div className={`${!clase ? 'containerInputComponent' : clase}`}> */}\n        <div className={`inputContainer ${active ? \"inputActivado\" : \"\"}`}>\n          {!secondary_value ? (\n            <div className=\"ReadReceiveCoinLoader\">\n              <SimpleLoader />\n            </div>\n          ) : (\n            <>\n              <div\n                className=\"coinBalance2 fuente2\"\n                onClick={() => selectPair(false)}\n              >\n                <div className=\"coinB2\">\n                  <i className=\"fas fa-angle-down\"></i>\n                  <p>{secondary_coin}</p>\n                  {secondary_coin && (\n                    <img\n                      src={`${getCdnPath('assets')}coins/${secondary_coin}.png`}\n                      alt=\"\"\n                      width=\"30\"\n                    />\n                  )}\n                </div>\n              </div>\n              {!isReadOnly ? (\n                <input\n                  className={`inputElement ${active ? \"inputActivado\" : \"\"}`}\n                  type=\"number\"\n                  placeholder={placeholder}\n                  onChange={actualizarEstado}\n                  name={name}\n                  value={primary_value}\n                />\n              ) : (\n                <p\n                  className=\"read_only\"\n                  style={{ color: active ? \"#3A7BD5\" : \"gray\" }}\n                >\n                  {\" \"}\n                  {totalValue} {totalValue ? secondary_coin : \"0\"}{\" \"}\n                </p>\n              )}\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport const InputFormCoin = (props) => {\n  const {\n    saldoDisponible,\n    coin,\n    value,\n    placeholder,\n    getMaxAvailable,\n    secondary_value,\n    handleChange,\n    useFiatInput,\n    active,\n    label,\n    name,\n    handleKeyPress,\n  } = props;\n\n  const isMovilViewport = window.innerWidth < 768;\n  return (\n    <>\n      {/* <div className={`${!clase ? 'containerInputComponent' : clase}`}> */}\n      <div>\n        <p\n          className=\"labelText fuente\"\n          style={{ display: !label ? \"none\" : \"initial\" }}\n        >\n          {label}\n        </p>\n        <div\n          className={`InputFormCoin inputContainer ${\n            active ? \"inputActivado\" : \"\"\n          }`}\n        >\n          <div\n            className=\"coinBalance fuente2\"\n            onClick={!secondary_value ? null : getMaxAvailable}\n          >\n            <p>\n              {!isMovilViewport && \"Saldo disponible \"}\n              {saldoDisponible > 0\n                ? useFiatInput\n                  ? `${number_format(saldoDisponible)}`\n                  : `${saldoDisponible}`\n                : \"0\"}{\" \"}\n              {coin}\n            </p>\n            {coin && (\n              <img\n                src={`${getCdnPath('assets')}coins/${coin}.png`}\n                alt=\"\"\n                width=\"30\"\n              />\n            )}\n          </div>\n          {useFiatInput ? (\n            <NumberInput\n              type=\"text\"\n              autoComplete=\"off\"\n              onChange={handleChange}\n              placeholder={placeholder}\n              name={name}\n              className={`inputElement ${active ? \"inputActivado\" : \"\"}`}\n              value={value}\n              max_available={saldoDisponible}\n            />\n          ) : (\n            <input\n              className={`inputElement ${active ? \"inputActivado\" : \"\"}`}\n              type=\"number\"\n              placeholder={placeholder}\n              onChange={handleChange}\n              name={name}\n              value={value}\n              onKeyPress={name === \"account_number\" ? handleKeyPress : null}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport class InputDepositForm extends Component {\n  state = {\n    placeHolder: window.innerWidth > 768 ? \"Escribe la cantidad\" : \"Cantidad\",\n    finalValue: \"\",\n  };\n\n  componentDidMount() {\n    this.setState({\n      finalValue: this.state.placeHolder,\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    // console.log('InputDepositForm / componentWillReceiveProps -', isNaN(props.value))\n    const { value } = props;\n\n    if (value) {\n      this.setState({\n        finalValue: number_format(value),\n      });\n    } else {\n      this.setState({\n        finalValue: this.state.placeHolder,\n      });\n    }\n  }\n\n  render() {\n    const { actualizar, handleKeyPress, value, name, autoFocus } = this.props;\n    const { finalValue } = this.state;\n    const style = {\n      fontSize:\n        finalValue.length < 10\n          ? \"90px\"\n          : finalValue.length < 15\n          ? \"60px\"\n          : \"40px\",\n    };\n\n    return (\n      <div className=\"containerInputComponent with-adapt\">\n        <input\n          className={`inputElement2 signoPesos fuente2 width-adapt-child`}\n          type=\"text\"\n          style={style}\n          placeholder={`$ ${finalValue}`}\n          onChange={actualizar}\n          name={name}\n          autoFocus={autoFocus}\n          value={value ? `$ ${finalValue}` : \"\"}\n          onKeyPress={handleKeyPress}\n        />\n      </div>\n    );\n  }\n}\n\nexport const InputCountryPrefix = (props) => {\n  const {\n    toggleSection,\n    search_result,\n    open,\n    update,\n    clean_search_result,\n    autoFocus,\n  } = props;\n\n  // @Param search_result:object  => modelo que almacena la información del país (imagen, prefijo)\n  // code: \"colombia\"\n  // flag: \"https://restcountries.eu/data/col.svg\"\n  // id: 1\n  // name: \"Colombia\"\n  // prefix: \"57\"\n\n  // @Param open:boolean => Define si esta desplegado el componente o contraido\n\n  // console.log('||||InputCountryPrefix', search_result && search_result.prefix)\n\n  return (\n    <div\n      className={`PhoneamEsta ${open ? \"openS\" : \"\"}`}\n      onClick={open ? null : toggleSection}\n    >\n      <div className=\"inputPhone\">\n        {search_result && (\n          <img\n            src={`${CountryUrl}${search_result.flag}`}\n            alt=\"\"\n            className=\"PhoneamEsta_img\"\n            width={20}\n            height={20}\n          />\n        )}\n        <p className=\"fuentePrin PhoneamEsta_p\">\n          + {search_result ? search_result.prefix[0] : \"--\"}\n        </p>\n        <div\n          className={`inputComponentPhone ${open ? \"openS\" : \"\"} ${\n            search_result ? \"search_result\" : \"\"\n          }`}\n        >\n          {search_result ? (\n            <p className={`search_result_kyc ${open ? \"openS\" : \"\"}`}>\n              {search_result.name}\n              <i\n                className=\"fas fa-times cerratelo\"\n                onClick={clean_search_result}\n              ></i>\n            </p>\n          ) : (\n            <input\n              type=\"text\"\n              className=\"inputElement3\"\n              autoFocus={autoFocus}\n              placeholder=\"Escribe el país del indicativo.\"\n              onChange={update}\n              // name=\"findbar_name\"\n              name=\"country_prefix\"\n            />\n          )}\n        </div>\n      </div>\n      <i\n        className={`fas fa-chevron-down PhoneamEsta_icon ${open ? \"anim\" : \"\"}`}\n        onClick={toggleSection}\n      ></i>\n      <span className=\"linePhone\"></span>\n    </div>\n  );\n};\n\nexport const InputKycBasic = (props) => {\n  const {\n    kyc,\n    update,\n    handleSubmit,\n    state,\n    step,\n    toggleSection,\n    _onFocus,\n    search_results,\n    clean_search_result,\n  } = props;\n\n  let search_result = Array.isArray(search_results) && search_results[0];\n  \n\n  return (\n    <div\n      id=\"kycPrime\"\n      className={`containerInputComponent2 ${state.open_sect ? \"openS\" : \"\"}`}\n    >\n      {/* <div id=\"kycPrime\" className={`containerInputComponent2`}> */}\n\n      <div className=\"inputLabelsCont\">\n        <div className=\"InputCarous\" style={{ top: `-${(step - 1) * 40}px` }}>\n          {kyc.map((item) => {\n            return (\n              <p key={item.id} className=\"labelText2 fuente\">\n                {item.label}\n              </p>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className={`inputContainer3 ${state.active ? \"inputActivado\" : \"\"}`}>\n        {kyc.map((item) => {\n          const isDateInput = state.ui_type === \"date\";\n          let inputProps = {}\n          if(isDateInput){\n            console.log('|||||||||||| isDateInput ====> ', state)\n            inputProps = {\n              min:\"1940-01-01\",\n              max:\"2003-12-12\",\n              pattern:/\\d{4}-\\d{2}-\\d{2}/,\n              autoFocus:true\n            }\n          }\n          const classNames = `inputElement3 ${state.active ? \"inputActivado\" : \"\"} ${state.ui_type === \"phone\" ? \"phone\" : \"\"}`;\n          return (\n            step === item.id && (\n              <form onSubmit={handleSubmit} key={item.id} id={`${state.ui_type === \"phone\" ? \"phone\" : \"\"}`}>\n                {state.ui_type === \"phone\" && (\n                  <InputCountryPrefix\n                    open={state.open_sect}\n                    autoFocus={true}\n                    search_result={search_result}\n                    {...props}\n                  />\n                )}\n\n                {/* {isDateInput && (\n                  <MaskedInput\n                    mask={[/\\d/, /\\d/, \"/\", /\\d/, /\\d/, \"/\", /\\d/, /\\d/, /\\d/, /\\d/,]}\n                    className={classNames}\n                    placeholder={item.placeholder}\n                    guide={true}\n                    name={item.name}\n                    autoFocus={true}\n                    pipe={autoCorrectedDatePipe}\n                    onChange={(e) => {\n                      e.persist();\n                      update(e);\n                    }}\n                  />\n                )} */}\n\n                {/* cuando se confirma deposito, consulto tx security si hay scope para confirmación de deposito */}\n                {/* type biometric user id */}\n                {/* identity service  */}\n                {/* biometric data */}\n\n                {search_result && state.ui_type === \"select\" ? (\n                  <p className={`search_result_kyc openS`}>\n                    {search_result.name}\n                    <i className=\"fas fa-times cerratelo\"  onClick={clean_search_result} ></i>\n                  </p>\n                ) : (\n                  (\n                    <input\n                      key={item.id}\n                      autoFocus={true}\n                      className={classNames}\n                      type={\n                        state.ui_type === \"phone\"\n                          ? \"text\"\n                          : state.ui_type === \"select\"\n                          ? \"text\"\n                          : state.ui_type\n                      }\n                      placeholder={\n                        state.data_state[item.name]\n                          ? state.data_state[item.name]\n                          : item.placeholder\n                      }\n                      onChange={update}\n                      name={item.name}\n                      value={state.data_state[item.name]}\n                      onFocus={_onFocus}\n                      {...inputProps}\n                    />\n                  )\n                )}\n              </form>\n            )\n          );\n        })}\n\n        <div className=\"InputProgressBar\">\n          <div\n            className=\"InputProgressed\"\n            style={{ width: step < 2 ? 0 : `${(step * 100) / kyc.length}%` }}\n          ></div>\n        </div>\n\n        <div\n          className={`ctaInputKyc ${state.open_sect ? \"openPhone\" : \"\"}`}\n          onClick={state.open_sect ? toggleSection : handleSubmit}\n        >\n          <div className=\"contCtaKyc\">\n            <i className=\"fas fa-arrow-right arrowcito backInputKyc\"></i>\n            <i\n              className={` ${\n                state.ui_type === \"phone\" ? \"fas fa-mobile-alt\" : \"fas fa-check\"\n              } frontInputKyc`}\n            ></i>\n          </div>\n        </div>\n      </div>\n      <div className=\"InputContainerT\">\n        <p\n          className=\"fuente Inputmsg\"\n          style={{ color: `${state.colorMessage}` }}\n        >\n          {state.message}\n        </p>\n        <p className=\"fuente2 InputStep\">\n          {step}/{kyc.length}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport const InputCountry = (props) => {\n  const {\n    handleSubmit,\n    update_country,\n    country_match,\n    reset_data,\n    disabled,\n    active,\n    loader,\n  } = props;\n\n  const idNextButton = useKeyActionAsClick(\n    true,\n    \"id-next-subfix-button\",\n    13,\n    false,\n    \"onkeydown\"\n  );\n\n  return (\n    <div id=\"kycPrime\" className=\"containerInputComponent3\">\n      <div className=\"inputLabelsCont\">\n        <div className=\"InputCarous\">\n          <p className=\"labelText3 fuente \">\n            Elige el país desde el que operarás\n          </p>\n        </div>\n      </div>\n\n      <div className={`inputContainer3 ${active ? \"inputActivado\" : \"\"}`}>\n        {loader && (\n          <div className=\"inputCountryLoader\">\n            <SimpleLoader loader={2} />\n          </div>\n        )}\n\n        {country_match ? (\n          <div className=\"country_selected\">\n            <IconSwitch icon={country_match.value} size={25} />\n            <p className=\"fuente\">{country_match.ui_name}</p>\n            <i className=\"fas fa-times cerratelo\" onClick={reset_data}></i>\n          </div>\n        ) : (\n          <form onSubmit={handleSubmit}>\n            <input\n              className={`inputElement3 ${active ? \"inputActivado\" : \"\"}`}\n              type=\"text\"\n              placeholder=\"Ej: Colombia\"\n              onChange={update_country}\n              name=\"country\"\n              disabled={disabled}\n              // defaultValue=\"\"\n            />\n          </form>\n        )}\n\n        <div className=\"InputProgressBar countryppp\">\n          {/* <div className=\"InputProgressed\" style={{ width: step<2 ? 0 : `${(((step*100))/kyc.length)}%` }} ></div> */}\n          <div\n            className=\"InputProgressed\"\n            style={{ width: country_match ? \"100%\" : \"0\" }}\n          ></div>\n        </div>\n\n        <i\n          id={idNextButton}\n          className={`fas fa-arrow-right arrowcito2 ${\n            country_match ? \"aparecer\" : \"\"\n          }`}\n          onClick={country_match ? handleSubmit : null}\n        ></i>\n      </div>\n      <div className=\"InputContainerT\">\n        {/* <p className=\"fuente Inputmsg\" style={{ color: `${colorMessage}` }} >{message}</p> */}\n        {/* <p className=\"fuente2 InputStep\" >{step}/{kyc.length}</p> */}\n      </div>\n    </div>\n  );\n};\n\nexport default InputForm;\n","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst DEFAULT_ARGS = {\n  modalRestriction: true,\n  prev: 37,\n  next: 39,\n  default: 0,\n  originalLength: false,\n};\n\n/**\n * useNavigationKeyActions simula la navegacion entre un grupo de objetos en el DOM.\n *\n * @param {Object} config representa la configuracion y datos del hook\n * @param {Array} config.items items representativos entre los cuales se navegara por medio de key event\n * @param {Boolean} config.loader indentifica cuando el componente esta listo para ejecutar la accion de navegar\n * @param {String} config.uniqueIdForElement id que identificara los elementos navegables\n * @param {Boolean} config.modalRestriction restringe el uso de esta funcion en modales, por defecto es true\n * @param {Event.keyCode|Number} config.prev representa el keyCode a ser referenciendo como previo o anterior,\n * por defecto es 37\n * @param {Event.keyCode|Number} config.next representa el keyCode a ser referenciendo siguiente,\n * por defecto es 39\n * @param {Number} config.default numero del elemento a seleccionar por default, por defecto es el Elmento 0\n * @return _setCurrentSelection\n *\n * @example\n * const setCurrentElement = useNavigationKeyActions({ items: [...n], loader: subscription(), uniqueIdForElement: \"my-uniqueIdForElement-\" })\n * @see useItemsInteractions\n * @see window.onkeydown\n */\nexport default function useNavigationKeyActions(config) {\n  const valuesAsProps = { ...DEFAULT_ARGS, ...config };\n  const { modalRestriction, uniqueIdForElement, loader, items } = valuesAsProps;\n  const [currentSelection, setCurrentSelection] = useState(-1);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let isModalVisible = modalRestriction && useSelector((state) => state.form.isModalVisible);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let isModalRenderShowing = modalRestriction && useSelector((state) => state.ui.modal.render);\n\n  useEffect(() => {\n    if (items && items.length > 0 && !loader) {\n      if (isModalVisible) return;\n      const el = document.getElementById(\n        `${uniqueIdForElement}${valuesAsProps.default}`\n      );\n      el && el.focus();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [items, loader]);\n\n  useEffect(() => {\n    if (modalRestriction && (isModalRenderShowing || isModalVisible)) {\n      setCurrentSelection(-1);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isModalRenderShowing, isModalVisible]);\n\n  useEffect(() => {\n    // this is for mobile\n    if (window.innerWidth < 900) {\n      window.KEY_CODES_META = null;\n      window.onkeydown = null;\n      window.onkeyup = null;\n      window.onkeypress = null;\n      return () => null;\n    } else {\n      window.onkeydown = (event) => {\n        if (\n          !isModalRenderShowing &&\n          !isModalVisible &&\n          items &&\n          items.length > 0\n        ) {\n          if (isModalVisible) return;\n          const length = valuesAsProps.originalLength\n            ? items.length\n            : items.length - 1;\n          const currentSelectionIsDownZero = currentSelection < 0;\n          let elementId = 0;\n          let el = null;\n          if (event.keyCode === valuesAsProps.prev) {\n            elementId = currentSelectionIsDownZero\n              ? length\n              : currentSelection - 1;\n            el = document.getElementById(\n              `${uniqueIdForElement}${Math.max(0, elementId)}`\n            );\n          }\n          if (event.keyCode === valuesAsProps.next) {\n            elementId = currentSelectionIsDownZero ? 0 : currentSelection + 1;\n            el = document.getElementById(\n              `${uniqueIdForElement}${Math.min(length, elementId)}`\n            );\n          }\n          if (event.keyCode === 13) {\n            elementId = currentSelectionIsDownZero ? 0 : currentSelection;\n            el = document.getElementById(\n              `${uniqueIdForElement}${Math.min(length, elementId)}`\n            );\n          }\n          if (el) {\n            el.focus();\n            // event.preventDefault()\n            // event.stopPropagation()\n          }\n        }\n      };\n    }\n\n    return () => {\n      window.onkeydown = false;\n    };\n    \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    window.onkeydown,\n    isModalVisible,\n    items,\n    loader,\n    isModalRenderShowing,\n    currentSelection,\n  ]);\n\n  const _setCurrentSelection = (newSelection) => {\n    if (currentSelection !== newSelection) {\n      setCurrentSelection(newSelection);\n    }\n  };\n  return [_setCurrentSelection];\n}\n\n/**\n * useItemsInteractions contiene toda las interacciones del elemento, como seleccionarlo como puntero actual hasta\n * las acciones que presenta cuando el seleccionado.\n *\n * @param {Object} props properties heredadas del componente que usara este hook\n * @param {Function} props.setCurrentSelection function retornada de useNavigationKeyActions usada para seleccionar\n * el elemento como puntero actual\n * @param {Number} props.number number index del elemento en el array\n * @param {String} props.focusedId id referencial del elemento en el DOM\n *\n * @param {Object} keyActions restringe el uso de esta funcion en modales, por defecto es true\n * @param {Function} keyActions.suprKeyAction accion al presionar la tecla suprimir\n * @param {Function} keyActions.enterKeyAction accion al presionar la tecla enter\n * @param {Boolean} modalRestriction restringe este hook en modales\n * @return {[Boolean, Function]} [isSelected, setFocus]\n *\n * @example\n * const setCurrentElement = useItemsInteractions(props, {...}, false)\n * @see useNavigationKeyActions\n * @see Element.onkeydown\n */\nexport function useItemsInteractions(\n  props,\n  keyActions,\n  modalRestriction = true\n) {\n  const { suprKeyAction, enterKeyAction } = keyActions;\n  const [isSelected, setIsSelected] = useState(false);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const isModalVisible = modalRestriction && useSelector((state) => state.form.isModalVisible);\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const isModalRenderShowing = modalRestriction && useSelector((state) => state.ui.modal.render);\n\n  useEffect(() => {\n    // this is for mobile\n    if (window.innerWidth < 900) {\n      window.KEY_CODES_META = null;\n      window.onkeydown = null;\n      window.onkeyup = null;\n      window.onkeypress = null;\n      return () => null;\n    } else {\n      const element = document.getElementById(props.focusedId);\n      if (element) {\n        element.onfocus = () => {\n          setIsSelected(true);\n          props.setCurrentSelection(props.number);\n        };\n\n        element.onblur = () => {\n          setIsSelected(false);\n        };\n\n        element.onkeydown = (event) => {\n          element.blur();\n          if (isModalVisible || isModalRenderShowing) return;\n          if (event.keyCode === 46) {\n            event.stopPropagation();\n            suprKeyAction(() => element.focus());\n          }\n          if (event.keyCode === 13) {\n            enterKeyAction();\n            event.stopPropagation();\n            event.preventDefault();\n          }\n        };\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isModalVisible, props.uniqid]);\n\n  const setFocus = () => {\n    const element = document.getElementById(props.focusedId);\n    element && element.focus();\n  };\n\n  return [isSelected, setFocus];\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { OnlySkeletonAnimation } from \"../../../loaders/skeleton\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport { useFormatCurrency } from \"../../../../hooks/useFormatCurrency\";\nimport { getState } from \"./\";\nimport { device } from \"../../../../../const/const\";\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nmoment.locale(\"es\");\n\nconst DetailGenerator = ({ order, title, TitleSuffix, theme }) => {\n  const [orders, setOrders] = useState([]);\n  const { deposit_providers, tx_path } = UseTxState();\n  const [, formatCurrency] = useFormatCurrency();\n\n  const formatOrderText = async (itemText) => {\n    console.log(itemText, tx_path)\n    switch (itemText[0]) {\n      case \"to_spend_currency\":\n        return [\"Moneda gastada:\", itemText[1].currency];\n      case \"to_buy_currency\":\n        return [\"Moneda adquirida:\", itemText[1].currency];\n      case \"currency\":\n        return [\"Divisa:\", itemText[1].currency];\n      case \"spent\":\n        return [\n          \"Cantidad gastada:\",\n          await formatCurrency(order.spent, order.to_spend_currency),\n        ];\n      case \"bought\":\n        return [\n          \"Cantidad adquirida:\",\n          await formatCurrency(order.bought, order.to_buy_currency),\n        ];\n      case \"state\":\n        return [\"Estado:\", getState(itemText[1])];\n      case \"price_percent\":\n        return [\"Comisión:\", itemText[1]];\n      case \"id\":\n        return [\"Número de orden:\", itemText[1]];\n      case \"created_at\":\n        return [\"Creado en:\", moment(itemText[1]).format(\"LL\")];\n      case \"updated_at\":\n        return [\"Actualizado en:\", moment(itemText[1]).format(\"LL\")];\n      case \"expiration_date\":\n        return [\"Expira en:\", moment(itemText[1]).format(\"LL\")];\n      case \"amount\":\n        return [\n          \"Cantidad:\",\n          await formatCurrency(order.amount, order.currency),\n        ];\n      // case \"amount_neto\":\n      //   return [\n      //     \"Cantidad neta:\",\n      //     await formatCurrency(order.amount_neto, order.currency),\n      //   ];\n      case \"confirmations\":\n        return [\"Confirmations:\", order.confirmations];\n      case \"cost\":\n        return [`Costo ${tx_path === 'withdraws' ? 'retiro' : 'depósito'}:`, order.cost];\n      case \"sent\":\n        return [\"Operación:\", itemText[1] ? \"Debitado\" : \"-- Sin debitar --\"];\n\n      case \"referral\":\n      case \"amount_neto\":\n      case \"to_buy_symbol\":\n      case \"to_spend_symbol\":\n      case \"need_referral_process\":\n      case \"referrer_payment_info\":\n      case \"fee\":\n      case \"tax\":\n      case \"withdraw_provider\":\n      case \"withdraw_account\":\n      case \"metadata\":\n      case \"withdraw_account_id\":\n      case \"withdraw_provider_id\":\n      case \"account_to\":\n      case \"account_from\":\n      case \"type\":\n      case \"pair_id\":\n      case \"taged\":\n      case \"action_price\":\n      case \"country\":\n      case \"userId\":\n      case \"user\":\n      case \"cost_struct\":\n      case \"fee_struct\":\n      case \"info\":\n      case \"tax_struct\":\n      case \"account_id\":\n      case \"locked\":\n      case \"currency_type\":\n      case \"cost_id\":\n      case \"deposit_provider_id\":\n      case \"type_order\":\n      case \"activeTrade\":\n      case \"paymentProof\":\n      case \"withdraw_proof\":\n      case \"requestedFundsOrigin\":\n      case \"proof\":\n      case \"comment\":\n      case \"provider_type\":\n      case \"visible\":\n      case \"inscribed\":\n      case \"inscriptions\":\n      case \"used_counter\":\n        return;\n      default:\n        return itemText;\n    }\n  };\n\n  const inProcesOrder = async (order) => {\n    switch (order.currency_type) {\n      case \"fiat\":\n        let depositProviderInfo = [];\n        if (deposit_providers && deposit_providers[order.deposit_provider_id]) {\n          const depositProvider = deposit_providers[order.deposit_provider_id];\n          depositProviderInfo = [\n            [\n              \"Entidad de depósito:\",\n              `${depositProvider.depositAccount.ui_name}`,\n            ],\n            [\n              `${depositProvider.depositAccount.account.type.ui_name}`,\n              `${depositProvider.depositAccount.account.type.type}`,\n            ],\n            [\n              `${depositProvider.depositAccount.account.account_id.ui_name}`,\n              `${depositProvider.depositAccount.account.account_id.account_id}`,\n            ],\n            [\n              `${depositProvider.depositAccount.account.bussines_name.ui_name}`,\n              `${depositProvider.depositAccount.account.bussines_name.bussines_name}`,\n            ],\n            [\n              `${depositProvider.depositAccount.account.nit.ui_name}`,\n              `${depositProvider.depositAccount.account.nit.nit}`,\n            ],\n          ];\n        }\n        // console.log('deposit_providers', order)\n        const amount = await formatCurrency(order.amount, order.currency);\n        // const amount_neto = await formatCurrency(\n        //   order.amount_neto,\n        //   order.currency\n        // );\n\n        setOrders([\n          ...depositProviderInfo,\n          // [\n          //   \"Comisión:\",\n          //   `${order.fee_struct && `${order.fee_struct.percent}%`} ~ ${\n          //     order.fee\n          //   }`,\n          // ],\n          // [\"Impuesto:\", `~ ${order.tax}`],\n          [\"Cantidad acreditada:\", `~ $${amount}`],\n          [\"Total a depositar:\", `~ $${amount}`],\n        ]);\n        break;\n      case \"crypto\":\n        setOrders([\n          [\"Número de orden:\", order.id],\n          [\"Estado:\", getState(order.state)],\n          [\"Divisa:\", `${order.currency.currency}`],\n          [\"Orden creada en:\", moment(order.created_at).format(\"LL\")],\n          [\"Confirmaciones:\", order.confirmations],\n          [\n            \"Cantidad acreditada:\",\n            await formatCurrency(order.amount, order.currency),\n          ],\n          [\"Costo de operación:\", order.cost],\n          [\n            \"Total depósito:\",\n            await formatCurrency(order.amount_neto, order.currency),\n          ],\n        ]);\n        break;\n      default:\n    }\n  };\n\n  useEffect(() => {\n    // the order is converted to an array and formatted\n    if (!order) {\n      return;\n    }\n    const init = async () => {\n      if (\n        (order.state === \"pending\" || order.state === \"confirmed\") &&\n        tx_path === \"deposits\"\n      ) {\n        return await inProcesOrder(order);\n      }\n      const transOrders = [];\n      for (let orderItem of Object.entries(order)) {\n        const ui_items = await formatOrderText(orderItem);\n        // console.log(ui_items)\n        if (ui_items) {\n          transOrders.push(ui_items);\n        }\n      }\n      setOrders(transOrders);\n    };\n    init();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [deposit_providers]);\n\n  // console.log(order, orders)\n\n  return (\n    <Container className={`${title ? \"withTitle\" : \"\"} ${theme}`}>\n      {title && (\n        <TitleContainer\n          className={`${TitleSuffix ? \"titleSuffix\" : \"\"} ${order.state}`}\n        >\n          <Title className=\"fuente\">{title}</Title>\n          {TitleSuffix && <TitleSuffix />}\n        </TitleContainer>\n      )}\n      {orders && orders.length\n        ? orders.map((item, indx) => {\n            return (\n              <ItemContainer\n                key={indx}\n                className={`${\n                  orders.length === indx + 1 &&\n                  order.state &&\n                  tx_path === \"deposits\" &&\n                  order.state\n                }`}\n              >\n                <LeftText className=\"fuente\">{item[0]}</LeftText>\n                <MiddleSection />\n                <RightText className=\"fuente2\">{item[1]}</RightText>\n              </ItemContainer>\n            );\n          })\n        : new Array(10).fill(\"1\").map((item, indx) => {\n            return (\n              <ItemContainer className=\"skeleton\" key={indx}>\n                <LeftText>skeleton --</LeftText>\n                <MiddleSection />\n                <RightText>skeleton -------- </RightText>\n              </ItemContainer>\n            );\n          })}\n    </Container>\n  );\n};\n\nexport default DetailGenerator;\n\nconst Text = styled.p`\n  width: auto;\n  margin: 0;\n  font-size: 14px;\n`;\n\n// const TotalAmountContainer = styled.div`\n//   width: 100%;\n//   height: 50px;\n//   margin-top: 10px;\n//   border-top: 1px solid #bfbfbf;\n//   display: flex;\n//   justify-content: space-between;\n// `;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  &.titleSuffix {\n    justify-content: space-between;\n  }\n  &.pending p {\n    color: #ff8660;\n  }\n  &.confirmed p {\n    color: #1cb179;\n  }\n`;\n\nconst Title = styled(Text)`\n  font-size: 17px;\n  font-weight: bold;\n`;\nconst RightText = styled(Text)`\n  text-align: right;\n  padding-left: 15px;\n  text-transform: capitalize;\n  white-space: nowrap;\n  max-width: 350px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst LeftText = styled(Text)`\n  text-align: left;\n  padding-right: 15px;\n  font-weight: bold;\n`;\nconst MiddleSection = styled.span`\n  border-bottom: 1px dotted;\n  opacity: 0.15;\n`;\n\nconst ItemContainer = styled.div`\n  width: 100%;\n  height: 20px;\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n\n  &.skeleton {\n    ${OnlySkeletonAnimation}\n    ${RightText}, ${LeftText} {\n      background: gray;\n      height: 16px;\n      border-radius: 3px;\n      opacity: 0.5;\n    }\n  }\n\n  &.pending,\n  &.confirmed {\n    height: 50px;\n    margin-top: 10px;\n    border-top: 1px solid #bfbfbf;\n    align-items: center;\n    ${RightText}, ${LeftText} {\n      font-size: 18px;\n      color: #383838;\n    }\n    ${RightText} {\n      font-size: 20px;\n      font-weight: bold;\n    }\n  }\n`;\n\nconst Container = styled.section`\n  width: calc(100% - 70px);\n  height: calc(100% - 50px);\n  display: grid;\n  grid-template-rows: repeat(auto-fill, 20px);\n  row-gap: 7px;\n  padding: 25px 35px;\n\n  @media ${device.tablet} {\n    padding: 25px 20px;\n    width: calc(100% - 40px);\n  }\n\n  &.withTitle {\n    height: calc(100% - 95px);\n    padding-top: 70px;\n    grid-template-rows: 70px repeat(auto-fill, 20px);\n  }\n\n  ${Text}, ${MiddleSection} {\n    color: gray;\n  }\n\n  &.darkTheme {\n    p {\n      color: white;\n    }\n  }\n`;\n\n//\n","import React from \"react\";\nimport useKeyActionAsClick from \"../hooks/useKeyActionAsClick\";\n\nexport default function withKeyActions(AsComponent) {\n  return function (props) {\n    const idCancel = useKeyActionAsClick(\n      true,\n      `cancel-button-${props.eventName}`,\n      8,\n      true,\n      props.eventName,\n      true\n    );\n    const idAccept = useKeyActionAsClick(\n      true,\n      `accept-button-${props.eventName}`,\n      13,\n      false,\n      props.eventName,\n      true\n    );\n\n    return <AsComponent idCancel={idCancel} idAccept={idAccept} {...props} />;\n  };\n}\n","import React from \"react\";\nimport \"./bar-slider-styles.css\";\n\nexport default function BarSlider({ ...props }) {\n  return <input type=\"range\" {...props} />;\n}\n","import React, { useState } from \"react\";\nimport Cropper from \"react-easy-crop\";\nimport BarSlider from \"./BarSlider\";\nimport { AiOutlineMinus } from \"react-icons/ai\";\nimport { FiRotateCcw, FiPlus } from \"react-icons/fi\";\n\nconst MAX_ZOOM = 3;\nconst MIN_ZOOM = 0.5;\nconst ASPECT = 4 / 3;\nconst SLIDER_STEP = 0.05;\n\nexport default function CropperIMG({ image, onCropComplete }) {\n  const [crop, setChange] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n  const [deg, setDeg] = useState(360);\n\n  return (\n    <>\n      <div className=\"crop-container\">\n        <Cropper\n          image={image}\n          style={{\n            cropAreaStyle: {\n              minWidth: 256,\n              minHeight: 192,\n            },\n          }}\n          rotation={deg}\n          onRotationChange={setDeg}\n          crop={crop}\n          aspect={ASPECT}\n          zoom={zoom}\n          onCropChange={setChange}\n          onZoomChange={setZoom}\n          onCropComplete={(_, croppedAreaPixels) =>\n            onCropComplete(croppedAreaPixels, deg)\n          }\n        />\n      </div>\n      <div className=\"crop-controls\">\n        <div>\n          <AiOutlineMinus\n            color=\"gray\"\n            size={20}\n            onClick={() => zoom > 0.1 && setZoom(zoom - 0.3)}\n          />\n          <BarSlider\n            value={zoom}\n            onChange={(e) => setZoom(e.currentTarget.value)}\n            step={SLIDER_STEP}\n            min={MIN_ZOOM}\n            max={MAX_ZOOM}\n          />\n          <FiPlus\n            color=\"gray\"\n            size={20}\n            onClick={() => zoom < 7 && setZoom(zoom + 0.3)}\n          />\n        </div>\n        <div>\n          <FiRotateCcw\n            color=\"gray\"\n            size={20}\n            onClick={() => {\n              const newDeg = deg - 90;\n              setDeg(newDeg < 0 ? 360 : newDeg);\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","function getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180;\n}\n\nexport const createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener(\"load\", () => resolve(image));\n    image.addEventListener(\"error\", (error) => reject(error));\n    image.setAttribute(\"crossOrigin\", \"anonymous\");\n    image.src = url;\n  });\n\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\n  const image = await createImage(imageSrc);\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  if (!ctx) {\n    return null;\n  }\n\n  const maxSize = Math.max(image.width, image.height);\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\n\n  canvas.width = safeArea;\n  canvas.height = safeArea;\n\n  ctx.translate(safeArea / 2, safeArea / 2);\n  ctx.rotate(getRadianAngle(rotation));\n  ctx.translate(-safeArea / 2, -safeArea / 2);\n\n  ctx.drawImage(\n    image,\n    safeArea / 2 - image.width * 0.5,\n    safeArea / 2 - image.height * 0.5\n  );\n  const data = ctx.getImageData(0, 0, safeArea, safeArea);\n\n  canvas.width = pixelCrop.width;\n  canvas.height = pixelCrop.height;\n\n  ctx.putImageData(\n    data,\n    0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x,\n    0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y\n  );\n\n  const UrlToImg = new Promise((resolve, reject) => {\n    canvas.toBlob((file) => {\n      resolve(URL.createObjectURL(file));\n    }, \"image/jpeg\");\n  });\n\n  return {\n    base64: canvas.toDataURL(\"image/jpeg\"),\n    urlImg: UrlToImg,\n  };\n}\n","import React, { Fragment } from \"react\";\nimport { ButtonForms } from \"../buttons/buttons\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport actions from \"../../../actions\";\nimport CropperIMG from \"./Cropper/CropperIMG\";\nimport \"./styles.css\";\nimport getCroppedImg from \"./Cropper/do-img-crop\";\nimport withKeyActions from \"../../withKeyActions\";\n\nclass CropImg extends React.Component {\n  state = {\n    imageSrc: this.props.imageSrc || null,\n    crop: { x: 0, y: 0 },\n    zoom: 1,\n    aspect: 4 / 3,\n    croppedAreaPixels: null,\n    imgRotation: 0,\n    croppedImage: null,\n  };\n\n  onCropChange = (crop) => {\n    this.setState({ crop });\n  };\n\n  onCropComplete = (croppedAreaPixels, imgRotation) => {\n    // console.log(croppedArea, croppedAreaPixels)\n    this.setState({ croppedAreaPixels, imgRotation });\n  };\n\n  onZoomChange = (zoom) => {\n    let current_zoom = this.state.zoom;\n\n    if (zoom > current_zoom && zoom <= 3) {\n      current_zoom += 0.06;\n    } else {\n      current_zoom = zoom;\n    }\n\n    // if(zoom<current_zoom){\n    //   current_zoom -= 0.06\n    // }\n\n    this.setState({ zoom: current_zoom });\n  };\n\n  // onFileChange = async e => {\n  //   if (e.target.files && e.target.files.length > 0) {\n  //     const imageDataUrl = await readFile(e.target.files[0])\n  //\n  //     this.setState({\n  //       imageSrc: imageDataUrl,\n  //       crop: { x: 0, y: 0 },\n  //       zoom: 1,\n  //     })\n  //   }\n  // }\n\n  showCroppedImage = async (img, cropArea, rotation) => {\n\n    await this.props.action.isAppLoading(true);\n    const croppedImage = await getCroppedImg(\n      this.state.imageSrc,\n      this.state.croppedAreaPixels,\n      this.state.imgRotation\n    );\n    if (!croppedImage) {\n      return this.props.action.isAppLoading(false);\n    }\n\n    const { urlImg } = croppedImage;\n\n    await this.setState({ croppedImage: urlImg });\n    this.props.subirImg(croppedImage);\n    // await this.props.action.isAppLoading(false)\n  };\n\n  cancelCroppedImg = () => {\n    this.setState({\n      croppedImage: null,\n    });\n    this.props.cancelarSubidaImg();\n  };\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      imageSrc: props.imageSrc,\n    });\n  }\n\n  render() {\n    // console.log('DESDE CROP IMG COMPONENT_______', this.state, this.props)\n    return (\n      <div className=\"App\">\n        {this.state.imageSrc && (\n          <Fragment>\n            <CropperIMG\n              onCropComplete={this.onCropComplete}\n              image={this.state.imageSrc}\n            />\n            <div className=\"ImgCropcontrols\">\n              <ButtonForms\n                _id={this.props.idCancel}\n                active={true}\n                type=\"secundary\"\n                siguiente={this.cancelCroppedImg}\n              >\n                Cancelar\n              </ButtonForms>\n              {/* <img src={this.state.croppedImage} alt=\"\" width=\"40\"/> */}\n\n              <ButtonForms\n                _id={this.props.idAccept}\n                active={true}\n                type=\"primary\"\n                siguiente={this.showCroppedImage}\n              >\n                Guardar\n              </ButtonForms>\n            </div>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(withKeyActions(CropImg));\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport CropImg from \"../../../cropimg\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport QRCode from \"qrcode\";\nimport SimpleLoader from \"../../../loaders\";\nimport { MdContentCopy } from \"react-icons/md\";\nimport { BsUpload } from \"react-icons/bs\";\nimport { copy } from \"../../../../../utils\";\nimport useToastMessage from \"../../../../../hooks/useToastMessage\";\nimport Zoom from \"react-medium-image-zoom\";\nimport \"react-medium-image-zoom/dist/styles.css\";\n\nconst PaymentProofComponent = ({ imgSrc, setImgSrc, order_id }) => {\n  const [activeSection, setActiveSection] = useState(true);\n  const { coinsendaServices, actions } = UseTxState();\n  const [toastMessage] = useToastMessage();\n\n  const subirImg = async ({ base64 }) => {\n    setImgSrc(base64);\n    setActiveSection(null);\n    actions.isAppLoading(true);\n    let confirmation = await coinsendaServices.confirmDepositOrder(\n      order_id,\n      base64\n    );\n    if (!confirmation) {\n      actions.isAppLoading(false);\n      toastMessage(\"El deposito No se ha confirmado\", \"error\");\n      setImgSrc(null);\n    }\n  };\n\n  const cancelarSubidaImg = () => {\n    setActiveSection(null);\n    setImgSrc(null);\n  };\n\n  useEffect(() => {\n    let element = document.getElementById(\"close-button-with-OtherModalLayout\");\n    if (activeSection) {\n      if (element) {\n        element.scrollTo(0, 0);\n        element.classList.add(\"inactive\");\n      }\n    }\n    return () => {\n      if (element) {\n        element.classList.remove(\"inactive\");\n      }\n    };\n  }, [activeSection]);\n\n  return (\n    <OverflowContainer>\n      <Container className={`${activeSection ? \"activated\" : \"\"}`}>\n        <CropImg\n          imageSrc={imgSrc}\n          subirImg={subirImg}\n          cancelarSubidaImg={cancelarSubidaImg}\n        />\n      </Container>\n    </OverflowContainer>\n  );\n};\n\n// const CropEdit = styled.div`\n//   width: 100%;\n//   height: 50px;\n//   background: #f5f5f5;\n//   border-radius: 4px;\n//   box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.1);\n// `;\n\n// const ImgContainer = styled.div`\n//   width: 100%;\n//   max-width: 550px;\n//   background: rgba(255, 255, 255, 0.4);\n//   border-radius: 6px;\n// `;\n\nconst OverflowContainer = styled.section`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  z-index: 3;\n  display: grid;\n  overflow: hidden;\n\n  @media (max-width: 768px) {\n    height: 100vh;\n  }\n`;\n\nconst Container = styled.div`\n  padding: 50px;\n  background: #232c35;\n  transition: 0.3s;\n  transform: translateX(100%);\n  display: grid;\n  grid-template-rows: 1fr;\n  row-gap: 20px;\n  justify-items: center;\n\n  .App {\n    height: 100% !important;\n    width: 100%;\n  }\n\n  .ImgCropcontrols {\n    background: transparent !important;\n  }\n\n  &.activated {\n    animation-name: activated;\n    animation-duration: 0.8s;\n    animation-fill-mode: forwards;\n  }\n\n  @keyframes activated {\n    0% {\n      transform: translateX(100%);\n    }\n    50% {\n      transform: translateX(100%);\n    }\n    100% {\n      transform: translateX(0%);\n    }\n  }\n`;\n\nexport default PaymentProofComponent;\n\nexport const PaymentProof = ({ payload }) => {\n  // console.log('PaymentProof', payload)\n  const {\n    // primary_path,\n    coinsendaServices,\n    actions,\n    currencies,\n    currentOrder,\n    loader,\n    tx_path,\n  } = UseTxState();\n  const [imgProof, setImgProof] = useState(payload);\n  const [txId, setTxId] = useState();\n  const [urlExplorer, setUrlExplorer] = useState();\n\n  const getPaymentProof = async (currentOrder) => {\n    // alert('getpayment')\n    if (currentOrder.paymentProof) {\n      // alert('tiene pp')\n      const { proof_of_payment } = currentOrder.paymentProof;\n      // console.log(`${currencies[currentOrder.currency.currency].node_url}tx/${proof_of_payment.proof}`)\n      setImgProof(\n        currentOrder.currency_type === \"fiat\"\n          ? `data:image/png;base64, ${proof_of_payment.raw}`\n          : await QRCode.toDataURL(\n              `${currencies[currentOrder.currency.currency].node_url}tx/${\n                proof_of_payment.proof\n              }`\n            )\n      );\n      if (currentOrder.currency_type === \"crypto\") {\n        setTxId(proof_of_payment.proof);\n        setUrlExplorer(\n          `${currencies[currentOrder.currency.currency].node_url}tx/${\n            proof_of_payment.proof\n          }`\n        );\n      }\n    } else if (currentOrder.proof) {\n      setImgProof(\n        await QRCode.toDataURL(\n          `${currencies[currentOrder.currency.currency].node_url}tx/${\n            currentOrder.proof\n          }`\n        )\n      );\n      setTxId(currentOrder.proof);\n      setUrlExplorer(\n        `${currencies[currentOrder.currency.currency].node_url}tx/${\n          currentOrder.proof\n        }`\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (\n      !currentOrder.paymentProof &&\n      currentOrder.state !== \"pending\" &&\n      tx_path === \"deposits\"\n    ) {\n      const getData = async () => {\n        const PP = await coinsendaServices.getDepositById(currentOrder.id);\n        if (!PP) {\n          return;\n        }\n        // const { proof_of_payment } = PP.paymentProof;\n\n        let updateOrder = {\n          [PP.id]: { ...PP },\n        };\n        actions.update_item_state(updateOrder, \"deposits\");\n        getPaymentProof(PP);\n      };\n      getData();\n    } else {\n      getPaymentProof(currentOrder);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (imgProof !== payload) {\n      setImgProof(payload);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [payload]);\n\n  const openBlockchain = () => {\n    window.open(urlExplorer, \"_blank\");\n  };\n\n  // console.log('Payment Proof ==> ', currentOrder.currency_type)\n  return (\n    <>\n      <PaymentProofContainer\n        className={`${currentOrder.currency_type} ${currentOrder.state}`}\n      >\n        {(!imgProof || loader) && (\n          <LoaderContainer>\n            <SimpleLoader loader={2} justify=\"center\" color=\"#206f65\" />\n          </LoaderContainer>\n        )}\n\n        {imgProof && (\n          <ProofContainer>\n            <Zoom>\n              <img src={imgProof} width=\"100%\" height=\"90px\" alt=\"\" />\n            </Zoom>\n            {currentOrder.currency_type === \"crypto\" && (\n              <HoverProof>\n                <IconContainer\n                  className=\"tooltip\"\n                  data-copy={txId}\n                  onClick={copy}\n                >\n                  <MdContentCopy size={16} />\n                  <span className=\"tooltiptext fuente\">Copiar</span>\n                </IconContainer>\n\n                <IconContainer className=\"tooltip\" onClick={openBlockchain}>\n                  <BsUpload size={20} />\n                  <span className=\"tooltiptext fuente\">Ver en Blockchain</span>\n                </IconContainer>\n              </HoverProof>\n            )}\n          </ProofContainer>\n        )}\n      </PaymentProofContainer>\n\n      {/* {imgProof && (\n      <FiatPaymentProofZoom state={currentOrder.state}>\n        <ProofCont>\n          <img src={imgProof} width=\"100%\" alt=\"\" />\n        </ProofCont>\n      </FiatPaymentProofZoom>\n    )} */}\n    </>\n  );\n};\n\n// const ProofCont = styled.div`\n//   width: 90%;\n//   height: 90%;\n//   justify-self: center;\n//   align-self: center;\n//   display: grid;\n//   align-items: center;\n//   overflow: hidden;\n//   img {\n//     border-radius: 4px;\n//   }\n// `;\n\nconst FiatPaymentProofZoom = styled.div`\n  position: absolute;\n  width: calc(100% - 20px);\n  height: ${(props) =>\n    props.state === \"confirmed\" ? \"calc(100% - 230px)\" : \"calc(100% - 170px)\"};\n  background: #eeeeee;\n  top: 10px;\n  justify-self: center;\n  border-radius: 3px;\n  display: none;\n`;\n\nconst PaymentProofContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 4px;\n  align-self: center;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  max-height: 100px;\n  max-width: 110px;\n  position: relative;\n  justify-self: start;\n\n  img {\n    border-radius: 3px;\n    max-width: 100px;\n    min-width: 90%;\n  }\n  &.accepted,\n  &.confirmed {\n    background: #206f65;\n    padding: 0 5px;\n  }\n  &.rejected,\n  &.canceled {\n    background: gray;\n    opacity: 0.5;\n  }\n\n  &.fiat.accepted:hover\n    ~ ${FiatPaymentProofZoom},\n    &.fiat.confirmed:hover\n    ~ ${FiatPaymentProofZoom} {\n    display: grid;\n  }\n\n  &.fiat {\n    cursor: pointer;\n  }\n`;\n\nconst LoaderContainer = styled.div`\n  width: 90%;\n  height: 90%;\n  background: white;\n  opacity: 0.6;\n  border-radius: 3px;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  position: absolute;\n  justify-self: center;\n  align-self: center;\n  z-index: 1;\n`;\n\n\n\nconst HoverProof = styled.div`\n  position: absolute;\n  height: 100%;\n  width: calc(100% - 20px);\n  top: 0;\n  transition: 0.15s !important;\n  align-items: baseline;\n  display: grid;\n  padding: 0 10px;\n  justify-items: center;\n  grid-template-columns: repeat(2, 1fr);\n  transform: translateX(100%);\n`;\n\nconst ProofContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n\n  :hover ${HoverProof} {\n    opacity: 1;\n  }\n  button {\n    cursor: pointer;\n  }\n`;\n\nconst IconContainer = styled.div`\n  cursor: pointer;\n  width: 30px;\n  height: 30px;\n  border-radius: 3px;\n  border: 1px solid gray;\n  display: grid !important;\n  align-items: center;\n  justify-items: center;\n  position: relative;\n  align-self: flex-start;\n\n  ::after {\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n  }\n\n  .tooltiptext {\n    padding-left: 4px !important;\n    padding-right: 4px !important;\n    width: auto !important;\n    min-width: 60px !important;\n  }\n\n  i,\n  svg {\n    color: gray;\n  }\n\n  :hover {\n    i,\n    svg {\n      color: #0c96fa;\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport api, { orderStatus } from \"./rest.json\";\nimport { OnlySkeletonAnimation } from \"../../../loaders/skeleton\";\nimport styled from \"styled-components\";\nimport { device } from \"../../../../../const/const\";\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nmoment.locale(\"es\");\n\nconst OrderStatus = ({ order, movil }) => {\n  const [orderState, setOrderState] = useState();\n  const { currentOrder, tx_path } = UseTxState();\n\n  const skeletons = new Array(4).fill([\"created\"]);\n\n  useEffect(() => {\n    let orders = {};\n    for (let prop in api[tx_path]) {\n      orders = {\n        ...orders,\n        [prop]: {\n          ...api[tx_path][prop],\n          completed: currentOrder.state === prop,\n        },\n      };\n    }\n    // console.log(orders, api[tx_path])\n    setOrderState(Object.entries(orders));\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentOrder.state]);\n\n  // console.log('|||||||||||||||| OrderSupervisor ::', order)\n\n  return (\n    <OrderStatusContainer>\n      <TopSectionStatus>\n        <Text className=\"fuente\">\n          {orderStatus[tx_path][order.state][order.currency_type].title}\n        </Text>\n        <SubTitle className=\"fuente\">\n          {orderStatus[tx_path][order.state][order.currency_type].description}\n        </SubTitle>\n      </TopSectionStatus>\n      {!movil && (\n        <StatusContainer>\n          {orderState\n            ? orderState.map((state, index) => {\n                return (\n                  <StatusItem\n                    state={state}\n                    order={currentOrder}\n                    key={index}\n                    active={state[1].completed}\n                    className={`\n                  ${\n                    orderState.length === index + 1\n                      ? \"statusStep finalStep\"\n                      : \"statusStep\"\n                  }\n                  ${state[1].completed ? \"activeStep\" : \"\"}\n                  `}\n                  />\n                );\n              })\n            : skeletons.map((state, index) => {\n                return (\n                  <StatusItem\n                    state={state}\n                    key={index}\n                    className={`${\n                      skeletons.length === index + 1\n                        ? \"statusStep finalStep\"\n                        : \"statusStep\"\n                    } skeleton`}\n                    skeleton\n                  />\n                );\n              })}\n        </StatusContainer>\n      )}\n    </OrderStatusContainer>\n  );\n};\n\nconst StatusItem = ({ className, state, order, active, skeleton }) => {\n  const activated = active && active.toString();\n  // console.log((state[0] === \"confirmed\" && (order.state === 'pending' || order.state === 'confirmed')), state )\n\n  return (\n    <Status className={`status ${className}`}>\n      <Indicator className={className} />\n      <Description>\n        {skeleton ? (\n          <Skeleton />\n        ) : (\n          <>\n            <StatusTitle className=\"fuente\" active={activated}>\n              {state[1].ui_text[order.currency_type] || state[1].ui_text}\n            </StatusTitle>\n            <DateStatusText className=\"fuente2\" active={activated}>\n              {active && order.state === \"pending\"\n                ? \"Pendiente\"\n                : active\n                ? \"En proceso...\"\n                : state[0] === \"created\"\n                ? moment(order.created_at).format(\"LL\")\n                : state[0] === \"pending\"\n                ? moment(order.updated_at).format(\"LL\")\n                : state[0] === \"confirmed\" && order.state === \"confirmed\"\n                ? moment(order.updated_at).format(\"LL\")\n                : \"\"}\n            </DateStatusText>\n          </>\n        )}\n      </Description>\n    </Status>\n  );\n};\n\nexport default OrderStatus;\n\nexport const Text = styled.p`\n  margin: 0;\n`;\n\nconst OrderStatusContainer = styled.div`\n  background: #f5f5f5;\n  box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.05);\n  display: grid;\n  grid-template-rows: auto 1fr;\n  row-gap: 25px;\n  padding: 30px 40px;\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n\n  @media ${device.tablet} {\n    grid-template-rows: 1fr;\n    padding: 25px 20px;\n  }\n`;\nconst TopSectionStatus = styled.div`\n  display: grid;\n  row-gap: 10px;\n  height: auto;\n`;\n\nconst SubTitle = styled(Text)`\n  font-size: 13px;\n  color: gray;\n`;\n\nconst StatusContainer = styled.div`\n  padding: 45px 0;\n  display: grid;\n  grid-template-rows: repeat(auto-fill, 70px);\n  row-gap: 10px;\n`;\n\nconst Status = styled.div`\n  height: 70px;\n  padding: 0 20px;\n  display: grid;\n  align-items: center;\n  grid-template-columns: 20px 1fr;\n\n  &.activeStep ~ .status .statusStep {\n    background: #dadada;\n    ::after {\n      background: #dadada;\n    }\n  }\n\n  &.activeStep .statusStep {\n    ::after {\n      background: #dadada;\n    }\n  }\n`;\n\nconst Indicator = styled.div`\n  justify-self: center;\n  width: 14px;\n  height: 14px;\n  background: #0198ff;\n  border-radius: 50%;\n  position: relative;\n  z-index: 2;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  border: 2px solid #f5f5f5;\n\n  &.activeStep {\n    width: 14px;\n    height: 14px;\n    border: 2px solid #0198ff;\n    background: transparent !important;\n    position: relative;\n    ::after {\n      top: 16px !important;\n    }\n    ::before {\n      content: \"\";\n      width: 6px;\n      height: 6px;\n      background: #0198ff;\n      border-radius: 50%;\n    }\n  }\n\n  &.statusStep::after {\n    content: \"\";\n    width: 2px;\n    height: 64px;\n    background: #0198ff;\n    position: absolute;\n    -webkit-align-self: center;\n    align-self: start;\n    top: 14px;\n    z-index: 1;\n  }\n\n  &.statusStep.finalStep::after {\n    display: none;\n  }\n\n  &.skeleton {\n    background: #c1c1c1;\n    ::after {\n      background: #c1c1c1;\n    }\n  }\n`;\nconst Description = styled.div`\n  padding-left: 20px;\n  display: grid;\n  row-gap: 5px;\n  p {\n    margin: 0;\n  }\n`;\n\nconst Skeleton = styled.div`\n  width: 100%;\n  height: 16px;\n  background: #c1c1c1;\n  border-radius: 3px;\n  ${OnlySkeletonAnimation}\n`;\n\nconst StatusTitle = styled(Text)`\n  font-size: 14px;\n  color: ${(props) => (props.active === \"true\" ? \"#0198FF\" : \"gray\")};\n`;\n\nconst DateStatusText = styled(Text)`\n  font-size: 12px;\n  color: ${(props) => (props.active === \"true\" ? \"#0198FF\" : \"#adadad\")};\n`;\n\n//\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nexport default class ConfirmationCounter extends Component {\n  state = {\n    ctx: null,\n    total: 6,\n    loader: true,\n    color: \"#159e8c\",\n  };\n\n  draw_interval;\n\n  // init_draw = async props => {\n  //   let c = document.getElementById(\"myCanvas\")\n  //   await this.setState({\n  //     ctx: c.getContext(\"2d\")\n  //   })\n  //\n\n  draw = async (amount) => {\n    // const {\n    //   ctx\n    // } = this.state\n    await this.setState({ loader: false });\n    let c = document.getElementById(\"myCanvas\");\n    if (!c) {\n      return false;\n    }\n    const ctx = c.getContext(\"2d\");\n    clearInterval(this.draw_interval);\n    let tasaPercent = (100 * amount) / this.state.total;\n    ctx.beginPath();\n    ctx.arc(150, 63, 58, 0, ((2 * Math.PI) / 100) * tasaPercent);\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = \"#1cb179\";\n    ctx.stroke();\n    // ctx.closePath()\n  };\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.confirmations !== prevProps.confirmations) {\n      await this.setState({ loader: true });\n      this.draw(this.props.confirmations);\n    }\n  }\n\n  async componentDidMount() {\n    await this.setState({ loader: true });\n    this.draw_interval = setInterval(() => {\n      this.draw(this.props.confirmations);\n    }, 250);\n  }\n\n  render() {\n    const { confirmations, total_confirmations } = this.props;\n\n    // const { color } = this.state;\n\n    return (\n      <AbsoluteContainer2>\n        <RelativeContainer>\n          <AbsoluteContainer>\n            <ContCanvasConfirmation>\n              <ConfirmationContainer>\n                <TextContainer>\n                  <p className=\"fuente2\">\n                    {confirmations}\n                    <span>\n                      / {total_confirmations ? total_confirmations : \"6\"}\n                    </span>\n                  </p>\n                </TextContainer>\n              </ConfirmationContainer>\n              {!this.state.loader && (\n                <Canvas id=\"myCanvas\" width=\"300\" height=\"125\" />\n              )}\n            </ContCanvasConfirmation>\n          </AbsoluteContainer>\n        </RelativeContainer>\n      </AbsoluteContainer2>\n    );\n  }\n}\n\nconst AbsoluteContainer = styled.div`\n  position: absolute;\n`;\n\nconst AbsoluteContainer2 = styled(AbsoluteContainer)`\n  right: 0;\n  transform: scale(0.9);\n`;\n\nconst RelativeContainer = styled.div`\n  width: 130px;\n  height: 170px;\n  position: relative;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n`;\n\nconst ConfirmationContainer = styled.div`\n  width: 80px;\n  height: 50%;\n  position: absolute;\n  align-self: center;\n  justify-self: center;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  p {\n    font-size: 30px;\n    margin: 0;\n  }\n`;\n\nconst TextContainer = styled.div`\n  width: 80px;\n  height: 50%;\n  position: absolute;\n  align-self: center;\n  justify-self: center;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  p {\n    font-size: 30px;\n    color: #1cb179;\n    margin: 0;\n  }\n  span {\n    color: #1cb179;\n    margin-left: 5px;\n    font-size: 18px;\n  }\n`;\n\n// const CounterText = styled.article`\n//   color: ${(props) => (props.color ? `${props.color} !important` : \"red\")};\n//   font-size: 40px !important;\n//   margin: 0 !important;\n//   padding: 0 !important;\n//   align-self: center !important;\n// `;\n\nconst ContCanvasConfirmation = styled.section`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n`;\n\nconst Canvas = styled.canvas`\n  transform: rotate(-90deg);\n  transition: 0.3s;\n`;\n\n//\n","import React, { useState, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlineUpload } from \"react-icons/ai\";\n// import PaymentProofComponent, { PaymentProof } from \"./paymentProof\";\nimport { PaymentProof } from \"./paymentProof\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport SimpleLoader from \"../../../loaders\";\n// import QRCode from \"qrcode\";\nimport { readFile, img_compressor, includesAnyImageMime } from \"../../../../../utils\";\nimport OrderStatus from \"./orderStatus\";\nimport DetailGenerator from \"./detailGenerator\";\nimport { OnlySkeletonAnimation } from \"../../../loaders/skeleton\";\nimport IconSwitch from \"../../../icons/iconSwitch\";\nimport { AiOutlineClockCircle } from \"react-icons/ai\";\nimport ConfirmationCounter from \"./confirmationCounter\";\nimport useViewport from \"../../../../../hooks/useWindowSize\";\nimport { device, BIOMETRIC_FIAT_LITMIT_AMOUNT } from \"../../../../../const/const\";\nimport { IconClose } from \"../../../shared-styles\";\nimport useToastMessage from \"../../../../../hooks/useToastMessage\";\nimport { useFormatCurrency } from \"../../../../hooks/useFormatCurrency\";\n\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nimport useKeyActionAsClick from \"../../../../../hooks/useKeyActionAsClick\";\nmoment.locale(\"es\");\n \n// const orderModel = {\n//   created_at: new Date(),\n//   updated_at: new Date(),\n//   state: \"pending\",\n//   currency_type: \"fiat\",\n// };\n\nconst InProcessOrder = ({ onErrorCatch }) => {\n  const { currentOrder } = UseTxState();\n\n  if (!currentOrder || !currentOrder.currency) return onErrorCatch();\n\n  return (\n    <>\n      {currentOrder.currency_type === \"fiat\" ? (\n        <FiatDespoitOrder order={currentOrder} />\n      ) : (\n        <CryptoDespoitOrder order={currentOrder} />\n      )}\n    </>\n  );\n};\n\nexport default InProcessOrder;\n\nconst CryptoDespoitOrder = ({ order }) => {\n  const { tx_path, currencies } = UseTxState();\n  const { isTabletOrMovilViewport } = useViewport();\n\n  return (\n    <InProcessOrderContainer>\n      <IconClose theme=\"dark\" size={20} />\n      <OrderContainer>\n        <TopSection>\n          <IconSwitch\n            className=\"TitleIconOrder\"\n            size={35}\n            icon={order.currency.currency || \"cop\"}\n          />\n          <TitleContainer>\n            <Text className=\"fuente\">{getTitle(tx_path)}</Text>\n            <Currency className=\"fuente\">{order.currency.currency}</Currency>\n          </TitleContainer>\n          <DateIdContainter>\n            <Text className=\"fuente2\">#{order.id}</Text>\n            <DateText className=\"fuente2\">\n              {moment(order.updated_at).format(\"LL\")}\n            </DateText>\n          </DateIdContainter>\n        </TopSection>\n\n        {isTabletOrMovilViewport && <OrderStatus order={order} movil />}\n\n        <MiddleSection state={order.state}>\n          <DetailGenerator\n            order={order}\n            title={`${getState(order)}`}\n            TitleSuffix={() => <GetIcon order={order} />}\n          />\n        </MiddleSection>\n\n        <BottomSection className={`crypto`}>\n          <UploadComponent />\n          {tx_path === \"deposits\" && (\n            <ConfirmationCounter\n              confirmations={order.confirmations}\n              total_confirmations={\n                currencies[order.currency.currency].confirmations\n              }\n            />\n          )}\n        </BottomSection>\n      </OrderContainer>\n\n      {!isTabletOrMovilViewport && <OrderStatus order={order} />}\n    </InProcessOrderContainer>\n  );\n};\n\nconst FiatDespoitOrder = ({ order }) => {\n  const [onDrag, setOnDrag] = useState(false);\n  const [imgSrc, setImgSrc] = useState(false);\n  const { actions, tx_path, coinsendaServices } = UseTxState();\n  const { isTabletOrMovilViewport } = useViewport();\n  const [ , , toBigNumber ] = useFormatCurrency()\n  const [toastMessage] = useToastMessage();\n\n  const dragOver = (event) => {\n    event.preventDefault();\n    if (!onDrag) {\n      setOnDrag(!onDrag);\n    }\n  };\n\n  const dragLeave = (event) => {\n    event.preventDefault();\n    if (onDrag) {\n      setOnDrag(!onDrag);\n    } \n  };\n\n  const goFileLoader = async (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      setOnDrag(false);\n      const data = e.target.files[0];\n      const file = await img_compressor(data, 0.25);\n      const dataBase64 = await readFile(file);\n      const isAnImage = includesAnyImageMime(dataBase64.split(\",\")[1])\n      if(!isAnImage){\n        return alert('Solo se aceptan imagenes')\n      }\n      setImgSrc(dataBase64);\n      actions.isAppLoading(true);\n\n      const { user } = coinsendaServices.globalState.modelData\n      const orderAmount = await toBigNumber(order.amount, order.currency)\n      const limitAmount = await toBigNumber(BIOMETRIC_FIAT_LITMIT_AMOUNT, order.currency)\n      if(user.security_center?.transactionSecurity?.biometric?.enabled && orderAmount.isGreaterThanOrEqualTo(limitAmount)){\n        const Element = await import(\"../../../../BiometricIdentity\");\n        if(!Element) return;\n        const FormsComponent = Element.default\n        return actions.renderModal(() => <FormsComponent/>);\n      }\n\n      // cropImgOFf\n      // activate oncomment line ><167\n      let confirmation = await coinsendaServices.confirmDepositOrder(\n        order.id,\n        dataBase64\n      );\n      if (!confirmation || !confirmation.data) {\n        actions.isAppLoading(false);\n        toastMessage(\"El depósito No se ha confirmado\", \"error\");\n        setImgSrc(null);\n      }\n    }\n  };\n\n  // console.log('|||||||||||||||| FiatOrderDespoit ::', currencies)\n\n  return (\n    <InProcessOrderContainer>\n      <IconClose theme=\"dark\" size={20} />\n\n      <OrderContainer onDragOver={dragOver}>\n        {onDrag && !imgSrc && order.state === \"pending\" && (\n          <DropZoneComponent\n            dragLeave={dragLeave}\n            goFileLoader={goFileLoader}\n          />\n        )} \n        {/* {imgSrc && order.state === \"pending\" && (\n          <PaymentProofComponent\n            order_id={order.id} \n            imgSrc={imgSrc}\n            setImgSrc={setImgSrc}\n          />\n        )} */}\n\n        <TopSection>\n          <IconSwitch\n            className=\"TitleIconOrder\"\n            size={35}\n            icon={order.currency.currency || \"cop\"}\n          />\n          <TitleContainer>\n            <Text className=\"fuente\">{getTitle(tx_path)}</Text>\n            <Currency className=\"fuente\">{order.currency.currency}</Currency>\n          </TitleContainer>\n          <DateIdContainter>\n            <Text className=\"fuente2\">#{order.id}</Text>\n            <DateText className=\"fuente2\">\n              {moment(order.updated_at).format(\"LL\")}\n            </DateText>\n          </DateIdContainter>\n        </TopSection>\n\n        {isTabletOrMovilViewport && <OrderStatus order={order} movil />}\n\n        <MiddleSection state={order.state}>\n          <DetailGenerator\n            order={order}\n            title={`${getState(order)}`}\n            TitleSuffix={() => <GetIcon order={order} />}\n          />\n        </MiddleSection>\n\n        <BottomSection>\n          <UploadComponent\n            imgSrc={imgSrc}\n            goFileLoader={goFileLoader}\n            setImgSrc={setImgSrc}\n          />\n        </BottomSection>\n      </OrderContainer>\n\n      {!isTabletOrMovilViewport && <OrderStatus order={order} />}\n    </InProcessOrderContainer>\n  );\n};\n\nconst DropZoneComponent = ({ dragLeave, goFileLoader }) => {\n  return (\n    <DropZoneContainer>\n      <input\n        id=\"TFileUpload\"\n        type=\"file\"\n        // accept=\"image/png,image/jpeg\"\n        onChange={goFileLoader}\n        onDragLeave={dragLeave}\n        capture=\"user\" \n        accept=\"image/*\"\n      />\n      <UploadComponent\n        unButtom\n        title=\"Suelta aquí el archivo que quieres subir...\"\n      />\n    </DropZoneContainer>\n  );\n};\n\nconst UploadComponent = ({ unButtom, title, goFileLoader, imgSrc }) => {\n  const { currentOrder } = UseTxState();\n  const idForFileUpload = useKeyActionAsClick(\n    true,\n    \"TFileUpload\",\n    13,\n    true,\n    \"onkeyup\",\n    true\n  );\n\n  return (\n    <UploadContainer\n      className={`${\n        imgSrc || currentOrder.state === \"confirmed\" ? \"loaded\" : \"unload\"\n      }`}\n    >\n      {!imgSrc && currentOrder.state !== \"confirmed\" ? (\n        <Fragment>\n          <AiOutlineUpload size={45} color=\"gray\" />\n          <UploadText className=\"fuente\">\n            {title || \"Arrastra el archivo que quieres subir\"}\n          </UploadText>\n          {!unButtom && (\n            <Fragment>\n              <UploadMiddle>\n                <UploadTextMiddle className=\"fuente\">\n                  o selecciona un archivo\n                </UploadTextMiddle>\n                <hr />\n              </UploadMiddle>\n\n              <Buttom>\n                <input\n                  id={idForFileUpload}\n                  type=\"file\"\n                  accept=\"image/png,image/jpeg\"\n                  onChange={goFileLoader}\n                />\n                <Text style={{ color: \"white\" }} className=\"fuente\">\n                  Subir comprobante\n                </Text>\n              </Buttom>\n            </Fragment>\n          )}\n        </Fragment>\n      ) : (\n        <Fragment>\n          <UploadMiddle className=\"titleSection payment fuente\">\n            <UploadTextMiddle className=\"titleSection\">\n              Comprobante de pago\n            </UploadTextMiddle>\n            <hr />\n          </UploadMiddle>\n          <PaymentProof payload={imgSrc} />\n        </Fragment>\n      )}\n    </UploadContainer>\n  );\n};\n\nconst getTitle = (tx_path) => {\n  return tx_path === \"deposits\" ? \"Depósito\" : \"Retiro\";\n};\n\nconst GetIcon = ({ order }) => {\n  const coloIcon = order.state === \"pending\" ? \"#ff8660\" : \"#1cb179\";\n  const RenderIcon =\n    order.state === \"pending\"\n      ? AiOutlineClockCircle\n      : order.state === \"confirmed\" &&\n        (() => <SimpleLoader loader={2} color={coloIcon} justify=\"center\" />);\n\n  return (\n    <IconContainer>\n      <RenderIcon size={25} color={coloIcon} />\n    </IconContainer>\n  );\n};\n\nconst getState = ({ state, currency_type }) => {\n  switch (currency_type) {\n    case \"fiat\":\n      return state === \"pending\"\n        ? \"Pendiente\"\n        : state === \"confirmed\" && currency_type === \"fiat\"\n        ? \"Procesando...\"\n        : \"En proceso de aceptación...\";\n    case \"crypto\":\n      return state === \"pending\" ? \"Pendiente\" : \"Confirmando en blockchain...\";\n    default:\n  }\n};\n\nconst IconContainer = styled.div`\n  position: relative;\n  width: 25px;\n  height: 25px;\n  display: grid;\n`;\n\nconst DropZoneContainer = styled.section`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.85);\n  z-index: 3;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  ${\"\" /* border: 5px solid #0198FF; */}\n\n  svg {\n    fill: #0198ff;\n  }\n  p {\n    color: #0198ff;\n  }\n`;\n\n// const ImgContainer = styled.div`\n//   width: 80px;\n//   height: 55px;\n//   position: relative;\n//   border: 3px solid #0198ff;\n//   border-radius: 4px;\n//   background: white;\n//   display: grid;\n//   align-items: center;\n//   &.loader::after {\n//     content: \"\";\n//     width: 100%;\n//     position: absolute;\n//     height: 100%;\n//     background: rgba(255, 255, 255, 0.8);\n//   }\n//   .lds-roller {\n//     z-index: 2;\n//   }\n// `;\n\n// const Img = styled.img`\n//   width: 80px;\n//   height: 55px;\n//   border-radius: 3px;\n// `;\n\n// const ProgressBar = styled.span`\n//   height: 4px;\n//   width: 100%;\n//   background: #c5c5c5;\n//   transition: 0.3s;\n//   position: relative;\n//   ::after {\n//     content: \"\";\n//     width: ${(props) => props.progresed};\n//     background: #0198ff;\n//     height: 100%;\n//     position: absolute;\n//     transition: 3s;\n//     left: 0;\n//     top: 0;\n//   }\n// `;\n\nexport const Text = styled.p`\n  margin: 0;\n`;\n\n// const PaymentTitle = styled(Text)`\n//   text-align: center;\n//   font-size: 14px;\n//   color: gray;\n// `;\n\n// const PaymentProofDetail = styled.div`\n//   width: 100%;\n//   display: grid;\n//   grid-template-rows: auto auto auto;\n//   row-gap: 10px;\n//   justify-items: center;\n//   align-items: center;\n//   padding-top: 40px;\n// `;\n\nconst Buttom = styled.div`\n  width: 320px;\n  height: 45px;\n  border-radius: 6px;\n  border: 2px solid #0198ff;\n  background: #0198ff;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  cursor: pointer;\n  position: relative;\n`;\n\nconst UploadTextMiddle = styled(Text)`\n  z-index: 2;\n  font-size: 12px;\n  width: 150px;\n  background: #eeeeee;\n  text-align: center;\n  color: gray;\n\n  &.titleSection {\n    font-size: 15px;\n    width: auto;\n    padding: 0 20px;\n    align-self: center;\n    justify-self: baseline;\n  }\n`;\n\nconst UploadMiddle = styled.div`\n  font-size: 14px;\n  position: relative;\n  display: grid;\n  width: 100%;\n  justify-items: center;\n  max-width: 320px;\n  hr{\n    position: absolute;\n    width: 100%;\n    align-self: center;\n  }\n\n  &.titleSection{\n    max-width: inherit;\n    position: absolute;\n    align-self: start;\n    hr{\n      border-top: 1px solid;\n      color: #c5c5c5;\n    }\n  }\n  &.payment{\n    p{\n      padding-left: 0 !important;\n    }\n    position: relative !important;\n  }\n}\n`;\n\nconst UploadText = styled(Text)`\n  font-size: 16px;\n  color: gray;\n`;\n\nconst UploadContainer = styled.section`\n  display: grid;\n  justify-items: center;\n  row-gap: 12px;\n  width: 100%;\n  min-height: 170px;\n  height: auto;\n  &.loaded {\n    grid-template-rows: auto 1fr;\n  }\n  &.unload {\n    grid-template-columns: 1fr;\n    max-width: 400px;\n    grid-template-rows: repeat(4, auto);\n  }\n`;\n\nexport const Section = styled.div``;\n\nconst BottomSection = styled(Section)`\n  height: auto;\n  display: grid;\n  justify-items: center;\n  align-items: center;\n\n  &.crypto {\n    position: relative;\n  }\n`;\n\nconst DateIdContainter = styled.div`\n  display: flex;\n  grid-area: dateIdContainter;\n  ${Text} {\n    font-size: 12px;\n    color: gray;\n  }\n`;\n\nconst DateText = styled(Text)`\n  margin-left: 9px !important;\n  padding-left: 7px;\n  border-left: 1px solid gray;\n`;\n\nconst TitleContainer = styled.div`\n  margin: 0;\n  display: flex;\n  align-items: center;\n  grid-area: titleContainer;\n  ${Text} {\n    font-size: 20px;\n  }\n`;\n\nconst Currency = styled(Text)`\n  margin-left: 7px !important;\n  text-transform: uppercase;\n`;\n\n// const Icon = styled.span`\n//   width: 35px;\n//   height: 35px;\n//   border-radius: 50%;\n//   background: #c3c3c3;\n//   grid-area: icon;\n//   ${\"\" /* box-shadow: 0px 0px 5px 3px rgba(0,0,0,0.1); */}\n// `;\n\nconst MiddleSection = styled(Section)`\n  background: white;\n  border-radius: 4px;\n  position: relative;\n  overflow: hidden;\n  ::after {\n    content: \"\";\n    position: absolute;\n    height: 7px;\n    background: ${(props) =>\n      props.state === \"pending\" ? \"#ff8660\" : \"#1cb179\"};\n    top: 0;\n    width: 100%;\n    ${(props) => props.state === \"confirmed\" && OnlySkeletonAnimation}\n  }\n  .withTitle {\n    padding-top: 55px !important;\n  }\n`;\n\nconst TopSection = styled(Section)`\n  display: grid;\n  align-items: center;\n  grid-template-rows: auto auto;\n  column-gap: 12px;\n  row-gap: 5px;\n  grid-template-columns: auto 1fr;\n  grid-template-areas:\n    \"icon titleContainer\"\n    \"icon dateIdContainter\";\n  span {\n    margin-right: 15px;\n  }\n\n  .TitleIconOrder {\n    grid-area: icon;\n  }\n`;\n\n// const Container = styled.section`\n//   width: 100vw;\n//   height: 100vh;\n//   background: #000000ba;\n//   display: grid;\n//   align-items: center;\n//   justify-items: center;\n// `;\n\nconst OrderContainer = styled.div`\n  background: #eeeeee;\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  row-gap: 30px;\n  position: relative;\n  border-top-left-radius: 6px;\n  border-bottom-left-radius: 6px;\n\n  @media ${device.tablet} {\n    grid-template-rows: auto auto 1fr auto;\n  }\n`;\n\nconst InProcessOrderContainer = styled.section`\n  #TFileUpload {\n    position: absolute;\n    z-index: 4;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    cursor: pointer;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  ${OrderContainer} {\n    padding: 30px 40px;\n  }\n\n  position: relative;\n  width: 1000px;\n  height: auto;\n  min-height: 750px;\n  background: white;\n  display: grid;\n  border-radius: 6px;\n  box-shadow: 0px 0px 5px 3px rgba(0, 0, 0, 0.1);\n  grid-template-columns: 1fr 400px;\n\n  @media ${device.laptop} {\n    width: 100%;\n  }\n\n  @media ${device.tabletL} {\n    grid-template-columns: 1fr;\n    position: absolute;\n    top: 10px;\n  }\n\n  @media ${device.tablet} {\n    ${OrderContainer} {\n      padding: 30px 15px;\n    }\n  }\n`;\n","import React from \"react\";\nimport OtherModalLayout from \"../../otherModalLayout\";\nimport styled from \"styled-components\";\nimport {\n  swing_in_bottom_bck,\n  // socketIconContainerIntro,\n  backTopSection,\n} from \"../../../animations\";\nimport { orderStateColors, device } from \"../../../../../const/const\";\nimport IconSwitch from \"../../../icons/iconSwitch\";\n// import { useActions } from \"../../../../../hooks/useActions\";\nimport useViewport from \"../../../../../hooks/useWindowSize\";\nimport DetailGenerator from \"./detailGenerator\";\nimport { useFormatCurrency } from \"../../../../hooks/useFormatCurrency\";\nimport UseTxState from \"../../../../hooks/useTxState\";\nimport InProcessOrder from \"./inProcessOrder\";\nimport { PaymentProof } from \"./paymentProof\";\nimport { IconClose } from \"../../../shared-styles\";\n// import useKeyActionAsClick from '../../../../../hooks/useKeyActionAsClick'\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nmoment.locale(\"es\");\n\nconst OrderSupervisor = () => {\n  const { actions, currentOrder } = UseTxState();\n  // const { isMovilViewport } = useViewport();\n\n  const cerrar = (e, forceClose) => {\n    if (e && (e.target.dataset.close_modal || forceClose)) {\n      actions.isAppLoading(false);\n      actions.renderModal(null);\n      // history.goBack()\n    }\n  };\n\n  // const idForCloseModal = useKeyActionAsClick(true, 'close-modal-button-orders', 27, true, 'onkeyup', true)\n\n  // useEffect(() => {\n  //   document.onkeyup = (event) => {\n  //     if (event.keyCode === 27) {\n  //       cerrar(event, true)\n  //       // event.preventDefault();\n  //     }\n  //   }\n  //\n  //   return () => {\n  //     document.onkeyup = false\n  //   }\n  // }, [document.onkeyup])\n\n  const closeAll = () => {\n    actions.renderModal(null);\n    return <div></div>;\n  };\n\n  if (!currentOrder || !currentOrder.state) {\n    actions.renderModal(null);\n    return <div></div>;\n  }\n\n  return (\n    <OtherModalLayout\n      id=\"close-button-with-OtherModalLayout\"\n      onkeydown={true}\n      on_click={cerrar}\n    >\n      {[\"accepted\", \"rejected\", \"canceled\"].includes(currentOrder.state) ? (\n        <OrderDetail />\n      ) : (\n        <InProcessOrder onErrorCatch={closeAll} />\n      )}\n    </OtherModalLayout>\n  );\n};\n\nexport default OrderSupervisor;\n\nexport const getState = (state) => {\n  return state === \"accepted\"\n    ? \"Aceptado\"\n    : state === \"confirmed\"\n    ? \"Confirmado\"\n    : state === \"pending\"\n    ? \"Pendiente\"\n    : state === \"rejected\"\n    ? \"Rechazado\"\n    : \"Cancelado\";\n};\n\nconst OrderDetail = () => {\n  // const actions = useActions();\n  const {\n    tx_path,\n    // currencies,\n    currentOrder,\n    // primary_path,\n    // history,\n  } = UseTxState();\n  // console.log(currentOrder, currentOrder.id, tx_path, primary_path)\n  const { isMovilViewport } = useViewport();\n\n  if (!currentOrder) {\n    return null;\n  }\n\n  const { state } = currentOrder;\n  const TitleText =\n    tx_path === \"deposits\"\n      ? \"Deposito\"\n      : tx_path === \"withdraws\"\n      ? \"Retiro\"\n      : tx_path === \"swaps\" && \"Intercambio\";\n\n  const textState =\n    state === \"accepted\"\n      ? \"Aceptado\"\n      : state === \"confirmed\"\n      ? \"Confirmado\"\n      : state === \"pending\"\n      ? \"Pendiente\"\n      : state === \"rejected\"\n      ? \"Rechazado\"\n      : \"Cancelado\";\n  const colorState =\n    state === \"accepted\"\n      ? \"#1cb179\"\n      : state === \"confirmed\"\n      ? \"#77b59d\"\n      : state === \"pending\"\n      ? \"#ff8660\"\n      : \"red\";\n\n  return (\n    <Layout className=\"layout3\">\n      <IconClose theme=\"dark\" size={20} />\n\n      <TopSection state={currentOrder.state}>\n        <TitleContainer>\n          <OrderIcon className={`fa ${tx_path}`} />\n          <IconSwitch\n            className=\"TitleIconOrder\"\n            size={28}\n            icon={\n              (currentOrder.currency && currentOrder.currency.currency) || \"cop\"\n            }\n          />\n          <Title className=\"fuente\">{TitleText}</Title>\n          <DateTitle className=\"fuente2\">\n            Actualizado {moment(currentOrder.updated_at).format(\"LL\")}\n          </DateTitle>\n        </TitleContainer>\n\n        <CircleIconContainer>\n          <IconSwitch\n            size={isMovilViewport ? 25 : 45}\n            icon={state === \"accepted\" ? \"accepted2\" : state}\n            color={colorState}\n          />\n          <p className=\"fuente\" style={{ color: `${colorState}` }}>\n            {textState}\n          </p>\n        </CircleIconContainer>\n\n        <ContBackTopSection>\n          <BackTopSection />\n        </ContBackTopSection>\n      </TopSection>\n\n      <DetailGenerator\n        order={currentOrder}\n        title={`Detalle del ${TitleText}`}\n      />\n\n      <BottomSection colorState={colorState} />\n    </Layout>\n  );\n};\n\nconst BottomSection = ({ colorState }) => {\n  const { currentOrder, tx_path, currencies } = UseTxState();\n  const [amount] = useFormatCurrency(\n    currentOrder.amount || currentOrder.bought,\n    currentOrder.currency\n  );\n  const textTotal =\n    tx_path === \"swaps\" && currentOrder.state === \"accepted\"\n      ? \"Saldo adquirido:\"\n      : currentOrder.state === \"accepted\"\n      ? \"Saldo acreditado:\"\n      : \"Saldo SIN acreditar:\";\n  const currency =\n    tx_path === \"swaps\"\n      ? currencies[currentOrder.to_buy_currency.currency]\n      : currencies[currentOrder.currency.currency];\n  const isFiatWithdraw =\n    tx_path === \"withdraws\" && currentOrder.currency_type === \"fiat\";\n\n  return (\n    <BottomSectionContainer>\n      <TitleBottom>\n        <hr />\n        {tx_path !== \"swaps\" && <p className=\"fuente\">Comprobante de pago</p>}\n      </TitleBottom>\n      <Container>\n        {tx_path === \"swaps\" || isFiatWithdraw ? <div></div> : <PaymentProof />}\n        <TotalAmount color={colorState} className={`${currentOrder.state}`}>\n          <p className=\"fuente saldo\">{textTotal}</p>\n          <p className=\"fuente2 amount\">\n            {currentOrder.currency_type === \"fiat\" && \"$ \"}\n            {amount}{\" \"}\n            {currency && <span className=\"fuente\">{currency.code}</span>}\n          </p>\n        </TotalAmount>\n      </Container>\n    </BottomSectionContainer>\n  );\n};\n\nconst TotalAmount = styled.div`\n  width: auto;\n  height: 70px;\n  justify-self: end;\n  align-self: end;\n\n  &.rejected,\n  &.canceled {\n    .amount {\n      text-decoration: line-through;\n    }\n  }\n\n  p {\n    color: ${(props) => props.color};\n    margin: 0;\n    text-align: right;\n  }\n  & > p {\n    margin-bottom: 10px;\n  }\n  .amount {\n    font-size: 30px;\n    span {\n      font-size: 18px;\n    }\n  }\n  .saldo {\n    font-size: 16px;\n  }\n`;\n\nconst Container = styled.div`\n  width: calc(100% - 60px);\n  padding: 0 30px;\n  height: 100%;\n  display: grid;\n  grid-template-columns: 100px 1fr;\n`;\n\nconst TitleBottom = styled.div`\n  display: grid;\n  position: relative;\n  justify-items: center;\n  hr {\n    width: 98%;\n    opacity: 0.35;\n  }\n  p {\n    color: gray;\n    margin: 0;\n    background-color: white;\n    position: absolute;\n    left: 20px;\n    padding: 0 10px;\n    align-self: self-end;\n    font-size: 14px;\n    font-weight: bold;\n  }\n`;\n\nconst BottomSectionContainer = styled.section`\n  height: calc(200px - 40px);\n  width: 100%;\n  padding: 20px 0;\n  display: grid;\n  grid-template-rows: auto 1fr;\n  row-gap: 20px;\n`;\n\nconst TitleContainer = styled.div`\n  display: grid;\n  .TitleIconOrder {\n    grid-area: IconSwitch;\n  }\n  align-items: center;\n  column-gap: 15px;\n  row-gap: 4px;\n  align-self: center;\n  position: absolute;\n  left: 30px;\n  grid-template-columns: 25px 25px minmax(100px, 200px);\n  grid-template-areas:\n    \"OrderIcon IconSwitch Title\"\n    \"OrderIcon IconSwitch DateTitle\";\n`;\n\nconst DateTitle = styled.p`\n  font-size: 12px;\n  color: white;\n  grid-area: DateTitle;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  display: grid;\n  margin-left: 4px;\n`;\n\nconst Icon = styled.i``;\nconst OrderIcon = styled(Icon)`\n    margin-right: 10px;\n    font-size: 22px;\n    grid-area: OrderIcon;\n    color: white;\n    margin: 0;\n    display: grid !important;\n    justify-items: center;\n\n    &.swaps:before{\n       content: \"\\f079\";\n      }\n    }\n    &.withdraws:before{\n       content: \"\\f062\";\n      }\n    }\n    &.deposits:before{\n       content: \"\\f063\";\n      }\n    }\n\n  `;\n\nconst BackTopSection = styled.div`\n  width: 120%;\n  height: 120%;\n  position: absolute;\n  background-image: url(/static/media/back.fe9a1b62.png);\n  background-size: contain;\n  background-repeat: repeat;\n  background-position: right;\n  opacity: 0.05 !important;\n  animation: ${backTopSection};\n  animation-duration: 80s;\n  animation-iteration-count: infinite;\n  transform: scale(1.5);\n`;\n\nconst ContBackTopSection = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  overflow: hidden;\n`;\n\nconst CircleIconContainer = styled.div`\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  justify-self: end;\n  width: 90px;\n  height: 90px;\n  background: white;\n  border-radius: 50%;\n  align-self: flex-end;\n  position: relative;\n  transform: translate(-30px, 45px) !important;\n\n  p {\n    position: absolute;\n    margin: 0;\n    bottom: -3px;\n    font-size: 14px;\n    justify-self: center;\n  }\n\n  @media ${device.tablet} {\n    width: 60px;\n    height: 60px;\n    transform: translate(-20px, 45px) !important;\n    p {\n      bottom: -8px;\n    }\n  }\n`;\n\nconst Title = styled.h3`\n  text-align: left;\n  color: white;\n  margin: 0;\n  grid-area: Title;\n  font-size: 22px;\n  margin-left: 4px;\n`;\n\nconst TopSection = styled.section`\n  background: ${(props) =>\n    props.state ? orderStateColors[props.state] : \"gray\"};\n  width: 100%;\n  height: 100%;\n  display: grid;\n  position: relative;\n  border-top-right-radius: 6px;\n  border-top-left-radius: 6px;\n`;\n\nexport const Layout = styled.div`\n  width: 100%;\n  max-width: 550px;\n  height: auto;\n  min-height: 650px;\n  background: white;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  -webkit-transition: 0.3s;\n  transition: 0.3s;\n  border-radius: 11px;\n  position: relative;\n  grid-template-rows: 115px 1fr auto;\n\n  -webkit-animation: ${swing_in_bottom_bck} 1s\n    cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n  animation: ${swing_in_bottom_bck} 1s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    both;\n`;\n","import React, { useEffect } from \"react\";\nimport loadable from \"@loadable/component\";\nimport { useItemsInteractions } from \"../../../hooks/useNavigationKeyActions\";\nimport { InputKeyActionHandler } from \"../accountList/styles\";\nimport { getCdnPath } from '../../../environment'\n\n\nconst IconSwitch = loadable(() => import(\"../icons/iconSwitch\"));\n\nlet timerId;\nfunction NewItemsLayout(props) {\n  const {\n    type,\n    actives,\n    name,\n    code,\n    placeholder,\n    primarySelect,\n    format,\n    itemType,\n    currency_type,\n    pair_id,\n    actualizarEstado,\n    handleClick,\n    specialMode = false,\n  } = props;\n\n  const doSelectionForItem = () => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      actualizarEstado && actualizarEstado(name, code, currency_type, pair_id);\n    }, 100);\n  };\n  const _handleClick = specialMode ? doSelectionForItem : handleClick;\n  const [isSelected, setFocus] = useItemsInteractions(\n    {...props, uniqid: pair_id},\n    { suprKeyAction: () => false, enterKeyAction: _handleClick },\n    false\n  );\n\n  useEffect(() => {\n    specialMode && actives && setFocus();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (!specialMode && isSelected && !actives) {\n      doSelectionForItem(false);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isSelected, actives]);\n\n  const _activated = specialMode ? isSelected : actives;\n\n  console.log('|||||||||||||||||||   NewItemsLayout =====> ', type, code)\n\n  return (\n    <div\n      id={`${primarySelect ? \"primarySelect\" : \"\"}`}\n      className={`${type === \"payment_method\" ? \"ILtuvieja\" : \"\"} `}\n    >\n      <InputKeyActionHandler\n        aria-label=\"itemFromList\"\n        name=\"itemFromList\"\n        autoComplete=\"off\"\n        id={props.focusedId}\n      />\n      <div\n        className={`item ${_activated ? \"itemSelection\" : \"\"}`}\n        onClick={!actives || itemType === \"banks\" ? doSelectionForItem : null}\n      >\n        {!format && code && type ? (\n          type === \"coins\" ||\n          type === \"payment_method\" ||\n          type === \"service_mode\" ? (\n            _activated ? (\n              <div title={name} id={code}>\n                <img\n                  className=\"itemSobre activaos\"\n                  src={`${getCdnPath('assets')}${type}/${code}2.png`}\n                  alt=\"\"\n                  width=\"60\"\n                />\n              </div>\n            ) : (\n              <div title={name} id={code}>\n                <img\n                  className=\"itemFuera\"\n                  src={`${getCdnPath('assets')}${type}/${code}.png`}\n                  width=\"60\"\n                  alt=\"\"\n                  id={code}\n                  title={name}\n                />\n                <img\n                  className=\"itemSobre\"\n                  src={`${getCdnPath('assets')}${type}/${code}2.png`}\n                  width=\"60\"\n                  alt=\"\"\n                  id={code}\n                  title={name}\n                />\n              </div>\n            )\n          ) : (\n            <img\n              className={`banquis ${_activated ? \"itemVisible\" : \"\"}`}\n              src={`${getCdnPath('assets')}${type}/${code}.png`}\n              alt=\"\"\n              id={code}\n              title={name}\n              width=\"85\"\n            />\n          )\n        ) : (\n          <IconSwitch icon={code} size={45} />\n        )}\n        {primarySelect ? (\n          <div id=\"primarySelectText\" className=\"primarySelectText\">\n            <p title={name}>{name}</p>\n            {placeholder &&\n              placeholder.map((item) => {\n                return (\n                  <p id=\"ILplaceholder2\" className=\"fuente\" key={item.id}>\n                    {item.name}\n                  </p>\n                );\n              })}\n          </div>\n        ) : (\n          <p title={name}>{name}</p>\n        )}\n      </div>\n      {placeholder && !primarySelect && (\n        <div className=\"placeHoldCont\">\n          {placeholder.map((item) => {\n            return (\n              <p className=\"ILplaceholder fuente\" key={item.id}>\n                {item.name}\n              </p>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default React.memo(NewItemsLayout);\n","import React, { Component, Fragment } from \"react\";\nimport { ButtonForms } from \"../../widgets/buttons/buttons\";\nimport IconSwitch from \"../../widgets/icons/iconSwitch\";\nimport { InputDepositForm } from \"../../widgets/inputs\";\nimport {\n  handleKeyPress,\n  number_format,\n  get_ui_name_currency,\n} from \"../../../utils\";\n// import BigNumber from \"bignumber.js\";\n\nimport \"../deposit/deposit.css\";\n\nclass ViewAmountComponent extends Component {\n  state = {\n    statusInput: \"\",\n    ui_currency_name: \"\",\n    minAmount: this.props.min_amount || 20000,\n  };\n\n  handleKeyPress = (e) => {\n    let message = handleKeyPress(e);\n    return this.setState({ statusInput: message });\n  };\n\n  componentDidMount() {\n    this.init_config();\n  }\n\n  componentWillUnmount() {}\n\n  getMinAmount = async() => {\n    \n    const { withdrawProviders, withdraw_account_list } = this.props\n\n    let wProvider\n    let minAmount\n    let cost\n\n    await withdrawProviders.forEach(_wProvider => {\n      if(_wProvider.provider_type === 'bank'){\n        wProvider = _wProvider\n      }\n    });\n\n    if(!wProvider) return this.state.minAmount;\n    \n    // minAmount = new BigNumber(wProvider.provider.min_amount)\n    minAmount = wProvider.provider.min_amount\n\n    await withdraw_account_list.forEach(_wAccount => {\n      if(wProvider.name.includes(_wAccount?.bank_name?.value)){\n        // wProviderName validar el nombre del withdraw provider y el withdraw account\n        cost = wProvider.provider.costs.same_bank.fixed\n      }\n    });\n\n    if(!cost){\n      cost = wProvider.provider.costs.pp.fixed\n    }\n\n    const final = parseInt(minAmount) + parseInt(cost)\n\n\n    // return minAmount.plus(cost).toFormat()\n    return final\n    // withdrawProviders\n    // \n  }\n\n  init_config = async() => {\n    const { currency } = this.props;\n    let ui_currency_name = get_ui_name_currency(currency);\n    const minAmount = await this.getMinAmount()\n\n\n    this.setState({\n      ui_currency_name,\n      minAmount\n    });\n  };\n\n  actualizarAmount = ({ target }) => {\n    let amount = target.value.replace(/\\D/g, \"\");\n    if (amount === 0 || amount === \"0\") return;\n    amount = amount.substring(0, 15);\n    // target.value = amount;\n    this.props.updateAmountOnState(amount);\n  };\n\n  load_amount = () => {\n    const { operation_type, available } = this.props;\n\n    this.props.updateAmountOnState(\n      operation_type === \"deposit\" ? 20000 : available\n    );\n  };\n\n  render() {\n    const {\n      operation_type,\n      currency,\n      available,\n      amount,\n      handleSubmit,\n    } = this.props;\n\n    const { statusInput, ui_currency_name, minAmount } = this.state;\n\n    // let moneda =\n\n\n    const atributos = {\n      icon: currency,\n      size: 80,\n      // color:`${classic_view ? '#989898'  : !verify ? '#989898'  : '#1babec'}`,\n    };\n\n    // operation_type=\"withdraw\"\n\n    // console.log('|||||||||||||||| VIEW AMOUNT =======> ', currency)\n\n    // console.log('||||||||||| VIEW  AMOUNT  ||||||||||', parseFloat(available) > minAmount, parseFloat(available), minAmount, typeof(parseFloat(available)), typeof(minAmount))\n    return (\n      <div className=\"viewAmount DLstep\">\n        {currency && (\n          <Fragment>\n            <div className=\"DLcontain\">\n              <p className=\"fuente DLtitle2\">\n                Quiero {operation_type === \"deposit\" ? \"depositar\" : \"retirar\"}\n              </p>\n              <p className=\"fuente DLstitle\">La cantidad de</p>\n            </div>\n\n            <div className=\"DLcontain2\">\n              <IconSwitch {...atributos} />\n\n              <InputDepositForm\n                value={amount}\n                autoFocus={true}\n                actualizar={this.actualizarAmount}\n                name=\"amount\"\n                handleKeyPress={this.handleKeyPress}\n                service={number_format}\n              />\n\n              <div className=\"DLstatus\">\n                <p\n                  id=\"DLcop2\"\n                  className=\"fuente2 DLstitle DLcop DLcop2\"\n                  onClick={this.load_amount}\n                >\n                  {operation_type === \"deposit\" ? `Cantidad minima: $ ${number_format(minAmount)} ${currency.toUpperCase()}`\n                    : operation_type === \"withdraw\" && parseFloat(available) > minAmount ? `Disponible: ~$${number_format(available)} ${currency.toUpperCase()} | Minima: ~$${number_format(minAmount)} ${currency.toUpperCase()}`\n                    : `Disponible: ~$${number_format(available)} ${currency.toUpperCase()} | Minima: ~$${number_format(minAmount)} ${currency.toUpperCase()}`}\n                </p>\n                <p className=\"textStatus\">{statusInput}</p>\n                <p className=\"fuente DLstitle DLcop\">{ui_currency_name}</p>\n              </div>\n            </div>\n\n            <ButtonForms\n              _id={this.props.mainCtaId}\n              type=\"primary\"\n              active={\n                operation_type === \"deposit\" ? parseFloat(amount) >= parseFloat(minAmount) ? true : false\n                  : parseFloat(amount) >= parseFloat(minAmount) && parseFloat(amount) <= parseFloat(available) && parseFloat(amount) > 0\n                  ? true\n                  : false\n              }\n              siguiente={handleSubmit}\n            >\n              Continuar\n            </ButtonForms>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ViewAmountComponent;\n","import React, { useEffect } from \"react\";\nimport useNavigationKeyActions from \"../../../../hooks/useNavigationKeyActions\";\nimport { ButtonForms } from \"../../../widgets/buttons/buttons\";\nimport NewItemsLayout from \"../../../widgets/items/new-items-layout\";\nimport \"./views.css\";\n\nconst MethodView = (props) => {\n  const {\n    items,\n    select_method,\n    item_active,\n    siguiente,\n    title,\n    subtitle,\n    withdraw,\n  } = props;\n\n  let movil_viewport = window.innerWidth < 768;\n  const [setCurrentSelection] = useNavigationKeyActions({\n    items,\n    loader: false,\n    uniqueIdForElement: \"pay-method-item-\",\n    modalRestriction: false,\n  });\n\n  useEffect(() => {\n    select_method(\"Transferencia bancaria\", \"bankaccount\");\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div id=\"DLsteps\" className=\"DLsteps method\">\n      <div className=\"DLcontains\">\n        <p className=\"fuente DLtitles2\">{title ? title : \"Title\"}</p>\n        <p className=\"fuente DLstitles\">{subtitle ? subtitle : \"Subtitle:\"}</p>\n      </div>\n\n      <div\n        className={`${\n          !movil_viewport\n            ? \"DLItemSelectionContainers\"\n            : \"ItemSelectionContainerMovil\"\n        }`}\n      >\n        <div\n          className={`${\n            !movil_viewport\n              ? !withdraw\n                ? \"DLcontainerItems\"\n                : \"DLcontainerItems DLcontainerItems2\"\n              : \"containerItems\"\n          } chooseMethod`}\n        >\n          {items\n            .filter((item) => !withdraw && item.code !== \"debit\")\n            .map((item, index) => {\n              return (\n                <NewItemsLayout\n                  setCurrentSelection={setCurrentSelection}\n                  focusedId={`pay-method-item-${index}`}\n                  number={index}\n                  handleClick={siguiente}\n                  actualizarEstado={select_method}\n                  actives={item_active === item.code && true}\n                  primarySelect={movil_viewport}\n                  {...item}\n                  key={item.id}\n                />\n              );\n            })}\n        </div>\n      </div>\n\n      <ButtonForms\n        _id={props.idForAcceptButtonInDepositView}\n        type=\"primary\"\n        active={item_active ? true : false}\n        siguiente={siguiente}\n      >\n        Continuar\n      </ButtonForms>\n    </div>\n  );\n};\n\nexport default MethodView;\n","import React, { useEffect } from \"react\";\nimport useNavigationKeyActions from \"../../../../hooks/useNavigationKeyActions\";\nimport { ButtonForms } from \"../../../widgets/buttons/buttons\";\nimport NewItemsLayout from \"../../../widgets/items/new-items-layout\";\n\nconst ModalityView = (props) => {\n  const {\n    items,\n    update_service_mode,\n    service_mode,\n    buttonActive,\n    deposit_service,\n    create_deposit_order,\n    title,\n    subtitle,\n  } = props;\n  let movil_viewport = window.innerWidth < 768;\n\n  const [setCurrentSelection] = useNavigationKeyActions({\n    items,\n    loader: false,\n    uniqueIdForElement: \"modality-item-\",\n    modalRestriction: false,\n  });\n\n  useEffect(() => {\n    update_service_mode(\"Sucursal virtual\", \"app\");\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"DLstep modality\">\n      <div className=\"DLcontain\">\n        <p className=\"fuente DLtitle2\">\n          {title} {deposit_service ? deposit_service : \"\"}\n        </p>\n        <p className=\"fuente DLstitle\">{subtitle}</p>\n      </div>\n\n      <div\n        className={`${\n          window.innerWidth > 768\n            ? \"DLItemSelectionContainer\"\n            : \"ItemSelectionContainerMovil\"\n        }`}\n      >\n        <div\n          className={`${\n            window.innerWidth > 768 ? \"DLcontainerItems\" : \"containerItems\"\n          } chooseMethod`}\n        >\n          {items.map((item, index) => {\n            return (\n              <NewItemsLayout\n                setCurrentSelection={setCurrentSelection}\n                focusedId={`modality-item-${index}`}\n                number={index}\n                handleClick={create_deposit_order}\n                primarySelect={movil_viewport}\n                actualizarEstado={update_service_mode}\n                actives={service_mode === item.code && true}\n                {...item}\n                key={item.id}\n              />\n            );\n          })}\n        </div>\n      </div>\n      <ButtonForms\n        type=\"primary\"\n        active={buttonActive}\n        siguiente={create_deposit_order}\n      >\n        CREAR ORDEN\n      </ButtonForms>\n    </div>\n  );\n};\n\nexport default ModalityView;\n","import React, { Fragment } from \"react\";\nimport { SimpleLoader } from \"../../../widgets/loaders\";\nimport {\n  ButtonSuccess,\n  ButtonSuccess2,\n} from \"../../../widgets/buttons/buttons\";\nimport { service_modes, cash_payment } from \"../../../api/ui/api.json\";\n// import proof from \"../../../../assets/proof.png\";\nimport ModalityView from \"../views/modality\";\n// import IconSwitch from \"../../../widgets/icons/iconSwitch\";\nimport DetailGenerator from \"../../../widgets/modal/render/orderDetail/detailGenerator\";\nimport { getCdnPath } from '../../../../environment'\n\nimport \"./flows.css\";\n\n// {/* ---------------------------------------------------------FLUJO TRANSFERENCIA BANCARIA.-------------------------------------------------------------------- */}\n\nexport const TransferFlow = (props) => {\n  const {\n    deposit_way,\n    deposit_service,\n    step,\n    buttonActive,\n    update_service_mode,\n    service_mode,\n    create_deposit_order,\n    idForAcceptButtonInDepositView,\n  } = props;\n\n  return (\n    <section className=\"DepositLayout\">\n      {/* {\n        (step === 3 && deposit_way === \"bankaccount\") &&\n        <div className=\"DLstep\">\n          <div className=\"DLcontain\">\n            <p className=\"fuente DLtitle2\" >Procesaré el deposito por medio</p>\n            <p className=\"fuente DLstitle\" >de la entidad Bancaria:</p>\n          </div>\n          {\n            !deposit_provider_list ?\n            <SimpleLoader label=\"cargando proveedores\"/>\n            :\n            <ItemSelectionContainer\n              items={deposit_provider_list}\n              type=\"banks\"\n              itemSelect={deposit_service}\n              actualizarEstado={actualizarEstado}\n              update_control_form={update_control_form}\n            />\n          }\n\n          <ButtonForms type=\"primary\" active={buttonActive} siguiente={siguiente}>Continuar</ButtonForms>\n        </div>\n      } */}\n\n      {step === 3 && deposit_way === \"bankaccount\" && (\n        <ModalityView\n          title=\"Haré la transferencia\"\n          subtitle=\"Por medio de:\"\n          items={service_modes}\n          update_service_mode={update_service_mode}\n          service_mode={service_mode}\n          buttonActive={buttonActive}\n          deposit_service={deposit_service}\n          create_deposit_order={create_deposit_order}\n        />\n      )}\n\n      {step === 4 && deposit_way === \"bankaccount\" && (\n        <Success\n          idForAcceptButtonInDepositView={idForAcceptButtonInDepositView}\n          {...props}\n        />\n      )}\n    </section>\n  );\n};\n\nexport const CashFlow = (props) => {\n  // console.log('LAAAAAA NUEVA PROPIEDAD DE SERVICIOOOOOOOO------------------', props)\n\n  const {\n    deposit_way,\n    short_bank_name,\n    deposit_service,\n    step,\n    update_local_state,\n    buttonActive,\n    create_deposit_order,\n    idForAcceptButtonInDepositView,\n  } = props;\n\n  return (\n    <section className=\"DepositLayout\">\n      {step === 3 && deposit_way === \"cash\" && (\n        <ModalityView\n          title=\"Haré el depósito por:\"\n          items={cash_payment}\n          update_service_mode={update_local_state}\n          service_mode={short_bank_name}\n          buttonActive={buttonActive}\n          deposit_service={deposit_service}\n          create_deposit_order={create_deposit_order}\n        />\n      )}\n\n      {step === 4 && deposit_way === \"cash\" && (\n        <Success\n          idForAcceptButtonInDepositView={idForAcceptButtonInDepositView}\n          {...props}\n        />\n      )}\n    </section>\n  );\n};\n\nconst Success = (props) => {\n  const {\n    loader,\n    deposit_way,\n    // deposit_service,\n    finalizar,\n    final,\n    finalButton,\n    step,\n    new_ticket,\n    idForAcceptButtonInDepositView,\n    deposit_order,\n  } = props;\n\n  // console.log('|||||||||||||| °°°°° MODALSUCCESS', deposit_order, props)\n\n  return (\n    <div\n      id=\"DLstep2\"\n      className={`DLstep ${\n        step === 4 || (step === 4 && deposit_way === \"cash\") ? \"DLstep2\" : \"\"\n      }`}\n    >\n      {\n        loader ? (\n          <Fragment>\n            <div></div>\n            <SimpleLoader label={`Creando orden de depósito`} />\n          </Fragment>\n        ) : (\n          // <section className={`stepFinish ${final ? 'cambiarGrid': ''}`}>\n          <Fragment>\n            {/* <span className=\"DLsave\" onClick={guardarMetodo}>\n              <i className=\"far fa-bookmark tooltip\" >\n              <span className=\"tooltiptext tooltiptexts fuente\">Guardar Medio de pago</span>\n              </i>\n            </span> */}\n\n            <div className={`succ nWCabeza ${final ? \"desaparece1\" : \"\"}`}>\n              <div className=\"icon icon--order-success svg\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"72px\"\n                  height=\"72px\"\n                  alt=\"\"\n                >\n                  <g fill=\"none\" stroke=\"white\" strokeWidth=\"3\">\n                    <circle cx=\"36\" cy=\"36\" r=\"35\"></circle>\n                    <path\n                      className=\"check\"\n                      d=\"M17.417,37.778l9.93,9.909l25.444-25.393\"\n                    ></path>\n                  </g>\n                </svg>\n              </div>\n              <p className=\"titleWhite fuente\"> Operación Exitosa</p>\n            </div>\n\n            <div className=\"asaras\">\n              <div\n                style={{ marginTop: \"-20%\", zIndex: 999 }}\n                className={`${\n                  final ? \"apareces1\" : \"\"\n                } nWbody2 Fbody2 FlowCont fuente DLmessage`}\n              >\n                <div className=\"FolowTexts\">\n                  <p className=\"fuente Fimportant\">¡IMPORTANTE!</p>\n                  <p className=\"Ftexto fuente \">\n                    Una vez realizado el depósito bancario debes confirmar la\n                    transacción con una fotografía del{\" \"}\n                    <strong> DESPRENDIBLE DE PAGO </strong>y adjuntarlas en la\n                    orden de pago\n                  </p>\n                  <img className=\"tocatoca\" src={`${getCdnPath('assets')}proof.png`} alt=\"\" width=\"34%\" />\n                </div>\n              </div>\n\n              <div\n                className={`nWbody2 DLbody2 Fbody2 eya fuente ${\n                  final ? \"desaparece1\" : \"\"\n                }`}\n              >\n                {/* <div className=\"nBitemSuccesss\">\n                  <p className=\"fuente\">Debes depositar por:</p>\n                  <div className=\"fuente\">\n                    <div className=\"DLicontainer\">\n                      {deposit_service}\n                      <IconSwitch\n                        icon={deposit_service.toLowerCase()}\n                        size={25}\n                      />\n                    </div>\n                  </div>\n                </div> */}\n\n                {new_ticket && (\n                  <DetailGenerator order={deposit_order} theme=\"darkTheme\" />\n                )}\n              </div>\n            </div>\n\n            <div id=\"nWcta\" className=\"nWcta\">\n              {finalButton ? (\n                <ButtonSuccess2\n                  id={idForAcceptButtonInDepositView}\n                  toggleModal={finalizar}\n                >\n                  Finalizar\n                </ButtonSuccess2>\n              ) : (\n                <ButtonSuccess\n                  id={idForAcceptButtonInDepositView}\n                  toggleModal={finalizar}\n                >\n                  Finalizar\n                </ButtonSuccess>\n              )}\n            </div>\n          </Fragment>\n        )\n        // </section>\n      }\n    </div>\n  );\n};\n","import React, { Fragment } from \"react\";\n// import ItemSelectionContainer from '../../widgets/items/ItemSelectionContainer'\nimport { payment_method } from \"../../api/ui/api.json\";\n// import ItemLayout from \"../../widgets/items/itemLayout\";\nimport { SimpleLoader } from \"../../widgets/loaders\";\n// import { ButtonForms } from \"../../widgets/buttons/buttons\";\nimport { TransferFlow, CashFlow } from \"./flows\";\n// import ItemWallet from \"../../widgets/accountList/items\";\nimport MethodView from \"../../withdrawAccounts/new/views/1method\";\nimport ViewAmountComponent from \"../views/viewAmount\";\nimport useKeyActionAsClick from \"../../../hooks/useKeyActionAsClick\";\n\nconst DepositLayout = (props) => {\n  const {\n    siguiente,\n    currency = 'cop',\n    amount,\n    deposit_way,\n    step,\n    type_currency,\n    loader,\n    updateAmountOnState,\n    select_deposit_way,\n    minAmount,\n  } = props;\n  const idForAcceptButtonInDepositView = useKeyActionAsClick(\n    true,\n    \"accept-deposit-view-modal\",\n    13,\n    false,\n    \"onkeyup\",\n    true\n  );\n\n  // console.log('|||||||||||| deposit Layout ===> ', currency)\n\n  return (\n    <section className=\"DepositLayout\">\n      {/* {!short_currency_name && step === 1 && (\n        <div className=\"DLstep\">\n          <p className=\"fuente DLtitle\">\n            ¿En que moneda deseas hacer el deposito?\n          </p>\n\n          <div className=\"ItemSelectionContainer2 ItemSelectionContainerMovil\">\n            <div className=\"containerItems\">\n              {coins ? (\n                coins.map((item) => {\n                  return (\n                    <ItemLayout\n                      actualizarEstado={select_currency}\n                      actives={itemActive === item.name && true}\n                      {...item}\n                      key={item.id}\n                    />\n                  );\n                })\n              ) : (\n                <div className=\"LoaderIt\">\n                  <SimpleLoader label=\"Obteniendo Activos\" />\n                </div>\n              )}\n            </div>\n          </div>\n          <ButtonForms\n            _id={idForAcceptButtonInDepositView}\n            type=\"primary\"\n            active={buttonActive}\n            siguiente={primerDeposito}\n          >\n            Continuar\n          </ButtonForms>\n        </div>\n      )} */}\n\n      {/* {type_currency === \"crypto\" && step === 1 && (\n        <Fragment>{loader && <SimpleLoader label={msgLoader} />}</Fragment>\n      )}\n\n      {\n        type_currency === \"crypto\" && step === 1 && wallets_list.length > 0 && (\n          <section className=\"DLwallet_list_container\">\n            <p className=\"DLtitle2\">\n              Elige la cuenta {currency} en la que deseas depositar:\n            </p>\n            <div className=\"DLwallet_list\">\n              {wallets_list.map((wallet) => {\n                return (\n                  <ItemWallet\n                    key={wallet.id}\n                    deposit={deposit}\n                    deposit_providers={deposit_providers}\n                    wallet={wallet}\n                    walletDetail={deposit}\n                  />\n                );\n              })}\n            </div>\n          </section>\n        )\n      } */}\n\n      {type_currency === \"fiat\" && step === 1 && (\n        <Fragment>\n          {loader ? (\n            <SimpleLoader label=\"Accediendo a la cuenta\" />\n          ) : (\n            <ViewAmountComponent\n              currency={currency}\n              mainCtaId={idForAcceptButtonInDepositView}\n              amount={amount}\n              updateAmountOnState={updateAmountOnState}\n              operation_type=\"deposit\"\n              handleSubmit={siguiente}\n              minAmount={minAmount}\n            />\n          )}\n        </Fragment>\n      )}\n\n      {type_currency === \"fiat\" && step === 2 && (\n        <MethodView\n          title=\"Utilizando la siguiente\"\n          subtitle=\"forma de pago\"\n          items={payment_method}\n          select_method={select_deposit_way}\n          item_active={deposit_way}\n          siguiente={siguiente}\n          idForAcceptButtonInDepositView={idForAcceptButtonInDepositView}\n        />\n      )}\n\n      {/* ---------------------------------------------------------FLUJO TRANSFERENCIA BANCARIA.-------------------------------------------------------------------- */}\n\n      {deposit_way === \"bankaccount\" && (\n        <TransferFlow\n          idForAcceptButtonInDepositView={idForAcceptButtonInDepositView}\n          {...props}\n        />\n      )}\n\n      {/* ---------------------------------------------------------FLUJO TARJETA DEBITO.-------------------------------------------------------------------- */}\n\n      {step === 3 && deposit_way === \"debit\" && (\n        <div className=\"DLstep\">\n          <p>DEBITO PSE</p>\n        </div>\n      )}\n\n      {/* ---------------------------------------------------------FLUJO DINERO EN EFECTIVO.-------------------------------------------------------------------- */}\n\n      {deposit_way === \"cash\" && (\n        <CashFlow\n          idForAcceptButtonInDepositView={idForAcceptButtonInDepositView}\n          {...props}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default DepositLayout;\n","import React from \"react\";\nimport { SimpleLoader } from \"../../loaders\";\nimport \"../toast.css\";\n\nexport const SavePayment = (props) => {\n  const { label, loader } = props;\n\n  return (\n    <div className=\"SavePayment\">\n      <p>{label}</p>\n      {loader ? (\n        <SimpleLoader />\n      ) : (\n        <i className=\"far fa-check-circle Msuccess\"></i>\n      )}\n    </div>\n  );\n};\n\nexport default SavePayment;\n","import React, { Component } from \"react\";\nimport DepositLayout from \"./depositLayout\";\nimport { connect } from \"react-redux\";\n// import { banks, coins } from '../../api/ui/api.json'\nimport { bindActionCreators } from \"redux\";\nimport actions from \"../../../actions\";\nimport { toast } from \"react-toastify\";\nimport * as globalServices from \"../../../utils\";\nimport \"./deposit.css\";\nimport { SavePayment } from \"../../widgets/toast/messages\";\nimport { withRouter } from \"react-router\";\nimport BigNumber from \"bignumber.js\";\nimport withCoinsendaServices from \"../../withCoinsendaServices\";\n\nclass DepositContainer extends Component {\n  state = {\n    type_currency: this.props.type_currency,\n    // currency:this.props.currency,\n    currency:\n      this.props.current_wallet && this.props.current_wallet.currency.currency,\n    short_currency_name: this.props.short_currency_name,\n    short_bank_name: this.props.short_bank_name,\n    amount: 0,\n    minAmount: null,\n    deposit_way: this.props.deposit_way,\n    deposit_service: this.props.deposit_service,\n    service_mode: this.props.service_mode,\n    itemActive: \"\",\n    statusInput: \"\",\n    final: false,\n    finalButton: false,\n    msgLoader: \"\",\n    wallets_list: [],\n    cost_id: this.props.cost_id,\n    account_id: this.props.match.params && this.props.match.params.account_id,\n    new_ticket: null,\n    deposit_provider_list: null,\n    currentDepositProvider: null,\n    deposit_order: null,\n  };\n\n  componentDidMount() {\n    this.props.action.CurrentForm(\"deposit\");\n    // this.serve_deposit_provider_views()\n    this.props.history.push(`?form=deposit_amount`);\n\n    // Aqui se selecciona el deposit provider actual\n    const { deposit_providers } = this.props;\n    // let deposit_provider = await deposit_providers.find(dep_prov => {\n    //   return dep_prov.provider.name === short_bank_name || (cost_id === \"en_efectivo\" &&  dep_prov.provider_type === 'bank')\n    // })\n    const currentDepositProvider =\n      deposit_providers &&\n      deposit_providers[this.props.current_wallet.dep_prov[0]];\n    this.setState({ currentDepositProvider });\n  }\n\n  componentWillUnmount() {\n    this.props.history.push(window.location.pathname);\n  }\n\n  componentDidUpdate(prevProps) {\n    // inserto las siguientes rutas para poder hacer seguimiento al funnel desde hotjar\n    if (prevProps.step === this.props.step) {\n      return;\n    }\n\n    let route;\n\n    if (this.props.step === 1) {\n      route = `?form=deposit_amount`;\n    }\n\n    if (this.props.step === 2) {\n      route = `?form=deposit_way_to_pay`;\n    }\n\n    if (this.props.step === 3) {\n      route = `?form=deposit_payment_method`;\n    }\n\n    if (this.props.step === 4) {\n      route = `?form=deposit_finish`;\n    }\n    // console.log('||||||||||||||||||||||||||||||| componentDidUpdate =?=> ')\n    this.props.history.push(route);\n  }\n\n  update_control_form = (searchMatch) => {\n    //esta función valida si tenemos un nombre item escrito y si tenemos un item coin/bank seleccionado, si cumple con esto, nos habilita el call to action para seguir hacia la proxima acción\n    // console.log('update_control_form SE ESTA ACTUALIZANDO: ', searchMatch)\n\n    if (this.props.search.length > 1) {\n      return this.props.action.UpdateFormControl(\"deposit\", false);\n    }\n\n    if (this.props.search.length === 1) {\n      // Valido si hay una coincidencia en la busqueda y un nombre para el item que se esta creando, doy luz verde para continuar hacia el siguiente paso del formulario\n      // console.log('esto es lo que pasa puto', this.props.search)\n      return this.props.action.UpdateFormControl(\"deposit\", true);\n    }\n\n    if (this.props.step === 3) {\n      if (this.state.deposit_service !== \"\") {\n        return this.props.action.UpdateFormControl(\"deposit\", true);\n      }\n    }\n\n    if (this.props.step === 4) {\n      if (this.state.service_mode !== \"\") {\n        return this.props.action.UpdateFormControl(\"deposit\", true);\n      }\n    }\n  };\n\n  update_form = () => {\n    this.props.action.UpdateForm(\"deposit\", this.state);\n  };\n\n  // PASO1, SI ES EL PRIMER DEPOSITO SELECCIONAMOS EL TIPO DE MONEDA LA CUAL DESEAMOS DEPOSITAR\n  select_currency = (itemName, short_name, currency_type) => {\n    this.setState({\n      itemActive: itemName,\n      currency: itemName,\n      short_currency_name: short_name,\n      type_currency: currency_type,\n    });\n    this.props.action.UpdateFormControl(\"deposit\", true);\n  };\n\n  // SI SE SELECIONA CRYPTO, Y NO HAY WALLET DE ESA CUENTA, SE CREA UNA NUEVA, SINO LISTAMOS LAS WALLETS Y LA QUE ELIJA, LO ENVIAREMOS A DEPOSIT DE ESA WALLET SINO SE CONTINÚA CON EL FLUJO DEPOSITO DE FIAT, Y  SE PREESTABLECE LA CANTIDAD MINIMA DE DEPOSITO QUE SON 20.MIL COP\n  primerDeposito = async () => {\n    let amountw = 20000;\n\n    // limitar cantidad de deposito limite por proveedor\n    if (true) {\n      console.log(this.state, this.props);\n    }\n\n    await this.setState({\n      amount: amountw,\n    });\n\n    const { type_currency } = this.state;\n\n    this.update_form(this.state);\n    // this.props.history.push(\"/wallets/deposit/5c04f873eb9c94511fd2edfa\")\n    // this.props.action.toggleModal()\n    // console.log('|||||||||||| PRIMER DEPOSITO', this.state.type_currency)\n\n    let wallets = this.props.wallets;\n\n    // 1.Consultamos si hay wallets en el estado\n    if (!wallets) {\n      this.setState({\n        msgLoader: \"Obteniendo tus billeteras\",\n      });\n\n      this.props.action.isAppLoading(true);\n      let res = await this.props.coinsendaServices.getWalletsByUser();\n      this.props.action.isAppLoading(false);\n      if (!res) {\n        return this.handleError(\"No se han podido consultar tus Billeteras\");\n      }\n      wallets = !res.entities.wallets ? [] : res.entities.wallets;\n    }\n\n    // 2. hay wallets disponibles sobre la moneda solicitada?\n    let current_wallets = await this.props.services.matchNormalizeWallet(\n      wallets,\n      this.state.currency\n    );\n    // 2.1 Si NO EXISTEN WALLETS en esta moneda, CREAMOS la wallet y entramos a this.wallet/deposit por medio de la ruta\n    if (!current_wallets || current_wallets.length < 1) {\n      await this.crearWallet();\n\n      return this.props.action.CurrentForm(\"deposit\");\n      // return alert('PERRO, no tenemos wallets todavía, ya mismo creamos una..')\n    }\n    // 2.2, si existe solamente una wallet entonces ingrese automaticamente al deposito de esta wallet\n    if (\n      current_wallets.length === 1 ||\n      (current_wallets.length >= 1 && type_currency === \"fiat\")\n    ) {\n      let unica_wallet = current_wallets.pop();\n      // return console.log(unica_wallet.id)\n      if (this.state.type_currency !== \"fiat\") {\n        this.props.action.toggleModal();\n      }\n      // this.props.action.toggleModal()\n      await this.to_deposit_wallet(unica_wallet.id);\n      return this.props.action.CurrentForm(\"deposit\");\n    }\n\n    // 3 Entonces muestre las wallets, para elegir en cual hacer el deposito...\n\n    this.setState({\n      wallets_list: current_wallets,\n    });\n    return console.log(\"Eureka\");\n  };\n\n  handleError = (msg) => {\n    this.props.toastMessage()(msg, \"error\");\n    this.props.action.toggleModal();\n    this.props.action.CleanForm(\"deposit\");\n  };\n\n  crearWallet = async () => {\n    this.props.action.isAppLoading(true);\n    this.setState({\n      msgLoader: `Creando billetera ${this.state.currency}`,\n    });\n\n    const body = {\n      data: {\n        userId: this.props.user.id,\n        name: `Mi nueva wallet ${this.state.currency}`,\n        description: \"description\",\n        country: this.props.user.settings.current_country,\n        currency: {\n          currency: this.state.currency,\n          is_token: false,\n        },\n      },\n    };\n\n    const new_wallet = await this.props.coinsendaServices.createWallet(body);\n\n    // setTimeout(()=>{\n    await this.props.coinsendaServices.getWalletsByUser();\n\n    this.props.action.isAppLoading(false);\n    this.to_deposit_wallet(new_wallet.account.id);\n    if (this.state.type_currency !== \"fiat\") {\n      this.props.action.CleanForm(\"deposit\");\n    }\n    let message = `¡Estas dentro de la nueva wallet ${this.state.currency}!`;\n    this.props.toastMessage()(message, \"success\");\n\n    // }, 1500)\n  };\n\n  to_deposit_wallet = (id_wallet) => {\n    return this.props.history.push(`/wallets/deposit/${id_wallet}`);\n  };\n\n  // PASO 1, DIGITAMOS EL MONTO DE FIAT QUE DESEAMOS COMPRAR\n  updateAmountOnState = async (amount) => {\n    // let amountw = await this.props.services.number_format(amount)\n    // verificamos que no supere el monto maximo permitido por el preveedor\n    const maxDepositAmount =\n      this.state.currentDepositProvider &&\n      this.state.currentDepositProvider.provider.max_amount;\n    const decimalAmount = new BigNumber(amount);\n    if (!amount || decimalAmount.isLessThan(maxDepositAmount)) {\n      await this.setState({\n        amount: amount,\n      });\n    }\n    // this.props.action.UpdateFormControl('deposit', (!amount) ? false : (amount<20000) ? false : true)\n  };\n\n  // PASO 2, SELECCIONAMOS EL METODO DE PAGO....\n  select_deposit_way = async (payload, deposit_way) => {\n    await this.setState({\n      cost_id: deposit_way === \"cash\" ? \"en_efectivo\" : \"otros_medios\",\n      deposit_way: deposit_way,\n    });\n\n    this.props.action.UpdateFormControl(\"deposit\", true);\n    this.update_form();\n    // await this.serve_deposit_provider_views(deposit_way === 'cash' ? 'en_efectivo' : 'otros_medios')\n  };\n\n  update_service_mode = async (value, short) => {\n    await this.setState({\n      service_mode: short,\n    });\n    await this.update_form();\n    this.props.action.UpdateFormControl(\"deposit\", true);\n  };\n\n  // PASO 3, SELECCIONAMOS LA ENTIDAD BANCARIA POR LA CUAL PROCESAREMOS EL DEPOSITO....\n  actualizarEstado = async (event, ppp) => {\n    const { short_name, value } = event.target;\n    this.update_local_state(value, short_name);\n  };\n\n  update_local_state = async (value, short_name) => {\n    // console.log('Entidad bancaria',value, short_name)\n    await this.setState({\n      deposit_service: value,\n      short_bank_name: short_name,\n    });\n\n    this.update_form();\n    this.update_control_form();\n  };\n\n  siguiente = (event) => {\n    this.props.action.UpdateFormControl(\"deposit\", false);\n    this.update_form();\n    this.props.action.IncreaseStep(this.props.current);\n    // if(this.state.deposit_way === 'cash'){\n    //     return this.props.action.IncreaseStep(this.props.current)\n    // }\n\n    if (!this.state.deposit_provider_list) {\n      // return this.serve_deposit_provider_views()\n    }\n  };\n\n  componentWillReceiveProps(props) {\n    const { match } = props;\n\n    this.setState({\n      account_id: match.params && match.params.account_id,\n    });\n  }\n\n  finalizar = async () => {\n    if (this.state.final) {\n      this.props.action.CurrentForm(\"wallets\");\n      // programamos la animación del nuevo deposito creado\n      this.props.action.add_new_transaction_animation();\n      this.props.action.CleanForm(\"deposit\");\n      // console.log('||||||||||||||||||| FINISH HIM', this.state)\n      return this.props.history.push(\n        `/wallets/activity/${this.state.account_id}/deposits`\n      );\n    }\n\n    this.props.history.push(`?form=deposit_close`);\n\n    this.setState({\n      final: true,\n      finalButton: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        finalButton: false,\n      });\n    }, 7000);\n  };\n\n  create_deposit_order = async () => {\n    const { current_wallet, user, deposit_providers } = this.props;\n\n    const { amount, cost_id, deposit_service, service_mode } = this.state;\n\n    const deposit_provider =\n      deposit_providers && deposit_providers[current_wallet.dep_prov[0]];\n\n    this.siguiente();\n    this.props.action.isAppLoading(true);\n\n    if (!this.props.deposits) {\n      await this.props.coinsendaServices.get_deposits(\n        this.props.current_wallet.id\n      );\n    }\n\n    let response = await this.props.coinsendaServices.createDeposit(\n      current_wallet && current_wallet.currency,\n      amount,\n      current_wallet.id,\n      cost_id,\n      deposit_service,\n      user,\n      service_mode,\n      deposit_provider.id\n    );\n\n    if (!response) {\n      this.props.action.isAppLoading(false);\n      this.props.action.ReduceStep(this.props.current);\n      return this.props.toastMessage()(\n        \"No se ha podido crear la orden de depósito\",\n        \"error\"\n      );\n    }\n\n    let new_deposit_model = {\n      id: response.id,\n      unique_id: response.id,\n      type_order: \"deposit\",\n      ...response,\n    };\n\n    if (!current_wallet.count) {\n      await this.props.action.update_item_state(\n        { [current_wallet.id]: { ...current_wallet, count: 99 } },\n        \"wallets\"\n      );\n    }\n\n    // await this.props.action.get_deposit_list(user)\n    // await this.props.action.normalize_new_item(user, deposits, new_deposit_model, 'deposits')\n    // await this.props.action.update_activity_account(this.props.current_wallet.id, 'deposits')\n\n    // await this.props.action.update_pending_activity()\n    // console.log('=> deposits UPDATE', this.props.deposits)\n    // setTimeout(async()=>{\n    //   await this.props.services.serve_activity_list(action.get_deposit_list, user, current_wallet, 'deposits')\n    //   await this.props.action.update_activity_account(this.props.current_wallet.id, 'deposits')\n    //   await this.props.action.update_pending_activity()\n    // }, 5000)\n\n    // return console.log('DEPOSIT INFO RESPONSE', response, new_deposit_model)\n    let new_deposit = [\n      {\n        ui_name: \"Id depósito:\",\n        value: new_deposit_model.id,\n        id: 1,\n      },\n      {\n        ui_name: \"Cantidad depósito:\",\n        value: `$ ${this.props.services.number_format(\n          new_deposit_model.amount\n        )} ${new_deposit_model.currency.currency}`,\n        icon: new_deposit_model.currency.currency,\n        id: 2,\n      },\n      {\n        ui_name: \"Costo depósito:\",\n        value: `$ ${this.props.services.number_format(\n          new_deposit_model.cost\n        )} ${new_deposit_model.currency.currency}`,\n        id: 3,\n      },\n      {\n        ui_name: \"Total depósito:\",\n        value: `$ ${this.props.services.number_format(\n          new_deposit_model.amount_neto\n        )} ${new_deposit_model.currency.currency}`,\n        id: 4,\n      },\n      {\n        ui_name: \"Debes depositar a:\",\n        value: deposit_provider.provider.ui_name,\n        icon: deposit_provider.provider.name,\n        id: 5,\n      },\n      {\n        ui_name: deposit_provider.provider.account.account_id.ui_name,\n        value: deposit_provider.provider.account.account_id.account_id,\n        id: 6,\n      },\n      {\n        ui_name: deposit_provider.provider.account.type.ui_name,\n        value: deposit_provider.provider.account.type.type,\n        id: 7,\n      },\n      {\n        ui_name: deposit_provider.provider.account.bussines_name.ui_name,\n        value: deposit_provider.provider.account.bussines_name.bussines_name,\n        id: 8,\n      },\n    ];\n\n    // setTimeout(()=>{\n    this.props.action.isAppLoading(false);\n    // si la acción se lleva satisfactoriamente actualizamos el fondo del modal a un color verde\n    this.props.action.ModalView(\"modalSuccess\");\n    this.props.action.success_sound();\n\n    this.setState({\n      new_ticket: new_deposit,\n      deposit_order: response,\n    });\n    return this.props.action.current_section_params({\n      currentFilter: \"deposits\",\n    });\n    // }, 1500)\n  };\n\n  to_deposit_crypto = (wallet, history) => {\n    this.props.action.toggleModal();\n    return history.push(`wallets/deposit/${wallet.id}`);\n  };\n\n  // handleKeyPress = async(e) => {\n  //   let message = await this.props.services.handleKeyPress(e, this.props.current)\n  //   return this.setState({statusInput:message})\n  // }\n\n  guardarMetodo = () => {\n    toast(\"\", {\n      position: toast.POSITION.BOTTOM_RIGHT,\n      pauseOnFocusLoss: false,\n      draggablePercent: 60,\n      className: \"putito\",\n      bodyClassName: \"putitoText\",\n      progressClassName: \"putitoProgress\",\n      toastId: 2,\n      autoClose: false,\n    });\n\n    toast.update(2, {\n      render: <SavePayment loader={true} label=\"Guardando Medio de pago\" />,\n      autoClose: false,\n    });\n\n    setTimeout(() => {\n      toast.update(2, {\n        render: <SavePayment loader={false} label=\"Medio de pago Guardado\" />,\n        autoClose: 1500,\n      });\n    }, 3000);\n  };\n\n  // serve_deposit_provider_views = async dep_provs =>{\n  //   // @param dep_prov\n  //   // otros_medios\n  //   // en_efectivo\n  //   const{\n  //     deposit_providers\n  //   } = this.props\n  //   // console.log('||||===> deposit_providers', deposit_providers)\n  //   let deposit_provider_list = []\n  //\n  //   await deposit_providers.map(async dep_prov => {\n  //     if(dep_prov.currency_type !== 'fiat'){return false}\n  //     // console.log('serve_deposit_provider_views', dep_prov)\n  //     let new_item = {\n  //           code:dep_prov.provider.name,\n  //           id:dep_prov.id,\n  //           type:'bank',\n  //           name:dep_prov.provider.ui_name,\n  //           selection:false,\n  //           min_amount:dep_prov.provider.min_amount\n  //         }\n  //       // console.log('dep_prov', dep_prov)\n  //       await this.setState({minAmount:dep_prov.provider.min_amount})\n  //       deposit_provider_list.push(new_item)\n  //   })\n  //\n  //   // console.log('===============> deposit_provider_list', deposit_provider_list)\n  //\n  //   return this.setState({deposit_provider_list:deposit_provider_list.length<1 ? null : deposit_provider_list})\n  //\n  // }\n\n  render() {\n    // console.log('::: __PROPIEDADES_DEPOSITO__ ::', this.props.user)\n    // console.log('::: __ESTADO_DEPOSITO__ ::', this.state)\n\n    const { buttonActive, coins } = this.props;\n\n    console.log(\"::: Deposit Container ::\", this.props);\n\n    return (\n      <DepositLayout\n        buttonActive={buttonActive}\n        select_currency={this.select_currency}\n        siguiente={this.siguiente}\n        primerDeposito={this.primerDeposito}\n        updateAmountOnState={this.updateAmountOnState}\n        select_deposit_way={this.select_deposit_way}\n        actualizarEstado={this.actualizarEstado}\n        update_control_form={this.update_control_form}\n        update_service_mode={this.update_service_mode}\n        create_deposit_order={this.create_deposit_order}\n        finalizar={this.finalizar}\n        update_local_state={this.update_local_state}\n        // handleKeyPress={this.handleKeyPress}\n        guardarMetodo={this.guardarMetodo}\n        deposit={this.to_deposit_crypto}\n        coins={coins}\n        {...this.state}\n        {...this.props}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  // console.log('::: __ESTADO_DEPOSITO__ ::', state)\n  // const { firstDeposit } = props\n\n  const {\n    short_bank_name,\n    service_mode,\n    deposit_way,\n    step,\n    short_currency_name,\n    type_currency,\n    deposit_service,\n    cost_id,\n  } = state.form.form_deposit;\n\n  // const {\n  //   short_name\n  // } = state.ui.current_section.params\n\n  const { localCurrency, currency } = state.modelData.pairs;\n  // console.log('::: __ESTADO_DEPOSITO__ ::', state.ui.current_section.params.current_wallet)\n\n  const {\n    user,\n    deposit_providers,\n    wallets,\n    pairs,\n    // deposits,\n    currencies,\n  } = state.modelData;\n\n  // let deposit_providers_list = []\n  // user.deposit_providers.map(provider_id => {\n  //   if (deposit_providers[provider_id].currency_type !== 'fiat') { return false }\n  //   return deposit_providers_list.push(deposit_providers[provider_id])\n  // })\n\n  const { account_id } = props.match.params;\n\n  let current_wallet = wallets[account_id];\n  // console.log('_____________________DEPOSIT PROVIDER ITEM ITERATOR', props, deposit_providers_list)\n  // console.log('_____________________DEPOSIT PROVIDER ITEM ITERATOR', props)\n\n  return {\n    buttonActive: state.form.form_control_deposit,\n    step: step,\n    current: state.form.current,\n    short_currency_name: short_currency_name\n      ? short_currency_name\n      : localCurrency,\n    short_bank_name: short_bank_name,\n    currency,\n    deposit_service: deposit_service,\n    type_currency: type_currency,\n    cost_id: cost_id,\n    loader: state.isLoading.loader,\n    search: state.form.search_deposit,\n    deposit_way: deposit_way,\n    service_mode: service_mode,\n    services: globalServices,\n    redux_route: state.ui.menu_item_active,\n    wallets: wallets,\n    user: user,\n    localCurrency: pairs.localCurrency,\n    current_wallet,\n    deposits:\n      state.storage.activity_for_account[account_id] &&\n      state.storage.activity_for_account[account_id].deposits,\n    coins: currencies,\n    // deposit_providers: deposit_providers_list\n    deposit_providers,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withCoinsendaServices(withRouter(DepositContainer)));\n"],"sourceRoot":""}