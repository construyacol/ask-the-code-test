{"version":3,"sources":["components/forms/config.js","components/forms/utils.js","components/forms/widgets/fiatDeposit/api.js","components/forms/const.js","components/forms/widgets/kyc/identityComponent/api.js","components/forms/widgets/personalKycComponent/api.js","components/forms/widgets/kyc/locationComponent/api.js","components/forms/widgets/kyc/contactComponent/api.js","components/forms/widgets/onBoardingComponent/api.js","components/forms/widgets/newWallet/api.js","components/forms/widgets/biometricKycComponent/api.js","components/forms/widgets/kyc/utils.js","components/forms/widgets/personalKycComponent/utils.js","components/forms/widgets/personalKycComponent/const.js","components/forms/widgets/kyc/locationComponent/const.js"],"names":["stages","BIOMETRIC_STAGES","PERSONAL_STAGES","ONBOARDING_STAGES","FIAT_DEPOSIT_STAGES","NEW_WALLET_STAGES","IDENTITY_STAGES","LOCATION_STAGES","CONTACT_STAGES","defaultState","PERSONAL_DEFAULT_STATE","FIAT_DEPOSIT_DEFAULT_STATE","IDENTITY_DEFAULT_STATE","LOCATION_DEFAULT_STATE","CONTACT_DEFAULT_STATE","handleError","wrapperComponent","BIOMETRIC_COMPONENTS","PERSONAL_COMPONENTS","ONBOARDING_COMPONENTS","FIAT_DEPOSIT_COMPONENTS","NEW_WALLET_COMPONENTS","IDENTITY_COMPONENTS","LOCATION_COMPONENTS","CONTACT_COMPONENTS","formStructure","formName","successStage","getQuery","queryParams","Object","entries","map","param","index","concat","join","getInitialState","payload","initialState","iterableSource","keys","stageKey","errors","setMessageError","selector","message","labelElement","document","querySelector","innerHTML","style","color","getSelectList","async","listKey","list","res","mainService","API_FETCH_SELECT_LIST","createSelectList","objectList","selectList","ui_name","ui_type","forEach","key","uiName","name","value","code","generateSelectList","createStage","source","modelated","_source","structuredClone","stage","uiType","item","currencySymbol","currency_symbol","itemUiName","flag","INFO_URL_API","replace","dataService","biometric","ApiGetBiometricStages","onBoarding","ApiGetOnBoardingStages","personal","ApiGetPersonalStages","identity","ApiGetIdentityStages","fiatDeposit","ApiGetOnFiatDepositStages","newWallet","ApiGetNewWalletStages","location","ApiGetLocationStages","contact","ApiGetContactStages","initStages","apiStages","config","sourceStages","STAGES","ApiPostCreateDeposit","body","tools","setLoader","nextStage","createDeposit","IdentityApIUrl","CountryUrl","Environment","location_country","country","nationality","province","city","id_type","NEXT_SELECT_LIST","PRIMARY_COLOR","INFO_DOCUMENT_NEEDED","INFO_NEEDED","FILES_NEEDED","pendingOrRejectedIdentity","identityInfo","includes","info_state","_document","getOneDocument","filesNeeded","file_needed","fileKey","ApiPostIdentityInfo","birthday","formatMaskDate","timeStampDate","parseDateToTimeStamp","info_needed","documentId","updateInfoIdentity","identity_id","id","createIdentity","document_id","fetchCompleteUserData","ApiPostIdentityFiles","user","pendingIdentityFile","mainIdentity","currentIdentity","files_needed","fileId","state","img","addFilesToIdentity","createInfoStages","stageData","dataForm","setDataForm","documentData","length","documentKey","prevState","defaultMessage","successPattern","pattern","placeholder","form","props","min","max","pasaporte","others","mainComponent","label","AuxComponent","MainComponent","console","log","levels","level_1","natural","phone","colombia","afghanistan","address","cedula_ciudadania","cedula_extranjeria","pep","id_number","peru","surname","personType","level","countryValidators","ApiPostPersonalKyc","setLoading","prevStage","toastMessage","info","info_type","verification_level","updateLevelProfile","globalState","modelData","data","user_update","security_center","kyc","basic","updateUser","meta_phone","auxComponent","LOCATION_INFO_NEEDED","ApiPostLocation","createLocation","reqData","createRequirementLevel","requirements","CONTACT_INFO_NEEDED","ApiPostContact","createContact","component","NEW_WALLET_DEFAULT_STATE","getUserBiometric","keyChallenge","challenge","solved","biometricId","isIsoDate","isMaskDate","parseTimeStampToDate","timeStamp","isoDate","Date","BigNumber","multipliedBy","toNumber","toISOString","match","date","year","month","day","formatJsonUTFDate","getTime","div","toString","_date","split","parseInt","checkMaskDate","removeItemTag","e","itemKey","callback","target","className","stopPropagation","focus","remove","debugItemTag","anyTagExist","currentItemTag","getBody","prefix","_body","parseOnlyLetters","parseOnlyNumbers","parseAlphanumeric","writeOnLabel","typeMessage","LABEL_COLOR","validateLabelMsg","targetElement","settings","error","addItemTag","uiTagName","inpuTarget","inputContainer","itemTag","generateItemTag","appendChild","blur","itemTagContainer","createElement","uiNameElement","toLowerCase","closeButtom","getNextSelectList","currentList","nextStageName","default"],"mappings":"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","file":"static/js/9.f7f864f6.chunk.js","sourcesContent":["import { \n  FIAT_DEPOSIT_COMPONENTS,\n  FIAT_DEPOSIT_STAGES,\n  FIAT_DEPOSIT_DEFAULT_STATE\n} from './widgets/fiatDeposit/api'\n\nimport { \n  ONBOARDING_COMPONENTS,\n  ONBOARDING_STAGES\n} from './widgets/onBoardingComponent/api'\n\nimport { \n  NEW_WALLET_COMPONENTS,\n  NEW_WALLET_STAGES\n} from './widgets/newWallet/api'\n\nimport { \n  PERSONAL_COMPONENTS,\n  PERSONAL_STAGES,\n  PERSONAL_DEFAULT_STATE\n} from './widgets/personalKycComponent/api'\n\nimport { \n  LOCATION_DEFAULT_STATE,\n  LOCATION_COMPONENTS,\n  LOCATION_STAGES\n} from './widgets/kyc/locationComponent/api'\n\nimport { \n  IDENTITY_DEFAULT_STATE,\n  IDENTITY_COMPONENTS,\n  IDENTITY_STAGES\n} from './widgets/kyc/identityComponent/api'\n\n// import { \n//   IDENTITY_COMPONENTS,\n//   IDENTITY_STAGES\n// } from './widgets/identityKycComponent/api'\n\nimport { \n  CONTACT_DEFAULT_STATE,\n  CONTACT_COMPONENTS,\n  CONTACT_STAGES\n} from './widgets/kyc/contactComponent/api'\n\nimport { \n  BIOMETRIC_COMPONENTS,\n  BIOMETRIC_STAGES\n} from './widgets/biometricKycComponent/api'\n\nlet stages = {\n  ...BIOMETRIC_STAGES,\n  ...PERSONAL_STAGES,\n  ...ONBOARDING_STAGES,\n  ...FIAT_DEPOSIT_STAGES,\n  ...NEW_WALLET_STAGES,\n  ...IDENTITY_STAGES,\n  ...LOCATION_STAGES,\n  ...CONTACT_STAGES\n} \n\nconst defaultState = {\n  ...PERSONAL_DEFAULT_STATE,\n  ...FIAT_DEPOSIT_DEFAULT_STATE,\n  ...IDENTITY_DEFAULT_STATE,\n  ...LOCATION_DEFAULT_STATE,\n  ...CONTACT_DEFAULT_STATE\n}\n\nconst handleError = {\n  // personal:{\n  //   defaultErrorMessage:\"Hubo un error en la toma de datos...\",\n  //   errors:{\n  //     name:\"\"\n  //   }\n  // }\n}\n\n\nconst wrapperComponent = {\n  ...BIOMETRIC_COMPONENTS['wrapperComponent'],\n  ...PERSONAL_COMPONENTS['wrapperComponent'],\n  ...ONBOARDING_COMPONENTS['wrapperComponent'],\n  ...FIAT_DEPOSIT_COMPONENTS['wrapperComponent'],\n  ...NEW_WALLET_COMPONENTS['wrapperComponent'],\n  ...IDENTITY_COMPONENTS['wrapperComponent'],\n  ...LOCATION_COMPONENTS['wrapperComponent'],\n  ...CONTACT_COMPONENTS['wrapperComponent']\n}\n\nconst formStructure = formName => {\n  return {\n    wrapperComponent:wrapperComponent[formName],\n    handleError:handleError[formName],\n    successStage:null,\n    defaultState:defaultState[formName],\n    stages:stages[formName]\n  }\n}\n\nexport default formStructure\n","import { \n  // COUNTRY_URL_API,\n  API_FETCH_SELECT_LIST,\n  INFO_URL_API\n} from './const'\n\nimport { mainService } from '../../services/MainService'\nimport formStructure from './config.js'\nimport { ApiGetOnBoardingStages } from './widgets/onBoardingComponent/api'\nimport { ApiGetPersonalStages } from './widgets/personalKycComponent/api'\nimport { ApiGetLocationStages } from './widgets/kyc/locationComponent/api'\nimport { ApiGetContactStages } from './widgets/kyc/contactComponent/api'\nimport { ApiGetIdentityStages } from './widgets/kyc/identityComponent/api'\nimport { ApiGetBiometricStages } from './widgets/biometricKycComponent/api'\nimport { ApiGetOnFiatDepositStages } from './widgets/fiatDeposit/api'\nimport { ApiGetNewWalletStages } from './widgets/newWallet/api'\n\n\n// import countryValidators from './apiRes'\n\n\nexport const getQuery = (queryParams) => {\n  let result = Object.entries(queryParams).map((param, index) => {\n    let concat = `${index < 1 ? '?' : '&'}`\n    let query = `${concat}${param[0]}=${param[1]}`\n    return query\n  })\n  return result.join('')\n}\n\n\nexport const getInitialState = (payload) => {\n  let initialState = {}\n  const iterableSource = { ...payload.stages, ...payload?.defaultState }\n  // eslint-disable-next-line array-callback-return\n  Object.keys(iterableSource).map(stageKey => {\n  initialState[stageKey] = payload?.defaultState ? payload?.defaultState[stageKey] : \"\"\n    if(payload?.handleError?.errors && payload?.handleError?.errors[stageKey]){\n      return initialState[stageKey] = \"\"\n    }\n  })\n  return initialState\n}\n\n\nexport const setMessageError = (selector, message) => {\n  const labelElement = document.querySelector(selector)\n  if(!labelElement){return false}\n  labelElement.innerHTML = message\n  labelElement.style.color = 'red'\n}\n\n// manage tags system events\n\n\n\n\nexport const onSubmit = async(callback, TimeOut = 100) => {\n  callback(true)\n  setTimeout(() => { \n    callback(false)\n  }, TimeOut);\n}\n\n\n\nexport const generateSelectList = (objectList) => {\n  let selectList = {...objectList}\n  delete selectList.ui_name\n  delete selectList.ui_type\n  // eslint-disable-next-line array-callback-return\n  Object.keys(selectList).forEach(key => {\n    selectList[key].uiName = selectList[key]?.ui_name || selectList[key]?.name\n    selectList[key].value = key\n    delete selectList[key]?.ui_name\n    delete selectList[key]?.name\n    // delete selectList[key]?.id\n    delete selectList[key]?.code\n  })\n  return selectList\n}\n\nexport const getSelectList = async(listKey, payload) => {\n  let list \n  let res = await mainService[API_FETCH_SELECT_LIST[listKey]] && await mainService[API_FETCH_SELECT_LIST[listKey]](payload)\n  if(!res){return}\n  list = await createSelectList(res)\n  return generateSelectList(list)\n}\n\nexport const createStage = async(source, modelated, index) => {\n  let _source = typeof source === 'object' ? structuredClone(source) : {...source};\n  let stage = {}\n\n  _source.uiName = _source.ui_name\n  _source.uiType = _source.ui_type\n  delete _source.ui_name\n  delete _source.ui_type\n  \n  Object.keys(_source).forEach(key => {\n    // TODO: refactor to for -- in\n      stage = {\n        key:index,\n        ...stage,\n        ...modelated,\n        [key]:_source[key]\n      }\n  })\n\n  if(_source?.uiType === 'select'){\n    stage.selectList = await getSelectList(stage?.key)\n  }\n  return stage\n}\n\n \nexport const createSelectList = async(list) => {\n  let selectList = {}\n  for (const item of list) {\n    // item.code = item.code.split(\" \").join(\"_\")\n    item.currencySymbol = item.currency_symbol\n    delete item.currency_symbol\n    let itemUiName = item?.name\n    if(item?.code){\n      selectList = {\n        ...selectList,\n        [item?.code]:{\n          ...item,\n          name:itemUiName\n        }\n      }\n      if(item.flag){\n        selectList[item?.code].flag = `${INFO_URL_API?.replace(\"/api/\", \"\")}${item.flag}` \n      }\n      \n    } \n  }\n  return {...selectList}\n}\n\n \nconst dataService = {\n  biometric:ApiGetBiometricStages,\n  onBoarding:ApiGetOnBoardingStages,\n  personal:ApiGetPersonalStages,\n  identity:ApiGetIdentityStages, \n  fiatDeposit:ApiGetOnFiatDepositStages,\n  newWallet:ApiGetNewWalletStages,\n  location:ApiGetLocationStages,\n  contact:ApiGetContactStages\n}\n\n\nexport const initStages = async(config) => {\n\n  const apiStages = await dataService[config.formName](config)\n\n  if(!apiStages) return;\n  const sourceStages = Object.keys(apiStages)\n  \n  let stages = {} \n\n  for (const stage of sourceStages) { \n    stages = {\n      ...stages,\n      [stage]:await createStage(apiStages[stage], formStructure(config.formName)?.stages[stage], stage)\n    }\n  } \n\n  \n  return {\n    ...formStructure(config.formName),\n    stages\n  }\n}\n","import { mainService } from \"../../../../services/MainService\";\n\n\nconst STAGES = {\n  \"amount\":\"\",\n  \"costId\":\"\"\n} \n\nexport const FIAT_DEPOSIT_COMPONENTS = {\n  wrapperComponent:{\n      fiatDeposit:'fiatDeposit'\n  }\n}\n\nexport const FIAT_DEPOSIT_STAGES = {\n  fiatDeposit:STAGES\n}\n\nexport const ApiGetOnFiatDepositStages = async() => {\n    return STAGES\n}\n\nexport const FIAT_DEPOSIT_DEFAULT_STATE = {\n  // fiatDeposit:{\n  //   costId:\"bankaccount\"\n  // }\n}\n\nexport const ApiPostCreateDeposit = async(body, tools) => {\n\n  const { setLoader, nextStage } = tools\n  setLoader(true)\n  let res = await mainService.createDeposit(body);\n  setLoader(false)\n  if(!res) return;\n  nextStage()\n  return res\n\n}\n\n","import Environment from \"../../environment\";\n\nconst {\n  IdentityApIUrl,\n  CountryUrl\n} = Environment\n\nexport const API_FETCH_SELECT_LIST = {\n  location_country:\"getCountryList\",\n  country:\"getCountryList\",\n  nationality:\"getCountryList\",\n  province:\"getProvinceList\",\n  city:\"getCityList\",\n  id_type:\"createAvailableIdentityList\"\n}\n\nexport const NEXT_SELECT_LIST = {\n  location_country:\"province\",\n  province:\"city\",\n  nationality:\"id_type\",\n}\n\nexport const PRIMARY_COLOR = '#00ffc4'\nexport const COUNTRY_URL_API = IdentityApIUrl\nexport const INFO_URL_API = CountryUrl\n\n\n","import { mainService } from \"../../../../../services/MainService\";\nimport { \n  formatMaskDate, \n  parseDateToTimeStamp,\n} from '../utils'\nimport { identityInfo } from './identityUtils'\nimport { createStage } from '../../../utils'\n\n\nexport const INFO_DOCUMENT_NEEDED = {\n  \"name\":{\n    ui_name:\"Nombres completos\",\n    ui_type:\"text\",\n  },\n  \"surname\":{\n    ui_name:\"Apellidos completos\",\n    ui_type:\"text\",\n  }, \n  \"birthday\":{\n    ui_name:\"Fecha de nacimiento\",\n    ui_type:\"date\",\n  },\n  \"id_number\":{\n    ui_name: \"Número de documento\",\n    ui_type: \"text\"\n  }\n}\n\n\nconst INFO_NEEDED = {\n  \"nationality\":{\n    ui_name:\"País\",\n    ui_type:\"select\",\n  },\n  \"id_type\":{\n    \"ui_name\": \"Tipo de documento\",\n    \"ui_type\": \"select\",\n    \"cedula_ciudadania\":{\n        \"ui_name\": \"Cedula de ciudadanía\"\n    },\n    \"cedula_extranjeria\":{\n        \"ui_name\": \"Cedula de extranjería\"\n    },\n    \"pasaporte\":{\n        \"ui_name\": \"Pasaporte\"\n    },\n    \"pep\":{\n        \"ui_name\": \"Permiso especial de permanencia\"\n    }\n  }\n}\n\nconst FILES_NEEDED = {\n  \"selfie\":{\n    ui_name:\"Selfie\",\n    ui_type:\"attach\"\n  },\n  \"id_front\":{\n    ui_name:\"Frente del documento\",\n    ui_type:\"attach\"\n  },\n  \"id_back\":{\n    ui_name:\"reverso del documento\",\n    ui_type:\"attach\"\n  }\n}\n\n\nconst STAGES = {\n    \"nationality\":{\n      uiName:\"País emisor del documento:\",\n      key:\"nationality\",\n      uiType:\"select\",\n      \"settings\":{\n        defaultMessage:\"Selecciona la nacionalidad de tu documento de identidad\",\n        successPattern:/[a-zA-Z _]{1,40}/g,\n        errors:[\n          { pattern:/[^a-zA-Z _()]{1,30}/g, message:'Solo se permiten letras...'}\n        ],\n        // label:\"Nacionalidad del documento:\",\n        placeholder:\"Ej: pasaporte\",\n        queryParams:{\n          form:'personal_country'\n        }\n      }\n    },\n    \"id_type\":{\n      // uiName:\"Tipo de documento:\",\n      key:\"id_type\",\n      uiType:\"text\",\n      \"settings\":{\n        defaultMessage:\"Elige el documento de identidad con el que verificarás tu cuenta.\",\n        successPattern:/[a-zA-Z ]{3,40}/g,\n        // label:\"Tipo de documento:\",\n        placeholder:\"Elije tu documento de identidad\",\n        selectList:{},\n        queryParams:{\n          form:'personal_id_type'\n        },\n        errors:[\n          // { pattern:/[^a-zA-Z ]{1,30}/g, message:'Solo se permiten letras...'}\n        ],\n      }\n    },\n    \"birthday\":{\n      // uiName:\"Fecha de nacimiento\",\n      key:\"birthday\",\n      uiType:\"date\",\n      \"settings\":{\n        defaultMessage:\"Ingresa tú fecha de nacimiento (Día / Mes / Año)\",\n        props:{\n          min:\"1930-01-01\",\n          max:\"2003-12-31\",\n          pattern:\"[0-9]{2}-[0-9]{2}-[0-9]{4}\"\n        },\n        queryParams:{\n          form:'personal_birthday'\n        },\n        // errors:[\n        //   { pattern:/1[0-7]/g, message:'Debes de ser mayor de edad(+17) para continuar'}\n        // ],\n      }\n    },\n    \"id_number\":{\n      // uiName:\"Número de documento\",\n      key:\"id_number\",\n      uiType:\"text\",\n      \"settings\":{\n        defaultMessage:\"Digíta tu número de documento\",\n        successPattern:{\n         pasaporte:/[0-9A-Z]{5,15}/g,\n         others:/[0-9]{5,15}/g\n        },\n        // label:\"Número de documento\",\n        placeholder:\"Dígita el número del documento que elegíste\",\n        queryParams:{\n          form:'personal_number_id'\n        },\n        errors:{\n          pasaporte:[ \n            { pattern:/[^0-9A-Z]/g, message:'Solo se permiten valores alfanuméricos...' }\n          ],\n          others:[\n            { pattern:/[^0-9]/g, message:'Solo se permiten valores númericos...' }\n          ]\n        },\n        mainComponent:null\n      }\n    },\n    \"surname\":{\n      // uiName:\"Apellidos completos\",\n      key:\"surname\",\n      uiType:\"text\",\n      \"settings\":{\n        defaultMessage:\"Tus apellidos deben coincidir con los de tu documento de identidad.\",\n        successPattern:/[a-zA-Z\\u00f1\\u00d1 ]{3,40}/g,\n        label:\"Apellidos completos:\",\n        placeholder:\"Ej: Sanchez buitrago\",\n        queryParams:{\n          form:'personal_surnames'\n        },\n        errors:[\n          { pattern:/[^a-zA-Z\\u00f1\\u00d1 ]{1,30}/g, message:'Solo se permiten letras...'}\n        ],\n      }\n    },\n    \"name\":{\n      // uiName:\"Nombres completos\",\n      key:\"name\",\n      uiType:\"text\",\n      \"settings\":{\n        defaultMessage:\"Los nombres deben coincidir con los de tu documento de identidad\",\n        successPattern:/[a-zA-Z\\u00f1\\u00d1 ]{3,40}/g,\n        label:\"Nombres completos (Sin apellidos):\",\n        placeholder:\"Ej: Juan josé \",\n        queryParams:{\n          form:'personal_names'\n        },\n        errors:[\n          { pattern:/[^a-zA-Z\\u00f1\\u00d1 ]{1,30}/g, message:'Solo se permiten letras...'}\n        ],\n        AuxComponent:null,\n        MainComponent:null\n      }\n    }\n}\n\nexport const ApiGetIdentityStages = async(config) => {\n\n  // const user = mainService?.user\n  const { \n    pendingOrRejectedIdentity\n  } = identityInfo()\n  // const user = mainService?.user\n  // const userIdentity = user?.identity\n\n   if(!pendingOrRejectedIdentity || [\"pending\", \"rejected\"].includes(pendingOrRejectedIdentity?.info_state)){\n      return INFO_NEEDED;\n   }else{\n    const { id_type, nationality } = pendingOrRejectedIdentity\n    const _document = await mainService.getOneDocument({ id_type, nationality })\n    if(!_document)return FILES_NEEDED;\n    let filesNeeded = {}\n    _document?.file_needed.forEach(fileKey => {\n      if(FILES_NEEDED[fileKey]){ \n        filesNeeded = {\n          ...filesNeeded,\n          [fileKey]:FILES_NEEDED[fileKey]\n        }\n      }\n    })\n    return filesNeeded\n   }\n\n  //  if(pendingIdentityFile && [\"accepted\", \"confirmed\"].includes(userIdentity?.info_state)){\n  //   const { id_type, nationality } = pendingIdentityFile\n  //   const _document = await mainService.getOneDocument({ id_type, nationality })\n  //   if(!_document)return FILES_NEEDED;\n  //   let filesNeeded = {}\n  //   _document?.file_needed.forEach(fileKey => {\n  //     if(FILES_NEEDED[fileKey]){ \n  //       filesNeeded = {\n  //         ...filesNeeded,\n  //         [fileKey]:FILES_NEEDED[fileKey]\n  //       }\n  //     }\n  //   })\n  //   return filesNeeded\n  //  }else{\n  //   return INFO_NEEDED;\n  //  }\n    \n\n\n\n}\n\n\n\nexport const ApiPostIdentityInfo = async(payload) => {\n\n  const config = structuredClone(payload);\n  const { pendingOrRejectedIdentity } = identityInfo()\n  let res\n\n  const isMaskBirthday = config.birthday.includes('/') \n  if(isMaskBirthday){\n    config.birthday = formatMaskDate(config.birthday) \n  }\n  const timeStampDate = parseDateToTimeStamp(config.birthday) \n  config.birthday = timeStampDate\n\n  let info_needed = {}\n  config?.document?.info_needed?.forEach(documentId => {\n    if(config[documentId]){\n      info_needed = {\n        ...info_needed,\n        [documentId]:config[documentId]\n      }\n    }\n  })\n  \n\n  if(pendingOrRejectedIdentity){\n    res = await mainService.updateInfoIdentity({\n      ...config, \n      identity_id:pendingOrRejectedIdentity?.id, \n      info_needed\n    })\n  }else{\n    res = await mainService.createIdentity({\n      ...config, \n      document_id:config?.document?.id, \n      info_needed\n    })\n  }\n  if(!res)return ;\n  return await mainService.fetchCompleteUserData()\n  // const reqData = await mainService.createRequirementLevel()\n  // if(reqData){\n  //   const { requirements } = reqData\n  //   return requirements[0]\n  // }\n  // return res\n}\n\n\nexport const ApiPostIdentityFiles = async(payload) => {\n  const config = structuredClone(payload);\n  const user = mainService?.user\n\n  const { pendingIdentityFile } = identityInfo()\n  const mainIdentity = user?.user?.identity \n\n  const currentIdentity = pendingIdentityFile ? pendingIdentityFile : mainIdentity\n  const { id_type, nationality, id } = currentIdentity\n\n  const _document = await mainService.getOneDocument({ id_type, nationality })\n  if(!_document)return;\n\n  let files_needed = {}\n  _document?.file_needed?.forEach(fileId => {\n    if(config?.state[fileId]){\n      files_needed = {\n        ...files_needed,\n        [fileId]:config?.state[fileId]?.img\n      }\n    }\n  })\n\n  // console.log('document', _document)\n  const res = await mainService.addFilesToIdentity({\n    ...config, \n    identity_id:id, \n    files_needed\n  })\n  if(!res)return ;\n  return await mainService.fetchCompleteUserData()\n}\n\n\nexport const createInfoStages = async({\n  stageData,\n  dataForm,\n  setDataForm,\n  state\n}) => {\n  const stageKey = stageData?.key\n  if(!dataForm?.stages[stageKey]?.selectList)return ;\n  const documentData = dataForm?.stages[stageKey]?.selectList[state[stageKey]]\n  if(!documentData || !documentData?.info_needed?.length)return ;\n\n    let apiStages = {}\n    documentData?.info_needed?.forEach( documentKey => {\n      if(INFO_DOCUMENT_NEEDED[documentKey]){\n        apiStages = {\n          ...apiStages,\n          [documentKey]:INFO_DOCUMENT_NEEDED[documentKey]\n        }\n      }\n    });\n\n    let stages = {} \n\n    for (const stage of Object.keys(apiStages)) { \n      stages = {\n        ...stages,\n        [stage]:await createStage(apiStages[stage], IDENTITY_STAGES?.identity[stage], stage)\n      }\n    } \n\n    setDataForm(prevState => {\n      return { \n        ...prevState,\n        stages:{\n          ...prevState.stages,\n          ...stages\n        } \n      }\n    })\n\n}\n\n\n\n\n\n\n// typeof date.getMonth === 'function'\n\nexport const IDENTITY_DEFAULT_STATE = {\n  identity:{}\n}\n\n// const handleError = {\n//   identity:{},\n//   financial:{},\n//   personal:{\n//     defaultErrorMessage:\"Tu verificación ha sido rechazada, corríge los campos indicados.\",\n//     // errors:{\n//     //   country:\"Ingresa un país de operación válido...\",\n//     //   name:\"Solo ingresa nombres sin apellidos...\"\n//     // }\n//   }\n// }\n  \nexport const IDENTITY_COMPONENTS = {\n    wrapperComponent:{\n        identity:'kyc/identityComponent'\n    }\n}\n\nexport const IDENTITY_STAGES = {\n    identity:STAGES\n}\n\n\n  ","import { mainService } from \"../../../../services/MainService\";\nimport { \n  formatMaskDate, \n  parseDateToTimeStamp ,\n  // parseTimeStampToDate\n} from './utils'\n\n\n\nconst testCountryValidators = {\n    res:{\n        levels:{\n            level_1:{\n                personal:{\n                    natural:{\n                        name:{\n                            ui_name: \"Nombres completos\"\n                        },\n                        phone:{\n                            ui_name: \"Numero de teléfono\",\n                            ui_type: \"phone\"\n                        },\n                        nationality:{\n                            colombia:{\n                                ui_name: \"Colombia\"\n                            },\n                            afghanistan:{\n                                ui_name: \"Afghanistan\"\n                            },\n                            ui_name: \"Nacionalidad del documento\",\n                            ui_type: \"select\"\n                        },\n                        address:{\n                            ui_name:\"Dirección de residencia\"\n                        },\n                        city:{\n                            ui_name: \"Ciudad\"\n                        },\n                        id_type:{\n                            ui_name: \"Tipo de documento\",\n                            ui_type: \"select\",\n                            cedula_ciudadania:{\n                                ui_name: \"Cedula de ciudadanía\"\n                            },\n                            cedula_extranjeria:{\n                                ui_name: \"Cedula de extranjería\"\n                            },\n                            pasaporte:{\n                                ui_name: \"Pasaporte\"\n                            },\n                            pep:{\n                                ui_name: \"Permiso especial de permanencia\"\n                            }\n                        },                        \n                        id_number:{\n                            ui_name: \"Número de documento\",\n                            ui_type: \"text\"\n                        },\n                        birthday:{\n                            ui_name: \"Fecha de nacimiento\",\n                            ui_type: \"date\"\n                        },\n                        country:{\n                            colombia:{\n                                ui_name: \"Colombia\",\n                                value: \"colombia\"\n                            },\n                            peru:{\n                                ui_name: \"Perú\",\n                                value: \"peru\"\n                            },\n                            ui_name: \"País\",\n                            ui_type: \"select\"\n                        },\n                        surname:{\n                            ui_name: \"Apellidos completos\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nconst STAGES = {\n      \"id_type\":{\n        // uiName:\"Tipo de documento:\",\n        key:\"id_type\",\n        uiType:\"text\",\n        \"settings\":{\n          defaultMessage:\"Elige el documento de identidad con el cual verificarás tu cuenta.\",\n          successPattern:/[a-zA-Z ]{3,40}/g,\n          // label:\"Tipo de documento:\",\n          placeholder:\"Elije tu documento de identidad\",\n          selectList:{},\n          queryParams:{\n            form:'personal_id_type'\n          },\n          errors:[\n            // { pattern:/[^a-zA-Z ]{1,30}/g, message:'Solo se permiten letras...'}\n          ],\n        }\n      },\n      \"city\":{\n        // uiName:\"Ciudad de residencia\",\n        key:\"city\",\n        uiType:\"text\",\n        \"settings\":{\n          defaultMessage:\"Escribe la ciudad en la que resides actualmente\",\n          successPattern:/[a-zA-Z ]{3,40}/g,\n          // label:\"Ciudad de residencia:\",\n          placeholder:\"Elije tu ciudad actual\",\n          queryParams:{\n            form:'personal_residence_city'\n          },\n          errors:[\n            { pattern:/[^a-zA-Z ]{1,30}/g, message:'Solo se permiten letras...'}\n          ],\n        }\n      },\n      \"address\":{\n        // uiName:\"Dirección de residencia:\",\n        key:\"address\",\n        uiType:\"text\",\n        \"settings\":{\n          defaultMessage:\"Escribe de forma completa tu dirección actual de residencia\",\n          successPattern:/[a-zA-Z ]{3,40}/g,\n          // label:\"Dirección de residencia:\",\n          placeholder:\"Escribe la dirección\",\n          queryParams:{\n            form:'personal_address'\n          },\n          errors:[\n            { pattern:/[^a-zA-Z ]{1,30}/g, message:'Solo se permiten letras...'}\n          ],\n        }\n      },\n      \"surname\":{\n        // uiName:\"Apellidos completos\",\n        key:\"surname\",\n        uiType:\"text\",\n        \"settings\":{\n          defaultMessage:\"Tus apellidos deben coincidir con los de tu documento de identidad.\",\n          successPattern:/[a-zA-Z\\u00f1\\u00d1 ]{3,40}/g,\n          label:\"Apellidos completos:\",\n          placeholder:\"Ej: Sanchez buitrago\",\n          queryParams:{\n            form:'personal_surnames'\n          },\n          errors:[\n            { pattern:/[^a-zA-Z\\u00f1\\u00d1 ]{1,30}/g, message:'Solo se permiten letras...'}\n          ],\n        }\n      },\n      \"name\":{\n        // uiName:\"Nombres completos\",\n        key:\"name\",\n        uiType:\"text\",\n        \"settings\":{\n          defaultMessage:\"Los nombres deben coincidir con los de tu documento de identidad\",\n          successPattern:/[a-zA-Z\\u00f1\\u00d1 ]{3,40}/g,\n          label:\"Nombres completos (Sin apellidos):\",\n          placeholder:\"Ej: Juan josé \",\n          queryParams:{\n            form:'personal_names'\n          },\n          errors:[\n            { pattern:/[^a-zA-Z\\u00f1\\u00d1 ]{1,30}/g, message:'Solo se permiten letras...'}\n          ],\n          AuxComponent:null,\n          MainComponent:null\n        }\n      },\n      \"nationality\":{\n        // uiName:\"Nacionalidad del documento:\",\n        key:\"nationality\",\n        uiType:\"select\",\n        \"settings\":{\n          defaultMessage:\"Selecciona la nacionalidad de tu documento de identidad\",\n          successPattern:/[a-zA-Z _]{1,40}/g,\n          errors:[\n            { pattern:/[^a-zA-Z _]{1,30}/g, message:'Solo se permiten letras...'}\n          ],\n          // label:\"Nacionalidad del documento:\",\n          placeholder:\"Ej: pasaporte\",\n          queryParams:{\n            form:'personal_country'\n          }\n        }\n      },\n      \"country\":{\n        uiName:\"País\",\n        key:\"country\",\n        uiType:\"select\",\n        selectList:{},\n        \"settings\":{\n          defaultMessage:\"Elige el país de residencia actual\",\n          successPattern:/[a-zA-Z _]{1,40}/g,\n          errors:[\n            { pattern:/[^a-zA-Z _]{1,30}/g, message:'Solo se permiten letras...'}\n          ],\n          label:\"País\",\n          placeholder:\"\",\n          queryParams:{\n            form:'personal_country'\n          },\n          auxComponent:null,\n          mainComponent:null\n        }\n      },\n      \"birthday\":{\n        // uiName:\"Fecha de nacimiento\",\n        key:\"birthday\",\n        uiType:\"date\",\n        \"settings\":{\n          defaultMessage:\"Ingresa tú fecha de nacimiento (Día / Mes / Año)\",\n          props:{\n            min:\"1930-01-01\",\n            max:\"2003-12-31\",\n            pattern:\"[0-9]{2}-[0-9]{2}-[0-9]{4}\"\n          },\n          queryParams:{\n            form:'personal_birthday'\n          },\n          // errors:[\n          //   { pattern:/1[0-7]/g, message:'Debes de ser mayor de edad(+17) para continuar'}\n          // ],\n        }\n      },\n      \"id_number\":{\n        // uiName:\"Número de documento\",\n        key:\"id_number\",\n        uiType:\"text\",\n        \"settings\":{\n          defaultMessage:\"Digíta tu número de documento\",\n          successPattern:{\n           pasaporte:/[0-9A-Z]{5,15}/g,\n           others:/[0-9]{5,15}/g\n          },\n          // label:\"Número de documento\",\n          placeholder:\"Dígita el número del documento que elegíste\",\n          queryParams:{\n            form:'personal_number_id'\n          },\n          errors:{\n            pasaporte:[ \n              { pattern:/[^0-9A-Z]/g, message:'Solo se permiten valores alfanuméricos...' }\n            ],\n            others:[\n              { pattern:/[^0-9]/g, message:'Solo se permiten valores númericos...' }\n            ]\n          },\n          mainComponent:null\n        }\n      },\n      \"phone\":{\n        uiName:\"Número de teléfono\",\n        key:\"phone\",\n        uiType:\"text\",\n        \"settings\":{\n          defaultMessage:\"Digíta tu número de celular\",\n          successPattern:/[0-9]{5,40}/g,\n          // label:\"Número de celular:\",\n          queryParams:{\n            form:'personal_phone'\n          },\n          errors:[\n            { pattern:/[^0-9]/g, message:'Solo se permiten Números...'}\n          ],\n          auxComponent:\"personalKycComponent/countryPrefix\", //targetId to render component\n          mainComponent:null\n        }\n      }\n    }\n\n\nconsole.log(testCountryValidators)\n\nexport const ApiGetPersonalStages = async(config) => {\n    const { personType, level, formName } = config\n    let countryValidators = await mainService.countryValidators()\n    if(!countryValidators) return;\n    return countryValidators?.res?.levels[level][formName][personType]\n}\n\n\n\n \nexport const ApiPostPersonalKyc = async(body, tools) => {\n\n  const { setLoading, prevStage, toastMessage } = tools\n\n  let config = {\n    info: { ...body },\n    info_type: \"personal\",\n    verification_level: \"level_1\",\n  };\n\n  const isMaskBirthday = config.info.birthday.includes('/') \n  if(isMaskBirthday){\n    config.info.birthday = formatMaskDate(config.info.birthday) \n  }\n\n  const timeStampDate = parseDateToTimeStamp(config.info.birthday) \n  console.log('timeStampDate', config.info.birthday)\n  console.log('timeStampDate', timeStampDate)\n  config.info.birthday = timeStampDate\n  // https://es.stackoverflow.com/questions/219147/new-date-en-javascript-me-resta-un-dia/219165\n  setLoading(true)\n  let res = await mainService.updateLevelProfile(config);\n  setLoading(false)\n  \n  if(!res) {\n    toastMessage('No ha sido posible completar la verificación.', 'error')\n    return prevStage();\n  }\n\n  const { user } = mainService.globalState.modelData\n  const { data:{ personal } } = res;\n\n  let user_update = {\n    ...user,\n    ...personal,\n    levels: {\n      ...user.levels,\n      personal: \"confirmed\",\n    },\n    security_center: {\n      ...user.security_center,\n      kyc: {\n        ...user.security_center.kyc,\n        basic: \"confirmed\",\n      },\n    },\n    country:user.country\n  };\n\n  await mainService.updateUser(user_update);\n  \n  return res\n}\n\n\n// typeof date.getMonth === 'function'\n\nexport const PERSONAL_DEFAULT_STATE = {\n  personal:{ \n    meta_phone: \"colombia\",\n    // address: \"cra 45 - 88\",\n    // birthday: parseTimeStampToDate(\"722059200\"),\n    // birthday: \"18/11/1992\",\n    // city: \"cali\",\n    // country: \"colombia\", \n    // id_number: \"1116256754\",\n    // id_type: \"cedula_ciudadania\",\n    // name: \"Andres felipe\",\n    // nationality: \"colombia\",\n    // phone: \"57 3145698999\",\n    // surname: \"Garcia garcia\"\n  }\n}\n\n\n// const handleError = {\n//   identity:{},\n//   financial:{},\n//   personal:{\n//     defaultErrorMessage:\"Tu verificación ha sido rechazada, corríge los campos indicados.\",\n//     // errors:{\n//     //   country:\"Ingresa un país de operación válido...\",\n//     //   name:\"Solo ingresa nombres sin apellidos...\"\n//     // }\n//   }\n// }\n  \nexport const PERSONAL_COMPONENTS = {\n    wrapperComponent:{\n        personal:'personalKycComponent'\n    }\n}\n\nexport const PERSONAL_STAGES = {\n    personal:STAGES\n}\n\n  \n  ","import { mainService } from \"../../../../../services/MainService\";\n// import { \n//   formatMaskDate, \n//   parseDateToTimeStamp,\n//   // parseTimeStampToDate\n// } from './utils'\n\nconst LOCATION_INFO_NEEDED = {\n  \"location_country\":{\n    ui_name:\"País\",\n    ui_type:\"select\",\n  },\n  \"province\":{\n    ui_name:\"Provincia\",\n    ui_type:\"text\",\n  },\n  \"city\":{\n    ui_name:\"Ciudad\",\n    ui_type:\"text\",\n  },\n  \"address\":{\n    ui_name:\"Dirección\",\n    ui_type:\"text\",\n  }\n}\n\nconst STAGES = {\n  \"province\":{\n    uiName:\"Departamento:\",\n    key:\"province\",\n    uiType:\"select\",\n    \"settings\":{\n      defaultMessage:\"Selecciona el departamento de residencia actual\",\n      successPattern:/[a-zA-Z _]{1,40}/g,\n      errors:[\n        { pattern:/[^a-zA-Z _]{1,30}/g, message:'Solo se permiten letras...'}\n      ],\n      // label:\"Nacionalidad del documento:\",\n      placeholder:\"Ej: Antioquia\",\n      queryParams:{\n        form:'province'\n      }\n    }\n  },\n    \"location_country\":{\n      uiName:\"País de residencia:\",\n      key:\"location_country\",\n      uiType:\"select\",\n      \"settings\":{\n        defaultMessage:\"Selecciona el país de residencia actual\",\n        successPattern:/[a-zA-Z _]{1,40}/g,\n        errors:[\n          { pattern:/[^a-zA-Z _]{1,30}/g, message:'Solo se permiten letras...'}\n        ],\n        // label:\"Nacionalidad del documento:\",\n        placeholder:\"Ej: pasaporte\",\n        queryParams:{\n          form:'location_country'\n        }\n      }\n    },\n    \"address\":{\n      // uiName:\"Dirección de residencia:\",\n      key:\"address\",\n      uiType:\"text\",\n      \"settings\":{\n        defaultMessage:\"Escribe de forma completa tu dirección actual de residencia\",\n        successPattern:/[a-zA-Z ]{3,40}/g,\n        // label:\"Dirección de residencia:\",\n        placeholder:\"Escribe la dirección\",\n        queryParams:{\n          form:'personal_address'\n        },\n        errors:[\n          { pattern:/[^a-zA-Z ]{1,30}/g, message:'Solo se permiten letras...'}\n        ],\n      }\n    },\n}\n\nexport const ApiGetLocationStages = async(config) => {\n    return LOCATION_INFO_NEEDED\n}\n\n\nexport const ApiPostLocation = async(payload) => {\n  const res = await mainService.createLocation({data:payload})\n  if(!res)return ;\n  await mainService.fetchCompleteUserData()\n  const reqData = await mainService.createRequirementLevel()\n  if(reqData){\n    const { requirements } = reqData\n    return requirements[0]\n  }\n  return res\n}\n\n\n\n\n\n\n\n// typeof date.getMonth === 'function'\n\nexport const LOCATION_DEFAULT_STATE = {\n  location:{}\n}\n\n// const handleError = {\n//   identity:{},\n//   financial:{},\n//   personal:{\n//     defaultErrorMessage:\"Tu verificación ha sido rechazada, corríge los campos indicados.\",\n//     // errors:{\n//     //   country:\"Ingresa un país de operación válido...\",\n//     //   name:\"Solo ingresa nombres sin apellidos...\"\n//     // }\n//   }\n// }\n  \nexport const LOCATION_COMPONENTS = {\n    wrapperComponent:{\n        location:'kyc/locationComponent'\n    }\n}\n\nexport const LOCATION_STAGES = {\n    location:STAGES\n}\n\n\n  ","import { mainService } from \"../../../../../services/MainService\";\n// import { \n//   formatMaskDate, \n//   parseDateToTimeStamp,\n//   // parseTimeStampToDate\n// } from './utils'\n\nconst CONTACT_INFO_NEEDED = {\n  \"phone\":{\n    ui_name:\"Númer de celular\",\n    ui_type:\"text\",\n  }\n}\n\nconst STAGES = {\n    \"phone\":{\n      uiName:\"Número de teléfono\",\n      key:\"phone\",\n      uiType:\"text\",\n      \"settings\":{\n        defaultMessage:\"Digíta tu número de celular\",\n        successPattern:/[0-9]{5,40}/g,\n        // label:\"Número de celular:\",\n        queryParams:{\n          form:'personal_phone'\n        },\n        errors:[\n          { pattern:/[^0-9]/g, message:'Solo se permiten Números...'}\n        ],\n        // auxComponent:\"kyc/contactComponent/countryPrefix\", //targetId to render component\n        auxComponent:null,\n        mainComponent:null\n      }\n    }\n}  \n\nexport const CONTACT_DEFAULT_STATE = {\n  contact:{ \n    // meta_phone: \"colombia\",\n  }\n}\n\nexport const ApiGetContactStages = async(config) => {\n    return CONTACT_INFO_NEEDED\n}\n\nexport const ApiPostContact = async(payload) => {\n  const res = await mainService.createContact(payload)\n  if(!res)return ;\n  await mainService.fetchCompleteUserData()\n  const reqData = await mainService.createRequirementLevel()\n  if(reqData){\n    const { requirements } = reqData\n    return requirements[0]\n  }\n  return res\n}\n\n  \nexport const CONTACT_COMPONENTS = {\n    wrapperComponent:{\n        contact:'kyc/contactComponent'\n    }\n}\n\nexport const CONTACT_STAGES = {\n    contact:STAGES\n}\n\n\n  ","const STAGES = {\n  \"firstStage\":{},\n  \"secondStage\":{},\n  \"thirdStage\":{}\n} \n\nexport const ONBOARDING_COMPONENTS = {\n  successStage:{\n    onBoarding:{\n      component:\"biometricKycSuccess\",\n    }\n  },\n  wrapperComponent:{\n    onBoarding:'onBoardingComponent'\n  }\n}\n\nexport const ONBOARDING_STAGES = {\n  onBoarding:STAGES\n}\n\n\nexport const ApiGetOnBoardingStages = async() => {\n    return STAGES\n}\n\n\n\n","// import { mainService } from \"../../../../services/MainService\";\n\n\nconst STAGES = {\n  \"currency\":\"\"\n} \n\nexport const NEW_WALLET_COMPONENTS = {\n  wrapperComponent:{\n      newWallet:'newWallet'\n  }\n}\n\nexport const NEW_WALLET_STAGES = {\n  newWallet:STAGES\n}\n\nexport const ApiGetNewWalletStages = async() => {\n    return STAGES\n}\n\nexport const NEW_WALLET_DEFAULT_STATE = {\n  // newWallet:{\n  //   currency:{}\n  // }\n}\n\n// export const ApiPostCreateDeposit = async(body, tools) => {\n\n//   const { setLoader, nextStage } = tools\n//   setLoader(true)\n//   let res = await mainService.createDeposit(body);\n//   setLoader(false)\n//   if(!res) return;\n//   nextStage()\n//   return res\n\n// }\n\n","\nimport { mainService } from \"../../../../services/MainService\";\n\n\nconst STAGES = {} \n\nexport const ApiGetBiometricStages = async() => {\n    let stages = {}\n    const res = await mainService.getUserBiometric()\n    if(!res) return;\n    for (const keyChallenge in res.challenge) { \n      stages = {\n        ...stages,\n        [keyChallenge]:{\n          key:keyChallenge,\n          solved:res.solved,\n          biometricId:res.id,\n          ui_type: \"img\",\n          ui_name: keyChallenge === \"smile\" ? \"Sonríe\" : \"Abre la boca y levanta las cejas\"\n        }\n      }\n    }\n    return stages\n  }\n\n\n  export const BIOMETRIC_COMPONENTS = {\n    wrapperComponent:{\n        biometric:\"biometricKycComponent\"\n    }\n  }\n\n  export const BIOMETRIC_STAGES = {\n    biometric:STAGES\n  }\n\n  ","import BigNumber from \"bignumber.js\";\n// import moment from 'moment'\n// import 'moment/locale/es'\nimport { \n  LABEL_COLOR\n} from './locationComponent/const'\nimport {\n  NEXT_SELECT_LIST\n} from '../../const'\n\nimport {\n  // createSelectList,\n  getSelectList\n} from '../../utils'\n\nconst isIsoDate = /[0-9]{4}-[0-9]{2}-[0-9]{2}/g\nconst isMaskDate = /[0-9]{2}[/][0-9]{2}[/][0-9]{4}/g\n\nexport const parseTimeStampToDate = (timeStamp) => {\n  if(timeStamp.includes(\"-\")) return timeStamp;\n  let date = new Date(new BigNumber(timeStamp).multipliedBy(1000).toNumber()).toISOString()\n  const isoDate = date.match(isIsoDate)\n  return isoDate && isoDate[0]\n}\n\nexport const parseDateToTimeStamp = date => {\n  const { year, month, day } = formatJsonUTFDate(date)\n  const timeStamp = new Date(year, month, day).getTime()\n  return BigNumber(timeStamp).div(1000).toString()\n}\n\nconst checkMaskDate = date => {\n  if(!date)return;\n  return date.match(isMaskDate)\n}\n  \nexport const formatJsonUTFDate = date => {\n  if(!date?.match(isIsoDate))return date\n  let _date = date.split(\"-\")\n  const year = _date[0]\n  const month = (parseInt(_date[1]) - 1)\n  const day = _date[2]\n  return {\n    day,\n    month,\n    year\n  }\n}\n\nexport const formatMaskDate = date => {\n  if(!checkMaskDate(date))return date;\n  let _date = date.split(\"/\")\n  const day = _date[0]\n  const month = _date[1]\n  const year = _date[2]\n  return `${year}-${month}-${day}`\n}\n\n\nexport const removeItemTag = (e, itemKey, callback) => {\n\n    if(!e?.target?.className?.includes){return}\n    if(e.target?.className?.includes(\"selectedItemTag__closeButton\")){\n      e.stopPropagation()\n      if(itemKey){\n        document.querySelector(`[name=\"${itemKey}\"]`).value = \"\"\n        document.querySelector(`[name=\"${itemKey}\"]`).focus()\n      }\n      if(callback){\n        callback({target:{value:\"\"}});\n      }\n      return document.querySelector(\"#selectedItemTag\").remove();\n    }\n}\n  \nexport const debugItemTag = itemKey => { \n    const anyTagExist = document.querySelector(`.selectedItemTag`)\n    const currentItemTag = document.querySelector(`.selectedItemTag._${itemKey}`)\n    if(anyTagExist && !currentItemTag){\n        return anyTagExist.remove()\n    }\n}\n\n\nexport const getBody = (body, { stages: { nationality } }) => {\n    console.log('|||||||||||||||||  select List =====> ', nationality?.selectList, body?.meta_phone)\n    const prefix = nationality?.selectList[body?.meta_phone]?.prefix ? nationality?.selectList[body?.meta_phone]?.prefix[0] : ''\n    const _body = {...body}\n    delete _body.meta_phone\n    _body.phone = `${prefix} ${body.phone}`\n    return _body\n}\n\n\nexport const parseOnlyLetters = (value) => {\n  return value.replace(/[^a-zA-Z\\u00f1\\u00d1 ]/g, '')\n}\n\nexport const parseOnlyNumbers = (value) => {\n  return value.replace(/[^0-9]/g, '')\n}\n\nexport const parseAlphanumeric = (value) => {\n  return value.replace(/[^0-9a-zA-Z]/g, '') \n}\n\nexport const writeOnLabel = (target, message, typeMessage = 'default') => {\n  let labelElement = document.querySelector(target)\n  if(!labelElement){return}\n  labelElement.style.color = LABEL_COLOR[typeMessage]\n  labelElement.innerHTML = message \n }\n\nexport const validateLabelMsg = (value, data) => {\n  const targetElement = `.label_text__${data.key}`\n  if(!data?.settings?.errors){return}\n  console.log('validateLabelMsg', value)\n  for (let error of data.settings.errors) {\n    if(value.match(error.pattern)){\n      writeOnLabel(targetElement, error.message, 'error')\n    }else{\n      writeOnLabel(targetElement, data.settings.defaultMessage)\n    }\n  }\n}\n\nexport const addItemTag = (itemKey, uiTagName, inpuTarget) => {\n  if(!document.querySelector(`.selectedItemTag._${itemKey}`)){\n    // console.log('||||| addItemTag ==> ', itemKey)\n    const target = inpuTarget || \".inputContainer__\"\n    const inputContainer = document.querySelector(target)\n    const itemTag = generateItemTag(itemKey, uiTagName)\n    inputContainer.appendChild(itemTag)\n    document.querySelector(`[name=\"${itemKey}\"]`)?.blur()\n  }\n}\n\n\nconst generateItemTag = (itemKey, uiTagName) => {\n  const itemTagContainer = document.createElement(\"div\")\n  itemTagContainer.className = `fuente selectedItemTag _${itemKey}`\n  itemTagContainer.id = `selectedItemTag`\n  const itemTag = document.createElement(\"div\")\n  itemTag.className = `selectedItemTag__title`\n  const uiNameElement = document.createElement(\"p\")\n  uiNameElement.innerHTML = uiTagName?.toLowerCase()\n  const closeButtom = document.createElement(\"p\")\n  closeButtom.innerHTML = \"x\"\n  closeButtom.className = \"selectedItemTag__closeButton\"\n\n  itemTag.appendChild(uiNameElement)\n  itemTag.appendChild(closeButtom)\n  itemTagContainer.appendChild(itemTag)\n  return itemTagContainer\n}\n\nexport const getNextSelectList = async ({\n  state,\n  stageData,\n  setDataForm\n}) => {\n  const currentList = stageData?.key\n  if(!NEXT_SELECT_LIST[currentList])return;\n  const nextStageName = NEXT_SELECT_LIST[currentList]\n  const selectList = await getSelectList(nextStageName, state[stageData?.key])\n  if(!selectList || (selectList && !Object.keys(selectList)?.length)){\n    return setDataForm(prevState => {\n      return { \n        ...prevState,\n        stages:{\n          ...prevState.stages,\n          [nextStageName]:{\n            ...prevState.stages[nextStageName],\n            uiType:'text',\n            selectList:null\n          }\n        } \n      }\n    })\n  }\n  setDataForm(prevState => {\n    return { \n      ...prevState,\n      stages:{\n        ...prevState.stages,\n        [nextStageName]:{\n          ...prevState.stages[nextStageName],\n          uiType:'select',\n          selectList\n        }\n      } \n    }\n  })\n  return selectList\n}","import BigNumber from \"bignumber.js\";\n// import moment from 'moment'\n// import 'moment/locale/es'\nimport { \n  LABEL_COLOR\n} from './const'\n\nconst isIsoDate = /[0-9]{4}-[0-9]{2}-[0-9]{2}/g\nconst isMaskDate = /[0-9]{2}[/][0-9]{2}[/][0-9]{4}/g\n\nexport const parseTimeStampToDate = (timeStamp) => {\n  if(timeStamp.includes(\"-\")) return timeStamp;\n  let date = new Date(new BigNumber(timeStamp).multipliedBy(1000).toNumber()).toISOString()\n  const isoDate = date.match(isIsoDate)\n  return isoDate && isoDate[0]\n}\n\nexport const parseDateToTimeStamp = date => {\n  const { year, month, day } = formatJsonUTFDate(date)\n  const timeStamp = new Date(year, month, day).getTime()\n  return BigNumber(timeStamp).div(1000).toString()\n}\n\nconst checkMaskDate = date => {\n  if(!date)return;\n  return date.match(isMaskDate)\n}\n  \nexport const formatJsonUTFDate = date => {\n  if(!date?.match(isIsoDate))return date\n  let _date = date.split(\"-\")\n  const year = _date[0]\n  const month = (parseInt(_date[1]) - 1)\n  const day = _date[2]\n  return {\n    day,\n    month,\n    year\n  }\n}\n\nexport const formatMaskDate = date => {\n  if(!checkMaskDate(date))return date;\n  let _date = date.split(\"/\")\n  const day = _date[0]\n  const month = _date[1]\n  const year = _date[2]\n  return `${year}-${month}-${day}`\n}\n\n\nexport const removeItemTag = (e, itemKey, callback) => {\n\n    if(!e?.target?.className?.includes){return}\n    if(e.target?.className?.includes(\"selectedItemTag__closeButton\")){\n      e.stopPropagation()\n      if(itemKey){\n        document.querySelector(`[name=\"${itemKey}\"]`).value = \"\"\n        document.querySelector(`[name=\"${itemKey}\"]`).focus()\n      }\n      if(callback){\n        callback({target:{value:\"\"}});\n      }\n      return document.querySelector(\"#selectedItemTag\").remove();\n    }\n}\n  \nexport const debugItemTag = itemKey => { \n    const anyTagExist = document.querySelector(`.selectedItemTag`)\n    const currentItemTag = document.querySelector(`.selectedItemTag._${itemKey}`)\n    if(anyTagExist && !currentItemTag){\n        return anyTagExist.remove()\n    }\n}\n\n\nexport const getBody = (body, { stages: { nationality } }) => {\n    console.log('|||||||||||||||||  select List =====> ', nationality?.selectList, body?.meta_phone)\n    const prefix = nationality?.selectList[body?.meta_phone]?.prefix ? nationality?.selectList[body?.meta_phone]?.prefix[0] : ''\n    const _body = {...body}\n    delete _body.meta_phone\n    _body.phone = `${prefix} ${body.phone}`\n    return _body\n}\n\n\nexport const parseOnlyLetters = (value) => {\n  return value.replace(/[^a-zA-Z\\u00f1\\u00d1 ]/g, '')\n}\n\nexport const parseOnlyNumbers = (value) => {\n  return value.replace(/[^0-9]/g, '')\n}\n\nexport const parseAlphanumeric = (value) => {\n  return value.replace(/[^0-9a-zA-Z]/g, '') \n}\n\nexport const writeOnLabel = (target, message, typeMessage = 'default') => {\n  let labelElement = document.querySelector(target)\n  if(!labelElement){return}\n  labelElement.style.color = LABEL_COLOR[typeMessage]\n  labelElement.innerHTML = message \n }\n\nexport const validateLabelMsg = (value, data) => {\n  const targetElement = `.label_text__${data.key}`\n  if(!data?.settings?.errors){return}\n  for (let error of data.settings.errors) {\n    if(value.match(error.pattern)){\n      writeOnLabel(targetElement, error.message, 'error')\n    }else{\n      writeOnLabel(targetElement, data.settings.defaultMessage)\n    }\n  }\n}\n\nexport const addItemTag = (itemKey, uiTagName, inpuTarget) => {\n  if(!document.querySelector(`.selectedItemTag._${itemKey}`)){\n    // console.log('||||| addItemTag ==> ', itemKey)\n    const target = inpuTarget || \".inputContainer__\"\n    const inputContainer = document.querySelector(target)\n    const itemTag = generateItemTag(itemKey, uiTagName)\n    inputContainer.appendChild(itemTag)\n    document.querySelector(`[name=\"${itemKey}\"]`)?.blur()\n  }\n}\n\n\nconst generateItemTag = (itemKey, uiTagName) => {\n  const itemTagContainer = document.createElement(\"div\")\n  itemTagContainer.className = `fuente selectedItemTag _${itemKey}`\n  itemTagContainer.id = `selectedItemTag`\n  const itemTag = document.createElement(\"div\")\n  itemTag.className = `selectedItemTag__title`\n  const uiNameElement = document.createElement(\"p\")\n  uiNameElement.innerHTML = uiTagName\n  const closeButtom = document.createElement(\"p\")\n  closeButtom.innerHTML = \"x\"\n  closeButtom.className = \"selectedItemTag__closeButton\"\n\n  itemTag.appendChild(uiNameElement)\n  itemTag.appendChild(closeButtom)\n  itemTagContainer.appendChild(itemTag)\n  return itemTagContainer\n}","export const LABEL_COLOR = {\n    default:'gray',\n    error:'red'\n}","export const LABEL_COLOR = {\n    default:'gray',\n    error:'red'\n}"],"sourceRoot":""}