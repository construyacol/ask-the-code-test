{"version":3,"sources":["components/forms/widgets/layout/styles.js","components/forms/hooks/useStage.js","components/forms/widgets/kyc/identityComponent/skeleton.js","components/forms/widgets/kyc/validations.js","components/forms/widgets/kyc/identityComponent/buttons.js","components/forms/widgets/kyc/identityComponent/labelComponent.js","components/forms/widgets/kyc/identityComponent/info.js"],"names":["Wrapper","styled","div","show","useStage","stageController","stages","defaultStage","stageStatus","setStageStatus","useState","currentStage","setCurrentStage","stageData","setStageData","nextStage","step","length","prevState","prevStage","useEffect","settings","queryParams","query","getQuery","history","push","nextStageData","finalStage","KycSkeleton","style","background","className","id","LabelSkeleton","InputSkeleton","defaultValue","textInputValidator","value","data","validateLabelMsg","_value","parseOnlyLetters","status","match","successPattern","selectListValidator","selectList","generalValidator","replace","result","Object","keys","forEach","itemList","includes","toLowerCase","addItemTag","key","uiName","kycValidation","location_country","province","address","city","phone","parseOnlyNumbers","meta_phone","filter","countryItem","nationality","id_type","name","surname","birthday","parseBirth","state","formatMaskDate","birthYear","Date","getFullYear","age","datePick","document","querySelector","targetLabel","setTimeout","classList","add","writeOnLabel","defaultMessage","remove","id_number","_data","JSON","parse","stringify","others","errors","parseAlphanumeric","toUpperCase","BackButtom","onClick","disabled","width","size","NextButtom","color","LabelComponent","children","height","position","map","stageId","keyId","label","React","memo","DynamicLoadComponent","loadable","InfoComponent","handleDataForm","handleState","closeModal","props","dataForm","setDataForm","setState","loading","setLoading","stageManager","handleError","idNextStageKyc","useKeyActionAsClick","nextStep","async","createInfoStages","getNextSelectList","onChange","e","target","preventDefault","_status","validations","inputElement","documents","idDocument","res","ApiPostIdentityInfo","_dataForm","initStages","formName","execPost","component","title","isNewId","inputStatus","message","placeholder","type","uiType","progressBar","start","end","showSteps","AuxComponent","auxComponent","list","handleAction"],"mappings":"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","file":"static/js/46.96fa01f6.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { show } from '../../../widgets/animations'\n\nexport const Wrapper = styled.div`\n  grid-template-columns: 1fr;\n  display: grid;\n  height: auto;\n  min-height: 100vh;\n  width:100vw;\n  position:absolute;\n  top:0;\n  left:0;\n  z-index:99;\n  backdrop-filter: blur(2px);\n  background: linear-gradient(to bottom right, #00000099, #000000f0);\n  \n  .selectedItemTag__title p{\n    text-transform:capitalize;    \n  }\n\n  &.infoPanel{\n    grid-template-columns: auto 1fr;\n  }\n\n  &._show{\n    animation-name: ${show};\n    animation-duration: 0.5s;\n    animation-iteration-count: forwards;\n  }\n\n`\n\n// export const MainContainer = styled.div`\n//   display: grid;\n//   max-width: 500px;\n//   width: 100%;\n//   justify-self:center;\n//   align-self: center;\n// `\n","import { useState, useEffect } from 'react'\nimport { getQuery } from '../utils'\nimport { history } from 'const/const'\n\nconst useStage = (stageController, stages, defaultStage = 0) => {\n\n  const [ stageStatus, setStageStatus ] = useState()\n  const [ currentStage, setCurrentStage ] = useState(defaultStage)\n  const [ stageData, setStageData ] = useState(stages[stageController[currentStage]])\n\n  const nextStage = (step = 1) => {\n    // add ref or className on Json file Source to management the DOM components, e.x buttons states...\n    if(currentStage >= stageController.length){return}\n      setCurrentStage(prevState => prevState+step)\n  }\n\n  const prevStage = () => {\n    if(currentStage <= 0){return}\n    setCurrentStage(prevState => prevState-1)\n  }\n\n// Set url query params\n  useEffect(()=>{\n    if(stageData?.settings?.queryParams){\n      let query = getQuery(stageData.settings.queryParams)\n      history?.push(query)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stageData])\n\n  useEffect(()=>{\n    const nextStageData = stages[stageController[currentStage]] \n    setStageData(nextStageData)\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentStage, stages[stageController[currentStage]]])\n\n  return {\n    currentStage,\n    nextStage,\n    prevStage,\n    stageController,\n    stageData,\n    setStageData,\n    stageStatus,\n    setStageStatus,\n    finalStage:currentStage >= stageController.length\n  }\n\n}\n\nexport default useStage\n","import { Wrapper as Layout } from '../../layout/styles'\nimport {\n  MainContainer,\n  TitleContainer,\n  StickyGroup,\n  LabelContainer,\n  TitleLabelContainer,\n  InputContainer,\n  LabelText,\n} from '../styles'\n\n\nconst KycSkeleton = () => (\n      <Layout style={{background:\"white\"}}>\n        <MainContainer>\n          <TitleContainer className=\"skeleton\">\n            <h1 className=\"titleContainer__h1\">This is a awesome title</h1>\n          </TitleContainer>\n          <StickyGroup background=\"white\" id=\"stickyGroup__\">\n           <LabelSkeleton/>\n           <InputSkeleton/>\n          </StickyGroup>\n        </MainContainer>\n      </Layout>\n)\n\nexport default KycSkeleton\n\nconst LabelSkeleton = () => (\n    <LabelContainer >\n        <TitleLabelContainer className=\"skeleton\">\n            This is a awesome title label\n        </TitleLabelContainer>\n    </LabelContainer>\n)\n\nconst InputSkeleton = () => (\n   <InputContainer className=\"skeleton\">\n    <input defaultValue=\"This is a awesome input\" />\n    <LabelText className=\"skeleton\">This is a awesome label</LabelText>\n   </InputContainer>\n)","import {\n    parseOnlyLetters,\n    validateLabelMsg,\n    parseOnlyNumbers,\n    addItemTag,\n    writeOnLabel,\n    parseAlphanumeric,\n    formatMaskDate\n} from './utils'\n\n\n\nconst birthday = (value, data) => {\n\n    const isMaskInput = data.state?.birthday?.includes('/') \n    let parseBirth = isMaskInput ? formatMaskDate(data.state?.birthday) : data.state?.birthday\n    let birthYear = new Date(parseBirth)?.getFullYear() || new Date().getFullYear()\n    let currentYear = new Date().getFullYear()\n    let age = currentYear - birthYear \n    let _value = value ? value : null\n    let status = ((age >= 18 && age < 100) && _value) && 'success' \n  \n    const datePick = document.querySelector('[name=\"birthday\"]')\n    const targetLabel = `.label_text__${data.key}`\n    if(status === 'success'){\n      setTimeout(()=>{datePick.classList.add('date_success')}, 10)\n      writeOnLabel(targetLabel, data.settings.defaultMessage)\n    }else{\n      if(age < 18){\n        writeOnLabel(targetLabel, 'Debes de ser mayor de edad(+18) para continuar', 'error')\n      }\n      if(age > 100){\n        writeOnLabel(targetLabel, 'Has superado los límites de longevidad humana', 'error')\n      }\n      setTimeout(()=>{datePick.classList.remove('date_success')}, 10)\n    }\n    return [ _value, status ]\n  }\n  \n  \n  \n   \n  const phone = (value, data) => {\n    validateLabelMsg(value, data)\n    let _value = parseOnlyNumbers(value)\n    // let status = (_value.match(data.settings.successPattern) && data.state['meta_phone']) && 'success'\n    let status = _value.match(data.settings.successPattern) && 'success';\n    return [ _value, status ]\n  }\n  \n  const meta_phone = (value, data) => {\n    validateLabelMsg(value, data)\n    //accepts only letters, spaces and underscore\n    let _value = value.replace(/[^a-zA-Z _]/g, '')\n    // Find and match the value with  select list key value\n    let result = Object.keys(data?.selectList).filter(countryItem => countryItem.includes(value.toLowerCase()))\n    // If it meets the pattern and matches 1 result from the entire list, the search was successful\n    let status = (_value.match(data.settings.successPattern) && result.length === 1) && 'success';\n    if(result.length === 1 && value){\n      _value = result && result[0]\n      addItemTag(data.key, data?.selectList[result[0]]?.uiName, \".prefixInputContainer\")\n    }\n    // console.log('||||||||||| metadata phone ==> ', value, data)\n    return [ _value, status ]\n  }\n  \n  \n  \n  const textInputValidator = (value, data) => {\n    validateLabelMsg(value, data)\n    let _value = parseOnlyLetters(value)\n    let status = _value.match(data.settings.successPattern) && 'success'\n    return [ _value, status ]\n  }\n  \n  const id_number = (value, data) => {\n    let _data = JSON.parse(JSON.stringify(data)) //deep object copy\n    const { id_type } = _data?.state\n    const successPattern = id_type === 'pasaporte' ? data.settings.successPattern[id_type] : data.settings.successPattern.others\n    _data.settings.errors = id_type === 'pasaporte' ? data?.settings?.errors[id_type] : data?.settings?.errors?.others\n    validateLabelMsg(value, _data)\n    let _value = id_type === 'pasaporte' ? parseAlphanumeric(value) : parseOnlyNumbers(value)\n    _value = _value.toUpperCase()\n    let status = _value.match(successPattern) && 'success'\n    return [ _value, status ]\n  }\n\n\nconst selectListValidator = (value, data) => {\n    if(!data?.selectList) return generalValidator(value, data);\n    validateLabelMsg(value, data)\n    //accepts only letters, spaces and underscore\n    let _value = value.replace(/[^a-zA-Z _]/g, '')\n  \n    let result = []\n    Object.keys(data?.selectList).forEach(itemList => {\n      if(itemList.includes(value.toLowerCase())){\n        result = [...result, itemList ]\n      }\n    })\n  \n    result.forEach(itemList => {\n      if(itemList === value.toLowerCase()){\n        result = [ itemList ]\n      }\n    })\n  \n    // If it meets the pattern and matches 1 result from the entire list, the search was successful\n    let status = (_value.match(data?.settings?.successPattern) && result.length === 1) && 'success';\n    if(result?.length === 1 && value){\n      _value = result && result[0]\n      addItemTag(data.key, data?.selectList[result[0]]?.uiName)\n    }\n    return [ _value, status ]\n  } \n  \n  const generalValidator = (value, data) => {\n    const status = value.length > 3 && 'success' \n    return [ value, status ]\n  }\n\n\n  const locationValidation = {\n    location_country:selectListValidator,\n    province:selectListValidator,\n    address:generalValidator,\n    city:selectListValidator\n  }\n\n  const contactValidation = {\n    phone,\n    meta_phone\n  }\n\n  const identityValidation = {\n    nationality:selectListValidator,\n    id_type:selectListValidator,\n    name:textInputValidator,\n    surname:textInputValidator,\n    birthday,\n    id_number\n  }\n\n  const kycValidation = {\n    ...locationValidation,\n    ...contactValidation,\n    ...identityValidation\n  }\n\nexport default kycValidation","import React from 'react'\nimport { FiArrowRight, FiArrowLeft } from 'react-icons/fi'\n\nimport { \n    IconBackContainer,\n    IconNextContainer \n} from '../styles'\n\n\nexport const BackButtom = ({ onClick, disabled }) => {\n    return(\n            <IconBackContainer onClick={onClick} disabled={disabled || ''} width=\"22px\">\n                <FiArrowLeft size={22} />\n            </IconBackContainer>\n    )\n}\n\n\n// export const BackButtom = ({ onClick, disabled }) => {\n//     return(\n//         <Portal target={document.querySelector(\"#buttonModule__\")}>\n//             <IconBackContainer onClick={onClick} disabled={disabled || ''} width=\"22px\">\n//                 <FiArrowLeft size={22} />\n//             </IconBackContainer>\n//         </Portal>\n//     )\n// }\n\n\nexport const NextButtom = ({ onClick, disabled, id }) => {\n    return(\n        <IconNextContainer id={`${id || ''}`} className=\"personal_nextButtom_\" onClick={onClick} disabled={disabled || ''} width=\"35px\">\n                <FiArrowRight size={35} color=\"#06a\" />\n        </IconNextContainer>\n    )\n}\n\n","import React from 'react'\nimport { \n  LabelContainer,\n  TitleLabelContainer,\n  Titles\n} from '../styles'\n\n\nconst LabelComponent = ({ children, currentStage, stages, stageController }) => (\n  \n    <LabelContainer className=\"fuente\">\n      {children}\n      <TitleLabelContainer>\n        <Titles height={stageController.length} position={currentStage}>\n            {\n              stageController.map((stageId, keyId) => {\n                return <p key={keyId} >{stages[stageId]?.settings?.label || stages[stageId].uiName}</p>\n              })\n            }\n        </Titles>\n      </TitleLabelContainer>\n    </LabelContainer>\n)\n\nexport default React.memo(LabelComponent)\n","import React, { useState, useEffect } from 'react'\nimport validations from '../validations'\nimport useStage from '../../../hooks/useStage'\nimport loadable from '@loadable/component'\nimport InputComponent from '../InputComponent'\nimport { getNextSelectList } from '../utils'\nimport { BackButtom, NextButtom } from './buttons'\nimport LabelComponent from './labelComponent'\nimport KycSkeleton from './skeleton'\nimport { ApiPostIdentityInfo, createInfoStages } from './api'\n// import useToast from '../../../../hooks/useToastMessage'\n// import SuccessComponent from './success'\nimport useKeyActionAsClick from '../../../../../hooks/useKeyActionAsClick';\nimport { Wrapper as Layout } from '../../layout/styles'\nimport { initStages } from '../../../utils'\n// import { useSelector } from \"react-redux\";\n\nimport {\n  MainContainer,\n  StickyGroup,\n  TitleContainer,\n} from '../styles'\n\nconst DynamicLoadComponent = loadable(() => import('../../../dynamicLoadComponent'))\nconst InfoComponent = ({ handleDataForm, handleState, closeModal, ...props }) => {\n\n  const { dataForm, setDataForm } = handleDataForm\n  const { state, setState } = handleState\n  const [ loading, setLoading ] = useState(false)\n  // const user = useSelector(({ modelData:{ user } }) => user);\n\n  // const [ toastMessage ] = useToast()\n  const stageManager = useStage(\n    // create the form stages\n    Object.keys(dataForm?.handleError?.errors || dataForm.stages),\n    dataForm.stages\n  )\n\n  const idNextStageKyc = useKeyActionAsClick(\n    true,\n    \"next-stage-kyc\",\n    13,\n    false,\n    \"onkeypress\",\n    true\n  );\n  \n  const {\n    prevStage,\n    nextStage,\n    currentStage,\n    stageController,\n    finalStage,\n    stageData,\n    setStageData,\n    stageStatus,\n    setStageStatus\n  } = stageManager\n\n  const nextStep = async() => {\n    if(stageStatus !== 'success'){return}\n    setStageStatus(null)\n    document.querySelector(`[name=\"${stageData?.key}\"]`).value = \"\"\n    document.querySelector(\".label_text__\" + stageData?.key).style.color = 'gray'\n    setLoading(true)\n    if(currentStage >= (stageController.length - 1)){\n      await createInfoStages({\n        stageData,\n        dataForm,\n        setDataForm,\n        state\n      })\n    }\n    nextStage()\n    await getNextSelectList({\n      state,\n      stageData,\n      setDataForm\n    })\n    setLoading(false)\n  }\n\n  const prevStep = () => {\n    setState(prevState => {\n      return { ...prevState, [stageData?.key]: \"\" }\n    })\n    return prevStage()\n  }\n\n  // console.log('dataForm', dataForm)\n\n  const onChange = (e) => {\n    e.target.preventDefault && e.target.preventDefault();\n    // if(!validations[stageData.key]) return;\n    const [ _value, _status ] = validations[stageData.key](e?.target?.value, {...stageData, state, dataForm});\n    e.target.value = _value\n    //// applies to update state through an effect when it comes from a default state\n    setState(prevState => {\n      return { ...prevState, [stageData?.key]: _value }\n    })\n    setStageStatus(_status)\n  }\n\n  // load state  by default\n  useEffect(() => {\n    let inputElement = document.querySelector(`[name=\"${stageData?.key}\"]`)\n    // except metada because is not include on state\n    if(inputElement && state[stageData.key]){\n      // if(!stageData?.key?.includes('meta') && inputElement && state[stageData.key]){\n      onChange({target:{value:state[stageData.key]}});\n      inputElement.value = state[stageData.key]\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state[stageData?.key]])\n\n\n  useEffect(() => {\n    if(currentStage >= stageController.length){\n      const execPost = async() => {\n        const documents = dataForm?.stages?.id_type?.selectList\n        const idDocument = state?.id_type\n        const document = (documents && idDocument) && documents[idDocument]\n        if(!document)return prevStage();\n        setLoading(true)\n        let res = await ApiPostIdentityInfo({document, ...state}, {setDataForm})\n        setLoading(false)\n        if(!res)return prevStage();\n        const _dataForm = await initStages({\n          formName:'identity',\n        })\n        return setDataForm(_dataForm)\n      }\n      execPost()\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentStage])\n\n  // console.log('||||||||||||||||||||||||||||||||| dataForm ==> ', dataForm)\n  \n  // console.log('||||||||||||||||||||||||||||||||| state ==> ', state)\n\n  if(loading){return <KycSkeleton/>}\n\n  if(!loading && finalStage){\n    // Render success Stage\n    return (\n      <KycSkeleton\n        closeModal={closeModal}\n      />\n    )\n  }\n\n  return(\n      <Layout style={{background:\"white\"}}>\n        { \n          dataForm?.handleError?.errors &&\n          <DynamicLoadComponent\n            component=\"infoPanel\"\n            title=\"Campos completados\"\n            state={state}\n            stageData={stageData}\n            dataForm={dataForm}\n          />\n        }\n\n        <MainContainer>\n          <TitleContainer id=\"titleContainer__\">\n            <h1 className=\"titleContainer__h1 fuente\">{ props.isNewId ? 'Crea un documento de identidad' : 'Crea una identidad' }</h1>\n          </TitleContainer>\n          <StickyGroup background=\"white\" id=\"stickyGroup__\" >\n            <LabelComponent \n              stageController={stageController}\n              stages={dataForm?.stages}\n              currentStage={currentStage}\n              >\n              <BackButtom onClick={prevStep} disabled={currentStage <= 0}/>\n            </LabelComponent>\n            <InputComponent\n              onChange={onChange} \n              inputStatus={stageStatus}\n              defaultValue={state[stageData?.key]}\n              name={stageData?.key} \n              message={stageData?.settings?.defaultMessage}\n              placeholder={stageData?.settings?.placeholder}\n              type={stageData?.uiType}\n              setStageData={setStageData}\n              dataForm={dataForm}\n              state={state}\n              progressBar={{start:currentStage+1, end:stageController.length, showSteps:true}}\n              AuxComponent={[\n                stageData?.settings?.auxComponent, \n                () => <NextButtom id={idNextStageKyc} onClick={nextStep} disabled={(currentStage >= stageController.length) || stageStatus !== 'success'} />\n              ]}\n            />\n          </StickyGroup>\n\n          <DynamicLoadComponent\n            component=\"kyc/selectList\"\n            list={stageData?.selectList}\n            name={stageData?.key}\n            state={state}\n            handleAction={onChange}\n            // pass useCallBack to inherited functions to this component\n          />\n\n        </MainContainer>\n      </Layout>\n  )\n}\n\nexport default InfoComponent\n\n\n"],"sourceRoot":""}