{"version":3,"sources":["components/forms/widgets/kyc/contactComponent/countryPrefix/index.js","components/forms/widgets/kyc/contactComponent/countryPrefix/styles.js","components/forms/widgets/kyc/contactComponent/countryPrefix/methods.js"],"names":["CountryPrefix","dataForm","setStageData","name","state","props","activeStage","setActiveStage","useState","selectList","setselectList","inputName","includes","countryData","setCountryData","toggleActivation","e","stopPropagation","target","dataset","action","prevState","useEffect","setParentConfig","listenerElement","document","querySelector","addEventListener","removeEventListener","removeParentConfig","setMetaPhoneData","extendContainer","inputFocus","stages","phone","colapseContainer","_countryData","async","_selectList","getSelectList","getPrefixSelectList","prefix","className","img","flag","onChange","defaultValue","uiName","size","React","memo","PrefixContainer","styled","div","setState","uiType","key","settings","defaultMessage","errors","pattern","message","prefixContainer","style","width","borderRight","prefixInput","color","setTimeout","addStyleColorToInputWithItem","time","focus","inputContainer","prefixContainerWidth","clientWidth","paddingLeft"],"mappings":"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","file":"static/js/21.a36b2b0a.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\n// import { mainService } from '../../../../../services/MainService'\nimport { getSelectList } from '../../../../utils'\n// import InputComponent from '../personalKycComponent/input'\nimport { IoIosArrowDown } from 'react-icons/io'\n\nimport {\n    PrefixContainer\n} from './styles' \n\nimport {\n    setMetaPhoneData,\n    colapseContainer,\n    extendContainer,\n    inputFocus,\n    setParentConfig,\n    removeParentConfig\n} from './methods'\n\nconst CountryPrefix = ({ dataForm, setStageData, name, state, ...props }) => {\n\n    const [ activeStage, setActiveStage ] = useState(false)\n    const [ selectList, setselectList ] = useState(false)\n    // assign it to input only if it is metadata\n    const inputName = name.includes('meta') ? name : `meta_${name}`\n    const [ countryData, setCountryData ] = useState({})\n    // const [ countryData, setCountryData ] = useState(dataForm?.stages?.country?.selectList[state[inputName]])\n    \n    const toggleActivation = e => {\n        e.stopPropagation()\n        if(e.target?.dataset?.action){\n          setActiveStage(prevState => !prevState)\n        }\n    }\n\n    const getPrefixSelectList = async() => {\n        const _selectList = await getSelectList('country')\n        setselectList(_selectList)\n    }\n\n    useEffect(() => {\n        setParentConfig()\n        const listenerElement = document.querySelector('.prefixContainer_')\n        listenerElement.addEventListener(\"click\", toggleActivation)\n        return () => {\n            listenerElement.removeEventListener(\"click\", toggleActivation)\n            removeParentConfig()\n        }\n    }, [])\n\n    useEffect(()=>{\n        if(activeStage){\n            setMetaPhoneData(setStageData, dataForm, selectList)\n            extendContainer()\n            inputFocus(inputName, 500)\n        }\n        else{\n            setStageData({...dataForm?.stages?.phone})\n            colapseContainer()\n        }\n    }, [activeStage])\n\n    useEffect(()=>{\n        if(selectList){\n            const _countryData = selectList[state[inputName]] \n            setCountryData(_countryData)\n            if(_countryData){\n                setActiveStage(false)\n            }\n        }\n    }, [state[inputName], selectList])\n\n    \n\n    useEffect(() => {\n        if(!selectList){\n            getPrefixSelectList()\n        }\n    }, [selectList])\n\n    const prefix = countryData?.prefix || \"+ --\";\n\n    // console.log('|||||||||||||||||||||||||  countryData  dataForm ==> ', dataForm)\n\n    return(\n        <PrefixContainer \n            activeStage={activeStage}  \n            className=\"prefixContainer_\" \n            img={countryData?.flag || ''}\n        >\n                <div data-action className=\"prefix_flag_\"></div>\n                <p data-action className=\"prefixContainer__prefix_text\">{prefix}</p>\n                <div className=\"prefixInputContainer inputNumberFont\">\n                    <input \n                        name={inputName}\n                        onChange={props.onChange} \n                        defaultValue={countryData?.uiName}/>\n                </div>\n                <IoIosArrowDown size={20} data-action/>\n        </PrefixContainer>\n    )\n}\n\nexport default React.memo(CountryPrefix)\n\n\n\n","import styled from 'styled-components'\n\n\nexport const PrefixContainer = styled.div`\n\ntransition:.3s;\nposition:absolute;\nalign-self: center;\nheight: 70%;\nwidth: 75px;\ndisplay: grid;\ncursor:pointer;\nborder-right: 1px solid gray;\nbackground:white;\npadding: 0 15px;\nleft:0;\n\nalign-items: center;\ncolumn-gap: 8px;\noverflow: hidden;\ngrid-template-columns: auto auto 1fr;\n\n    .prefixInputContainer{\n        margin-left:25px;\n        input{\n            color:\"gray\";\n            transition:0s;\n        }\n    }\n    \n    svg{\n        position: absolute;\n        right: ${props => props.activeStage ? '15px' : '5px'};\n    }\n    \n    .prefix_flag_{\n        border-radius:50%;\n        background:#bbbbbb;\n        height: 25px;\n        width: 25px;\n        background-image: url(${props => props.img || ''});\n        background-repeat: no-repeat;\n        background-position: center;\n        background-size: cover;\n    }\n\n    .prefixContainer__prefix_text::after{\n        content: '';\n        height: 100%;\n        width: 300%;\n        position: absolute;\n        left: -70%;\n    }\n\n    p{\n        position:relative;\n        height: 70%;\n        display: flex;\n        align-items: center;\n        align-self: center;\n        margin:0;\n        width: max-content;\n    }\n\n`","\n\nexport const setMetaPhoneData = (setState, dataForm, selectList) => {\n    setState(prevState => {\n        return {\n            ...prevState,\n            selectList:selectList,\n            uiType:\"select\",\n            key:\"meta_phone\",\n            uiName:\"Define el prefijo\",\n            settings:{\n                ...prevState.settings,\n                defaultMessage:\"ElÃ­ge el paÃ­s para asignar un prefijo\",\n                errors:[\n                    { pattern:/[^a-zA-Z _]{1,30}/g, message:'Solo se permiten letras...'}\n                ]\n            }\n        }\n    })\n}\n\nconst addStyleColorToInputWithItem = () => {\n    const prefixInput = document.querySelector('.prefixInputContainer>input')\n    if(!prefixInput){return}\n    prefixInput.style.color = 'transparent'\n    setTimeout(() => prefixInput.style.color = 'gray', 500)\n}\n\n\nexport const colapseContainer = () => {\n    const prefixContainer = document.querySelector(`.prefixContainer_`)\n    prefixContainer.style.width = '75px'\n    prefixContainer.style.borderRight = '1px solid gray'\n    addStyleColorToInputWithItem()\n}\n\nexport const inputFocus = (inputName, time = 0) => {\n    setTimeout(() => document.querySelector(`[name=\"${inputName}\"]`)?.focus(), time)\n}\n\nexport const extendContainer = () => {\n    const prefixContainer = document.querySelector(`.prefixContainer_`)\n    prefixContainer.style.width = 'calc(100% - 32px)'\n    prefixContainer.style.borderRight = '1px solid transparent'\n    // const inputElement = prefixContainer?.childNodes[2]?.childNodes[0]\n    // setTimeout(() => inputElement?.focus(), 250)\n}\n\nexport const setParentConfig = () => {\n    // set initial width status to parent container\n    let inputContainer = document.querySelector(`.inputContainer__`)\n    let prefixContainerWidth = document.querySelector(`.prefixContainer_`)?.clientWidth || 150\n    inputContainer.style.paddingLeft = `${prefixContainerWidth}px`\n    inputContainer.style.width = `calc(100% - ${prefixContainerWidth}px)`\n}\n\nexport const removeParentConfig = () => {\n    let inputContainer = document.querySelector(`.inputContainer__`)\n    if(!inputContainer){return}\n    inputContainer.style.paddingLeft = `0px`\n    inputContainer.style.width = `100%`\n}\n"],"sourceRoot":""}