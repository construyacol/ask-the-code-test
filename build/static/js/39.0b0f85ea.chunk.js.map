{"version":3,"sources":["components/forms/widgets/biometricKycComponent/styles.js","components/forms/widgets/biometricKycComponent/continueFromMobile.js","components/forms/hooks/useWindowDimensions.js","components/forms/widgets/biometricKycComponent/onBoardingAgreement.js"],"names":["Button","styled","button","ContinueFromMobile","cameraAvailable","setContinueFromMobile","qrCode","setQrCode","useState","coinsendaServices","useCoinsendaServices","createUri","async","refreshToken","getUserToken","userToken","getJWToken","code","QRCode","toDataURL","text","err","console","error","generateQR","getHostName","useEffect","CameraNotAvailableContainer","className","CameraStatus","href","target","rel","alt","ImagesContainer","src","width","disabled","onClick","div","getWindowDimensions","innerWidth","innerHeight","height","window","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","func","wait","timeout","context","this","args","arguments","later","apply","clearTimeout","setTimeout","debounce","removeEventListener","OnBoardingAgreement","handleAction","continueFromMobile","isDesktopDevice","UseWindowDimensions","log","Layout","OnBoardingContainer","getCdnPath","Content","ButtonContainer","type"],"mappings":"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","file":"static/js/39.0b0f85ea.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\n\nexport const Button = styled.button`\n      min-height: 60px;\n      cursor:pointer;\n      width: auto;\n      min-width:230px;\n      padding: 15px 20px;\n      background:#0198ff;\n      border-style: none;\n      border-radius:4px;\n      color:white;\n      font-size: 1rem;\n      font-weight: 600;\n      &.disabled{\n        background: gainsboro;\n      }\n      &.secondary{\n        background: none;\n        color: #0198ff;\n        &.disabled{\n            color:gainsboro;\n        }\n      }\n\n      &.center-end{\n        justify-self: center;\n        align-self: flex-end;\n      }\n    \n` ","\nimport { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport QRCode from 'qrcode'\nimport { Button } from './styles'\nimport { getHostName } from '../../../../environment'\nimport { getUserToken } from '../../../utils'\nimport { useCoinsendaServices } from \"../../../../services/useCoinsendaServices\";\n\n\nconst ContinueFromMobile = ({ cameraAvailable, setContinueFromMobile }) => {\n\n    const [ qrCode, setQrCode ] = useState()\n    const [ coinsendaServices ] = useCoinsendaServices();\n\n    const generateQR = async text => {\n        try {\n          const code = await QRCode.toDataURL(text)\n          setQrCode(code)\n        } catch (err) {\n          console.error(err)\n        }\n      }\n\n    const createUri = async() => {\n        const { refreshToken } = await getUserToken()\n        const { userToken } = await coinsendaServices.getJWToken(refreshToken)\n        const uri = `https://app.${getHostName()}.com?token=${userToken}&refresh_token=${refreshToken}&face_recognition`\n        generateQR(uri)\n    }\n\n        \n      useEffect(()=>{\n        createUri()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [])\n\n    return(\n        <CameraNotAvailableContainer className=\"cameraNotAvailable\">\n        {\n            cameraAvailable === false &&\n            <CameraStatus>\n                El dispositivo no tiene permisos para acceder o no tiene la cámara conectada &nbsp;\n                <a href=\"https://support.google.com/chrome/answer/2693767?hl=es-419&co=GENIE.Platform%3DDesktop\" target=\"_blank\"  rel=\"noreferrer\" alt=\"\">¿Necesitas ayuda?</a>\n            </CameraStatus>\n        }\n            <h1 >Reconocimiento Facial</h1>\n            <h3>Ahora confirmaremos tu identidad, sigue las instrucciones que aparecen en pantalla</h3>\n            <ImagesContainer>\n                {/* <img className=\"FRscanner\" src={`${getCdnPath('assets')}scanner.png`} alt=\"\" width={200} /> */}\n                <img className=\"FRQR\" src={qrCode} alt=\"\" width={280} />\n            </ImagesContainer>\n            <p>Escanea el código QR desde tu celular y continúa el proceso de verificación.</p>\n            <Button className={`center-end ${!cameraAvailable ? 'disabled' : ''}`} disabled={!cameraAvailable} onClick={() => setContinueFromMobile(false)} >Regresar</Button>\n        </CameraNotAvailableContainer>\n    )\n}\n\nexport default ContinueFromMobile\n\nconst ImagesContainer = styled.div`\n    max-height: 300px;\n    display: flex;\n    align-items: center; \n    justify-content: center;\n`\n\n\n\n\nconst CameraNotAvailableContainer = styled.div`\n    max-width: 780px;\n    padding: 70px 0;\n    min-height: calc(100vh - 140px);\n    display: grid;\n    grid-template-rows: 130px auto auto auto auto;\n    row-gap: 15px;\n    align-items: stretch;\n    h1, p{\n        text-align:center;\n    }\n    @media (max-width: 768px) {\n        padding: 60px 30px;\n        min-height: calc(100vh - 120px);\n        grid-template-rows: 100px auto auto auto auto;\n        .FRscanner{\n            display:none;\n        }\n        h1, p{\n            text-align:left;\n        }\n        h1{\n            font-size:1.8em;\n        }\n        .FRQR{\n            width:180px;\n        }\n    }\n`\n\n\nconst CameraStatus = styled.div`\n    position:absolute;\n    top:15px;\n    left:15px;\n    color:red;\n    font-size:14px;\n\n    &::before{\n        content: \"-.-\";\n        margin-right: 10px;\n        background: red;\n        border-radius: 50%;\n    }\n\n`\n\n","import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", debounce(handleResize, 500));\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return [\n    windowDimensions.width > 900,\n    windowDimensions.width,\n    windowDimensions.height,\n  ];\n}\n\n\n\n\nexport function debounce(func, wait) {\n  //Previene over flows. Si el usuario en 1 seg da x cantidad de clicks solo ejecuta el último click\n  // Esto surgió porque, podía darse, presionar muchas teclas a la vez en cuestión de milisegundos\n  // Entonces, limite que solo reconozca la última acción en 100ms\n  let timeout;\n  return function () {\n    const context = this,\n      args = arguments;\n    const later = function () {\n      timeout = null;\n      func.apply(context, [...args, () => clearTimeout(timeout)]);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}","import { useState } from \"react\"\nimport styled from \"styled-components\"\n// import FRecognition from '../../../../assets/recognition.gif'\nimport { getCdnPath } from '../../../../environment'\nimport UseWindowDimensions from '../../hooks/useWindowDimensions'\nimport ContinueFromMobile from './continueFromMobile'\nimport { Button } from './styles'\n\n\nconst OnBoardingAgreement = ({ handleAction, cameraAvailable }) => {\n\n    const [ continueFromMobile, setContinueFromMobile ] = useState(false)\n    const [ isDesktopDevice ] = UseWindowDimensions()\n    \n    console.log('||||||| isDesktopDevice ==> ', isDesktopDevice)\n    console.log('||||||| cameraAvailable ==> ', cameraAvailable)\n    \n    return(\n        <Layout>\n        {\n            continueFromMobile || cameraAvailable === false ?\n            <ContinueFromMobile\n                cameraAvailable={cameraAvailable}\n                setContinueFromMobile={setContinueFromMobile}\n            />\n            :\n            <OnBoardingContainer>\n                <h1 >Reconocimiento Facial</h1>\n                <img src={`${getCdnPath('assets')}recognition.gif`}  alt=\"\" width={250} height={200} />\n                <Content>\n                    <h3>Ahora confirmaremos tu identidad, sigue las instrucciones que aparecen en pantalla</h3>\n                    <h4>Recomendaciones importantes:</h4>\n                    <ul>\n                        <li>\n                            <p>Evita usar articulos en tu rostro(sombreros, gafas, gorras etc...).</p>\n                        </li>\n                        <li>\n                            <p>Haz el proceso en un espacio con suficiente iluminación.</p>\n                        </li>\n                        <li>\n                            <p>Completa este proceso desde tu celular.</p>\n                        </li>\n                    </ul>\n                </Content>\n                {\n                    isDesktopDevice ?\n                        <ButtonContainer>\n                            <Button onClick={() => setContinueFromMobile(true)} className={`center-end ${!cameraAvailable ? 'disabled' : ''}`} disabled={!cameraAvailable} type=\"button\">Continuar desde el celular</Button>\n                            <Button className={`center-end secondary ${!cameraAvailable ? 'disabled' : ''}`}  disabled={!cameraAvailable} onClick={handleAction} type=\"button\">Continuar desde este dispositivo</Button>\n                        </ButtonContainer>\n                        :\n                        <Button className=\"center-end\" onClick={handleAction} type=\"button\">Continuar</Button>\n                }\n            </OnBoardingContainer>\n        }\n        </Layout>\n    )\n}\n\n\n\n\nexport default OnBoardingAgreement\n\n\n\nconst ButtonContainer = styled.div`\n    column-gap: 20px;\n    display: grid;\n    grid-template-rows: 1fr;\n    grid-template-columns: auto auto;\n    max-width: 650px;\n    justify-self: center;\n   \n`\n\nconst Content = styled.div`\n    display: grid;\n    grid-template-rows: auto auto 1fr;\n    row-gap: 20px;\n    h4{\n        margin-bottom:0;\n    }\n\n    li {\n        margin: 0;\n        padding: 0px 35px;\n        list-style: none;\n        background-image: url(./check-mark.png);\n        background-repeat: no-repeat;\n        background-position: left center;\n        background-size: 20px;\n        height: 20px;\n    }\n\n`\n\n\n\nconst OnBoardingContainer = styled.div`\n    max-width: 780px;\n    padding: 70px 0;\n    min-height: calc(100vh - 140px);\n    display: grid;\n    grid-template-rows: 80px 200px;\n    row-gap:center;\n\n  img{\n      justify-self:center;\n  }\n  \n  h1{\n      text-align: center;\n      width:100%;\n  }\n\n  ul{\n        padding-left:0px;\n    }\n\n  @media (max-width: 768px) {\n   max-width: 780px;\n    padding: 30px 20px;\n    min-height: calc(100vh - 60px);\n    display: grid;\n    grid-template-rows: auto 200px 1fr auto;\n    h1{\n      font-size:1.5rem;\n    }\n    h3{\n      font-size:1rem;\n    }\n    ul{\n        padding-left:10px;\n    }\n    li{\n        padding: 0px 0 0 35px;\n        height:auto;\n    }\n  }\n`\n\n\nconst Layout = styled.div`\n  position:absolute;\n  top:0;\n  left:0;\n  z-index:2;\n  width:100vw;\n  height:100vh;\n  background: white;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n\n\n`\n\n\n\n\n"],"sourceRoot":""}