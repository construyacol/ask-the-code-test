{"version":3,"sources":["components/widgets/modal/render/orderDetail/detailGenerator.js","components/widgets/modal/render/orderDetail/paymentProof.js","components/widgets/modal/render/orderDetail/orderStatus.js","components/widgets/modal/render/orderDetail/confirmationCounter.js","components/widgets/modal/render/orderDetail/inProcessOrder.js","components/widgets/modal/render/orderDetail/index.js"],"names":["moment","locale","DetailGenerator","_ref","order","title","TitleSuffix","_useState","useState","_useState2","Object","slicedToArray","orders","setOrders","_UseTxState","UseTxState","deposit_providers","tx_path","_useFormatCurrency","useFormatCurrency","formatCurrency","formatOrderText","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","itemText","wrap","_context","prev","next","t0","abrupt","currency","spent","to_spend_currency","t1","sent","bought","to_buy_currency","t2","getState","format","amount","t3","amount_neto","t4","confirmations","fee","tax","cost","stop","_x","apply","this","arguments","inProcesOrder","_ref3","_callee2","depositProviderInfo","depositProvider","_context2","currency_type","deposit_provider_id","concat","depositAccount","ui_name","account","type","account_id","bussines_name","nit","toConsumableArray","fee_struct","percent","id","state","t5","created_at","t6","t7","t8","t9","cost_id","t10","t11","t12","_x2","useEffect","_ref4","_callee3","transOrders","_i","_Object$entries","orderItem","ui_items","_context3","entries","length","push","init","react_default","createElement","Container","className","TitleContainer","Title","map","item","indx","ItemContainer","key","LeftText","MiddleSection","RightText","Array","fill","Text","styled","p","_templateObject","div","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","span","_templateObject7","_templateObject8","OnlySkeletonAnimation","section","_templateObject9","paymentProof_templateObject","paymentProof_templateObject2","OverflowContainer","paymentProof_templateObject3","paymentProof_templateObject4","PaymentProofComponent","imgSrc","setImgSrc","order_id","activeSection","setActiveSection","coinsendaServices","actions","subirImg","base64","isAppLoading","confirmDepositOrder","mensaje","paymentProof_Container","cropimg","imageSrc","cancelarSubidaImg","PaymentProof","payload","_UseTxState2","primary_path","currencies","currentOrder","loader","_useState3","_useState4","imgProof","setImgProof","_useState5","_useState6","txId","setTxId","_useState7","_useState8","urlExplorer","setUrlExplorer","getPaymentProof","_ref5","proof_of_payment","paymentProof","raw","QRCode","toDataURL","node_url","proof","_ref6","PP","updateOrder","getDepositById","defineProperty","objectSpread","update_item_state","getData","Fragment","PaymentProofContainer","LoaderContainer","loaders","justify","color","ProofContainer","src","width","height","alt","HoverProof","IconContainer","data-copy","onClick","copy","md_index_esm","size","window","open","bs_index_esm","FiatPaymentProofZoom","ProofCont","paymentProof_templateObject5","paymentProof_templateObject6","props","paymentProof_templateObject7","paymentProof_templateObject8","paymentProof_templateObject9","_templateObject10","_templateObject11","StatusItem","active","skeleton","activated","toString","Status","Indicator","Description","Skeleton","StatusTitle","ui_text","DateStatusText","updated_at","OrderStatus","orderState","setOrderState","skeletons","prop","api","completed","OrderStatusContainer","TopSectionStatus","orderStatus_Text","orderStatus","SubTitle","description","StatusContainer","index","orderStatus_StatusItem","orderStatus_templateObject","orderStatus_templateObject2","orderStatus_templateObject3","orderStatus_templateObject4","orderStatus_templateObject5","orderStatus_templateObject6","orderStatus_templateObject7","orderStatus_templateObject8","orderStatus_templateObject9","orderStatus_templateObject10","orderStatus_templateObject11","ConfirmationCounter","ctx","total","draw","c","tasaPercent","_this","setState","document","getElementById","getContext","clearInterval","draw_interval","beginPath","arc","Math","PI","lineWidth","strokeStyle","stroke","prevProps","setInterval","_this2","_this$props","total_confirmations","AbsoluteContainer2","RelativeContainer","AbsoluteContainer","ContCanvasConfirmation","ConfirmationContainer","TextContainer","Canvas","Component","confirmationCounter_templateObject","confirmationCounter_templateObject2","confirmationCounter_templateObject3","confirmationCounter_templateObject4","confirmationCounter_templateObject5","article","confirmationCounter_templateObject6","confirmationCounter_templateObject7","canvas","confirmationCounter_templateObject8","Date","InProcessOrder","inProcessOrder_FiatDespoitOrder","inProcessOrder_CryptoDespoitOrder","CryptoDespoitOrder","InProcessOrderContainer","OrderContainer","TopSection","iconSwitch","icon","inProcessOrder_TitleContainer","inProcessOrder_Text","getTitle","Currency","DateIdContainter","DateText","inProcessOrder_MiddleSection","detailGenerator","inProcessOrder_GetIcon","inProcessOrder_BottomSection","inProcessOrder_UploadComponent","confirmationCounter_ConfirmationCounter","FiatDespoitOrder","onDrag","setOnDrag","_UseTxState3","goFileLoader","e","file","imageDataUrl","target","files","alert","img_compressor","readFile","onDragOver","event","preventDefault","inProcessOrder_DropZoneComponent","dragLeave","DropZoneComponent","DropZoneContainer","accept","onChange","onDragLeave","unButtom","UploadComponent","UploadContainer","react","UploadMiddle","UploadTextMiddle","paymentProof_PaymentProof","index_esm","UploadText","Buttom","style","GetIcon","coloIcon","RenderIcon","AiOutlineClockCircle","inProcessOrder_IconContainer","_ref7","inProcessOrder_templateObject","inProcessOrder_templateObject2","inProcessOrder_templateObject3","img","inProcessOrder_templateObject4","inProcessOrder_templateObject5","progresed","inProcessOrder_templateObject6","inProcessOrder_templateObject7","inProcessOrder_templateObject8","inProcessOrder_templateObject9","inProcessOrder_templateObject10","inProcessOrder_templateObject11","_templateObject12","_templateObject13","Section","_templateObject14","BottomSection","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","_templateObject20","_templateObject21","_templateObject22","_templateObject23","_templateObject24","_templateObject25","OrderSupervisor","history","isMovilViewport","useViewport","cerrar","dataset","close_modal","renderModal","goBack","otherModalLayout","on_click","shared_styles","orderDetail_OrderDetail","inProcessOrder","OrderDetail","useActions","TitleText","textState","colorState","Layout","orderDetail_TopSection","orderDetail_TitleContainer","OrderIcon","orderDetail_Title","DateTitle","CircleIconContainer","ContBackTopSection","BackTopSection","orderDetail_BottomSection","textTotal","isFiatWithdraw","BottomSectionContainer","TitleBottom","orderDetail_Container","TotalAmount","code","orderDetail_templateObject","orderDetail_templateObject2","orderDetail_templateObject3","orderDetail_templateObject4","orderDetail_templateObject5","orderDetail_templateObject6","Icon","i","orderDetail_templateObject7","orderDetail_templateObject8","orderDetail_templateObject9","backTopSection","orderDetail_templateObject10","orderDetail_templateObject11","h3","orderDetail_templateObject12","orderDetail_templateObject13","orderStateColors","orderDetail_templateObject14","swing_in_bottom_bck"],"mappings":"o4EASAA,IAAOC,OAAO,MAId,IAoLeC,EApLS,SAAAC,GAAiC,IAA/BC,EAA+BD,EAA/BC,MAAOC,EAAwBF,EAAxBE,MAAOC,EAAiBH,EAAjBG,YAAiBC,EAEzBC,mBAAS,IAFgBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE/CK,EAF+CH,EAAA,GAEvCI,EAFuCJ,EAAA,GAAAK,EAGhBC,cAA/BC,EAH+CF,EAG/CE,kBAAmBC,EAH4BH,EAG5BG,QAH4BC,EAI1BC,cAAnBC,EAJ6CV,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,MAMjDG,EAAe,eAAAC,EAAAZ,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAG,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,GAEdL,EAAS,GAFKE,EAAAE,KAGf,sBAHeF,EAAAG,GAAA,EAKf,oBALeH,EAAAG,GAAA,EAOf,aAPeH,EAAAG,GAAA,EASf,UATeH,EAAAG,GAAA,EAWf,WAXeH,EAAAG,GAAA,GAaf,UAbeH,EAAAG,GAAA,GAef,kBAfeH,EAAAG,GAAA,GAiBf,OAjBeH,EAAAG,GAAA,GAmBf,eAnBeH,EAAAG,GAAA,GAqBf,eArBeH,EAAAG,GAAA,GAuBf,oBAvBeH,EAAAG,GAAA,GAyBf,WAzBeH,EAAAG,GAAA,GA2Bf,gBA3BeH,EAAAG,GAAA,GA6Bf,kBA7BeH,EAAAG,GAAA,GA+Bf,QA/BeH,EAAAG,GAAA,GAiCf,QAjCeH,EAAAG,GAAA,GAmCf,SAnCeH,EAAAG,GAAA,GAuCf,sBAvCeH,EAAAG,GAAA,GAwCf,qBAxCeH,EAAAG,GAAA,GAyCf,aAzCeH,EAAAG,GAAA,GA0Cf,wBA1CeH,EAAAG,GAAA,GA2Cf,yBA3CeH,EAAAG,GAAA,GA4Cf,eA5CeH,EAAAG,GAAA,GA6Cf,iBA7CeH,EAAAG,GAAA,GA8Cf,SA9CeH,EAAAG,GAAA,GA+Cf,YA/CeH,EAAAG,GAAA,GAgDf,UAhDeH,EAAAG,GAAA,GAiDf,iBAjDeH,EAAAG,GAAA,GAkDf,YAlDeH,EAAAG,GAAA,GAmDf,WAnDeH,EAAAG,GAAA,GAoDf,SApDeH,EAAAG,GAAA,GAqDf,gBArDeH,EAAAG,GAAA,GAsDf,eAtDeH,EAAAG,GAAA,GAuDf,SAvDeH,EAAAG,GAAA,GAwDf,eAxDeH,EAAAG,GAAA,GAyDf,eAzDeH,EAAAG,GAAA,GA0Df,WA1DeH,EAAAG,GAAA,GA2Df,kBA3DeH,EAAAG,GAAA,GA4Df,YA5DeH,EAAAG,GAAA,GA6Df,wBA7DeH,EAAAG,GAAA,GA8Df,eA9DeH,EAAAG,GAAA,GA+Df,gBA/DeH,EAAAG,GAAA,GAgEf,iBAhEeH,EAAAG,GAAA,GAiEf,mBAjEeH,EAAAG,GAAA,GAkEf,yBAlEeH,EAAAG,GAAA,GAmEf,UAnEeH,EAAAG,GAAA,GAoEf,SApEeH,EAAAG,GAAA,GAqEf,YArEeH,EAAAG,GAAA,0BAAAH,EAAAI,OAAA,SAIT,CAAC,kBAAmBN,EAAS,GAAGO,WAJvB,cAAAL,EAAAI,OAAA,SAMT,CAAC,oBAAqBN,EAAS,GAAGO,WANzB,cAAAL,EAAAI,OAAA,SAQT,CAAC,UAAWN,EAAS,GAAGO,WARf,cAAAL,EAAAE,KAAA,EAUmBZ,EAAehB,EAAMgC,MAAOhC,EAAMiC,mBAVrD,cAAAP,EAAAQ,GAAAR,EAAAS,KAAAT,EAAAI,OAAA,UAUR,oBAVQJ,EAAAQ,KAAA,eAAAR,EAAAE,KAAA,GAYqBZ,EAAehB,EAAMoC,OAAQpC,EAAMqC,iBAZxD,eAAAX,EAAAY,GAAAZ,EAAAS,KAAAT,EAAAI,OAAA,UAYR,sBAZQJ,EAAAY,KAAA,eAAAZ,EAAAI,OAAA,SAcT,CAAC,UAAWS,GAASf,EAAS,MAdrB,eAAAE,EAAAI,OAAA,SAgBT,CAAC,eAAaN,EAAS,KAhBd,eAAAE,EAAAI,OAAA,SAkBT,CAAC,sBAAoBN,EAAS,KAlBrB,eAAAE,EAAAI,OAAA,SAoBT,CAAC,aAAclC,IAAO4B,EAAS,IAAIgB,OAAO,QApBjC,eAAAd,EAAAI,OAAA,SAsBT,CAAC,kBAAmBlC,IAAO4B,EAAS,IAAIgB,OAAO,QAtBtC,eAAAd,EAAAI,OAAA,SAwBT,CAAC,aAAclC,IAAO4B,EAAS,IAAIgB,OAAO,QAxBjC,eAAAd,EAAAE,KAAA,GA0BWZ,EAAehB,EAAMyC,OAAQzC,EAAM+B,UA1B9C,eAAAL,EAAAgB,GAAAhB,EAAAS,KAAAT,EAAAI,OAAA,UA0BR,YA1BQJ,EAAAgB,KAAA,eAAAhB,EAAAE,KAAA,GA4BgBZ,EAAehB,EAAM2C,YAAa3C,EAAM+B,UA5BxD,eAAAL,EAAAkB,GAAAlB,EAAAS,KAAAT,EAAAI,OAAA,UA4BR,iBA5BQJ,EAAAkB,KAAA,eAAAlB,EAAAI,OAAA,SA8BT,CAAC,iBAAkB9B,EAAM6C,gBA9BhB,eAAAnB,EAAAI,OAAA,SAgCT,CAAC,eAAa9B,EAAM8C,MAhCX,eAAApB,EAAAI,OAAA,SAkCT,CAAC,YAAa9B,EAAM+C,MAlCX,eAAArB,EAAAI,OAAA,SAoCT,CAAC,SAAU9B,EAAMgD,OApCR,eAAAtB,EAAAI,OAAA,yBAAAJ,EAAAI,OAAA,SAwETN,GAxES,yBAAAE,EAAAuB,SAAA1B,MAAH,gBAAA2B,GAAA,OAAAhC,EAAAiC,MAAAC,KAAAC,YAAA,GA4EfC,EAAa,eAAAC,EAAAjD,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAG,SAAAkC,EAAMxD,GAAN,IAAAyD,EAAAC,EAAAjB,EAAAE,EAAA,OAAAvB,EAAAC,EAAAI,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,OAAA+B,EAAA9B,GAEZ7B,EAAM4D,cAFMD,EAAA/B,KAGb,SAHa+B,EAAA9B,GAAA,EA2Bb,WA3Ba8B,EAAA9B,GAAA,0BAId4B,EAAsB,GACvB7C,GAAqBA,EAAkBZ,EAAM6D,uBACxCH,EAAkB9C,EAAkBZ,EAAM6D,qBAChDJ,EAAsB,CACpB,CAAC,uBAAD,GAAAK,OAA4BJ,EAAgBK,eAAeC,UAC3D,IAAAF,OAAIJ,EAAgBK,eAAeE,QAAQC,KAAKF,SAAhD,GAAAF,OAA8DJ,EAAgBK,eAAeE,QAAQC,KAAKA,OAC1G,IAAAJ,OAAIJ,EAAgBK,eAAeE,QAAQE,WAAWH,SAAtD,GAAAF,OAAoEJ,EAAgBK,eAAeE,QAAQE,WAAWA,aACtH,IAAAL,OAAIJ,EAAgBK,eAAeE,QAAQG,cAAcJ,SAAzD,GAAAF,OAAuEJ,EAAgBK,eAAeE,QAAQG,cAAcA,gBAC5H,IAAAN,OAAIJ,EAAgBK,eAAeE,QAAQI,IAAIL,SAA/C,GAAAF,OAA6DJ,EAAgBK,eAAeE,QAAQI,IAAIA,QAZ1FV,EAAA/B,KAAA,EAgBGZ,EAAehB,EAAMyC,OAAQzC,EAAM+B,UAhBtC,cAgBZU,EAhBYkB,EAAAxB,KAAAwB,EAAA/B,KAAA,GAiBQZ,EAAehB,EAAM2C,YAAa3C,EAAM+B,UAjBhD,eAiBZY,EAjBYgB,EAAAxB,KAmBlB1B,EAAS,GAAAqD,OAAAxD,OAAAgE,EAAA,EAAAhE,CACJmD,GADI,CAEP,CAAC,eAAD,GAAAK,OAAiB9D,EAAMuE,YAAN,GAAAT,OAAuB9D,EAAMuE,WAAWC,QAAxC,KAAjB,OAAAV,OAAyE9D,EAAM8C,MAC/E,CAAC,YAAD,KAAAgB,OAAmB9D,EAAM+C,MACzB,CAAC,uBAAD,MAAAe,OAA+BrB,IAC/B,CAAC,qBAAD,MAAAqB,OAA6BnB,OAxBbgB,EAAA7B,OAAA,2BAAA6B,EAAAzB,GA4BlBzB,EA5BkBkD,EAAArB,GA6BhB,CAAC,sBAAoBtC,EAAMyE,IA7BXd,EAAAjB,GA8BhB,CAAC,UAAWH,GAASvC,EAAM0E,QA9BXf,EAAAf,GA+BhB,CAAC,UAAD,GAAAkB,OAAe9D,EAAM+B,SAASA,WA/Bd4B,EAAAgB,GAgChB,CAAC,mBAAoB/E,IAAOI,EAAM4E,YAAYpC,OAAO,OAhCrCmB,EAAAkB,GAiChB,CAAC,kBAAmB7E,EAAM6C,eAjCVc,EAAA/B,KAAA,GAkCeZ,EAAehB,EAAMyC,OAAQzC,EAAM+B,UAlClD,eAAA4B,EAAAmB,GAAAnB,EAAAxB,KAAAwB,EAAAoB,GAAA,CAkCf,uBAlCepB,EAAAmB,IAAAnB,EAAAqB,GAmChB,CAAC,yBAAuBhF,EAAMiF,SAnCdtB,EAAA/B,KAAA,GAoCUZ,EAAehB,EAAM2C,YAAa3C,EAAM+B,UApClD,eAAA4B,EAAAuB,IAAAvB,EAAAxB,KAAAwB,EAAAwB,IAAA,CAoCf,kBApCexB,EAAAuB,KAAAvB,EAAAyB,IAAA,CAAAzB,EAAArB,GAAAqB,EAAAjB,GAAAiB,EAAAf,GAAAe,EAAAgB,GAAAhB,EAAAkB,GAAAlB,EAAAoB,GAAApB,EAAAqB,GAAArB,EAAAwB,MAAA,EAAAxB,EAAAzB,IAAAyB,EAAAyB,KAAAzB,EAAA7B,OAAA,qCAAA6B,EAAAV,SAAAO,MAAH,gBAAA6B,GAAA,OAAA9B,EAAAJ,MAAAC,KAAAC,YAAA,GAkEnB,OApBAiC,oBAAU,WAEJtF,GACM,eAAAuF,EAAAjF,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAG,SAAAkE,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAzE,EAAAC,EAAAI,KAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,UACS,YAAhB5B,EAAM0E,OAAuC,cAAhB1E,EAAM0E,OAAsC,aAAZ7D,EADtD,CAAAiF,EAAAlE,KAAA,eAAAkE,EAAAlE,KAAA,EAC2F0B,EAActD,GADzG,cAAA8F,EAAAhE,OAAA,SAAAgE,EAAA3D,MAAA,OAELsD,EAAc,GAFTC,EAAA,EAAAC,EAGWrF,OAAOyF,QAAQ/F,GAH1B,YAAA0F,EAAAC,EAAAK,QAAA,CAAAF,EAAAlE,KAAA,gBAGFgE,EAHED,EAAAD,GAAAI,EAAAlE,KAAA,GAIcX,EAAgB2E,GAJ9B,SAIHC,EAJGC,EAAA3D,OAOPsD,EAAYQ,KAAKJ,GAPV,QAAAH,IAAAI,EAAAlE,KAAA,gBAUXnB,EAAUgF,GAVC,yBAAAK,EAAA7C,SAAAuC,MAAH,yBAAAD,EAAApC,MAAAC,KAAAC,YAAA,EAYV6C,IACC,CAACtF,IAKFuF,EAAA9E,EAAA+E,cAACC,EAAD,CAAWC,UAAS,GAAAxC,OAAK7D,EAAQ,YAAc,KAE3CA,GACAkG,EAAA9E,EAAA+E,cAACG,EAAD,CAAgBD,UAAS,GAAAxC,OAAK5D,EAAc,cAAgB,GAAnC,KAAA4D,OAAyC9D,EAAM0E,QACtEyB,EAAA9E,EAAA+E,cAACI,EAAD,CAAOF,UAAU,UAAUrG,GAC1BC,GAAeiG,EAAA9E,EAAA+E,cAAClG,EAAD,OAIjBM,GAAUA,EAAOwF,OAClBxF,EAAOiG,IAAI,SAACC,EAAMC,GAChB,OAAOR,EAAA9E,EAAA+E,cAACQ,EAAD,CAAeC,IAAKF,EAAML,UAAS,GAAAxC,OAAOtD,EAAOwF,SAAYW,EAAO,GAAM3G,EAAM0E,OAAsB,aAAZ7D,GAA2Bb,EAAM0E,QACxHyB,EAAA9E,EAAA+E,cAACU,EAAD,CAAUR,UAAU,UAAUI,EAAK,IACnCP,EAAA9E,EAAA+E,cAACW,EAAD,MACAZ,EAAA9E,EAAA+E,cAACY,EAAD,CAAWV,UAAU,WAAWI,EAAK,OAIjD,IAAIO,MAAM,IAAIC,KAAK,KAAKT,IAAI,SAACC,EAAMC,GACjC,OAAQR,EAAA9E,EAAA+E,cAACQ,EAAD,CAAeN,UAAU,WAAWO,IAAKF,GACvCR,EAAA9E,EAAA+E,cAACU,EAAD,oBACAX,EAAA9E,EAAA+E,cAACW,EAAD,MACAZ,EAAA9E,EAAA+E,cAACY,EAAD,gCAWdG,EAAOC,IAAOC,EAAVC,KAeJf,GATuBa,IAAOG,IAAVC,KASHJ,IAAOG,IAAVE,MAadjB,EAAQY,YAAOD,EAAPC,CAAHM,KAILV,EAAYI,YAAOD,EAAPC,CAAHO,KASTb,EAAWM,YAAOD,EAAPC,CAAHQ,KAKRb,EAAgBK,IAAOS,KAAVC,KAKblB,EAAgBQ,IAAOG,IAAVQ,IAObC,IACAhB,EAAcF,EAadE,EAAcF,EAIdE,GAWAX,EAAYe,IAAOa,QAAVC,IAeXf,EAASJ,gnICzPIK,IAAOG,IAAVY,MAQOf,IAAOG,IAAVa,MA7ClB,IAoDMC,GAAoBjB,IAAOa,QAAVK,MASjBjC,GAAYe,IAAOG,IAAVgB,MAuCAC,GApGe,SAAAzI,GAAqC,IAAlC0I,EAAkC1I,EAAlC0I,OAAQC,EAA0B3I,EAA1B2I,UAAWC,EAAe5I,EAAf4I,SAAexI,EAErBC,oBAAS,GAFYC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEzDyI,EAFyDvI,EAAA,GAE1CwI,EAF0CxI,EAAA,GAAAK,EAG1BC,cAA/BmI,EAHyDpI,EAGzDoI,kBAAmBC,EAHsCrI,EAGtCqI,QAErBC,EAAQ,eAAAzF,EAAAjD,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAG,SAAAC,EAAAL,GAAA,IAAA+H,EAAA,OAAA7H,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAOqH,EAAP/H,EAAO+H,OACtBP,EAAUO,GACVJ,EAAiB,MACjBE,EAAQG,cAAa,GAHNxH,EAAAE,KAAA,EAIUkH,EAAkBK,oBAAoBR,EAAUM,GAJ1D,OAAAvH,EAAAS,OAMb4G,EAAQG,cAAa,GACrBH,EAAQK,QAAQ,kCAAmC,SACnDV,EAAU,OARG,wBAAAhH,EAAAuB,SAAA1B,MAAH,gBAAA2B,GAAA,OAAAK,EAAAJ,MAAAC,KAAAC,YAAA,GAiBd,OACE8C,EAAA9E,EAAA+E,cAACiC,GAAD,KACElC,EAAA9E,EAAA+E,cAACiD,GAAD,CAAW/C,UAAS,GAAAxC,OAAK8E,EAAgB,YAAc,KACnDzC,EAAA9E,EAAA+E,cAACkD,EAAA,EAAD,CACEC,SAAUd,EACVO,SAAUA,EACVQ,kBAXgB,WACxBX,EAAiB,MACjBH,EAAU,YA8FDe,GAAe,SAAAlE,GAAiB,IAAdmE,EAAcnE,EAAdmE,QAAcC,EAEqDhJ,cAA1EmI,GAFqBa,EAEnCC,aAFmCD,EAErBb,mBAAmBC,EAFEY,EAEFZ,QAASc,EAFPF,EAEOE,WAAYC,EAFnBH,EAEmBG,aAAcC,EAFjCJ,EAEiCI,OAAQlJ,EAFzC8I,EAEyC9I,QAFzCmJ,EAGT5J,mBAASsJ,GAHAO,EAAA3J,OAAAC,EAAA,EAAAD,CAAA0J,EAAA,GAGnCE,EAHmCD,EAAA,GAGzBE,EAHyBF,EAAA,GAAAG,EAIjBhK,qBAJiBiK,EAAA/J,OAAAC,EAAA,EAAAD,CAAA8J,EAAA,GAInCE,EAJmCD,EAAA,GAI7BE,EAJ6BF,EAAA,GAAAG,EAKHpK,qBALGqK,EAAAnK,OAAAC,EAAA,EAAAD,CAAAkK,EAAA,GAKnCE,EALmCD,EAAA,GAKtBE,EALsBF,EAAA,GAOrCG,EAAe,eAAAC,EAAAvK,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAG,SAAAkC,EAAMsG,GAAN,IAAAgB,EAAA,OAAA1J,EAAAC,EAAAI,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,WAEnBkI,EAAaiB,aAFM,CAAApH,EAAA/B,KAAA,YAIZkJ,EAAqBhB,EAAaiB,aAAlCD,iBAJYnH,EAAA9B,GAMpBsI,EAA2C,SAA/BL,EAAalG,cANL,CAAAD,EAAA/B,KAAA,QAAA+B,EAAAzB,GAAA,0BAAA4B,OAM0DgH,EAAiBE,KAN3ErH,EAAA/B,KAAA,uBAAA+B,EAAA/B,KAAA,EAMyFqJ,IAAOC,UAAP,GAAApH,OAAoB+F,EAAWC,EAAa/H,SAASA,UAAUoJ,SAA/D,OAAArH,OAA6EgH,EAAiBM,QANvL,OAAAzH,EAAAzB,GAAAyB,EAAAxB,KAAA,QAAAwB,EAAArB,GAAAqB,EAAAzB,IAAA,EAAAyB,EAAA9B,IAAA8B,EAAArB,IAOc,WAA/BwH,EAAalG,gBACd2G,EAAQO,EAAiBM,OACzBT,EAAc,GAAA7G,OAAI+F,EAAWC,EAAa/H,SAASA,UAAUoJ,SAA/C,OAAArH,OAA6DgH,EAAiBM,SAT1EzH,EAAA/B,KAAA,qBAWbkI,EAAasB,MAXA,CAAAzH,EAAA/B,KAAA,gBAAA+B,EAAAjB,GAYpByH,EAZoBxG,EAAA/B,KAAA,GAYFqJ,IAAOC,UAAP,GAAApH,OAAoB+F,EAAWC,EAAa/H,SAASA,UAAUoJ,SAA/D,OAAArH,OAA6EgG,EAAasB,QAZxF,QAAAzH,EAAAf,GAAAe,EAAAxB,MAAA,EAAAwB,EAAAjB,IAAAiB,EAAAf,IAapB2H,EAAQT,EAAasB,OACrBT,EAAc,GAAA7G,OAAI+F,EAAWC,EAAa/H,SAASA,UAAUoJ,SAA/C,OAAArH,OAA6DgG,EAAasB,QAdpE,yBAAAzH,EAAAV,SAAAO,MAAH,gBAAA6B,GAAA,OAAAwF,EAAA1H,MAAAC,KAAAC,YAAA,GAkBrBiC,oBAAU,WAEJwE,EAAaiB,cAAuC,YAAvBjB,EAAapF,OAAmC,aAAZ7D,EAcnE+J,EAAgBd,GAbH,eAAAuB,EAAA/K,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAG,SAAAkE,IAAA,IAAA8F,EAAAC,EAAA,OAAAnK,EAAAC,EAAAI,KAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAlE,KAAA,EACGkH,EAAkB0C,eAAe1B,EAAarF,IADjD,UACR6G,EADQxF,EAAA3D,KAAA,CAAA2D,EAAAlE,KAAA,eAAAkE,EAAAhE,OAAA,iBAGewJ,EAAGP,aAAxBD,iBAEJS,EALUjL,OAAAmL,EAAA,EAAAnL,CAAA,GAMXgL,EAAG7G,GANQnE,OAAAoL,EAAA,EAAApL,CAAA,GAMAgL,IAEdvC,EAAQ4C,kBAAkBJ,EAAa,YACvCX,EAAgBU,GATF,wBAAAxF,EAAA7C,SAAAuC,MAAH,yBAAA6F,EAAAlI,MAAAC,KAAAC,YAAA,EAWbuI,IAID,IAEHtG,oBAAU,WACL4E,IAAaR,GACdS,EAAYT,IAEb,CAACA,IAWJ,OACEvD,EAAA9E,EAAA+E,cAAAD,EAAA9E,EAAAwK,SAAA,KACA1F,EAAA9E,EAAA+E,cAAC0F,GAAD,CAAuBxF,UAAS,GAAAxC,OAAKgG,EAAalG,cAAlB,KAAAE,OAAmCgG,EAAapF,UAG1EwF,GAAYH,IACd5D,EAAA9E,EAAA+E,cAAC2F,GAAD,KACE5F,EAAA9E,EAAA+E,cAAC4F,EAAA,EAAD,CAAcjC,OAAQ,EAAGkC,QAAQ,SAASC,MAAM,aAKlDhC,GACA/D,EAAA9E,EAAA+E,cAAC+F,GAAD,KACEhG,EAAA9E,EAAA+E,cAAA,OAAKgG,IAAKlC,EAAUmC,MAAM,OAAOC,OAAO,MAAMC,IAAI,KAEjB,WAA/BzC,EAAalG,eACbuC,EAAA9E,EAAA+E,cAACoG,GAAD,KACErG,EAAA9E,EAAA+E,cAACqG,GAAD,CAAenG,UAAU,UAAUoG,YAAWpC,EAAMqC,QAASC,QAC3DzG,EAAA9E,EAAA+E,cAACyG,EAAA,EAAD,CAAeC,KAAM,KACrB3G,EAAA9E,EAAA+E,cAAA,QAAME,UAAU,sBAAhB,WAGFH,EAAA9E,EAAA+E,cAACqG,GAAD,CAAenG,UAAU,UAAUqG,QA/BxB,WACrBI,OAAOC,KACLtC,EACA,YA6BUvE,EAAA9E,EAAA+E,cAAC6G,EAAA,EAAD,CAAUH,KAAM,KAChB3G,EAAA9E,EAAA+E,cAAA,QAAME,UAAU,sBAAhB,yBASV4D,GACA/D,EAAA9E,EAAA+E,cAAC8G,GAAD,CAAsBxI,MAAOoF,EAAapF,OACxCyB,EAAA9E,EAAA+E,cAAC+G,GAAD,KACEhH,EAAA9E,EAAA+E,cAAA,OAAKgG,IAAKlC,EAAUmC,MAAM,OAAOE,IAAI,SAUzCY,GAAY/F,IAAOG,IAAV6F,MAaTF,GAAuB9F,IAAOG,IAAV8F,KAGd,SAAAC,GAAK,MAAoB,cAAhBA,EAAM5I,MAAwB,qBAAuB,uBAUpEoH,GAAwB1E,IAAOG,IAAVgG,KA0BCL,GAAkDA,IAWtEnB,GAAkB3E,IAAOG,IAAViG,MAgBfrB,GAAiB/E,IAAOG,IAAVkG,IAQTjB,IAOLA,GAAapF,IAAOG,IAAVmG,KAeVjB,GAAgBrF,IAAOG,IAAVoG,iqFC5UrB/N,IAAOC,OAAO,MAId,IA4DM+N,GAAa,SAAA1M,GAAmD,IAAhDoF,EAAgDpF,EAAhDoF,UAAW5B,EAAqCxD,EAArCwD,MAAO1E,EAA8BkB,EAA9BlB,MAAO6N,EAAuB3M,EAAvB2M,OAAQC,EAAe5M,EAAf4M,SAE/CC,EAAYF,GAAUA,EAAOG,WAGnC,OACE7H,EAAA9E,EAAA+E,cAAC6H,GAAD,CAAQ3H,UAAS,UAAAxC,OAAYwC,IAC3BH,EAAA9E,EAAA+E,cAAC8H,GAAD,CAAW5H,UAAWA,IACtBH,EAAA9E,EAAA+E,cAAC+H,GAAD,KAEIL,EACA3H,EAAA9E,EAAA+E,cAACgI,GAAD,MAEAjI,EAAA9E,EAAA+E,cAAAD,EAAA9E,EAAAwK,SAAA,KACA1F,EAAA9E,EAAA+E,cAACiI,GAAD,CAAa/H,UAAU,SAASuH,OAAQE,GAAYrJ,EAAM,GAAG4J,QAAQtO,EAAM4D,gBAAkBc,EAAM,GAAG4J,SACtGnI,EAAA9E,EAAA+E,cAACmI,GAAD,CAAgBjI,UAAU,UAAUuH,OAAQE,GAExCF,GAA0B,YAAhB7N,EAAM0E,MAAsB,YACtCmJ,EAAS,gBACI,YAAbnJ,EAAM,GAAmB9E,IAAOI,EAAM4E,YAAYpC,OAAO,MAC5C,YAAbkC,EAAM,GAAmB9E,IAAOI,EAAMwO,YAAYhM,OAAO,MAC3C,cAAbkC,EAAM,IAAsC,cAAhB1E,EAAM0E,MAAyB9E,IAAOI,EAAMwO,YAAYhM,OAAO,MAAQ,QAYnGiM,GA7FK,SAAA1O,GAAe,IAAZC,EAAYD,EAAZC,MAAYG,EAEKC,qBAFLC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEzBuO,EAFyBrO,EAAA,GAEbsO,EAFatO,EAAA,GAAAK,EAGCC,cAA1BmJ,EAHyBpJ,EAGzBoJ,aAAcjJ,EAHWH,EAGXG,QAEhB+N,EAAY,IAAI3H,MAAM,GAAGC,KAAK,CAAC,YAqBrC,OAnBC5B,oBAAU,WAER,IAAI9E,EAAS,GACb,IAAK,IAAIqO,KAAQC,GAAIjO,GACnBL,EAAMF,OAAAoL,EAAA,EAAApL,CAAA,GACDE,EADCF,OAAAmL,EAAA,EAAAnL,CAAA,GAEHuO,EAFGvO,OAAAoL,EAAA,EAAApL,CAAA,GAGCwO,GAAIjO,GAASgO,GAHd,CAIFE,UAAUjF,EAAapF,QAAUmK,MAKvCF,EAAcrO,OAAOyF,QAAQvF,KAC5B,CAACsJ,EAAapF,QAMhByB,EAAA9E,EAAA+E,cAAC4I,GAAD,KACE7I,EAAA9E,EAAA+E,cAAC6I,GAAD,KACE9I,EAAA9E,EAAA+E,cAAC8I,GAAD,CAAM5I,UAAU,UAAU6I,eAAYtO,GAASb,EAAM0E,OAAO1E,EAAM4D,eAAe3D,OACjFkG,EAAA9E,EAAA+E,cAACgJ,GAAD,CAAU9I,UAAU,UAAU6I,eAAYtO,GAASb,EAAM0E,OAAO1E,EAAM4D,eAAeyL,cAEvFlJ,EAAA9E,EAAA+E,cAACkJ,GAAD,KAEIZ,EAAaA,EAAWjI,IAAI,SAAC/B,EAAO6K,GAClC,OAAOpJ,EAAA9E,EAAA+E,cAACoJ,GAAD,CACL9K,MAAOA,EACP1E,MAAO8J,EACPjD,IAAK0I,EACL1B,OAAQnJ,EAAM,GAAGqK,UACjBzI,UAAS,qBAAAxC,OACL4K,EAAW1I,SAAYuJ,EAAQ,EAAK,uBAAyB,aADxD,sBAAAzL,OAELY,EAAM,GAAGqK,UAAY,aAAe,GAF/B,0BAMbH,EAAUnI,IAAI,SAAC/B,EAAO6K,GACpB,OAAOpJ,EAAA9E,EAAA+E,cAACoJ,GAAD,CACL9K,MAAOA,EACPmC,IAAK0I,EACLjJ,UAAS,GAAAxC,OAAK8K,EAAU5I,SAAYuJ,EAAQ,EAAK,uBAAyB,aAAjE,aACTzB,UAAQ,SAqET3G,GAAOC,IAAOC,EAAVoI,MAIXT,GAAuB5H,IAAOG,IAAVmI,MAQpBT,GAAmB7H,IAAOG,IAAVoI,MAMhBP,GAAWhI,YAAOD,GAAPC,CAAHwI,MAORN,GAAkBlI,IAAOG,IAAVsI,MASf5B,GAAS7G,IAAOG,IAAVuI,MAyBN5B,GAAY9G,IAAOG,IAAVwI,MAwDT5B,GAAc/G,IAAOG,IAAVyI,MAUX5B,GAAWhH,IAAOG,IAAV0I,KAKVjI,KAOEqG,GAAcjH,YAAOD,GAAPC,CAAH8I,KAEN,SAAA5C,GAAK,MAAqB,SAAjBA,EAAMO,OAAoB,UAAY,SAGpDU,GAAiBnH,YAAOD,GAAPC,CAAH+I,KAET,SAAA7C,GAAK,MAAqB,SAAjBA,EAAMO,OAAoB,UAAY,wpDCjRrCuC,iNAEnB1L,MAAQ,CACN2L,IAAI,KACJC,MAAM,EACNvG,QAAO,EACPmC,MAAM,aAaRqE,2CAAO,SAAAhP,EAAMkB,GAAN,IAAA+N,EAAAH,EAAAI,EAAA,OAAArP,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAIC8O,EAAKC,SAAS,CAAC5G,QAAO,IAJvB,UAKDyG,EAAII,SAASC,eAAe,YAL3B,CAAAnP,EAAAE,KAAA,eAAAF,EAAAI,OAAA,UAMS,GANT,OAOCuO,EAAMG,EAAEM,WAAW,MACzBC,cAAcL,EAAKM,eACfP,EAAgB,IAAMhO,EAAWiO,EAAKhM,MAAM4L,MAChDD,EAAIY,YACJZ,EAAIa,IAAI,IAAK,GAAI,GAAI,EAAI,EAAIC,KAAKC,GAAG,IAAKX,GAC1CJ,EAAIgB,UAAY,EAChBhB,EAAIiB,YAAc,UAClBjB,EAAIkB,SAdC,yBAAA7P,EAAAuB,SAAA1B,wLAqBkBiQ,sEACrBpO,KAAKkK,MAAMzK,gBAAkB2O,EAAU3O,8CACjCO,KAAKuN,SAAS,CAAC5G,QAAO,WAC5B3G,KAAKmN,KAAKnN,KAAKkK,MAAMzK,iSAKjBO,KAAKuN,SAAS,CAAC5G,QAAO,WAC5B3G,KAAK4N,cAAiBS,YAAY,WAC9BC,EAAKnB,KAAKmB,EAAKpE,MAAMzK,gBACtB,wIAGG,IAAA8O,EAMFvO,KAAKkK,MAFPzK,EAJI8O,EAIJ9O,cACA+O,EALID,EAKJC,oBAKExO,KAAKsB,MADPwH,MAKF,OACE/F,EAAA9E,EAAA+E,cAACyL,GAAD,KACE1L,EAAA9E,EAAA+E,cAAC0L,GAAD,KACE3L,EAAA9E,EAAA+E,cAAC2L,GAAD,KAEE5L,EAAA9E,EAAA+E,cAAC4L,GAAD,KACE7L,EAAA9E,EAAA+E,cAAC6L,GAAD,KACE9L,EAAA9E,EAAA+E,cAAC8L,GAAD,KACE/L,EAAA9E,EAAA+E,cAAA,KAAGE,UAAU,WACVzD,EACDsD,EAAA9E,EAAA+E,cAAA,iBAASwL,GAA4C,SAKxDxO,KAAKsB,MAAMqF,QACZ5D,EAAA9E,EAAA+E,cAAC+L,GAAD,CAAQ1N,GAAG,WAAW4H,MAAM,MAAMC,OAAO,mBApFR8F,aAiG3CL,GAAoB3K,IAAOG,IAAV8K,MAIjBR,GAAqBzK,YAAO2K,GAAP3K,CAAHkL,MAKlBR,GAAoB1K,IAAOG,IAAVgL,MASjBN,GAAwB7K,IAAOG,IAAViL,MAerBN,GAAgB9K,IAAOG,IAAVkL,MA6BbT,IARc5K,IAAOsL,QAAVC,KACN,SAAArF,GAAK,OAAIA,EAAMpB,MAAN,GAAApI,OAAiBwJ,EAAMpB,MAAvB,eAA4C,QAOjC9E,IAAOa,QAAV2K,OAStBT,GAAS/K,IAAOyL,OAAVC,qqMCtJZlT,IAAOC,OAAO,MAGC,IAAIkT,KACJ,IAAIA,KAFnB,IA0BeC,GAhBQ,WAAM,IAEnBlJ,EAAiBnJ,cAAjBmJ,aAER,OACE3D,EAAA9E,EAAA+E,cAAAD,EAAA9E,EAAAwK,SAAA,KAEmC,SAA/B/B,EAAalG,cACbuC,EAAA9E,EAAA+E,cAAC6M,GAAD,CAAkBjT,MAAO8J,IAEzB3D,EAAA9E,EAAA+E,cAAC8M,GAAD,CAAoBlT,MAAO8J,MAS7BqJ,GAAqB,SAAApT,GAAe,IAAZC,EAAYD,EAAZC,MAAY2J,EAEChJ,cAAxBE,GAFuB8I,EAEhCZ,QAFgCY,EAEvB9I,SAASgJ,EAFcF,EAEdE,WAG1B,OACI1D,EAAA9E,EAAA+E,cAACgN,GAAD,KAEEjN,EAAA9E,EAAA+E,cAACiN,GAAD,KACElN,EAAA9E,EAAA+E,cAACkN,GAAD,KACEnN,EAAA9E,EAAA+E,cAACmN,EAAA,EAAD,CAAYjN,UAAU,iBAAiBwG,KAAM,GAAI0G,KAAMxT,EAAM+B,SAASA,UAAY,QAClFoE,EAAA9E,EAAA+E,cAACqN,GAAD,KACEtN,EAAA9E,EAAA+E,cAACsN,GAAD,CAAMpN,UAAU,UAAUqN,GAAS9S,IACnCsF,EAAA9E,EAAA+E,cAACwN,GAAD,CAAUtN,UAAU,UACjBtG,EAAM+B,SAASA,WAGpBoE,EAAA9E,EAAA+E,cAACyN,GAAD,KACI1N,EAAA9E,EAAA+E,cAACsN,GAAD,CAAMpN,UAAU,WAAhB,IAA4BtG,EAAMyE,IAClC0B,EAAA9E,EAAA+E,cAAC0N,GAAD,CAAUxN,UAAU,WAAW1G,IAAOI,EAAMwO,YAAYhM,OAAO,SAIrE2D,EAAA9E,EAAA+E,cAAC2N,GAAD,CAAerP,MAAO1E,EAAM0E,OAC1ByB,EAAA9E,EAAA+E,cAAC4N,EAAD,CACEhU,MAAOA,EACPC,MAAK,GAAA6D,OAAKvB,GAASvC,IACnBE,YAAa,kBAAIiG,EAAA9E,EAAA+E,cAAC6N,GAAD,CAASjU,MAAOA,QAIrCmG,EAAA9E,EAAA+E,cAAC8N,GAAD,CAAe5N,UAAS,UACpBH,EAAA9E,EAAA+E,cAAC+N,GAAD,MAEc,aAAZtT,GACAsF,EAAA9E,EAAA+E,cAACgO,GAAD,CACEvR,cAAe7C,EAAM6C,cACrB+O,oBAAqB/H,EAAW7J,EAAM+B,SAASA,UAAUc,kBAOnEsD,EAAA9E,EAAA+E,cAAC+I,GAAD,CAAanP,MAAOA,MAoCtBqU,GAAmB,SAAAnT,GAAe,IAAZlB,EAAYkB,EAAZlB,MAAYG,EAERC,oBAAS,GAFDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE9BmU,EAF8BjU,EAAA,GAEtBkU,EAFsBlU,EAAA,GAAA2J,EAGR5J,oBAAS,GAHD6J,EAAA3J,OAAAC,EAAA,EAAAD,CAAA0J,EAAA,GAG9BvB,EAH8BwB,EAAA,GAGtBvB,EAHsBuB,EAAA,GAAAuK,EAIT7T,cAArBoI,EAJ8ByL,EAI9BzL,QAASlI,EAJqB2T,EAIrB3T,QAkBX4T,EAAY,eAAAlR,EAAAjD,OAAAa,EAAA,EAAAb,CAAAc,EAAAC,EAAAC,KAAG,SAAAC,EAAMmT,GAAN,IAAAC,EAAAC,EAAA,OAAAxT,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACf8S,EAAEG,OAAOC,OAASJ,EAAEG,OAAOC,MAAM9O,OAAS,GAD3B,CAAAtE,EAAAE,KAAA,YAEjB2S,GAAU,GACoB,cAA3BG,EAAEG,OAAOC,MAAM,GAAG5Q,MAAmD,eAA3BwQ,EAAEG,OAAOC,MAAM,GAAG5Q,KAH9C,CAAAxC,EAAAE,KAAA,eAAAF,EAAAI,OAAA,SAG4EiT,MAAM,yBAHlF,cAIJL,EAAEG,OAAOC,MAAM,GAJXpT,EAAAE,KAAA,EAKEoT,yBAAeN,EAAEG,OAAOC,MAAM,GAAI,KALpC,cAKXH,EALWjT,EAAAS,KAAAT,EAAAE,KAAA,GAOUqT,mBAASN,GAPnB,QAOXC,EAPWlT,EAAAS,KAQjBuG,EAAUkM,GACV7L,EAAQG,cAAa,GATJ,yBAAAxH,EAAAuB,SAAA1B,MAAH,gBAAA2B,GAAA,OAAAK,EAAAJ,MAAAC,KAAAC,YAAA,GAgBlB,OACI8C,EAAA9E,EAAA+E,cAACgN,GAAD,KAGEjN,EAAA9E,EAAA+E,cAACiN,GAAD,CAAgB6B,WAlCL,SAAAC,GACdA,EAAMC,iBACFd,GACFC,GAAWD,KAiCLA,IAAW7L,GAA2B,YAAhBzI,EAAM0E,OAAwByB,EAAA9E,EAAA+E,cAACiP,GAAD,CAAmBC,UA7BhE,SAAAH,GAChBA,EAAMC,iBACHd,GACDC,GAAWD,IA0ByFG,aAAcA,IAC7GhM,GAA0B,YAAhBzI,EAAM0E,OAAuByB,EAAA9E,EAAA+E,cAAC2E,GAAD,CAAuBpC,SAAU3I,EAAMyE,GAAIgE,OAAQA,EAAQC,UAAWA,IAG9GvC,EAAA9E,EAAA+E,cAACkN,GAAD,KACEnN,EAAA9E,EAAA+E,cAACmN,EAAA,EAAD,CAAYjN,UAAU,iBAAiBwG,KAAM,GAAI0G,KAAMxT,EAAM+B,SAASA,UAAY,QAClFoE,EAAA9E,EAAA+E,cAACqN,GAAD,KACEtN,EAAA9E,EAAA+E,cAACsN,GAAD,CAAMpN,UAAU,UAAUqN,GAAS9S,IACnCsF,EAAA9E,EAAA+E,cAACwN,GAAD,CAAUtN,UAAU,UACjBtG,EAAM+B,SAASA,WAGpBoE,EAAA9E,EAAA+E,cAACyN,GAAD,KACI1N,EAAA9E,EAAA+E,cAACsN,GAAD,CAAMpN,UAAU,WAAhB,IAA4BtG,EAAMyE,IAClC0B,EAAA9E,EAAA+E,cAAC0N,GAAD,CAAUxN,UAAU,WAAW1G,IAAOI,EAAMwO,YAAYhM,OAAO,SAIrE2D,EAAA9E,EAAA+E,cAAC2N,GAAD,CAAerP,MAAO1E,EAAM0E,OAC1ByB,EAAA9E,EAAA+E,cAAC4N,EAAD,CACEhU,MAAOA,EACPC,MAAK,GAAA6D,OAAKvB,GAASvC,IACnBE,YAAa,kBAAIiG,EAAA9E,EAAA+E,cAAC6N,GAAD,CAASjU,MAAOA,QAIrCmG,EAAA9E,EAAA+E,cAAC8N,GAAD,KACI/N,EAAA9E,EAAA+E,cAAC+N,GAAD,CACE1L,OAAQA,EACRgM,aAAcA,EACd/L,UAAWA,MAQnBvC,EAAA9E,EAAA+E,cAAC+I,GAAD,CAAanP,MAAOA,MAStBuV,GAAoB,SAAAhQ,GAAiC,IAA9B+P,EAA8B/P,EAA9B+P,UAAWb,EAAmBlP,EAAnBkP,aAEtC,OACEtO,EAAA9E,EAAA+E,cAACoP,GAAD,KACErP,EAAA9E,EAAA+E,cAAA,SAAO3B,GAAG,cAAcP,KAAK,OAAOuR,OAAO,uBAAuBC,SAAUjB,EAAckB,YAAaL,IACvGnP,EAAA9E,EAAA+E,cAAC+N,GAAD,CAAiByB,UAAQ,EAAC3V,MAAM,qDAUhC4V,GAAkB,SAAAhL,GAA+C,IAA5C+K,EAA4C/K,EAA5C+K,SAAU3V,EAAkC4K,EAAlC5K,MAAOwU,EAA2B5J,EAA3B4J,aAAchM,EAAaoC,EAAbpC,OAEhDqB,EAAiBnJ,cAAjBmJ,aAGR,OACE3D,EAAA9E,EAAA+E,cAAC0P,GAAD,CAAiBxP,UAAS,GAAAxC,OAAK2E,GAAiC,cAAvBqB,EAAapF,MAAwB,SAAW,WAEnF+D,GAAiC,cAAvBqB,EAAapF,MAqBzByB,EAAA9E,EAAA+E,cAAC2P,EAAA,SAAD,KACE5P,EAAA9E,EAAA+E,cAAC4P,GAAD,CAAc1P,UAAU,+BACtBH,EAAA9E,EAAA+E,cAAC6P,GAAD,CAAkB3P,UAAU,gBAA5B,uBACAH,EAAA9E,EAAA+E,cAAA,YAEFD,EAAA9E,EAAA+E,cAAC8P,GAAD,CAAcxM,QAASjB,KAzBzBtC,EAAA9E,EAAA+E,cAAC2P,EAAA,SAAD,KACI5P,EAAA9E,EAAA+E,cAAC+P,EAAA,EAAD,CAAiBrJ,KAAM,GAAIZ,MAAM,SACjC/F,EAAA9E,EAAA+E,cAACgQ,GAAD,CAAY9P,UAAU,UAAUrG,GAAS,0CAEtC2V,GACDzP,EAAA9E,EAAA+E,cAAC2P,EAAA,SAAD,KACE5P,EAAA9E,EAAA+E,cAAC4P,GAAD,KACE7P,EAAA9E,EAAA+E,cAAC6P,GAAD,CAAkB3P,UAAU,UAA5B,2BACAH,EAAA9E,EAAA+E,cAAA,YAGFD,EAAA9E,EAAA+E,cAACiQ,GAAD,KACElQ,EAAA9E,EAAA+E,cAAA,SAAO3B,GAAG,cAAcP,KAAK,OAAOuR,OAAO,uBAAuBC,SAAUjB,IAC5EtO,EAAA9E,EAAA+E,cAACsN,GAAD,CAAM4C,MAAO,CAACpK,MAAM,SAAU5F,UAAU,UAAxC,0BAqCZqN,GAAW,SAAC9S,GAChB,MAAmB,aAAZA,EAAyB,WAAa,UAGzC0V,GAAU,SAAAlL,GAAe,IAAZrL,EAAYqL,EAAZrL,MAEXwW,EAA2B,YAAhBxW,EAAM0E,MAAsB,UAAY,UACnD+R,EAA6B,YAAhBzW,EAAM0E,MAAsBgS,IAAuC,cAAhB1W,EAAM0E,OAA0B,kBAAKyB,EAAA9E,EAAA+E,cAAC4F,EAAA,EAAD,CAAcjC,OAAQ,EAAGmC,MAAOsK,EAAUvK,QAAQ,YAE7J,OACE9F,EAAA9E,EAAA+E,cAACuQ,GAAD,KACExQ,EAAA9E,EAAA+E,cAACqQ,EAAD,CAAY3J,KAAM,GAAIZ,MAAOsK,MAK7BjU,GAAW,SAAAqU,GAA4B,IAA1BlS,EAA0BkS,EAA1BlS,MAAOd,EAAmBgT,EAAnBhT,cACxB,OAAQA,GACN,IAAK,OACH,MAAiB,YAAVc,EAAsB,YAAyB,cAAVA,GAA2C,SAAlBd,EAA4B,gBAAkB,iCACrH,IAAK,SACH,MAAiB,YAAVc,EAAsB,YAAc,iCAyB3C+H,GAAgBrF,IAAOG,IAAVsP,MAQbrB,GAAoBpO,IAAOa,QAAV6O,KASnB,IAyDS3P,IA/CQC,IAAOG,IAAVwP,MAuBN3P,IAAO4P,IAAVC,MAMW7P,IAAOS,KAAVqP,KAQJ,SAAA5J,GAAK,OAAIA,EAAM6J,YAUR/P,IAAOC,EAAV+P,OAyBXf,IArBejP,YAAOD,GAAPC,CAAHiQ,MAUSjQ,IAAOG,IAAV+P,MAWTlQ,IAAOG,IAAVgQ,OAeNtB,GAAmB7O,YAAOD,GAAPC,CAAHoQ,MAiBhBxB,GAAe5O,IAAOG,IAAVkQ,MA+BZrB,GAAahP,YAAOD,GAAPC,CAAHsQ,MAKV5B,GAAkB1O,IAAOa,QAAV0P,MAoBRC,GAAUxQ,IAAOG,IAAVsQ,MAGdC,GAAgB1Q,YAAOwQ,GAAPxQ,CAAH2Q,MAYblE,GAAmBzM,IAAOG,IAAVyQ,KAGlB7Q,IAME2M,GAAW1M,YAAOD,GAAPC,CAAH6Q,MAMR1R,GAAiBa,IAAOG,IAAV2Q,KAKhB/Q,IAKEyM,GAAWxM,YAAOD,GAAPC,CAAH+Q,MAeRpR,IAVOK,IAAOS,KAAVuQ,KAMN,IAIkBhR,YAAOwQ,GAAPxQ,CAAHiR,KASD,SAAA/K,GAAK,MAAoB,YAAhBA,EAAM5I,MAAsB,UAAY,WAG7D,SAAA4I,GAAK,MAAoB,cAAhBA,EAAM5I,OAAyBsD,OAOxCsL,GAAalM,YAAOwQ,GAAPxQ,CAAHkR,MA+BVjF,IAbYjM,IAAOa,QAAVsQ,MAaQnR,IAAOG,IAAViR,OAQdpF,GAA0BhM,IAAOa,QAAVwQ,KAezBpF,8jKCjoBJzT,IAAOC,OAAO,MAqCC6Y,UAlCS,WAAM,IAAAhY,EAEeC,cAAnCoI,EAFoBrI,EAEpBqI,QAAS4P,EAFWjY,EAEXiY,QAAS7O,EAFEpJ,EAEFoJ,aACjB8O,EAAoBC,cAApBD,gBAEHE,EAAS,SAACpE,GACXA,EAAEG,OAAOkE,QAAQC,cAClBjQ,EAAQG,cAAa,GACrBH,EAAQkQ,YAAY,MACpBN,EAAQO,WAIZ,OACE/S,EAAA9E,EAAA+E,cAAC+S,EAAA,EAAD,CAAkBC,SAAUN,GAExBF,GACAzS,EAAA9E,EAAA+E,cAACiT,GAAA,EAAD,CAAa1M,QAASmM,GACpB3S,EAAA9E,EAAA+E,cAAA,KAAGE,UAAU,kBAKQ,aAAvBwD,EAAapF,OAA+C,aAAvBoF,EAAapF,OAA+C,aAAvBoF,EAAapF,MACvFyB,EAAA9E,EAAA+E,cAACkT,GAAD,MAEAnT,EAAA9E,EAAA+E,cAACmT,GAAD,QA1BR,IAqCahX,GAAW,SAAAmC,GACtB,MAAiB,aAAVA,EAAuB,WACpB,cAAVA,EAAwB,aACd,YAAVA,EAAsB,YACZ,aAAVA,EAAuB,YAAc,aAGjC8U,GAAc,WAEFC,cAAhB,IAFwB9P,EAG6ChJ,cAA7DE,EAHgB8I,EAGhB9I,QAAqBiJ,GAHLH,EAGPE,WAHOF,EAGKG,cAHLH,EAGmBC,aAHnBD,EAGiCgP,QAGzD,IAAI7O,EAAc,OAAO,KAND,IAUhBpF,EAAUoF,EAAVpF,MACFgV,EAAwB,aAAZ7Y,EAAyB,WACjB,cAAZA,EAA0B,SACd,UAAZA,GAAuB,cAE/B8Y,EAAsB,aAAVjV,EAAuB,WAAuB,cAAVA,EAAwB,aAAyB,YAAVA,EAAsB,YAAwB,aAAVA,EAAuB,YAAc,YAChKkV,EAAuB,aAAVlV,EAAuB,UAAsB,cAAVA,EAAwB,UAAsB,YAAVA,EAAsB,UAAY,MAG1H,OACIyB,EAAA9E,EAAA+E,cAACyT,GAAD,CAAQvT,UAAU,WAGhBH,EAAA9E,EAAA+E,cAAC0T,GAAD,CAAYpV,MAAOoF,EAAapF,OAE9ByB,EAAA9E,EAAA+E,cAAC2T,GAAD,KACE5T,EAAA9E,EAAA+E,cAAC4T,GAAD,CAAW1T,UAAS,MAAAxC,OAAQjD,KAC5BsF,EAAA9E,EAAA+E,cAACmN,EAAA,EAAD,CAAYjN,UAAU,iBAAiBwG,KAAM,GAAI0G,KAAM1J,EAAa/H,UAAY+H,EAAa/H,SAASA,UAAY,QAClHoE,EAAA9E,EAAA+E,cAAC6T,GAAD,CAAO3T,UAAU,UAAUoT,GAC3BvT,EAAA9E,EAAA+E,cAAC8T,GAAD,CAAW5T,UAAU,WAArB,eAA4C1G,IAAOkK,EAAa0E,YAAYhM,OAAO,QAGrF2D,EAAA9E,EAAA+E,cAAC+T,GAAD,KACIhU,EAAA9E,EAAA+E,cAACmN,EAAA,EAAD,CAAYzG,KAAM,GAAI0G,KAAgB,aAAV9O,EAAuB,YAAcA,EAAOwH,MAAO0N,IAC/EzT,EAAA9E,EAAA+E,cAAA,KAAGE,UAAU,SACXgQ,MAAO,CAACpK,MAAK,GAAApI,OAAI8V,KAEdD,IAITxT,EAAA9E,EAAA+E,cAACgU,GAAD,KACEjU,EAAA9E,EAAA+E,cAACiU,GAAD,QAKJlU,EAAA9E,EAAA+E,cAAC4N,EAAD,CAAiBhU,MAAO8J,EAAc7J,MAAK,eAAA6D,OAAiB4V,KAE5DvT,EAAA9E,EAAA+E,cAACkU,GAAD,CACEV,WAAYA,MAUhB9B,GAAgB,SAAA/X,GAAoB,IAAjB6Z,EAAiB7Z,EAAjB6Z,WAAiBpF,EAEM7T,cAAtCmJ,EAFgC0K,EAEhC1K,aAAcjJ,EAFkB2T,EAElB3T,QAASgJ,EAFS2K,EAET3K,WAFS/I,EAGrBC,YAAkB+I,EAAarH,QAAUqH,EAAa1H,OAAQ0H,EAAa/H,UAAtFU,EAHgCnC,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,MAIlCyZ,EAAyB,UAAZ1Z,GAA8C,aAAvBiJ,EAAapF,MAAwB,mBAA4C,aAAvBoF,EAAapF,MAAuB,oBAAsB,uBACxJ3C,EAAuB,UAAZlB,EAAsBgJ,EAAWC,EAAazH,gBAAgBN,UAAY8H,EAAWC,EAAa/H,SAASA,UACtHyY,EAA6B,cAAZ3Z,GAA0D,SAA/BiJ,EAAalG,cAE/D,OACEuC,EAAA9E,EAAA+E,cAACqU,GAAD,KACEtU,EAAA9E,EAAA+E,cAACsU,GAAD,KACEvU,EAAA9E,EAAA+E,cAAA,WACc,UAAZvF,GAAuBsF,EAAA9E,EAAA+E,cAAA,KAAGE,UAAU,UAAb,wBAE3BH,EAAA9E,EAAA+E,cAACuU,GAAD,KAEiB,UAAZ9Z,GAAuB2Z,EACxBrU,EAAA9E,EAAA+E,cAAA,YAEAD,EAAA9E,EAAA+E,cAAC8P,GAAD,MAEF/P,EAAA9E,EAAA+E,cAACwU,GAAD,CAAa1O,MAAO0N,EAAYtT,UAAS,GAAAxC,OAAKgG,EAAapF,QACzDyB,EAAA9E,EAAA+E,cAAA,KAAGE,UAAU,gBAAgBiU,GAC7BpU,EAAA9E,EAAA+E,cAAA,KAAGE,UAAU,kBACqB,SAA/BwD,EAAalG,eAA4B,KAAMnB,EADlD,IAC2DV,GAAYoE,EAAA9E,EAAA+E,cAAA,QAAME,UAAU,UAAUvE,EAAS8Y,WAiB9GD,GAAcxT,IAAOG,IAAVuT,KAaJ,SAAAxN,GAAK,OAAIA,EAAMpB,QAqBtB7F,GAAYe,IAAOG,IAAVwT,MAQTL,GAActT,IAAOG,IAAVyT,MAqBXP,GAAyBrT,IAAOa,QAAVgT,MAStB1U,GAAiBa,IAAOG,IAAV2T,MAiBdhB,GAAY9S,IAAOC,EAAV8T,MAWTC,GAAOhU,IAAOiU,EAAVC,MAEJtB,GAAY5S,YAAOgU,GAAPhU,CAAHmU,MA0BTlB,GAAiBjT,IAAOG,IAAViU,KASLC,KAMTrB,GAAqBhT,IAAOG,IAAVmU,MAUlBvB,GAAsB/S,IAAOG,IAAVoU,MAqBnBnV,GAAQY,IAAOwU,GAAVC,MASLvI,GAAalM,IAAOa,QAAV6T,KACA,SAAAxO,GAAK,OAAIA,EAAM5I,MAAQqX,IAAiBzO,EAAM5I,OAAS,SAS1DmV,GAASzS,IAAOG,IAAVyU,KAeIC,IACRA","file":"static/js/7.21100300.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { OnlySkeletonAnimation } from '../../../loaders/skeleton'\nimport UseTxState from '../../../../hooks/useTxState'\nimport { useFormatCurrency } from '../../../../hooks/useFormatCurrency'\nimport { getState } from './'\n\nimport moment from 'moment'\nimport 'moment/locale/es'\nmoment.locale('es')\n\n\n\nconst DetailGenerator = ({order, title, TitleSuffix}) => {\n\n  const [ orders, setOrders ] = useState([])\n  const { deposit_providers, tx_path } = UseTxState()\n  const [ , formatCurrency ] = useFormatCurrency()\n\n  const formatOrderText = async(itemText) => {\n    // console.log(itemText)\n    switch (itemText[0]) {\n      case 'to_spend_currency':\n          return ['Moneda gastada:', itemText[1].currency]\n      case 'to_buy_currency':\n          return ['Moneda adquirida:', itemText[1].currency]\n      case 'currency':\n          return ['Divisa:', itemText[1].currency]\n      case 'spent':\n          return ['Cantidad gastada:', await formatCurrency(order.spent, order.to_spend_currency)]\n      case 'bought':\n          return ['Cantidad adquirida:', await formatCurrency(order.bought, order.to_buy_currency)]\n      case 'state':\n          return ['Estado:', getState(itemText[1])]\n      case 'price_percent':\n          return ['Comisión:', itemText[1]]\n      case 'id':\n          return ['Número de orden:', itemText[1]]\n      case 'created_at':\n          return ['Creado en:', moment(itemText[1]).format(\"LL\")]\n      case 'updated_at':\n          return ['Actualizado en:', moment(itemText[1]).format(\"LL\")]\n      case 'expiration_date':\n          return ['Expira en:', moment(itemText[1]).format(\"LL\")]\n      case 'amount':\n          return ['Cantidad:', await formatCurrency(order.amount, order.currency)]\n      case 'amount_neto':\n          return ['Cantidad neta:', await formatCurrency(order.amount_neto, order.currency)]\n      case 'confirmations':\n          return ['Confirmations:', order.confirmations]\n      case 'fee':\n          return ['Comisión:', order.fee]\n      case 'tax':\n          return ['Impuesto:', order.tax]\n      case 'cost':\n          return ['Costo:', order.cost]\n\n\n      case 'withdraw_provider':\n      case 'withdraw_account':\n      case 'metadata':\n      case 'withdraw_account_id':\n      case 'withdraw_provider_id':\n      case 'account_to':\n      case 'account_from':\n      case 'type':\n      case 'pair_id':\n      case 'taged':\n      case 'action_price':\n      case 'country':\n      case 'userId':\n      case 'user':\n      case 'cost_struct':\n      case 'fee_struct':\n      case 'info':\n      case 'tax_struct':\n      case 'account_id':\n      case 'locked':\n      case 'currency_type':\n      case 'cost_id':\n      case 'deposit_provider_id':\n      case 'type_order':\n      case 'activeTrade':\n      case 'paymentProof':\n      case 'withdraw_proof':\n      case 'requestedFundsOrigin':\n      case 'proof':\n      case 'sent':\n      case 'comment':\n          return\n      default:\n          return itemText\n    }\n  }\n\n  const inProcesOrder = async order => {\n\n    switch (order.currency_type) {\n      case 'fiat':\n      let depositProviderInfo = []\n      if(deposit_providers && deposit_providers[order.deposit_provider_id]){\n        const depositProvider = deposit_providers[order.deposit_provider_id]\n        depositProviderInfo = [\n          [\"Entidad de deposito:\", `${depositProvider.depositAccount.ui_name}`],\n          [`${depositProvider.depositAccount.account.type.ui_name}`, `${depositProvider.depositAccount.account.type.type}`],\n          [`${depositProvider.depositAccount.account.account_id.ui_name}`, `${depositProvider.depositAccount.account.account_id.account_id}`],\n          [`${depositProvider.depositAccount.account.bussines_name.ui_name}`, `${depositProvider.depositAccount.account.bussines_name.bussines_name}`],\n          [`${depositProvider.depositAccount.account.nit.ui_name}`, `${depositProvider.depositAccount.account.nit.nit}`]\n        ]\n      }\n      // console.log('deposit_providers', order)\n      const amount = await formatCurrency(order.amount, order.currency)\n      const amount_neto = await formatCurrency(order.amount_neto, order.currency)\n\n      setOrders([\n        ...depositProviderInfo,\n        [\"Comisión:\", `${order.fee_struct && `${order.fee_struct.percent}%`} ~ ${order.fee}`],\n        [\"Impuesto:\", `~ ${order.tax}`],\n        [\"Cantidad acreditada:\", `~ $${amount}`],\n        [\"Total a depositar:\", `~ $${amount_neto}`]\n      ])\n        break;\n      case 'crypto':\n      setOrders([\n        [\"Número de orden:\", order.id],\n        [\"Estado:\", getState(order.state)],\n        [\"Divisa:\", `${order.currency.currency}`],\n        [\"Orden creada en:\", moment(order.created_at).format(\"LL\")],\n        [\"Confirmaciones:\", order.confirmations],\n        [\"Cantidad acreditada:\", await formatCurrency(order.amount, order.currency)],\n        [\"Costo de operación:\", order.cost_id],\n        [\"Total deposito:\", await formatCurrency(order.amount_neto, order.currency)]\n      ])\n        break;\n      default:\n    }\n\n\n\n  }\n\n  useEffect(()=> {\n    // the order is converted to an array and formatted\n    if(!order){return}\n    const init = async() =>{\n      if((order.state === 'pending' || order.state === 'confirmed') && tx_path === 'deposits'){return await inProcesOrder(order)}\n      const transOrders = []\n      for (let orderItem of Object.entries(order)) {\n        const ui_items = await formatOrderText(orderItem)\n        // console.log(ui_items)\n        if(ui_items){\n          transOrders.push(ui_items)\n        }\n      }\n      setOrders(transOrders)\n    }\n    init()\n  }, [deposit_providers])\n\n  // console.log(order, orders)\n\n  return(\n    <Container className={`${title ? 'withTitle' : ''}`}>\n      {\n        title&&\n        <TitleContainer className={`${TitleSuffix ? 'titleSuffix' : ''} ${order.state}`}>\n          <Title className=\"fuente\">{title}</Title>\n          {TitleSuffix && <TitleSuffix/>}\n        </TitleContainer>\n      }\n      {\n        (orders && orders.length) ?\n        orders.map((item, indx) => {\n          return <ItemContainer key={indx} className={`${((orders.length === (indx + 1) && order.state) && tx_path === 'deposits') && order.state}`}>\n                    <LeftText className=\"fuente\">{item[0]}</LeftText>\n                    <MiddleSection/>\n                    <RightText className=\"fuente2\">{item[1]}</RightText>\n                 </ItemContainer>\n        })\n        :\n        new Array(10).fill('1').map((item, indx)=>{\n          return  <ItemContainer className=\"skeleton\" key={indx}>\n                    <LeftText>skeleton --</LeftText>\n                    <MiddleSection/>\n                    <RightText>skeleton -------- </RightText>\n                  </ItemContainer>\n        })\n      }\n    </Container>\n  )\n\n}\n\nexport default DetailGenerator\n\nconst Text = styled.p`\n  width: auto;\n  margin:0;\n  font-size: 14px;\n`\n\nconst TotalAmountContainer = styled.div`\n  width: 100%;\n  height: 50px;\n  margin-top: 10px;\n  border-top: 1px solid #bfbfbf;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst TitleContainer = styled.div`\n  display: flex;\n  &.titleSuffix{\n    justify-content: space-between;\n  }\n  &.pending p{\n    color:#ff8660;\n  }\n  &.confirmed p{\n    color:#1cb179;\n  }\n`\n\nconst Title = styled(Text)`\n  font-size: 17px;\n  font-weight: bold;\n`\nconst RightText = styled(Text)`\n  text-align: right;\n  padding-left: 15px;\n  text-transform: capitalize;\n  white-space: nowrap;\n  max-width: 350px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\nconst LeftText = styled(Text)`\n  text-align: left;\n  padding-right: 15px;\n  font-weight: bold;\n`\nconst MiddleSection = styled.span`\n  border-bottom: 1px dotted;\n  opacity: .15;\n`\n\nconst ItemContainer = styled.div`\n  width: 100%;\n  height: 20px;\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n\n  &.skeleton{\n    ${OnlySkeletonAnimation}\n    ${RightText}, ${LeftText}{\n      background: gray;\n      height: 16px;\n      border-radius: 3px;\n      opacity: .5;\n    }\n  }\n\n  &.pending, &.confirmed{\n    height: 50px;\n    margin-top: 10px;\n    border-top: 1px solid #bfbfbf;\n    align-items: center;\n    ${RightText}, ${LeftText}{\n      font-size: 18px;\n      color: #383838;\n    }\n    ${RightText}{\n      font-size: 20px;\n      font-weight: bold;\n    }\n  }\n\n`\n\n\n\n\nconst Container = styled.section`\n  width: calc(100% - 70px);\n  height: calc(100% - 50px);\n  display: grid;\n  grid-template-rows: repeat(auto-fill, 20px);\n  row-gap:7px;\n  padding: 25px 35px;\n\n  &.withTitle{\n    height: calc(100% - 95px);\n    padding-top: 70px;\n    grid-template-rows: 70px repeat(auto-fill,20px);\n  }\n\n\n  ${Text}, ${MiddleSection}{\n    color: gray;\n  }\n\n`\n\n\n\n\n\n\n\n\n\n\n\n//\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport CropImg from '../../../cropimg'\nimport UseTxState from '../../../../hooks/useTxState'\nimport QRCode from 'qrcode'\nimport SimpleLoader from '../../../loaders'\nimport { MdContentCopy } from \"react-icons/md\";\nimport { BsUpload } from \"react-icons/bs\";\nimport { copy } from '../../../../../utils'\n\n\nconst PaymentProofComponent = ({ imgSrc, setImgSrc, order_id }) => {\n\n  const [ activeSection, setActiveSection ] = useState(true)\n  const { coinsendaServices, actions } = UseTxState()\n\n  const subirImg = async({base64}) => {\n    setImgSrc(base64)\n    setActiveSection(null)\n    actions.isAppLoading(true)\n    let confirmation = await coinsendaServices.confirmDepositOrder(order_id, base64)\n    if(!confirmation){\n      actions.isAppLoading(false)\n      actions.mensaje('El deposito No se ha confirmado', 'error')\n      setImgSrc(null)\n    }\n  }\n\n  const cancelarSubidaImg = () => {\n    setActiveSection(null)\n    setImgSrc(null)\n  }\n\n  return(\n    <OverflowContainer>\n      <Container className={`${activeSection ? 'activated' : ''}`}>\n          <CropImg\n            imageSrc={imgSrc}\n            subirImg={subirImg}\n            cancelarSubidaImg={cancelarSubidaImg}\n          />\n      </Container>\n    </OverflowContainer>\n  )\n\n}\n\n\nconst CropEdit = styled.div`\n  width: 100%;\n  height: 50px;\n  background: #f5f5f5;\n  border-radius: 4px;\n  box-shadow: 0px 0px 5px 3px rgba(0,0,0,0.1);\n`\n\nconst ImgContainer = styled.div`\n  width: 100%;\n  max-width: 550px;\n  background: rgba(255, 255, 255, .4);\n  border-radius: 6px;\n`\n\nconst OverflowContainer = styled.section`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  z-index: 3;\n  display: grid;\n  overflow: hidden;\n`\n\nconst Container = styled.div`\n\n  padding: 50px;\n  background: #232c35;\n  transition: .3s;\n  transform: translateX(100%);\n  display: grid;\n  grid-template-rows: 1fr;\n  row-gap:20px;\n  justify-items:center;\n\n  .App{\n    height: 100% !important;\n    width: 100%;\n  }\n\n  .ImgCropcontrols{\n    background: transparent !important;\n  }\n\n  &.activated{\n    animation-name: activated;\n    animation-duration: .8s;\n    animation-fill-mode: forwards;\n  }\n\n  @keyframes activated{\n    0%{\n      transform: translateX(100%);\n    }\n    50%{\n      transform: translateX(100%);\n    }\n    100%{\n      transform: translateX(0%);\n    }\n  }\n`\n\nexport default PaymentProofComponent\n\n\n\n\n\n\n\n\n\n\n\n\nexport const PaymentProof = ({ payload }) => {\n  // console.log('PaymentProof', payload)\n  const { primary_path, coinsendaServices, actions, currencies, currentOrder, loader, tx_path } = UseTxState()\n  const [ imgProof, setImgProof ] = useState(payload)\n  const [ txId, setTxId ] = useState()\n  const [ urlExplorer, setUrlExplorer ] = useState()\n\n  const getPaymentProof = async(currentOrder) =>{\n    // alert('getpayment')\n    if(currentOrder.paymentProof){\n      // alert('tiene pp')\n      const { proof_of_payment } = currentOrder.paymentProof\n      // console.log(`${currencies[currentOrder.currency.currency].node_url}tx/${proof_of_payment.proof}`)\n      setImgProof(currentOrder.currency_type === 'fiat' ? `data:image/png;base64, ${proof_of_payment.raw}` : await QRCode.toDataURL(`${currencies[currentOrder.currency.currency].node_url}tx/${proof_of_payment.proof}`))\n      if(currentOrder.currency_type === 'crypto'){\n        setTxId(proof_of_payment.proof)\n        setUrlExplorer(`${currencies[currentOrder.currency.currency].node_url}tx/${proof_of_payment.proof}`)\n      }\n    }else if(currentOrder.proof){\n      setImgProof(await QRCode.toDataURL(`${currencies[currentOrder.currency.currency].node_url}tx/${currentOrder.proof}`))\n      setTxId(currentOrder.proof)\n      setUrlExplorer(`${currencies[currentOrder.currency.currency].node_url}tx/${currentOrder.proof}`)\n    }\n  }\n\n  useEffect(()=>{\n\n    if(!currentOrder.paymentProof && currentOrder.state !== 'pending' && tx_path === 'deposits'){\n      const getData = async() => {\n        const PP = await coinsendaServices.getDepositById(currentOrder.id)\n        if(!PP){return}\n        const { proof_of_payment } = PP.paymentProof\n\n        let updateOrder = {\n          [PP.id]:{...PP}\n        }\n        actions.update_item_state(updateOrder, 'deposits')\n        getPaymentProof(PP)\n      }\n      getData()\n    }else{\n      getPaymentProof(currentOrder)\n    }\n  }, [])\n\n  useEffect(()=>{\n    if(imgProof !== payload){\n      setImgProof(payload)\n    }\n  }, [payload])\n\n\n  const openBlockchain = () => {\n    window.open(\n      urlExplorer,\n      '_blank'\n    );\n  }\n\n  // console.log('Payment Proof ==> ', currentOrder.currency_type)\n  return (\n    <>\n    <PaymentProofContainer className={`${currentOrder.currency_type} ${currentOrder.state}`}>\n\n      {\n        (!imgProof || loader) &&\n        <LoaderContainer >\n          <SimpleLoader loader={2} justify=\"center\" color=\"#206f65\"/>\n        </LoaderContainer>\n      }\n\n      {\n        imgProof &&\n        <ProofContainer>\n          <img src={imgProof} width=\"auto\" height=\"90%\" alt=\"\"/>\n          {\n            currentOrder.currency_type === 'crypto' &&\n            <HoverProof>\n              <IconContainer className=\"tooltip\" data-copy={txId} onClick={copy}>\n                <MdContentCopy size={16}/>\n                <span className=\"tooltiptext fuente\">Copiar</span>\n              </IconContainer>\n\n              <IconContainer className=\"tooltip\" onClick={openBlockchain}>\n                <BsUpload size={20}/>\n                <span className=\"tooltiptext fuente\">Ver en Blockchain</span>\n              </IconContainer>\n            </HoverProof>\n          }\n        </ProofContainer>\n      }\n\n    </PaymentProofContainer>\n    {\n      imgProof &&\n      <FiatPaymentProofZoom state={currentOrder.state}>\n        <ProofCont>\n          <img src={imgProof} width=\"100%\" alt=\"\"/>\n        </ProofCont>\n      </FiatPaymentProofZoom>\n    }\n  </>\n  )\n\n}\n\n\nconst ProofCont = styled.div`\n  width: 90%;\n  height: 90%;\n  justify-self: center;\n  align-self: center;\n  display: grid;\n  align-items: center;\n  overflow: hidden;\n  img{\n    border-radius: 4px;\n  }\n`\n\nconst FiatPaymentProofZoom = styled.div`\n  position: absolute;\n  width: calc(100% - 20px);\n  height: ${props => props.state === 'confirmed' ? 'calc(100% - 230px)' : 'calc(100% - 170px)' };\n  background: #eeeeee;\n  top: 10px;\n  justify-self: center;\n  border-radius: 3px;\n  display: none;\n`\n\n\n\nconst PaymentProofContainer = styled.div`\n  width: 100%;\n  height: 80%;\n  border-radius: 4px;\n  align-self: center;\n  display: grid;\n  align-items: center;\n  justify-items:center;\n  max-height: 100px;\n  max-width: 110px;\n  position: relative;\n  justify-self:start;\n\n  img{\n    border-radius: 3px;\n    max-width: 100px;\n    min-width: 90%;\n  }\n  &.accepted, &.confirmed{\n    background: #206f65;\n  }\n  &.rejected, &.canceled{\n    background: gray;\n    opacity: .5;\n  }\n\n  &.fiat.accepted:hover ~ ${FiatPaymentProofZoom}, &.fiat.confirmed:hover ~ ${FiatPaymentProofZoom}{\n    display: grid;\n  }\n\n  &.fiat{\n    cursor: pointer;\n  }\n`\n\n\n\n  const LoaderContainer = styled.div`\n    width: 90%;\n    height: 90%;\n    background: white;\n    opacity: .6;\n    border-radius: 3px;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n    position: absolute;\n    justify-self:center;\n    align-self: center;\n    z-index: 1;\n  `\n\n\n  const ProofContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    position: relative;\n    display: grid;\n    align-items: center;\n    justify-items:center;\n\n    :hover ${HoverProof}{\n      opacity: 1;\n    }\n\n  `\n\n\n  const HoverProof = styled.div`\n    position: absolute;\n    height: 100%;\n    width: calc(100% - 20px);\n    top: 0;\n    transition: .15s !important;\n    align-items: baseline;\n    display: grid;\n    padding: 0 10px;\n    justify-items:center;\n    grid-template-columns: repeat(2, 1fr);\n    transform: translateX(100%);\n  `\n\n\n  const IconContainer = styled.div`\n    cursor: pointer;\n    width: 30px;\n    height: 30px;\n    border-radius: 3px;\n    border:1px solid gray;\n    display: grid !important;\n    align-items: center;\n    justify-items:center;\n    position: relative;\n    align-self: flex-start;\n\n    ::after{\n      content: '';\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      left:0;\n      top:0;\n    }\n\n    .tooltiptext{\n      padding-left: 4px !important;\n      padding-right: 4px !important;\n      width: auto !important;\n      min-width: 60px !important;\n    }\n\n    i, svg{\n      color: gray;\n    }\n\n    :hover{\n      i, svg{\n        color: #0c96fa;\n      }\n    }\n  `\n","import React, { useEffect, useState } from 'react'\nimport UseTxState from '../../../../hooks/useTxState'\nimport api, { orderStatus } from './rest.json'\nimport { OnlySkeletonAnimation } from '../../../loaders/skeleton'\nimport styled from 'styled-components'\n\nimport moment from 'moment'\nimport 'moment/locale/es'\nmoment.locale('es')\n\n\n\nconst OrderStatus = ({ order }) => {\n\n  const [ orderState, setOrderState ] = useState()\n  const { currentOrder, tx_path } = UseTxState()\n\n  const skeletons = new Array(4).fill([\"created\"])\n\n   useEffect(()=>{\n\n     let orders = {}\n     for (let prop in api[tx_path]) {\n       orders = {\n         ...orders,\n         [prop]:{\n           ...api[tx_path][prop],\n           completed:currentOrder.state === prop\n         }\n       }\n     }\n     // console.log(orders, api[tx_path])\n     setOrderState(Object.entries(orders))\n   }, [currentOrder.state])\n\n   // console.log('|||||||||||||||| OrderSupervisor ::', order)\n\n\n  return(\n    <OrderStatusContainer>\n      <TopSectionStatus >\n        <Text className=\"fuente\">{orderStatus[tx_path][order.state][order.currency_type].title}</Text>\n        <SubTitle className=\"fuente\">{orderStatus[tx_path][order.state][order.currency_type].description}</SubTitle>\n      </TopSectionStatus>\n      <StatusContainer>\n        {\n          orderState ? orderState.map((state, index) => {\n            return <StatusItem\n              state={state}\n              order={currentOrder}\n              key={index}\n              active={state[1].completed}\n              className={`\n                ${orderState.length === (index + 1) ? 'statusStep finalStep' : 'statusStep'}\n                ${state[1].completed ? 'activeStep' : ''}\n                `} />\n          })\n          :\n          skeletons.map((state, index)=>{\n            return <StatusItem\n              state={state}\n              key={index}\n              className={`${skeletons.length === (index + 1) ? 'statusStep finalStep' : 'statusStep'} skeleton`}\n              skeleton\n            />\n          })\n        }\n      </StatusContainer>\n    </OrderStatusContainer>\n  )\n}\n\nconst StatusItem = ({ className, state, order, active, skeleton }) => {\n\n  const activated = active && active.toString()\n  // console.log((state[0] === \"confirmed\" && (order.state === 'pending' || order.state === 'confirmed')), state )\n\n  return(\n    <Status className={`status ${className}`}>\n      <Indicator className={className}/>\n      <Description>\n        {\n          skeleton ?\n          <Skeleton/>\n          :\n          <>\n          <StatusTitle className=\"fuente\" active={activated}>{state[1].ui_text[order.currency_type] || state[1].ui_text}</StatusTitle>\n          <DateStatusText className=\"fuente2\" active={activated}>\n            {\n              active && order.state === 'pending' ? 'Pendiente' :\n              active ? 'En proceso...' :\n              state[0] === \"created\" ? moment(order.created_at).format(\"LL\") :\n              state[0] === \"pending\" ? moment(order.updated_at).format(\"LL\") :\n              (state[0] === \"confirmed\" && order.state === 'confirmed') ? moment(order.updated_at).format(\"LL\") : ''\n            }\n          </DateStatusText>\n        </>\n        }\n      </Description>\n    </Status>\n  )\n\n}\n\n\nexport default OrderStatus\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const Text = styled.p`\n  margin: 0;\n`\n\nconst OrderStatusContainer = styled.div`\n  background: #f5f5f5;\n  box-shadow: 0px 0px 5px 3px rgba(0,0,0,0.05);\n  display: grid;\n  grid-template-rows: auto 1fr;\n  row-gap:25px;\n  padding: 30px 40px;\n`\nconst TopSectionStatus = styled.div`\n  display: grid;\n  row-gap:10px;\n  height: auto;\n`\n\nconst SubTitle = styled(Text)`\n  font-size: 13px;\n  color: gray;\n`\n\n\n\nconst StatusContainer = styled.div`\n  padding: 45px 0;\n  display: grid;\n  grid-template-rows: repeat(auto-fill, 70px);\n  row-gap:10px;\n`\n\n\n\nconst Status = styled.div`\n  height: 70px;\n  padding: 0 20px;\n  display: grid;\n  align-items: center;\n  grid-template-columns: 20px 1fr;\n\n\n  &.activeStep ~ .status .statusStep{\n    background: #dadada;\n    ::after{\n      background: #dadada;\n    }\n  }\n\n  &.activeStep .statusStep{\n    ::after{\n      background: #dadada;\n    }\n  }\n`\n\n\n\n\nconst Indicator = styled.div`\n  justify-self:center;\n  width: 14px;\n  height: 14px;\n  background: #0198FF;\n  border-radius: 50%;\n  position: relative;\n  z-index:2;\n  display: grid;\n  align-items: center;\n  justify-items:center;\n  border: 2px solid #f5f5f5;\n\n\n\n  &.activeStep{\n    width: 14px;\n    height: 14px;\n    border: 2px solid #0198FF;\n    background: transparent !important;\n    position: relative;\n    ::after{\n      top: 16px !important;\n    }\n    ::before{\n      content:'';\n      width: 6px;\n      height: 6px;\n      background: #0198FF;\n      border-radius: 50%;\n    }\n  }\n\n  &.statusStep::after{\n    content: '';\n    width: 2px;\n    height: 64px;\n    background: #0198FF;\n    position: absolute;\n    -webkit-align-self: center;\n    align-self: start;\n    top: 14px;\n    z-index: 1;\n  }\n\n  &.statusStep.finalStep::after{\n    display: none;\n  }\n\n  &.skeleton{\n    background: #c1c1c1;\n    ::after{\n      background: #c1c1c1;\n    }\n  }\n`\nconst Description = styled.div`\n  padding-left: 20px;\n  display: grid;\n  row-gap:5px;\n  p{\n    margin: 0;\n  }\n`\n\n\nconst Skeleton = styled.div`\n  width: 100%;\n  height: 16px;\n  background: #c1c1c1;\n  border-radius: 3px;\n  ${OnlySkeletonAnimation}\n`\n\n\n\n\n\nconst StatusTitle = styled(Text)`\n  font-size: 14px;\n  color: ${props => props.active === 'true' ? '#0198FF' : 'gray'};\n`\n\nconst DateStatusText = styled(Text)`\n  font-size: 12px;\n  color: ${props => props.active === 'true' ? '#0198FF' : '#adadad'};\n`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nexport default class ConfirmationCounter extends Component {\n\n  state = {\n    ctx:null,\n    total:6,\n    loader:true,\n    color:'#159e8c'\n  }\n\n  draw_interval\n\n  // init_draw = async props => {\n  //   let c = document.getElementById(\"myCanvas\")\n  //   await this.setState({\n  //     ctx: c.getContext(\"2d\")\n  //   })\n  //\n\n\n  draw = async amount =>{\n    // const {\n    //   ctx\n    // } = this.state\n    await this.setState({loader:false})\n    let c = document.getElementById(\"myCanvas\")\n    if(!c){return false}\n    const ctx = c.getContext(\"2d\")\n    clearInterval(this.draw_interval)\n    let tasaPercent = ( 100 * amount ) / this.state.total\n    ctx.beginPath()\n    ctx.arc(150, 63, 58, 0, (2 * Math.PI/100)*tasaPercent)\n    ctx.lineWidth = 2\n    ctx.strokeStyle = '#1cb179'\n    ctx.stroke()\n    // ctx.closePath()\n  }\n\n\n\n\n  async componentDidUpdate(prevProps) {\n  if (this.props.confirmations !== prevProps.confirmations) {\n      await this.setState({loader:true})\n      this.draw(this.props.confirmations)\n  }\n  }\n\n  async componentDidMount(){\n    await this.setState({loader:true})\n    this.draw_interval =  setInterval(()=>{\n        this.draw(this.props.confirmations)\n    }, 250)\n  }\n\n  render(){\n\n\n    const {\n      confirmations,\n      total_confirmations\n    } = this.props\n\n    const {\n      color\n    } = this.state\n\n\n\n    return(\n      <AbsoluteContainer2>\n        <RelativeContainer>\n          <AbsoluteContainer>\n\n            <ContCanvasConfirmation>\n              <ConfirmationContainer>\n                <TextContainer>\n                  <p className=\"fuente2\">\n                    {confirmations}\n                    <span>/ {total_confirmations ? total_confirmations : '6'}</span>\n                  </p>\n                </TextContainer>\n              </ConfirmationContainer>\n              {\n                !this.state.loader &&\n                <Canvas id=\"myCanvas\" width=\"300\" height=\"125\"/>\n              }\n            </ContCanvasConfirmation>\n\n        </AbsoluteContainer>\n      </RelativeContainer>\n    </AbsoluteContainer2>\n    )\n\n  }\n}\n\n\nconst AbsoluteContainer = styled.div`\n  position: absolute;\n`\n\nconst AbsoluteContainer2 = styled(AbsoluteContainer)`\n  right: 0;\n  transform: scale(.9);\n`\n\nconst RelativeContainer = styled.div`\n    width: 130px;\n    height: 170px;\n    position: relative;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n`\n\nconst ConfirmationContainer = styled.div`\n  width: 80px;\n  height: 50%;\n  position: absolute;\n  align-self: center;\n  justify-self: center;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  p{\n    font-size: 30px;\n    margin: 0;\n  }\n`\n\nconst TextContainer = styled.div`\n  width: 80px;\n  height: 50%;\n  position: absolute;\n  align-self: center;\n  justify-self: center;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  p{\n    font-size: 30px;\n    color: #1cb179;\n    margin: 0;\n  }\n  span{\n    color: #1cb179;\n    margin-left: 5px;\n    font-size: 18px;\n  }\n`\n\nconst CounterText = styled.article`\n  color: ${props => props.color ? `${props.color} !important` : \"red\"};\n  font-size: 40px !important;\n  margin: 0 !important;\n  padding: 0 !important;\n  align-self: center !important;\n`\n\nconst ContCanvasConfirmation = styled.section`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n`\n\nconst Canvas = styled.canvas`\n  transform:rotate(-90deg);\n  transition: .3s;\n`\n\n\n\n\n\n\n\n\n\n\n\n\n//\n","import React, { useEffect, useState, Fragment } from 'react'\nimport styled from 'styled-components'\nimport { AiOutlineUpload } from 'react-icons/ai';\nimport PaymentProofComponent, { PaymentProof } from './paymentProof'\nimport UseTxState from '../../../../hooks/useTxState'\nimport SimpleLoader from '../../../loaders'\nimport QRCode from 'qrcode'\nimport { readFile, img_compressor } from '../../../../../utils'\nimport OrderStatus from './orderStatus'\nimport DetailGenerator from './detailGenerator'\nimport { OnlySkeletonAnimation } from '../../../loaders/skeleton'\nimport IconSwitch from '../../../icons/iconSwitch'\nimport { AiOutlineClockCircle } from 'react-icons/ai';\nimport ConfirmationCounter from './confirmationCounter'\n\n// import { PaymentProof } from '../orderDetail'\n// import { Layout } from '../orderDetail'\n\n\nimport moment from 'moment'\nimport 'moment/locale/es'\nmoment.locale('es')\n\nconst orderModel = {\n  \"created_at\":new Date(),\n  \"updated_at\":new Date(),\n  \"state\":\"pending\",\n  \"currency_type\":\"fiat\"\n}\n\n\n\n\nconst InProcessOrder = () => {\n\n  const { currentOrder } = UseTxState()\n\n  return(\n    <>\n      {\n        currentOrder.currency_type === 'fiat' ?\n        <FiatDespoitOrder order={currentOrder}/>\n        :\n        <CryptoDespoitOrder order={currentOrder} />\n      }\n    </>\n  )\n}\n\nexport default InProcessOrder\n\n\nconst CryptoDespoitOrder = ({ order }) => {\n\n  const { actions, tx_path, currencies } = UseTxState()\n\n\n  return(\n      <InProcessOrderContainer>\n\n        <OrderContainer>\n          <TopSection>\n            <IconSwitch className=\"TitleIconOrder\" size={35} icon={order.currency.currency || 'cop'} />\n            <TitleContainer>\n              <Text className=\"fuente\">{getTitle(tx_path)}</Text>\n              <Currency className=\"fuente\">\n                {order.currency.currency }\n              </Currency>\n            </TitleContainer>\n            <DateIdContainter>\n                <Text className=\"fuente2\">#{order.id}</Text>\n                <DateText className=\"fuente2\">{moment(order.updated_at).format(\"LL\")}</DateText>\n            </DateIdContainter>\n          </TopSection>\n\n          <MiddleSection state={order.state}>\n            <DetailGenerator\n              order={order}\n              title={`${getState(order)}`}\n              TitleSuffix={()=><GetIcon order={order}/>}\n            />\n          </MiddleSection>\n\n          <BottomSection className={`crypto`}>\n              <UploadComponent/>\n              {\n                tx_path === 'deposits' &&\n                <ConfirmationCounter\n                  confirmations={order.confirmations}\n                  total_confirmations={currencies[order.currency.currency].confirmations}\n                />\n              }\n          </BottomSection>\n\n        </OrderContainer>\n\n        <OrderStatus order={order}/>\n\n      </InProcessOrderContainer>\n  )\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst FiatDespoitOrder = ({ order }) => {\n\n  const [ onDrag, setOnDrag ] = useState(false)\n  const [ imgSrc, setImgSrc ] = useState(false)\n  const { actions, tx_path } = UseTxState()\n\n\n\n  const dragOver = event => {\n     event.preventDefault();\n     if(!onDrag){\n       setOnDrag(!onDrag)\n     }\n  }\n\n  const dragLeave = event =>{\n    event.preventDefault();\n    if(onDrag){\n      setOnDrag(!onDrag)\n    }\n  }\n\n  const goFileLoader = async e =>{\n    if (e.target.files && e.target.files.length > 0) {\n      setOnDrag(false)\n      if(e.target.files[0].type !== 'image/png' && e.target.files[0].type !== 'image/jpeg'){return alert('formato no permitido')}\n      const data = e.target.files[0]\n      const file = await img_compressor(e.target.files[0], 0.25)\n      // console.log('result compresor', file.size)\n      const imageDataUrl = await readFile(file)\n      setImgSrc(imageDataUrl)\n      actions.isAppLoading(true)\n    }\n  }\n\n  // console.log('|||||||||||||||| FiatOrderDespoit ::', currencies)\n\n\n  return(\n      <InProcessOrderContainer>\n\n\n        <OrderContainer onDragOver={dragOver}>\n\n          {((onDrag && !imgSrc) && order.state === 'pending') && <DropZoneComponent dragLeave={dragLeave} goFileLoader={goFileLoader}/>}\n          {imgSrc && order.state === 'pending' && <PaymentProofComponent order_id={order.id} imgSrc={imgSrc} setImgSrc={setImgSrc} />}\n\n\n          <TopSection>\n            <IconSwitch className=\"TitleIconOrder\" size={35} icon={order.currency.currency || 'cop'} />\n            <TitleContainer>\n              <Text className=\"fuente\">{getTitle(tx_path)}</Text>\n              <Currency className=\"fuente\">\n                {order.currency.currency }\n              </Currency>\n            </TitleContainer>\n            <DateIdContainter>\n                <Text className=\"fuente2\">#{order.id}</Text>\n                <DateText className=\"fuente2\">{moment(order.updated_at).format(\"LL\")}</DateText>\n            </DateIdContainter>\n          </TopSection>\n\n          <MiddleSection state={order.state}>\n            <DetailGenerator\n              order={order}\n              title={`${getState(order)}`}\n              TitleSuffix={()=><GetIcon order={order}/>}\n            />\n          </MiddleSection>\n\n          <BottomSection>\n              <UploadComponent\n                imgSrc={imgSrc}\n                goFileLoader={goFileLoader}\n                setImgSrc={setImgSrc}\n              />\n          </BottomSection>\n\n        </OrderContainer>\n\n\n\n        <OrderStatus order={order}/>\n\n\n      </InProcessOrderContainer>\n  )\n\n}\n\n\nconst DropZoneComponent = ({ dragLeave, goFileLoader }) => {\n\n  return(\n    <DropZoneContainer >\n      <input id=\"TFileUpload\" type=\"file\" accept=\"image/png,image/jpeg\" onChange={goFileLoader} onDragLeave={dragLeave}/>\n      <UploadComponent unButtom title=\"Suelta aquí el archivo que quieres subir...\"/>\n    </DropZoneContainer>\n  )\n\n}\n\n\n\n\n\nconst UploadComponent = ({ unButtom, title, goFileLoader, imgSrc }) => {\n\n  const { currentOrder } = UseTxState()\n\n\n  return(\n    <UploadContainer className={`${imgSrc || currentOrder.state === 'confirmed' ? 'loaded' : 'unload'}`}>\n      {\n        (!imgSrc && currentOrder.state !== 'confirmed') ?\n        <Fragment>\n            <AiOutlineUpload size={45} color=\"gray\"/>\n            <UploadText className=\"fuente\">{title || 'Arrastra el archivo que quieres subir'}</UploadText>\n            {\n              !unButtom &&\n              <Fragment>\n                <UploadMiddle>\n                  <UploadTextMiddle className=\"fuente\">o selecciona un archivo</UploadTextMiddle>\n                  <hr/>\n                </UploadMiddle>\n\n                <Buttom>\n                  <input id=\"TFileUpload\" type=\"file\" accept=\"image/png,image/jpeg\" onChange={goFileLoader} />\n                  <Text style={{color:\"white\"}} className=\"fuente\">Subir comprobante</Text>\n                </Buttom>\n              </Fragment>\n            }\n\n        </Fragment>\n        :\n        <Fragment>\n          <UploadMiddle className=\"titleSection payment fuente\">\n            <UploadTextMiddle className=\"titleSection\">Comprobante de pago</UploadTextMiddle>\n            <hr/>\n          </UploadMiddle>\n          <PaymentProof payload={imgSrc}/>\n        </Fragment>\n      }\n\n    </UploadContainer>\n  )\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst getTitle = (tx_path) => {\n  return tx_path === 'deposits' ? 'Deposito' : 'Retiro'\n}\n\nconst GetIcon = ({ order }) => {\n\n  const coloIcon = order.state === 'pending' ? '#ff8660' : '#1cb179'\n  const RenderIcon = order.state === 'pending' ? AiOutlineClockCircle : order.state === 'confirmed' && (()=> <SimpleLoader loader={2} color={coloIcon} justify=\"center\"/>)\n\n  return(\n    <IconContainer>\n      <RenderIcon size={25} color={coloIcon}/>\n    </IconContainer>\n  )\n}\n\nconst getState = ({state, currency_type}) => {\n  switch (currency_type) {\n    case 'fiat':\n      return state === 'pending' ? 'Pendiente' : (state === 'confirmed' && currency_type === 'fiat') ? 'Procesando...' : 'En proceso de aceptación...'\n    case 'crypto':\n      return state === 'pending' ? 'Pendiente' : 'Confirmando en blockchain...'\n    default:\n\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst IconContainer = styled.div`\n  position: relative;\n  width: 25px;\n  height: 25px;\n  display: grid;\n`\n\n\nconst DropZoneContainer = styled.section`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background:rgba(255, 255, 255, .85);;\n  z-index: 3;\n  display: grid;\n  align-items: center;\n  justify-items:center;\n  ${'' /* border: 5px solid #0198FF; */}\n\n  svg{\n    fill: #0198FF;\n  }\n  p{\n    color: #0198FF;\n  }\n`\n\nconst ImgContainer = styled.div`\n    width: 80px;\n    height: 55px;\n    position: relative;\n    border: 3px solid #0198FF;\n    border-radius: 4px;\n    background: white;\n    display: grid;\n    align-items: center;\n    &.loader::after{\n      content: '';\n      width: 100%;\n      position: absolute;\n      height: 100%;\n      background: rgba(255, 255, 255, .8);;\n\n\n    }\n    .lds-roller{\n      z-index: 2;\n    }\n`\n\nconst Img = styled.img`\n  width: 80px;\n  height: 55px;\n  border-radius: 3px;\n`\n\nconst ProgressBar = styled.span`\n  height: 4px;\n  width: 100%;\n  background: #c5c5c5;\n  transition: .3s;\n  position: relative;\n  ::after{\n    content: '';\n    width: ${props => props.progresed};\n    background: #0198FF;\n    height: 100%;\n    position: absolute;\n    transition: 3s;\n    left: 0;\n    top: 0;\n  }\n`\n\nexport const Text = styled.p`\n  margin: 0;\n`\n\nconst PaymentTitle = styled(Text)`\n  text-align: center;\n  font-size: 14px;\n  color: gray;\n`\n\n\n\n\n\nconst PaymentProofDetail = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-rows: auto auto auto;\n  row-gap: 10px;\n  justify-items: center;\n  align-items: center;\n  padding-top: 40px;\n`\n\n\nconst Buttom = styled.div`\n  width: 320px;\n  height: 45px;\n  border-radius: 6px;\n  border: 2px solid #0198FF;\n  background: #0198FF;\n  display: grid;\n  align-items: center;\n  justify-items:center;\n  cursor: pointer;\n  position: relative;\n`\n\n\n\nconst UploadTextMiddle = styled(Text)`\n  z-index: 2;\n  font-size: 12px;\n  width: 150px;\n  background: #eeeeee;\n  text-align: center;\n  color: gray;\n\n  &.titleSection{\n    font-size: 15px;\n    width: auto;\n    padding: 0 20px;\n    align-self: center;\n    justify-self: baseline;\n  }\n`\n\nconst UploadMiddle = styled.div`\n  font-size: 14px;\n  position: relative;\n  display: grid;\n  width: 100%;\n  justify-items: center;\n  max-width: 320px;\n  hr{\n    position: absolute;\n    width: 100%;\n    align-self: center;\n  }\n\n  &.titleSection{\n    max-width: inherit;\n    position: absolute;\n    align-self: start;\n    hr{\n      border-top: 1px solid;\n      color: #c5c5c5;\n    }\n  }\n  &.payment{\n    p{\n      padding-left: 0 !important;\n    }\n    position: relative !important;\n  }\n}\n`\n\nconst UploadText = styled(Text)`\n  font-size: 16px;\n  color: gray;\n`\n\nconst UploadContainer = styled.section`\n  display: grid;\n  justify-items:center;\n  row-gap:12px;\n  width: 100%;\n  min-height: 170px;\n  height: auto;\n  &.loaded{\n    grid-template-rows: auto 1fr;\n  }\n  &.unload{\n    grid-template-columns:1fr;\n    max-width: 400px;\n    grid-template-rows: repeat(4, auto);\n  }\n\n`\n\n\n\nexport const Section = styled.div``\n\n\nconst BottomSection = styled(Section)`\n  height: auto;\n  display: grid;\n  justify-items:center;\n  align-items: center;\n\n  &.crypto{\n    position: relative;\n  }\n`\n\n\nconst DateIdContainter = styled.div`\n  display: flex;\n  grid-area: dateIdContainter;\n  ${Text}{\n    font-size: 12px;\n    color: gray\n  }\n`\n\nconst DateText = styled(Text)`\n  margin-left: 9px !important;\n  padding-left: 7px;\n  border-left: 1px solid gray;\n`\n\nconst TitleContainer = styled.div`\n  margin: 0;\n  display: flex;\n  align-items: center;\n  grid-area: titleContainer;\n  ${Text}{\n    font-size: 20px;\n  }\n`\n\nconst Currency = styled(Text)`\n  margin-left: 7px !important;\n  text-transform: uppercase;\n`\n\nconst Icon = styled.span`\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  background: #c3c3c3;\n  grid-area: icon;\n  ${'' /* box-shadow: 0px 0px 5px 3px rgba(0,0,0,0.1); */}\n`\n\n\nconst MiddleSection = styled(Section)`\n  background: white;\n  border-radius: 4px;\n  position: relative;\n  overflow: hidden;\n  ::after{\n    content:'';\n    position: absolute;\n    height: 7px;\n    background: ${props => props.state === 'pending' ? '#ff8660' : '#1cb179' };\n    top: 0;\n    width: 100%;\n    ${props => props.state === 'confirmed' && OnlySkeletonAnimation}\n  }\n  .withTitle{\n    padding-top: 55px !important;\n  }\n`\n\nconst TopSection = styled(Section)`\n  display: grid;\n  align-items: center;\n  grid-template-rows: auto auto;\n  column-gap: 12px;\n  row-gap:5px;\n  grid-template-columns: auto 1fr;\n  grid-template-areas: \"icon titleContainer\"\n                       \"icon dateIdContainter\";\n  span{\n    margin-right: 15px;\n  }\n\n  .TitleIconOrder{\n    grid-area: icon;\n  }\n`\n\nconst Container = styled.section`\n  width: 100vw;\n  height: 100vh;\n  background: #000000ba;\n  display: grid;\n  align-items: center;\n  justify-items:center;\n\n\n`\n\n\n\nconst OrderContainer = styled.div`\n  background: #eeeeee;\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  row-gap:30px;\n  position: relative;\n`\n\nconst InProcessOrderContainer = styled.section`\n\n  #TFileUpload{\n    position: absolute;\n    z-index: 4;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    cursor: pointer;\n  }\n\n  p{\n    margin: 0;\n  }\n\n  ${OrderContainer}{\n    padding: 30px 40px;\n  }\n\n  width: 1000px;\n  height: auto;\n  min-height: 750px;\n  background: white;\n  box-shadow: 0px 0px 5px 3px rgba(0,0,0,0.1);\n  display: grid;\n  grid-template-columns: 1fr 400px;\n  border-radius: 6px;\n  overflow: hidden;\n`\n","import React, { useEffect, useState } from 'react'\nimport OtherModalLayout from '../../otherModalLayout'\nimport styled from 'styled-components'\nimport { swing_in_bottom_bck, socketIconContainerIntro, backTopSection } from '../../../animations'\nimport { orderStateColors } from '../../../../../const/const'\nimport IconSwitch from '../../../icons/iconSwitch'\nimport { useActions } from '../../../../../hooks/useActions'\nimport useViewport from '../../../../../hooks/useWindowSize'\nimport DetailGenerator from './detailGenerator'\nimport { useFormatCurrency } from '../../../../hooks/useFormatCurrency'\nimport UseTxState from '../../../../hooks/useTxState'\nimport InProcessOrder from './inProcessOrder'\nimport { PaymentProof } from './paymentProof'\nimport { CloseButton } from '../../../shared-styles'\n\nimport moment from 'moment'\nimport 'moment/locale/es'\nmoment.locale('es')\n\n\nconst OrderSupervisor = () => {\n\n  const { actions, history, currentOrder } = UseTxState()\n  const  { isMovilViewport } = useViewport()\n\n  const cerrar = (e) => {\n    if(e.target.dataset.close_modal){\n      actions.isAppLoading(false)\n      actions.renderModal(null)\n      history.goBack()\n    }\n  }\n\n  return(\n    <OtherModalLayout on_click={cerrar}>\n      {\n        isMovilViewport &&\n        <CloseButton onClick={cerrar}>\n          <i className=\"fas fa-times\"></i>\n        </CloseButton>\n      }\n\n      {\n        currentOrder.state === 'accepted' || currentOrder.state === 'rejected' || currentOrder.state === 'canceled' ?\n        <OrderDetail/>\n        :\n        <InProcessOrder/>\n      }\n    </OtherModalLayout>\n  )\n\n}\n\n\nexport default OrderSupervisor\n\n\nexport const getState = state => {\n  return state === 'accepted' ? 'Aceptado' :\n  state === 'confirmed' ? 'Confirmado' :\n  state === 'pending' ? 'Pendiente' :\n  state === 'rejected' ? 'Rechazado' : 'Cancelado'\n}\n\nconst OrderDetail = () => {\n\n  const actions = useActions()\n  const { tx_path, currencies, currentOrder, primary_path, history } = UseTxState()\n  // console.log(currentOrder, currentOrder.id, tx_path, primary_path)\n\n  if(!currentOrder){return null}\n\n\n\n  const { state } = currentOrder\n  const TitleText = tx_path === 'deposits' ? 'Deposito' :\n                tx_path === 'withdraws' ? 'Retiro' :\n                tx_path === 'swaps' && 'Intercambio';\n\n  const textState = state === 'accepted' ? 'Aceptado' : state === 'confirmed' ? 'Confirmado' : state === 'pending' ? 'Pendiente' : state === 'rejected' ? 'Rechazado' : 'Cancelado'\n  const colorState = state === 'accepted' ? '#1cb179' : state === 'confirmed' ? '#77b59d' : state === 'pending' ? '#ff8660' : 'red'\n\n\n    return(\n        <Layout className=\"layout3\">\n\n\n          <TopSection state={currentOrder.state}>\n\n            <TitleContainer>\n              <OrderIcon className={`fa ${tx_path}`}/>\n              <IconSwitch className=\"TitleIconOrder\" size={28} icon={currentOrder.currency && currentOrder.currency.currency || 'cop'} />\n              <Title className=\"fuente\">{TitleText}</Title>\n              <DateTitle className=\"fuente2\">Actualizado {moment(currentOrder.updated_at).format(\"LL\")}</DateTitle>\n            </TitleContainer>\n\n            <CircleIconContainer>\n                <IconSwitch size={45} icon={state === 'accepted' ? 'accepted2' : state} color={colorState}/>\n                <p className=\"fuente\"\n                  style={{color:`${colorState}`}}\n                  >\n                    {textState}\n                </p>\n            </CircleIconContainer>\n\n            <ContBackTopSection>\n              <BackTopSection />\n            </ContBackTopSection>\n\n          </TopSection>\n\n          <DetailGenerator order={currentOrder} title={`Detalle del ${TitleText}`}/>\n\n          <BottomSection\n            colorState={colorState}\n          />\n\n\n        </Layout>\n    )\n  }\n\n\n\n  const BottomSection = ({ colorState }) => {\n\n    const { currentOrder, tx_path, currencies } = UseTxState()\n    const [ amount ] = useFormatCurrency(currentOrder.amount || currentOrder.bought, currentOrder.currency)\n    const textTotal = (tx_path === 'swaps' && currentOrder.state === 'accepted') ? 'Saldo adquirido:' : currentOrder.state === 'accepted' ? 'Saldo acreditado:' : 'Saldo SIN acreditar:'\n    const currency = tx_path === 'swaps' ? currencies[currentOrder.to_buy_currency.currency] : currencies[currentOrder.currency.currency]\n    const isFiatWithdraw = tx_path === 'withdraws' && currentOrder.currency_type === 'fiat'\n\n    return(\n      <BottomSectionContainer>\n        <TitleBottom>\n          <hr/>\n          { tx_path !== 'swaps' && <p className=\"fuente\">Comprobante de pago</p> }\n        </TitleBottom>\n        <Container>\n          {\n            (tx_path === 'swaps' || isFiatWithdraw ) ?\n            <div></div>\n            :\n            <PaymentProof/>\n          }\n          <TotalAmount color={colorState} className={`${currentOrder.state}`}>\n            <p className=\"fuente saldo\">{textTotal}</p>\n            <p className=\"fuente2 amount\">\n              {currentOrder.currency_type === 'fiat' && '$ '}{amount} {currency && <span className=\"fuente\">{currency.code}</span>}\n            </p>\n          </TotalAmount>\n        </Container>\n      </BottomSectionContainer>\n    )\n  }\n\n\n\n\n\n\n\n\n\n\n  const TotalAmount = styled.div`\n    width: auto;\n    height: 70px;\n    justify-self: end;\n    align-self: end;\n\n    &.rejected, &.canceled{\n      .amount{\n        text-decoration: line-through;\n      }\n    }\n\n    p{\n      color: ${props => props.color};\n      margin: 0;\n      text-align: right;\n    }\n    &>p{\n      margin-bottom: 10px;\n    }\n    .amount{\n      font-size: 30px;\n      span{\n        font-size: 18px;\n      }\n    }\n    .saldo{\n      font-size: 16px;\n    }\n  `\n\n\n\n\n  const Container = styled.div`\n    width: calc(100% - 60px);\n    padding: 0 30px;\n    height: 100%;\n    display: grid;\n    grid-template-columns: 100px 1fr;\n  `\n\n  const TitleBottom = styled.div`\n    display: grid;\n    position: relative;\n    justify-items:center;\n    hr{\n      width: 98%;\n      opacity: .35;\n    }\n    p{\n      color:gray;\n      margin: 0;\n      background-color: white;\n      position: absolute;\n      left: 20px;\n      padding: 0 10px;\n      align-self: self-end;\n      font-size: 14px;\n      font-weight: bold;\n    }\n  `\n\n  const BottomSectionContainer = styled.section`\n    height: calc(200px - 40px);\n    width: 100%;\n    padding: 20px 0;\n    display: grid;\n    grid-template-rows: auto 1fr;\n    row-gap: 20px;\n  `\n\n  const TitleContainer = styled.div`\n    display: grid;\n    .TitleIconOrder{\n      grid-area: IconSwitch;\n    }\n    align-items: center;\n    column-gap: 15px;\n    row-gap: 4px;\n    align-self: center;\n    position: absolute;\n    left: 30px;\n    grid-template-columns: 25px 25px minmax(100px, 200px);\n    grid-template-areas:\n    \"OrderIcon IconSwitch Title\"\n    \"OrderIcon IconSwitch DateTitle\";\n  `\n\n  const DateTitle = styled.p`\n    font-size: 12px;\n    color: white;\n    grid-area: DateTitle;\n    margin: 0;\n    padding: 0;\n    text-align: left;\n    display: grid;\n    margin-left: 4px;\n    `\n\n  const Icon = styled.i`\n  `\n  const OrderIcon = styled(Icon)`\n    margin-right: 10px;\n    font-size: 22px;\n    grid-area: OrderIcon;\n    color: white;\n    margin: 0;\n    display: grid !important;\n    justify-items: center;\n\n    &.swaps:before{\n       content: \"\\f079\";\n      }\n    }\n    &.withdraws:before{\n       content: \"\\f062\";\n      }\n    }\n    &.deposits:before{\n       content: \"\\f063\";\n      }\n    }\n\n  `\n\n\n\n  const BackTopSection = styled.div`\n    width: 120%;\n    height: 120%;\n    position: absolute;\n    background-image: url(/static/media/back.fe9a1b62.png);\n    background-size: contain;\n    background-repeat: repeat;\n    background-position: right;\n    opacity: 0.05 !important;\n    animation: ${backTopSection};\n    animation-duration: 80s;\n    animation-iteration-count: infinite;\n    transform: scale(1.5);\n  `\n\n  const ContBackTopSection = styled.div`\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    overflow: hidden;\n  `\n\n\n\n\n  const CircleIconContainer = styled.div`\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    justify-self: end;\n    width: 90px;\n    height: 90px;\n    background: white;\n    border-radius: 50%;\n    align-self: flex-end;\n    position: relative;\n    transform: translate(-30px, 45px) !important;\n    p{\n        position: absolute;\n        margin: 0;\n        bottom: -3px;\n        font-size: 14px;\n        justify-self:center;\n    }\n  `\n\n  const Title = styled.h3`\n    text-align: left;\n    color: white;\n    margin: 0;\n    grid-area: Title;\n    font-size: 22px;\n    margin-left: 4px;\n  `\n\n  const TopSection = styled.section`\n    background: ${props => props.state ? orderStateColors[props.state] : 'gray'};\n    width: 100%;\n    height: 100%;\n    display: grid;\n    position: relative;\n    border-top-right-radius: 6px;\n    border-top-left-radius: 6px;\n  `\n\n  export const Layout = styled.div`\n    width: 100%;\n    max-width: 600px;\n    height: auto;\n    min-height:650px;\n    background: white;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n    -webkit-transition: .3s;\n    transition: .3s;\n    border-radius: 11px;\n    position: relative;\n    grid-template-rows: 115px 1fr auto;\n\n    -webkit-animation: ${swing_in_bottom_bck} 1s cubic-bezier(0.175, 0.885, 0.320, 1.275) both;\n    animation: ${swing_in_bottom_bck} 1s cubic-bezier(0.175, 0.885, 0.320, 1.275) both;\n  `\n"],"sourceRoot":""}