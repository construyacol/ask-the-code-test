{"version":3,"sources":["components/forms/hooks/useHeight.js","components/forms/widgets/personalKycComponent/selectList/index.js","components/forms/widgets/personalKycComponent/selectList/styles.js","components/forms/widgets/personalKycComponent/selectList/itemList.js","components/forms/hooks/intersectionObserver.js"],"names":["useHeight","listener","height","setHeight","useState","useEffect","heightMainContainer","document","querySelector","clientHeight","heightTitleContainer","SelectList","list","name","state","handleAction","searchList","setSearchList","currentItemTagExist","setCurrentItemTagExist","Object","keys","length","itemList","filterElement","isMovilHeight","body","clientWidth","id","map","itemKey","item","onClick","target","value","query","result","filter","includes","toLowerCase","SelectListMain","styled","div","props","ItemListGrid","backTopSection","keyframes","ListContainer","ItemList","show","element","useRef","setShow","then","observer","window","IntersectionObserver","entries","isIntersecting","disconnect","current","observe","useObserver","imgSrc","img","flag","className","ref","alt","src","width","uiName","React","memo"],"mappings":"iKAqBeA,MAnBIC,IAEjB,MAAQC,EAAQC,GAAcC,qBAa9B,OAXAC,qBAAU,KAAK,IAAD,IACZ,MAAMC,GAAsB,UAAAC,SAASC,cAAc,yBAAvB,eAA0CC,eAAgB,EAChFC,GAAuB,UAAAH,SAASC,cAAc,4BAAvB,eAA6CC,eAAgB,EAE1F,GADAN,EAAU,OACPG,GAAuBI,GAAwBT,EAAS,CAEzDE,EAAU,iBAAD,OADCG,EAAsBI,EACvB,mBAGV,CAACT,IAEG,CAACC,I,OCgDKS,UArDI,IAA0C,IAAzC,KAAEC,EAAF,KAAQC,EAAR,MAAcC,EAAd,aAAqBC,GAAmB,GAEpDb,GAAWF,EAAUY,GAC3B,MAAQI,EAAYC,GAAkBb,mBAASQ,GAAQ,KAC/CM,EAAqBC,GAA2Bf,mBAAS,MAGjEC,qBAAU,KAC8B,IAAnCe,OAAOC,KAAKL,GAAYM,QAAgBR,EAAMD,GAC/CM,GAAuB,GAEvBA,EAAuB,QAGxB,CAACL,EAAOD,IAIXR,qBAAU,KACR,GAAGO,EAAK,CACN,MAAMW,EAAWC,EAAcZ,EAAME,EAAMD,IAC3CI,EAAcM,MAGf,CAACT,EAAMD,GAAOD,IAEjB,IAAIa,EAAgBlB,SAASmB,KAAKC,YAAc,IAA5B,aAGpB,OACE,cAAC,iBAAD,CACEC,GAAG,iBACH1B,OAASU,IAASM,EAAuBhB,EAASuB,EAFpD,SAKKb,IAASM,GACV,cAAC,gBAAD,UAEIE,OAAOC,KAAKL,GAAYa,KAAI,CAACC,EAASF,IAC7B,cAAC,UAAD,CAELG,KAAMnB,EAAKkB,GACXE,QAAS,IAAMjB,EAAa,CAACkB,OAAO,CAACC,MAAMJ,MAFtCF,UAgBrB,MAAMJ,EAAgB,CAACZ,EAAMuB,KAC3B,IAAIC,EAAS,GAOX,OANFhB,OAAOC,KAAKT,GAAMyB,QAAOd,GACpBA,EAASe,SAAT,OAAkBH,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOI,eACnBH,EAAS,IAAKA,EAAQ,CAACb,GAAUX,EAAKW,IAExCA,IAEAH,OAAOC,KAAKe,GAAQd,OAASc,EAASxB,I,2PC1E1C,MAAM4B,EAAiBC,IAAOC,IAAV,0eAEfC,GAASA,EAAMzC,SAuBd0C,EAAeH,IAAOC,IAAV,mjBAiCZG,EAAiBC,YAAH,wFASdC,EAAgBN,IAAOC,IAAV,uOAKXG,I,gFCrEf,MAAMG,EAAW,IAAwB,IAAvB,KAAEjB,EAAF,QAAQC,GAAc,EAEtC,MAAQiB,EAAMC,GCLW,MACzB,MAAMA,EAAUC,iBAAO,OAChBF,EAAMG,GAAWhD,oBAAS,GAiBjC,OAfAC,qBAAU,KACR,oCAAgCgD,MAAK,KACnC,MAAMC,EAAW,IAAIC,OAAOC,sBAAsBC,IAChD,MAAM,eAAEC,GAAmBD,EAAQ,GAC/BC,IACFN,GAAQ,GACRE,EAASK,iBAGTL,GAAYJ,GAAWA,EAAQU,SACjCN,EAASO,QAAQX,EAAQU,cAG5B,CAACV,IAEG,CAACD,EAAMC,IDdYY,GAEpBC,GAAa,OAAJhC,QAAI,IAAJA,OAAA,EAAAA,EAAMiC,OAAN,OAAajC,QAAb,IAAaA,OAAb,EAAaA,EAAMkC,MAElC,OACE,eAAC,eAAD,CAAcC,UAAS,wBAAsB,OAAJnC,QAAI,IAAJA,OAAA,EAAAA,EAAMG,QAAS,IAAMF,QAASA,EAASmC,IAAKjB,EAArF,UACE,qBAAKgB,UAAU,iBAAf,SAEIH,GACC,qBAAKK,IAAI,GAAGC,IAAKpB,EAAOc,EAAS,GAAIO,MAAO,GAAIpE,OAAQ,OAG7D,mBAAGgE,UAAU,qBAAb,gBAAoCnC,QAApC,IAAoCA,OAApC,EAAoCA,EAAMwC,aAKjCC,cAAMC,KAAKzB","file":"static/js/14.336d687f.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\n\nconst useHeight = (listener) => {\n\n  const [ height, setHeight ] = useState()\n\n  useEffect(()=>{\n    const heightMainContainer = document.querySelector(\"#stickyGroup__\")?.clientHeight || 0\n    const heightTitleContainer = document.querySelector(\"#titleContainer__\")?.clientHeight || 0\n    setHeight(`0px`)\n    if(heightMainContainer && heightTitleContainer && listener){\n      let sum = heightMainContainer + heightTitleContainer\n      setHeight(`calc(100vh - (${sum}px + 30px))`)\n      // 30px margin\n    }\n  }, [listener])\n\n  return [height]\n\n}\n\nexport default useHeight\n","import React, { useEffect, useState } from 'react'\n\n// import components\nimport ItemList from './itemList'\n\n// import styles\nimport { ListContainer, SelectListMain } from './styles'\n\n// import Hooks\nimport useHeight from '../../../hooks/useHeight'\n \n\nconst SelectList = ({ list, name, state, handleAction }) => {\n\n  let [ height ] = useHeight(list)\n  const [ searchList, setSearchList ] = useState(list || {})\n  const [ currentItemTagExist, setCurrentItemTagExist ] = useState(null)\n  // console.log('state - SelectList:  ', state, currentItemTagExist)\n  \n  useEffect(() => {\n    if(Object.keys(searchList).length === 1 && state[name]){\n      setCurrentItemTagExist(true)\n    }else{\n      setCurrentItemTagExist(null)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state, name])\n\n\n\n  useEffect(() => {\n    if(list){\n      const itemList = filterElement(list, state[name])\n      setSearchList(itemList)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state[name], list])\n\n  let isMovilHeight = document.body.clientWidth < 768 ? `25vh` : `0px`\n  \n\n  return(\n    <SelectListMain\n      id=\"selectListMain\"\n      height={(list && !currentItemTagExist) ? height : isMovilHeight}\n      >\n      {\n        (list && !currentItemTagExist) &&\n        <ListContainer>\n          {\n            Object.keys(searchList).map((itemKey, id) => {\n              return <ItemList\n                key={id}\n                item={list[itemKey]}\n                onClick={() => handleAction({target:{value:itemKey}})}\n              />\n            })\n          }\n        </ListContainer>\n      }\n    </SelectListMain>\n  )\n\n}\n\nexport default SelectList\n\n\nconst filterElement = (list, query) => {\n  let result = {}\n  Object.keys(list).filter(itemList => {\n    if(itemList.includes(query?.toLowerCase())){\n      return result = { ...result, [itemList]:list[itemList] }\n    }\n    return itemList\n  })\n    return Object.keys(result).length ? result : list\n}\n","import styled, { keyframes } from 'styled-components'\n\nexport const SelectListMain = styled.div`\n  width: calc(100% - 20px);\n  height: ${props => props.height};\n  transition: .3s;\n  animation-delay: 1s;\n  margin: 20px 10px 10px;\n  overflow: scroll;\n  &::-webkit-scrollbar {\n    width: 8px;\n    cursor: pointer;\n  }\n  /* Track */\n  &::-webkit-scrollbar-track {\n    background: transparent;\n  }\n  /* Handle */\n  &::-webkit-scrollbar-thumb {\n    background: #f5f5f5;\n  }\n  /* Handle on hover */\n  &::-webkit-scrollbar-thumb:hover {\n    background: #e2e2e2;\n  }\n`\n\nexport const ItemListGrid = styled.div`\n  display: grid;\n  column-gap: 15px;\n  grid-template-rows: 1fr;\n  grid-template-columns: auto 1fr;\n  border: 1px solid #ffffff;\n  border-radius: 6px;\n  padding: 0 15px;\n  cursor: pointer;\n  transition: .15s;\n  height: 60px;\n  .itemList__icon{\n    display: flex;\n    align-items: center;\n  }\n  img{\n    border-radius:50%;\n  }\n  p{\n    color: #676767;\n    display: flex;\n    align-items: center;\n  }\n  &:hover{\n    border: 1px solid #f5f5f5;\n    background: #f5f5f5;\n    p{\n      color: #353535;\n    }\n  }\n\n`\n\nexport const backTopSection = keyframes`\n  0%{\n    opacity: 0;\n  }\n  100%{\n    opacity: 1;\n  }\n`\n\nexport const ListContainer = styled.div`\n  display: grid;\n  grid-template-rows: repeat(auto-fill, auto);\n  row-gap: 7px;\n  opacity: 0;\n  animation: ${backTopSection};\n  animation-duration: .3s;\n  animation-delay: .3s;\n  animation-fill-mode: forwards;\n`\n","import React from 'react'\nimport { ItemListGrid } from './styles'\nimport { useObserver } from '../../../hooks/intersectionObserver'\n\n\nconst ItemList = ({ item, onClick }) => {\n\n  const [ show, element ] = useObserver()\n\n  const imgSrc = item?.img || item?.flag\n\n  return(\n    <ItemListGrid className={`itemListGrid ${item?.value || ''}`} onClick={onClick} ref={element}>\n      <div className=\"itemList__icon\" >\n      {\n          imgSrc &&\n           <img alt=\"\" src={show ? imgSrc : ''} width={35} height={35}></img>\n      }\n      </div>\n      <p className=\"fuente countryName\" >{item?.uiName}</p>\n    </ItemListGrid>\n  )\n}\n\nexport default React.memo(ItemList)\n\n\n\n\n\n","import { useEffect, useRef, useState } from \"react\";\n\nexport const useObserver = () => {\n  const element = useRef(null);\n  const [show, setShow] = useState(false); \n\n  useEffect(() => {\n    import(\"intersection-observer\").then(() => {\n      const observer = new window.IntersectionObserver((entries) => {\n        const { isIntersecting } = entries[0];\n        if (isIntersecting) {\n          setShow(true);\n          observer.disconnect();\n        }\n      });\n      if (observer && element && element.current) {\n        observer.observe(element.current);\n      }\n    });\n  }, [element]);\n\n  return [show, element];\n};\n"],"sourceRoot":""}