{"version":3,"sources":["components/sockets/socket_notify/socketNotify.js"],"names":["IconSwitch","loadable","Promise","resolve","then","__webpack_require__","bind","OrderNotifyView","props","socket_notify","formatCurrency","currencies","title","button_tittle","_props$socket_notify3","item_type","currency","buttonAction","_ref2","Object","_home_coinsenda_new_frontend_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_home_coinsenda_new_frontend_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","a","mark","_callee2","wallet_id","wrap","_context2","prev","next","action","toggleOtherModal","history","push","concat","stop","_x3","apply","this","arguments","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","LayoutSocketNotify","_widgets_shared_styles__WEBPACK_IMPORTED_MODULE_13__","theme","size","className","icon","color","id","symbol","_widgets_buttons_buttons__WEBPACK_IMPORTED_MODULE_11__","item_id","account_id","children","selectCurrencies","createSelector","state","modelData","currency_list","map","_home_coinsenda_new_frontend_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_home_coinsenda_new_frontend_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","connect","ui","notifications","dispatch","bindActionCreators","actions","_useState","useState","_useState2","_home_coinsenda_new_frontend_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_4__","setFormatCurrency","_props$socket_notify","txType","fallBackTitle","useEffect","amount","_props$socket_notify2","formatToCurrencies","_ref","_callee","resul","_context","formatToCurrency","sent","toFormat","_x","_x2","_widgets_modal_otherModalLayout__WEBPACK_IMPORTED_MODULE_14__","on_click","e","target","dataset","close_modal","includes","assign"],"mappings":"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","file":"static/js/51.1aace8a5.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport loadable from \"@loadable/component\";\nimport { bindActionCreators } from \"redux\";\nimport { createSelector } from \"reselect\";\nimport actions from \"../../../actions\";\nimport { ButtonNofity } from \"../../widgets/buttons/buttons\";\nimport { formatToCurrency } from \"../../../utils/convert_currency\";\n\nimport { IconClose } from \"../../widgets/shared-styles\";\nimport OtherModalLayout from \"../../widgets/modal/otherModalLayout\";\n\nimport \"./socketNotify.css\";\n\nconst IconSwitch = loadable(() => import(\"../../widgets/icons/iconSwitch\"));\n\nconst SocketNotify = (props) => {\n  const [formatCurrency, setFormatCurrency] = useState(null);\n  const { item_type, title } = props.socket_notify;\n  let txType = `${item_type === \"deposits\" ? \"depósito\" : \"retiro\"}`;\n  let fallBackTitle = `${\n    item_type === \"deposits\"\n      ? \"Nuevo depósito aprobado\"\n      : item_type === \"withdraws\"\n      ? \"Nuevo retiro enviado\"\n      : \"\"\n  }`;\n\n  useEffect(() => {\n    if (props.socket_notify && props.socket_notify.amount) {\n      const { amount, currency } = props.socket_notify;\n      formatToCurrencies(amount, currency);\n    }\n  }, [props.socket_notify]);\n\n  const formatToCurrencies = async (amount, currency) => {\n    let resul = await formatToCurrency(amount, currency);\n    setFormatCurrency(resul.toFormat());\n  };\n\n  const closeModal = (e) => {\n    const { target } = e;\n    if (target && target.dataset.close_modal) {\n      props.action.socket_notify(null);\n      props.action.toggleOtherModal();\n    }\n  };\n\n  return (\n    <OtherModalLayout on_click={closeModal}>\n      {/* {\n        item_type === 'deposits' ?\n          <OrderNotifyView\n            title={`${title ? title : `Nuevo ${ui_text} aprobado.`}`}\n            button_tittle={`Ver ${ui_text}`}\n            item_type={item_type}\n            formatCurrency={formatCurrency}\n            {...props} />\n\n          :\n\n          item_type === 'withdraws' &&\n          <OrderNotifyView\n            title={`${title ? title : `Nuevo ${ui_text} enviado`}`}\n            button_tittle={`Ver ${ui_text}.`}\n            item_type={item_type}\n            formatCurrency={formatCurrency}\n            {...props} />\n\n      } */}\n\n      {[\"deposits\", \"withdraws\"].includes(item_type) && (\n        <OrderNotifyView\n          title={title || fallBackTitle}\n          button_tittle={`Ver ${txType}.`}\n          item_type={item_type}\n          formatCurrency={formatCurrency}\n          {...props}\n        />\n      )}\n    </OtherModalLayout>\n  );\n};\n\nconst OrderNotifyView = (props) => {\n  const {\n    socket_notify,\n    formatCurrency,\n    currencies,\n    title,\n    button_tittle,\n  } = props;\n\n  const {\n    item_type,\n    currency,\n    // state\n  } = props.socket_notify;\n\n  // console.log('||||||||||||||_____________________________________________socket_notify', props)\n  const buttonAction = async (wallet_id) => {\n    // console.log('||||||||||||||_____________________________________________buttonAction', wallet_id)\n    props.action.socket_notify(null);\n    await props.action.toggleOtherModal();\n    // await props.action.current_section_params({currentFilter:item_type})\n    props.history.push(`/wallets/activity/${wallet_id}/${item_type}`);\n  };\n\n  // console.log('item_type', item_type)\n\n  return (\n    <LayoutSocketNotify>\n      <IconClose theme=\"dark\" size={20} />\n      <div className=\"topSection\">\n        <div className=\"contBackTopSection\">\n          <div className=\"backTopSection animate\" />\n        </div>\n        <div className=\"socketIconContainer in\">\n          <div className=\"wavExpansive in\"></div>\n          <IconSwitch icon={item_type} size={45} color=\"#11998e\" />\n        </div>\n      </div>\n\n      <div className=\"bottomSection\">\n        <h3 className=\"fuente\">{title}</h3>\n        <div className=\"depositAmount\">\n          <IconSwitch icon={currency.currency} size={35} />\n          <p id=\"order_amount\" className=\"fuente2\">\n            {formatCurrency}{\" \"}\n            <span>{currencies[socket_notify.currency.currency].symbol}</span>\n          </p>\n        </div>\n        <ButtonNofity\n          buttonAction={buttonAction}\n          item_id={socket_notify.account_id}\n        >\n          <p id=\"ButtonNofityText\" className=\"fuente\">\n            {button_tittle}\n          </p>\n        </ButtonNofity>\n      </div>\n    </LayoutSocketNotify>\n  );\n};\n\nconst LayoutSocketNotify = (props) => {\n  return (\n    <div className=\"LayoutSocketNotify swing-in-bottom-bck\">\n      <div className=\"socketContent\">{props.children}</div>\n    </div>\n  );\n};\n\nconst selectCurrencies = createSelector(\n  (state) => state.modelData.currencies,\n  (currencies) => {\n    let currency_list;\n    if (currencies) {\n      currencies.map((currency) => {\n        return (currency_list = {\n          ...currency_list,\n          [currency.currency]: {\n            ...currency,\n          },\n        });\n      });\n    }\n    return currency_list;\n  }\n);\n\nconst mapStateToProps = (state) => {\n  const { socket_notify } = state.ui.notifications;\n\n  return {\n    socket_notify: socket_notify && socket_notify[0],\n    currencies: selectCurrencies(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SocketNotify);\n"],"sourceRoot":""}