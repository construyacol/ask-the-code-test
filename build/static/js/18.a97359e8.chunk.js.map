{"version":3,"sources":["components/forms/widgets/personalKycComponent/const.js","components/forms/widgets/personalKycComponent/utils.js","components/forms/widgets/personalKycComponent/validations.js"],"names":["LABEL_COLOR","default","error","removeItemTag","e","itemKey","callback","target","className","includes","stopPropagation","document","querySelector","value","focus","remove","debugItemTag","anyTagExist","currentItemTag","getBody","body","stages","nationality","prefix","selectList","meta_phone","_body","phone","parseOnlyLetters","replace","parseOnlyNumbers","parseAlphanumeric","writeOnLabel","message","typeMessage","labelElement","style","color","innerHTML","validateLabelMsg","data","targetElement","key","settings","errors","match","pattern","defaultMessage","addItemTag","uiTagName","inpuTarget","inputContainer","itemTag","generateItemTag","appendChild","blur","itemTagContainer","createElement","id","uiNameElement","closeButtom","selectListValidator","_value","result","Object","keys","filter","itemList","toLowerCase","console","log","status","successPattern","length","uiName","textInputValidator","personalKycValidation","country","name","state","countryItem","birthday","birthYear","Date","getFullYear","age","datePick","targetLabel","setTimeout","classList","add","address","city","id_number","_data","JSON","parse","stringify","id_type","others","toUpperCase","surname"],"mappings":"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","file":"static/js/18.a97359e8.chunk.js","sourcesContent":["export const LABEL_COLOR = {\n    default:'gray',\n    error:'red'\n}","import { \n  LABEL_COLOR\n} from './const'\n\nexport const removeItemTag = (e, itemKey, callback) => {\n    if(!e?.target?.className?.includes){return}\n    if(e.target?.className?.includes(\"selectedItemTag__closeButton\")){\n      e.stopPropagation()\n      // console.log('removeItemTag', itemKey, document.querySelector(\"#selectedItemTag\").remove())\n      if(itemKey){\n        document.querySelector(`[name=\"${itemKey}\"]`).value = \"\"\n        document.querySelector(`[name=\"${itemKey}\"]`).focus()\n      }\n      if(callback){\n        callback({target:{value:\"\"}});\n      }\n      return document.querySelector(\"#selectedItemTag\").remove();\n    }\n}\n  \nexport const debugItemTag = itemKey => { \n    const anyTagExist = document.querySelector(`.selectedItemTag`)\n    const currentItemTag = document.querySelector(`.selectedItemTag._${itemKey}`)\n    if(anyTagExist && !currentItemTag){\n        return anyTagExist.remove()\n    }\n}\n\n\nexport const getBody = (body, { stages: { nationality } }) => {\n    const prefix = nationality?.selectList[body?.meta_phone].prefix[0]\n    const _body = {...body}\n    delete _body.meta_phone\n    _body.phone = `${prefix} ${body.phone}`\n    return _body\n}\n\n\nexport const parseOnlyLetters = (value) => {\n  return value.replace(/[^a-zA-Z ]/g, '')\n}\n\nexport const parseOnlyNumbers = (value) => {\n  return value.replace(/[^0-9]/g, '')\n}\n\nexport const parseAlphanumeric = (value) => {\n  return value.replace(/[^0-9a-zA-Z]/g, '') \n}\n\nexport const writeOnLabel = (target, message, typeMessage = 'default') => {\n  let labelElement = document.querySelector(target)\n  if(!labelElement){return}\n  labelElement.style.color = LABEL_COLOR[typeMessage]\n  labelElement.innerHTML = message \n }\n\nexport const validateLabelMsg = (value, data) => {\n  const targetElement = `.label_text__${data.key}`\n  if(!data?.settings?.errors){return}\n  for (let error of data.settings.errors) {\n    if(value.match(error.pattern)){\n      writeOnLabel(targetElement, error.message, 'error')\n    }else{\n      writeOnLabel(targetElement, data.settings.defaultMessage)\n    }\n  }\n}\n\nexport const addItemTag = (itemKey, uiTagName, inpuTarget) => {\n  if(!document.querySelector(`.selectedItemTag._${itemKey}`)){\n    // console.log('||||| addItemTag ==> ', itemKey)\n    const target = inpuTarget || \".inputContainer__\"\n    const inputContainer = document.querySelector(target)\n    const itemTag = generateItemTag(itemKey, uiTagName)\n    inputContainer.appendChild(itemTag)\n    document.querySelector(`[name=\"${itemKey}\"]`)?.blur()\n  }\n}\n\n\nconst generateItemTag = (itemKey, uiTagName) => {\n  const itemTagContainer = document.createElement(\"div\")\n  itemTagContainer.className = `fuente selectedItemTag _${itemKey}`\n  itemTagContainer.id = `selectedItemTag`\n  const itemTag = document.createElement(\"div\")\n  itemTag.className = `selectedItemTag__title`\n  const uiNameElement = document.createElement(\"p\")\n  uiNameElement.innerHTML = uiTagName\n  const closeButtom = document.createElement(\"p\")\n  closeButtom.innerHTML = \"x\"\n  closeButtom.className = \"selectedItemTag__closeButton\"\n\n  itemTag.appendChild(uiNameElement)\n  itemTag.appendChild(closeButtom)\n  itemTagContainer.appendChild(itemTag)\n  return itemTagContainer\n}","\n  import {\n    parseOnlyLetters,\n    validateLabelMsg,\n    parseOnlyNumbers,\n    addItemTag,\n    writeOnLabel,\n    parseAlphanumeric\n  } from './utils'\n  \n\n\nconst birthday = (value, data) => {\n  let birthYear = new Date(data.state?.birthday)?.getFullYear() || new Date().getFullYear()\n  let currentYear = new Date().getFullYear()\n  let age = currentYear - birthYear \n  let status = (age >= 18 && age < 100) && 'success' \n  let _value = value\n  const datePick = document.querySelector('[name=\"birthday\"]')\n  const targetLabel = `.label_text__${data.key}`\n  if(status === 'success'){\n    setTimeout(()=>{datePick.classList.add('date_success')}, 10)\n    writeOnLabel(targetLabel, data.settings.defaultMessage)\n  }else{\n    if(age < 18){\n      writeOnLabel(targetLabel, 'Debes de ser mayor de edad(+17) para continuar', 'error')\n    }\n    if(age > 100){\n      writeOnLabel(targetLabel, 'Has superado los límites de longevidad humana', 'error')\n    }\n    setTimeout(()=>{datePick.classList.remove('date_success')}, 10)\n  }\n  return [ _value, status ]\n}\n\n\n\n \nconst phone = (value, data) => {\n  validateLabelMsg(value, data)\n  let _value = parseOnlyNumbers(value)\n  let status = (_value.match(data.settings.successPattern) && data.state['meta_phone']) && 'success'\n  return [ _value, status ]\n}\n\nconst meta_phone = (value, data) => {\n  validateLabelMsg(value, data)\n  //accepts only letters, spaces and underscore\n  let _value = value.replace(/[^a-zA-Z _]/g, '')\n  // Find and match the value with  select list key value\n  let result = Object.keys(data?.selectList).filter(countryItem => countryItem.includes(value.toLowerCase()))\n  // If it meets the pattern and matches 1 result from the entire list, the search was successful\n  let status = (_value.match(data.settings.successPattern) && result.length === 1) && 'success';\n  if(result.length === 1){\n    _value = result[0]\n    addItemTag(data.key, data?.selectList[result[0]]?.uiName, \".prefixInputContainer\")\n  }\n  // console.log('||||||||||| metadata phone ==> ', value, data)\n  return [ _value, status ]\n}\n\nconst selectListValidator = (value, data) => {\n\n  validateLabelMsg(value, data)\n  //accepts only letters, spaces and underscore\n  let _value = value.replace(/[^a-zA-Z _]/g, '')\n  // Find and match the value with  select list key value\n  let result = Object.keys(data?.selectList).filter(itemList => itemList.includes(value.toLowerCase()))\n  console.log('|||||||||||||  VALIDATOR result ', result)\n  // If it meets the pattern and matches 1 result from the entire list, the search was successful\n  let status = (_value.match(data?.settings?.successPattern) && result.length === 1) && 'success';\n  if(result.length === 1 && value){\n    _value = result[0]\n    addItemTag(data.key, data?.selectList[result[0]]?.uiName)\n    // console.log('|||||||||||||||| country validation ==> ', _value)\n    // console.log('||||| addItemTag ==> ', data.key, document.querySelector(`.selectedItemTag._${data.key}`))\n  }\n  return [ _value, status ]\n} \n\nconst textInputValidator = (value, data) => {\n  validateLabelMsg(value, data)\n  let _value = parseOnlyLetters(value)\n  let status = _value.match(data.settings.successPattern) && 'success'\n  return [ _value, status ]\n}\n\nconst id_number = (value, data) => {\n  let _data = JSON.parse(JSON.stringify(data)) //deep object copy\n  const { id_type } = _data?.state\n  const successPattern = id_type === 'pasaporte' ? data.settings.successPattern[id_type] : data.settings.successPattern.others\n  _data.settings.errors = id_type === 'pasaporte' ? data?.settings?.errors[id_type] : data?.settings?.errors?.others\n  validateLabelMsg(value, _data)\n  let _value = id_type === 'pasaporte' ? parseAlphanumeric(value) : parseOnlyNumbers(value)\n  _value = _value.toUpperCase()\n  let status = _value.match(successPattern) && 'success'\n  return [ _value, status ]\n}\n\nconst generalValidator = (value, data) => {\n  const status = value.length > 3 && 'success' \n  return [ value, status ]\n}\n\nconst personalKycValidation = {\n    country:selectListValidator,\n    name:textInputValidator,\n    phone,\n    meta_phone,\n    birthday,\n    address:generalValidator,\n    city:textInputValidator,\n    id_number,\n    id_type:selectListValidator,\n    nationality:selectListValidator,\n    surname:textInputValidator\n}\n\nexport default personalKycValidation"],"sourceRoot":""}