{"version":3,"sources":["components/withKeyActions.js","components/widgets/inputs/ui/dropdownlayout.js","components/widgets/inputs/dropdownContainer.js","components/withdrawAccounts/new/flows/bankAccountFlow.js","components/withdrawAccounts/new/withdrawAccountFormLayout.js","components/withdrawAccounts/new/withdrawAccountForm.js"],"names":["__webpack_require__","d","__webpack_exports__","withKeyActions","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_hooks_useKeyActionAsClick__WEBPACK_IMPORTED_MODULE_1__","AsComponent","props","idCancel","useKeyActionAsClick","concat","eventName","idAccept","a","createElement","Object","assign","DropDownLayout","elements","label","open","active","placeholder","react_default","className","onClick","abrir","style","height","length","map","element","id","key","data-value","value","data-ui_name","ui_name","selectItem","DropDownContainer","state","_this","placeHolder","e","setState","event","estado","target","name","dataset","actualizarEstado","_this2","this","selected","indexOfSelectedElement","findIndex","_this$props","dropdownlayout","Component","BankAccountFlow","banks","cities","loader","initComponent","_callee","withdraw_providers_list","res","bank_list","serve_bank_list","id_types_object","id_type_list","account_type_object","account_type_list","regenerator_default","wrap","_context","prev","next","abrupt","info_needed","bank_name","serveBankOrCityList","sent","addIndexToRootObject","id_type","objectToArray","account_type","currency","console","log","id_types","account_types","stop","update_city","payload","body","code","prevProps","statusInput","handleKeyPress","short_name","siguiente","update_control_form","handleSubmit","account_number","step","search","final_step_create_account","_this$state","react","src","bank","alt","buttons","_id","type","onSubmit","loaders","ItemSelectionContainer","autoFocus","items","format","itemSelect","preventSubmit","gridTemplateRows","itemLayout","actives","_ref2","asyncToGenerator","mark","_callee2","_context2","_x","apply","arguments","dropdownContainer","inputs","status","selectWithdrawProviders","createSelector","modelData","user","withdrawProviders","_withdrawProviders","wp","provider_type","push","connect","current","form","dispatch","action","bindActionCreators","actions","MethodView","loadable","then","bind","FinalTicket","Promise","all","RemittanceAccountFlow","WithdrawAccountFormLayout","select_withdraw_way","withdraw_way","ticket","finalizar","title","subtitle","payment_method","select_method","item_active","withdraw","bankAccountFlow","finishAction","ticket_type","WithdrawAccountForm","surname","form_bank","id_number","city","email","searchMatch","UpdateFormControl","update_form","keynum","window","keyCode","which","test","String","fromCharCode","preventDefault","_callee3","_context3","crearCuenta","_callee4","_context4","isAppLoading","coinsendaServices","addNewWithdrawAccount","ReduceStep","toastMessage","fetchWithdrawAccounts","withdraw_flow","withdraw_flow_action","success_sound","ModalView","_callee5","_context5","persist","requestAnimationFrame","truncateString","maxLength","replace","slice","defineProperty","UpdateForm","_callee6","_context6","cleanSearch","IncreaseStep","CleanForm","setTimeout","history","CurrentForm","route","_this3","_this$props$eventName","withdrawAccountFormLayout","buttonActive","initPrevKeyActions","w_id","withRouter","search_bank","form_control_bank","isLoading","form_withdraw","withCoinsendaServices"],"mappings":"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","file":"static/js/41.9af6b699.chunk.js","sourcesContent":["import React from \"react\";\nimport useKeyActionAsClick from \"../hooks/useKeyActionAsClick\";\n\nexport default function withKeyActions(AsComponent) {\n  return function (props) {\n    const idCancel = useKeyActionAsClick(\n      true,\n      `cancel-button-${props.eventName}`,\n      8,\n      true,\n      props.eventName,\n      true\n    );\n    const idAccept = useKeyActionAsClick(\n      true,\n      `accept-button-${props.eventName}`,\n      13,\n      false,\n      props.eventName,\n      true\n    );\n\n    return <AsComponent idCancel={idCancel} idAccept={idAccept} {...props} />;\n  };\n}\n","import React from \"react\";\n\nconst DropDownLayout = (props) => {\n  const { elements, label, open, active, placeholder } = props;\n\n  // console.log('eeeeeeeeeeeeeeste es el    -- D R O P _ D O W N --', props)\n\n  return (\n    <div className=\"containerInputComponent\">\n      <p className=\"labelText fuente\">{label}</p>\n      <div className={`inputContainer2 ${active ? \"inputActivado\" : \"\"}`}>\n        <div\n          className={`InputDropDown ${active ? \"activeText\" : \"\"}`}\n          onClick={props.abrir}\n        >\n          {placeholder}\n          <div\n            className={`InputDesplegable ${open ? \"Idesplegado\" : \"\"}`}\n            style={{ height: open ? `${elements.length * 45}px` : \"0px\" }}\n          >\n            {elements.map((element, id) => {\n              return (\n                <p\n                  key={id}\n                  data-value={element.value}\n                  data-ui_name={element.ui_name}\n                  onClick={props.selectItem}\n                >\n                  {element.ui_name}{\" \"}\n                </p>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DropDownLayout;\n","import React, { Component } from \"react\";\nimport DropDownLayout from \"./ui/dropdownlayout\";\nimport \"./inputStyles.css\";\n\nclass DropDownContainer extends Component {\n  state = {\n    elements: this.props.elements,\n    open: false,\n    placeHolder: this.props.placeholder,\n  };\n\n  componentDidMount() {\n    if (this.props.selected && this.props.elements) {\n      const indexOfSelectedElement = this.props.elements.findIndex(\n        (element) => element.value === this.props.selected\n      );\n\n      this.setState({\n        placeHolder: this.props.elements[indexOfSelectedElement].ui_name,\n      });\n    }\n  }\n\n  abrir = (e) => {\n    this.setState({\n      open: !this.state.open,\n    });\n  };\n\n  selectItem = (event) => {\n    const estado = {\n      target: {\n        name: this.props.name,\n        value: event.target.dataset.value,\n      },\n    };\n\n    this.setState({\n      placeHolder: event.target.dataset.ui_name,\n    });\n\n    this.props.actualizarEstado(estado);\n  };\n\n  render() {\n    const { label, active } = this.props;\n    // console.log('DESDE EL CONTENEDOR DEL DROPDOWN::::', this.props)\n    return (\n      <DropDownLayout\n        elements={this.state.elements}\n        open={this.state.open}\n        abrir={this.abrir}\n        placeholder={this.state.placeHolder}\n        selectItem={this.selectItem}\n        label={label}\n        active={active}\n      />\n    );\n  }\n}\n\nexport default DropDownContainer;\n","import React, { Component, Fragment } from \"react\";\nimport { InputButton } from \"../../../widgets/buttons/buttons\";\nimport { InputForm } from \"../../../widgets/inputs\";\nimport DropDownContainer from \"../../../widgets/inputs/dropdownContainer\";\nimport { ButtonForms } from \"../../../widgets/buttons/buttons\";\nimport ItemSelectionContainer from \"../../../widgets/items/ItemSelectionContainer\";\nimport ItemLayout from \"../../../widgets/items/itemLayout\";\nimport bank from \"../../../../assets/bank.png\";\nimport SimpleLoader from \"../../../widgets/loaders\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport actions from \"../../../../actions\";\nimport {\n  serveBankOrCityList,\n  addIndexToRootObject,\n  objectToArray,\n} from \"../../../../utils\";\n// import MVList from \"../../../widgets/itemSettings/modal_views/listView\";\nimport { createSelector } from \"reselect\";\nimport withKeyActions from \"../../../withKeyActions\";\n\n// const dropDawnElements = [\n//   {name:'ahorro'},\n//   {name:'corriente'},\n// ]\n//\n// const dropDawnElements2 = [\n//   {name:'ahorro', id:1},\n//   {name:'corriente', id:2},\n// ]\n\nclass BankAccountFlow extends Component {\n  state = {\n    banks: null,\n    cities: null,\n    loader: false,\n  };\n\n  componentDidMount() {\n    this.initComponent();\n    this.props.actualizarEstado({\n      target: {\n        name: \"provider_type\",\n        value: \"bank\",\n      },\n    });\n  }\n\n  initComponent = async () => {\n    const { withdraw_providers_list } = this.props;\n\n    this.setState({ loader: true });\n\n\n    let res = withdraw_providers_list;\n    if (!res) {\n      return false;\n    }\n\n    let bank_list = res && res[0].info_needed.bank_name;\n    // let city_list = res && res[0].info_needed.city;\n\n\n    let serve_bank_list = await serveBankOrCityList(bank_list, \"bank\");\n    // let serve_city_list = await serveBankOrCityList(city_list, \"city\");\n\n    let id_types_object = await addIndexToRootObject(\n      res && res[0].info_needed.id_type\n    );\n    let id_type_list = await objectToArray(id_types_object);\n\n    let account_type_object = await addIndexToRootObject(\n      res && res[0].info_needed.account_type\n    );\n    let account_type_list = await objectToArray(account_type_object);\n    // console.log('|||||||||||||||||||||||||| °°°°°°°°°°°°°°°°°°°°°°°°°°°°°°| withdraw_providers_list |', res[0])\n    // console.log(' --- - - - - -- - - - - -  °°°°|||||°°°   : BANK LIST', serve_bank_list)\n    // console.log(' --- - - - - -- - - - - -  °°°°|||||°°°   : VIRGIN BANK', bank_list)\n\n    await this.props.actualizarEstado({\n      target: { name: \"currency\", value: res[0].currency },\n    });\n    console.log('|||||||||||||||||||||||||||||||||||||||||||serve_bank_list', serve_bank_list)\n\n    this.setState({\n      banks: serve_bank_list,\n      // cities: serve_city_list,\n      id_types: id_type_list, //tipos de documentos disponibles para indicar con el que se abrio la cuenta de retiro\n      account_types: account_type_list, //tipos de cuentas bancarias disponibles\n      loader: false,\n    });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      // console.log('|||||_________________user? ', this.props.user.id_type, this.props.id_type)\n    }\n  }\n\n  update_city = (payload) => {\n    // console.log('CITY SELECT',payload)\n\n    let body = {\n      target: {\n        name: \"city\",\n        value: payload.code,\n      },\n    };\n\n    this.props.actualizarEstado(body);\n  };\n\n  render() {\n    const {\n      statusInput,\n      handleKeyPress,\n      short_name,\n      siguiente,\n      update_control_form,\n      handleSubmit,\n      account_number,\n      account_type,\n      bank_name,\n      step,\n      search,\n      name,\n      actualizarEstado,\n      // city,\n      final_step_create_account,\n      // id_type,\n      // id_number,\n      // user,\n      idAccept,\n    } = this.props;\n\n    const { banks, loader } = this.state;\n\n    console.log('|||||| step::', step)\n\n    return (\n      <Fragment>\n        {step === 2 && (\n          <div className=\"nBstep1 fuente\">\n            <div className=\"titleNewAccount\">\n              <img src={bank} alt=\"\" height=\"70\" />\n              <p>\n                Genial <strong>{name}</strong>\n              </p>\n            </div>\n            <p className=\"nBtextInit fuente\">\n              {\" \"}\n              Al añadir una cuenta bancaria para realizar tus retiros de moneda local por primera vez, el tiempo promedio que tarda para inscribirse son 2 horas hábiles a partir del momento en que se realizó el proceso. Tener tu cuenta inscrita previamente puede hacer que tus retiros en moneda local se ejecuten más rápido.\n\n              {/* Al añadir una cuenta bancaria para realizar tus retiros de pesos\n              colombianos <strong>(COP)</strong> por primera vez, tarda en\n              promedio <strong>2 horas habiles</strong> a partir de su\n              inscripción, para que esta sea aprobada por la entidad bancaria,\n              una vez tu cuenta haya sido aprobada, tus retiros serán casi\n              inmediatos */}\n            </p>\n\n            <div id=\"bankChooseButton\">\n              <ButtonForms\n                _id={idAccept}\n                type=\"primary\"\n                active={true}\n                siguiente={siguiente}\n              >\n                OK, comencemos\n              </ButtonForms>\n            </div>\n          </div>\n        )}\n\n        {step === 3 && (\n          <div className=\"step1\">\n            <form onSubmit={handleSubmit} className=\"NWithdrawAccountFlow\">\n              <div className=\"titleAccountFlow\">\n                <h1 className=\"DLtitles2\">Elige la entidad bancaria</h1>\n                <p className=\"fuente DLstitles\">de la cuenta que quieres agregar:</p>\n              </div>\n              {loader ? (\n                <SimpleLoader label=\"Cargando...\" />\n              ) : (\n                <ItemSelectionContainer\n                  type=\"banks\"\n                  autoFocus={true}\n                  items={banks}\n                  format=\"svg\"\n                  itemSelect={bank_name}\n                  actualizarEstado={actualizarEstado}\n                  handleSubmit={handleSubmit}\n                  update_control_form={update_control_form}\n                />\n              )}\n\n              <div id=\"bankChooseButton\">\n                <InputButton\n                  id={idAccept}\n                  preventSubmit={true}\n                  label=\"Continuar\"\n                  type=\"primary\"\n                  active={search.length === 1 && bank_name !== \"\"}\n                />\n              </div>\n            </form>\n          </div>\n        )}\n\n        {(step === 4 || step === 5) && (\n          <div className=\"step2\">\n            <div\n              id=\"contMsg\"\n              className=\"contMsg\"\n              style={{\n                gridTemplateRows:\n                  step === 4 ? \"auto 1fr 15vh\" : step >= 5 ? \"auto 1fr\" : \"\",\n              }}\n            >\n              <div className=\"nBcontBank\">\n                <ItemLayout\n                  format=\"svg\"\n                  actives={true}\n                  type=\"bank\"\n                  code={short_name}\n                  name={bank_name}\n                />\n              </div>\n\n              {/* {step === 4 && (\n                <Fragment>\n                  <form\n                    className=\"formAccountFlow grid-disable\"\n                    onSubmit={handleSubmit}\n                  >\n                    <div className=\"contInfoIdType\">\n                      <p className=\"nBtextInit fuente\">\n                        Es de vital importancia que esta cuenta del{\" \"}\n                        <strong>{bank_name}</strong> sea de tu propiedad{\" \"}\n                        <strong>{name}</strong>, de lo contrario se invalidarán\n                        las transacciones y es posible que tus fondos queden\n                        congelados hasta nuevo aviso.\n                      </p>\n                      <div className=\"contForminputsAccount\">\n                        <DropDownContainer\n                          placeholder=\"ej. Cédula de ciudadanía, Pasaporte etc\"\n                          name=\"id_type\"\n                          elements={this.state.id_types}\n                          selected={this.props.id_type}\n                          label=\"Elige el tipo de documento con el cual abriste la cuenta bancaria:\"\n                          actualizarEstado={actualizarEstado}\n                          active={\n                            (this.props.id_type &&\n                              this.props.user.id_type === this.props.id_type) ||\n                            (id_type && id_number)\n                          }\n                        />\n\n                        {this.props.id_type &&\n                          this.props.user.id_type !== this.props.id_type && (\n                            <InputForm\n                              type=\"text\"\n                              autoFocus={true}\n                              label=\"Escribe el número de documento de identidad\"\n                              placeholder=\"Ej. 1123321...\"\n                              name=\"id_number\"\n                              actualizarEstado={actualizarEstado}\n                              active={id_type && id_number}\n                              value={id_number}\n                              handleKeyPress={handleKeyPress}\n                              status={statusInput}\n                            />\n                          )}\n                      </div>\n                    </div>\n\n                    <div id=\"bankChooseButton\" className=\"contbuttonAccount\">\n                      <InputButton\n                        id={idAccept}\n                        preventSubmit={true}\n                        label=\"Continuar\"\n                        type=\"primary\"\n                        active={\n                          (id_type && user.id_type === id_type) ||\n                          (id_type && id_number)\n                        }\n                      />\n                    </div>\n                  </form>\n                </Fragment>\n              )} */}\n\n              {step === 4 && (\n                <form className=\"formAccountFlow\" onSubmit={async(e) => {\n                  await handleSubmit(e)\n                  final_step_create_account(e)\n                }}>\n                  <div className=\"contForminputsAccount\">\n                    <DropDownContainer\n                      placeholder=\"Tipo de cuenta\"\n                      elements={this.state.account_types}\n                      label=\"Elige el tipo de cuenta:\"\n                      actualizarEstado={actualizarEstado}\n                      name=\"account_type\"\n                      selected={account_type}\n                      active={account_type && account_number}\n                    />\n\n                    <InputForm\n                      type=\"text\"\n                      label=\"Escribe el número de cuenta\"\n                      placeholder=\"Ej. 1123321...\"\n                      name=\"account_number\"\n                      autoFocus={true}\n                      actualizarEstado={actualizarEstado}\n                      active={account_type && account_number}\n                      value={account_number}\n                      handleKeyPress={handleKeyPress}\n                      status={statusInput}\n                    />\n                  </div>\n                  <div id=\"bankChooseButton\" className=\"contbuttonAccount\">\n                    <InputButton\n                      id={idAccept}\n                      preventSubmit={true}\n                      label=\"Continuar\"\n                      type=\"primary\"\n                      active={account_type && account_number}\n                    />\n                  </div>\n                </form>\n              )}\n\n              {/* {step === 6 && (\n                <form\n                  className=\"formAccountFlow city\"\n                  onSubmit={final_step_create_account}\n                >\n                  <div className=\"contListCities\">\n                    <p className=\"fuente labelText\">\n                      ¿desde que ciudad abriste esta cuenta bancaria?\n                    </p>\n                    <MVList\n                      list={cities}\n                      noIcon={true}\n                      theme=\"classic\"\n                      actualizarEstado={this.update_city}\n                      current_item={city}\n                      name_item=\"city\"\n                    />\n                  </div>\n                  <div className=\"momContbuttonAccount\">\n                    <div id=\"bankChooseButton\" className=\"contbuttonAccount\">\n                      <InputButton\n                        id={idAccept}\n                        preventSubmit={true}\n                        label=\"Crear cuenta\"\n                        type=\"primary\"\n                        active={city}\n                      />\n                    </div>\n                  </div>\n                </form>\n              )} */}\n            </div>\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nconst selectWithdrawProviders = createSelector(\n  [\n    (state) => state.modelData.user.withdrawProviders,\n    (state) => state.modelData.withdrawProviders,\n  ],\n  (_withdrawProviders, withdrawProviders) => {\n    const withdraw_providers_list = [];\n    _withdrawProviders &&\n      _withdrawProviders.map((wp) => {\n        if (withdrawProviders[wp].provider_type !== \"bank\") {\n          return false;\n        }\n        return withdraw_providers_list.push(withdrawProviders[wp]);\n      });\n    return withdraw_providers_list;\n  }\n);\n\nfunction mapStateToProps(state) {\n  const { user } = state.modelData;\n\n  return {\n    withdraw_providers_list: selectWithdrawProviders(state),\n    user: user,\n    current: state.form.current,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withKeyActions(BankAccountFlow));\n","import React, { Fragment } from \"react\";\nimport loadable from \"@loadable/component\";\nimport SimpleLoader from \"../../widgets/loaders\";\nimport { payment_method } from \"../../api/ui/api.json\";\nimport BankAccountFlow from \"./flows/bankAccountFlow\";\nimport \"./newAccount.css\";\nimport \"../../wallets/newWallet/newWallet.css\";\n\nconst MethodView = loadable(() => import(\"./views/1method\"));\nconst FinalTicket = loadable(() => import(\"./views/finalTicket\"));\nconst RemittanceAccountFlow = loadable(() =>\n  import(\"./flows/remittanceAccountFlow\")\n);\n\nconst WithdrawAccountFormLayout = (props) => {\n  const {\n    siguiente,\n    step,\n    select_withdraw_way,\n    withdraw_way,\n    ticket,\n    finalizar,\n    eventName,\n  } = props;\n\n  // console.log\n\n  return (\n    <div className=\"containerFormWallet\">\n      {step === 1 && (\n        <Fragment>\n          <MethodView\n            title=\"En esta cuenta deseas\"\n            subtitle=\"efectuar los retiros por:\"\n            items={payment_method}\n            select_method={select_withdraw_way}\n            item_active={withdraw_way}\n            siguiente={siguiente}\n            withdraw={true}\n          />\n        </Fragment>\n      )}\n\n      {step >= 2 && withdraw_way === \"bankaccount\" && (\n        <BankAccountFlow eventName={eventName} {...props} />\n      )}\n\n      {step >= 2 && withdraw_way === \"cash\" && (\n        <RemittanceAccountFlow {...props} />\n      )}\n\n      {step === 6 && (\n        <Fragment>\n          {!ticket ? (\n            <SimpleLoader label={`Creando Cuenta de retiro`} />\n          ) : (\n            <FinalTicket\n              finishAction={finalizar}\n              ticket={ticket}\n              ticket_type=\"withdraw_form\"\n            />\n          )}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default WithdrawAccountFormLayout;\n","import React, { Component } from \"react\";\nimport WithdrawAccountFormLayout from \"./withdrawAccountFormLayout\";\nimport { connect } from \"react-redux\";\n// import { updateFormControl, FormWallet } from '../../../actions'\nimport { bindActionCreators } from \"redux\";\nimport actions from \"../../../actions\";\nimport { withRouter } from \"react-router\";\nimport withCoinsendaServices from \"../../withCoinsendaServices\";\nimport { createSelector } from \"reselect\";\n\nclass WithdrawAccountForm extends Component {\n  state = {\n    name: this.props.user.name,\n    surname: this.props.user.surname,\n    bank_name: this.props.form_bank.bank_name,\n    account_type: this.props.form_bank.account_type,\n    account_number: this.props.form_bank.account_number,\n    short_name: this.props.form_bank.short_name,\n    id_type: null,\n    statusInput: \"\",\n    withdraw_way: \"bankaccount\",\n    provider_type: \"\",\n    id_number: \"\",\n    city: \"medellin\",\n    email: this.props.user.email,\n    currency: null,\n    ticket: null,\n  };\n\n  update_control_form = (searchMatch) => {\n    //esta función valida si tenemos un nombre item escrito y si tenemos un item coin/bank seleccionado, si cumple con esto, nos habilita el call to action para seguir hacia la proxima acción\n    // console.log('update_control_form SE ESTA ACTUALIZANDO: ', searchMatch)\n\n    if (!searchMatch || this.props.search.length > 1) {\n      this.props.action.UpdateFormControl(\"bank\", false);\n    }\n\n    switch (this.props.step) {\n      case 3:\n        if (this.props.search.length === 1) {\n          this.props.action.UpdateFormControl(\"bank\", true);\n        }\n        break;\n\n      case 5:\n        if (\n          this.state.account_type !== \"\" &&\n          this.state.account_number !== \"\"\n        ) {\n          this.props.action.UpdateFormControl(\"bank\", true);\n        }\n        break;\n      default:\n        console.log(\"\");\n    }\n  };\n\n  // this.props.action.UpdateForm('deposit', this.state)\n\n  select_withdraw_way = async (payload, withdraw_way) => {\n    await this.setState({\n      withdraw_way: withdraw_way,\n      provider_type: withdraw_way === \"bankaccount\" ? \"bank\" : \"\",\n    });\n\n    // this.props.action.UpdateFormControl('deposit', true)\n    this.update_form();\n  };\n\n  handleKeyPress = (e) => {\n    var keynum = window.event ? window.event.keyCode : e.which;\n    // if ((keynum == 8) || (keynum == 46) || (keynum == 45) || (keynum == 44) ){\n    if (keynum < 48 || keynum > 57) {\n      this.setState({ statusInput: \"Solo se aceptan números en este campo\" });\n      return true;\n    }\n\n    this.setState({ statusInput: \"\" });\n    return /\\d/.test(String.fromCharCode(keynum));\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    this.actualizarEstado(event);\n\n    await this.siguiente();\n    // if(this.props.step === 7){\n    //   this.crearCuenta()\n    // }\n  };\n\n  final_step_create_account = async (event) => {\n    await this.handleSubmit(event);\n    // if(this.props.withdraw_flow){\n    //   return this.props.withdraw_flow_action()\n    // }\n    this.crearCuenta();\n  };\n\n  crearCuenta = async () => {\n    // simulación Endpoint Crear wallet\n    this.props.action.isAppLoading(true);\n    let res = await this.props.coinsendaServices.addNewWithdrawAccount(\n      this.state\n    );\n    if (!res) {\n      this.props.action.ReduceStep(this.props.current, 2);\n      this.props.toastMessage(\"No es posible crear la cuenta ahora.\", \"error\");\n      return this.props.action.isAppLoading(false);\n    }\n\n    await this.props.coinsendaServices.fetchWithdrawAccounts();\n\n    if (this.props.withdraw_flow) {\n      return this.props.withdraw_flow_action(res);\n    }\n\n    await this.setState({\n      ticket: res,\n    });\n\n    // setTimeout(()=>{\n    this.props.action.success_sound();\n    this.update_form();\n    this.props.action.isAppLoading(false);\n    this.props.action.ModalView(\"modalSuccess\");\n    // }, 1500)\n  };\n\n  actualizarEstado = async (event) => {\n    event.persist && event.persist();\n    if (event.target && event.target.short_name) {\n      this.setState({ short_name: event.target.short_name });\n    }\n\n    const name = event.target.name;\n    let value = event.target.value;\n    // console.log('|||||| ACTUALIZANDO ESTADO:::', name, value)\n    // console.log('|||||| ESTADO ACTUAL:::', this.state)\n\n    window.requestAnimationFrame(() => {\n      let truncateString = false;\n      let maxLength = 50;\n      if (name && name === \"id_number\") {\n        truncateString = true;\n        if (this.state.id_type === \"pasaporte\") {\n          if (value && !/^[a-zA-Z0-9]{1,20}$/g.test(value)) return;\n        } else if (this.state.id_type === \"nit\") {\n          maxLength = 11;\n          value = value.replace(/(\\d{9})(\\d{1})/, \"$1-$2\");\n        } else {\n          if (value && !/^[0-9]{1,12}$/g.test(value)) return;\n        }\n      }\n\n      if (name && name === \"account_number\") {\n        value = value.replace(/[^0-9]/g, \"\");\n        truncateString = true;\n        maxLength = 20;\n      }\n\n      if (truncateString && value.length > maxLength) {\n        value = value.slice(0, maxLength);\n      }\n\n      if (name) {\n        this.setState({ [name]: value });\n      }\n\n      // optimize, the actions below make app slow\n      this.update_control_form(value);\n      this.update_form();\n    });\n  };\n\n  update_form = () => {\n    // Acualizamos el estado del formulario en redux\n    this.props.action.UpdateForm(\"bank\", this.state);\n  };\n\n  siguiente = async () => {\n    // this.props.action.UpdateFormControl('bank',false)\n    // this.update_form(this.state)\n\n    if (this.props.step === 1) {\n      await this.cleanSearch();\n    }\n    return this.props.action.IncreaseStep(this.props.current);\n  };\n\n  finalizar = (event) => {\n    this.props.action.CleanForm(\"bank\");\n    this.props.action.CleanForm(\"withdraw\");\n    // this.props.action.toggleModal()\n  };\n\n  cleanSearch = () => {\n    this.setState({\n      bank_name: \"\",\n    });\n    this.props.action.UpdateFormControl(\"bank\", false);\n    this.props.action.cleanSearch(\"bank\");\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.props.history.push(`?form=wa_terms`);\n    }, 100);\n\n    const { withdraw_flow } = this.props;\n\n    if (withdraw_flow) {\n      return this.props.action.CurrentForm(\"withdraw\");\n    }\n\n    this.props.action.CurrentForm(\"bank\");\n  }\n\n  componentDidUpdate(prevProps) {\n    // inserto las siguientes rutas para poder hacer seguimiento al funnel desde hotjar\n    if (prevProps.step === this.props.step) {\n      return;\n    }\n    // console.log('||||||||||||||||||| STEP WITHDRAW ACCOUNT FORM ==> ', prevProps.step, this.props.step, this.props)\n\n    let route;\n\n    if (this.props.step === 2) {\n      route = `?form=wa_terms`;\n    }\n\n    if (this.props.step === 3) {\n      route = `?form=wa_choose_bank`;\n    }\n\n    if (this.props.step === 4) {\n      route = `?form=wa_enter_bank_details`;\n    }\n\n    if (this.props.step === 5) {\n      route = `?form=wa_id_type`;\n    }\n\n    if (this.props.step === 6) {\n      route = `?form=wa_opening_city`;\n    }\n\n    if (this.props.step === 7) {\n      route = `?form=wa_success`;\n    }\n    // console.log('||||||||||||||||||||||||||||||| componentDidUpdate =?=> ')\n    setTimeout(() => {\n      this.props.history.push(route);\n    }, 100);\n    // alert()\n  }\n\n  render() {\n    // console.log('R E N D E R I Z A N D O',this.props.action)\n    // console.log('ESTAMOS RENDERIZANDO EL S T A T E de BANK ::::::  ', this.state)\n    const {\n      step,\n      search,\n      withdraw_flow,\n      withdraw_flow_action,\n      eventName = \"onkeyup\",\n    } = this.props;\n\n    // console.log('R E N D E R I Z A N D O', step)\n\n    return (\n      <WithdrawAccountFormLayout\n        withdraw_flow={withdraw_flow}\n        withdraw_flow_action={withdraw_flow_action}\n        statusInput={this.state.statusInput}\n        handleKeyPress={this.handleKeyPress}\n        crearCuenta={this.crearCuenta}\n        siguiente={this.siguiente}\n        actualizarEstado={this.actualizarEstado}\n        handleSubmit={this.handleSubmit}\n        update_control_form={this.update_control_form}\n        buttonActive={this.props.buttonActive}\n        loader={this.props.loader}\n        finalizar={this.finalizar}\n        step={step}\n        select_withdraw_way={this.select_withdraw_way}\n        cleanSearch={this.cleanSearch}\n        initPrevKeyActions={this.props.initPrevKeyActions}\n        search={search}\n        final_step_create_account={this.final_step_create_account}\n        eventName={eventName}\n        {...this.state}\n      />\n    );\n  }\n}\n\nconst selectWithdrawProviders = createSelector(\n  [\n    (state) => state.modelData.user.withdrawProviders,\n    (state) => state.modelData.withdrawProviders,\n  ],\n  (_withdrawProviders, withdrawProviders) => {\n    return (\n      _withdrawProviders &&\n      _withdrawProviders.map((w_id) => {\n        return withdrawProviders[w_id];\n      })\n    );\n  }\n);\n\nfunction mapStateToProps(state, props) {\n  // console.log('R E N D E R I Z A N D O ssssssss', props)\n  const { withdraw_flow } = props;\n  const { user } = state.modelData;\n\n  return {\n    search: state.form.search_bank,\n    withdrawProviders: selectWithdrawProviders(state),\n    form_bank: state.form.form_bank,\n    buttonActive: state.form.form_control_bank,\n    loader: state.isLoading.loader,\n    current: state.form.current,\n    step: withdraw_flow\n      ? state.form.form_withdraw.step\n      : state.form.form_bank.step,\n    user: user,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withCoinsendaServices(WithdrawAccountForm))\n);\n"],"sourceRoot":""}