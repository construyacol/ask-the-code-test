{"version":3,"sources":["components/widgets/items/itemLayout.js","components/widgets/items/ItemSelectionContainer.js","components/wallets/newWallet/newWalletLayout.js","components/wallets/newWallet/newWalletContainer.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_loadable_component__WEBPACK_IMPORTED_MODULE_1__","IconSwitch","loadable","Promise","resolve","then","bind","ItemLayout","props","doSelectionForItem","name","code","currency_type","pair_id","actualizarEstado","useEffect","actives","type","placeholder","primarySelect","format","itemType","a","createElement","id","concat","className","onClick","icon","size","title","src","require","alt","width","map","item","key","ItemSelectionContainer","state","_this","selected","coincidencia","items","load_items","_callee","items_type","_home_andres_repos_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","next","coins","t0","coinsendaServices","fetchAllCurrencies","sent","banks","remittance","setState","stop","buscarResultados","value","buscarItemStore","search","length","filter","query","toLowerCase","includes","current","estado","target","short_name","actualizar","event","debounce","debounceFinder","item_name","isEqual","action","Search","update_control_form","seleccionarItem","close","clearItem","this","_this2","_this$props","buttonActive","itemSelect","label","react__WEBPACK_IMPORTED_MODULE_7___default","_buttons_buttons__WEBPACK_IMPORTED_MODULE_10__","active","currency","_inputs__WEBPACK_IMPORTED_MODULE_9__","autoFocus","_itemLayout__WEBPACK_IMPORTED_MODULE_8__","Object","assign","_loaders__WEBPACK_IMPORTED_MODULE_15__","Component","connect","_state$form","form","form_control_deposit","form_deposit","search_coin","search_bank","form_wallet","form_bank","form_control_wallet","form_control_bank","search_deposit","currencies","modelData","dispatch","bindActionCreators","actions","withCoinsendaServices","NewWalletLayout","handleSubmit","step","loader","address","short_currency_name","qr","clearCurrency","_availableWalletCreat","availableWalletCreator","availableCurrencies","slicedToArray","idForNewWalletButton","useKeyActionAsClick","react_default","Fragment","onSubmit","style","inputs","clase","buttons","skeleton","loaders","xmlns","height","fill","stroke","strokeWidth","cx","cy","d","copyContainer","valueToCopy","color","toggleModal","finalizar","user","isLoading","wallets","_useState","useState","_useState2","setName","_useState3","_useState4","setCurrency","_useState5","_useState7","_useState8","setShortCurrencyName","_useCoinsendaServices","useCoinsendaServices","_useToastMessage","useToastMessage","toastMessage","crearWallet","_ref","asyncToGenerator","regenerator_default","mark","get_currency","body","account","msg","matchItem","primary","data","description","country","enabled","is_token","createWallet","abrupt","errorHandle","getWalletsByUser","createAndInsertDepositProvider","isAppLoading","success_sound","CleanForm","history","push","apply","arguments","ReduceStep","_ref2","_callee2","names","_context2","_x","siguiente","IncreaseStep","CurrentForm","states","newWalletLayout","preventDefault","searchMatch"],"mappings":"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","file":"static/js/37.7b152010.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport loadable from \"@loadable/component\";\nimport \"./items.css\";\n\nconst IconSwitch = loadable(() => import(\"../icons/iconSwitch\"));\n\nfunction ItemLayout(props) {\n  const doSelectionForItem = () => {\n    const { name, code, currency_type, pair_id, actualizarEstado } = props;\n\n    actualizarEstado && actualizarEstado(name, code, currency_type, pair_id);\n  };\n\n  useEffect(() => {\n    props.actives && doSelectionForItem();\n  }, [props.actives]);\n\n  const {\n    type,\n    actives,\n    name,\n    code,\n    placeholder,\n    primarySelect,\n    format,\n    itemType,\n  } = props;\n  return (\n    <div\n      id={`${primarySelect ? \"primarySelect\" : \"\"}`}\n      className={`${type === \"payment_method\" ? \"ILtuvieja\" : \"\"} `}\n    >\n      <div\n        className={`item ${actives ? \"itemSelection\" : \"\"}`}\n        onClick={!actives || itemType === \"banks\" ? doSelectionForItem : null}\n      >\n        {!format ? (\n          type === \"coins\" ||\n          type === \"payment_method\" ||\n          type === \"service_mode\" ? (\n            actives ? (\n              <div title={name} id={code}>\n                {type === \"bank\" && (\n                  <img\n                    className=\"itemSobre activaos\"\n                    src={require(`./assets/bank/${code}.png`)}\n                    alt=\"\"\n                    width=\"60\"\n                  />\n                )}\n                <img\n                  className=\"itemSobre activaos\"\n                  src={require(`./assets/${type}/${code}2.png`)}\n                  alt=\"\"\n                  width=\"60\"\n                />\n              </div>\n            ) : (\n              <div title={name} id={code}>\n                <img\n                  className=\"itemFuera\"\n                  src={require(`./assets/${type}/${code}.png`)}\n                  width=\"60\"\n                  alt=\"\"\n                  id={code}\n                  title={name}\n                />\n                <img\n                  className=\"itemSobre\"\n                  src={require(`./assets/${type}/${code}2.png`)}\n                  width=\"60\"\n                  alt=\"\"\n                  id={code}\n                  title={name}\n                />\n              </div>\n            )\n          ) : (\n            <img\n              className={`banquis ${actives ? \"itemVisible\" : \"\"}`}\n              src={require(`./assets/${type}/${code}.png`)}\n              alt=\"\"\n              id={code}\n              title={name}\n              width=\"85\"\n            />\n          )\n        ) : (\n          <IconSwitch icon={code} size={45} />\n        )}\n        {primarySelect ? (\n          <div id=\"primarySelectText\" className=\"primarySelectText\">\n            <p title={name}>{name}</p>\n            {placeholder &&\n              placeholder.map((item) => {\n                return (\n                  <p id=\"ILplaceholder2\" className=\"fuente\" key={item.id}>\n                    {item.name}\n                  </p>\n                );\n              })}\n          </div>\n        ) : (\n          <p title={name}>{name}</p>\n        )}\n      </div>\n      {placeholder && !primarySelect && (\n        <div className=\"placeHoldCont\">\n          {placeholder.map((item) => {\n            return (\n              <p className=\"ILplaceholder fuente\" key={item.id}>\n                {item.name}\n              </p>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ItemLayout;\n","import React, { Component } from \"react\";\nimport ItemLayout from \"./itemLayout\";\nimport InputForm from \"../inputs\";\nimport { ItemSelected } from \"../buttons/buttons\";\nimport { connect } from \"react-redux\";\nimport { banks, remittance } from \"../../api/ui/api.json\";\nimport actions from \"../../../actions\";\nimport { bindActionCreators } from \"redux\";\nimport SimpleLoader from \"../loaders\";\nimport withCoinsendaServices from \"../../withCoinsendaServices\";\nimport { debounce } from \"../../../utils\";\n\nimport \"./items.css\";\n\nclass ItemSelectionContainer extends Component {\n  state = {\n    placeholder:\n      this.props.type === \"coins\" ? \"ej: Bitcoin\" : \"ej: Bancolombia\",\n    selected: this.props.selected,\n    coincidencia: \"\",\n    items: this.props.items,\n    // items: this.props.type === \"coins\" ? coins : banks\n  };\n\n  componentDidMount() {\n    const { items } = this.state;\n    if (items) {\n      return false;\n    }\n    this.load_items(this.props.type);\n  }\n\n  load_items = async (items_type) => {\n    let items;\n    if (items_type === \"coins\") {\n      items = this.props.coins\n        ? this.props.coins\n        : await this.props.coinsendaServices.fetchAllCurrencies();\n    }\n    if (items_type === \"banks\") {\n      items = banks;\n    }\n    if (items_type === \"remittance\") {\n      items = remittance;\n    }\n\n    // remittance\n    this.setState({\n      items: items,\n    });\n  };\n\n  buscarResultados = (value) => {\n    this.buscarItemStore(value);\n    let coincidencia = { name: \"\", code: \"\" };\n\n    //si tenemos una coincidencia con el valor buscado, extraemos el nombre de la coincidencia y actualizamos el estado del formulario\n    if (this.props.search.length < 2) {\n      this.state.items.filter((item) => {\n        let query = value.toLowerCase();\n        if (item.name.toLowerCase().includes(query)) {\n          this.setState({\n            selected: true,\n            coincidencia: item.name.toLowerCase(),\n          });\n          return (coincidencia = item);\n        }\n        return false;\n      });\n    }\n\n    const { current } = this.props;\n    const estado = {\n      target: {\n        name:\n          current === \"wallets\"\n            ? \"currency\"\n            : current === \"bank\"\n            ? \"bank_name\"\n            : \"deposit_service\",\n        value: coincidencia.name.toLowerCase(),\n        short_name: coincidencia.code.toLowerCase(),\n      },\n    };\n\n    this.props.actualizarEstado(estado);\n  };\n\n  actualizar = (event) => {\n    const value = event.target.value;\n    const debounceFinder = debounce(this.buscarResultados, 250);\n    debounceFinder(value);\n  };\n\n  buscarItemStore = (item_name, isEqual) => {\n    // console.log('buscarItemStore',item_name, this.props.current, this.state.items)\n    this.props.action.Search(\n      item_name,\n      this.props.current,\n      this.state.items,\n      isEqual\n    );\n    this.props.update_control_form(item_name);\n  };\n\n  seleccionarItem = (name, short_name) => {\n    this.setState({\n      coincidencia: name,\n      selected: true,\n    });\n    const { current } = this.props;\n\n    const estado = {\n      target: {\n        name:\n          current === \"wallets\"\n            ? \"currency\"\n            : current === \"bank\" || current === \"withdraw\"\n            ? \"bank_name\"\n            : \"deposit_service\",\n        value: name,\n        short_name: short_name,\n      },\n    };\n\n    this.buscarItemStore(name, true);\n    this.props.actualizarEstado(estado);\n  };\n\n  close = () => {\n    if (this.props.clearItem) {\n      this.props.clearItem();\n    }\n    this.setState({\n      selected: false,\n      placeholder:\n        this.props.type === \"coins\" ? \"ej: Bitcoin\" : \"ej: Bancolombia\",\n    });\n    return this.buscarItemStore(\"\");\n  };\n\n  render() {\n    const { search, buttonActive, itemSelect, label } = this.props;\n    const { items } = this.state;\n\n    // console.log('this.state.selected  ', this.state, search)\n    return (\n      <section className=\"ItemSelectionContainers\" id=\"itemSelect\">\n        {this.state.selected ? (\n          <ItemSelected\n            close={this.close}\n            label={label}\n            active={itemSelect || search.length}\n            value={itemSelect || (search.length && search[0].currency)}\n          >\n            {this.state.coincidencia ||\n              itemSelect ||\n              (search.length && search[0].currency)}\n          </ItemSelected>\n        ) : (\n          <InputForm\n            type=\"text\"\n            autoFocus={this.props.autoFocus}\n            label={label}\n            placeholder={this.state.placeholder}\n            name=\"currency\"\n            actualizarEstado={this.actualizar}\n            active={buttonActive}\n          />\n        )}\n\n        <div className=\"ItemSelectionContainer\">\n          {!this.state.items ? (\n            <SimpleLoader />\n          ) : (\n            <div className=\"containerItems\">\n              {\n                // si tenemos una busqueda renderize a partir de la busqueda\n                search.length > 0\n                  ? search.length < 2\n                    ? // validamos si dentro de la busqueda hay una sola coincidencia, si la hay actualizamos el estado y la autoseleccionamos\n                      search.map((item) => {\n                        return (\n                          <ItemLayout\n                            itemType={this.props.type}\n                            actualizarEstado={this.seleccionarItem}\n                            actives={true}\n                            {...item}\n                            key={item.id}\n                            format={this.props.format}\n                          />\n                        );\n                      })\n                    : //Si hay mas de 1 coincidencia, solo mostramos los items inactivos resultantes de la busqueda\n                      search.map((item) => {\n                        return (\n                          <ItemLayout\n                            actualizarEstado={this.seleccionarItem}\n                            {...item}\n                            key={item.id}\n                            format={this.props.format}\n                          />\n                        );\n                      })\n                  : // sino tenemos busqueda renderice todos los items\n                    items.map((item) => {\n                      return (\n                        <ItemLayout\n                          actualizarEstado={this.seleccionarItem}\n                          {...item}\n                          key={item.id}\n                          format={this.props.format}\n                        />\n                      );\n                      // return <ItemLayout actualizarEstado={this.handleClick} {...item} key={item.id}/>\n                    })\n              }\n            </div>\n          )}\n        </div>\n      </section>\n    );\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  // console.log('R E N D E R I Z A N D O', state, state.form.current)\n\n  const {\n    form_control_deposit,\n    form_deposit,\n    current,\n    search_coin,\n    search_bank,\n    form_wallet,\n    form_bank,\n    form_control_wallet,\n    form_control_bank,\n    search_deposit,\n  } = state.form;\n\n  const { currencies } = state.modelData;\n\n  return {\n    search:\n      current === \"wallets\"\n        ? search_coin\n        : current === \"bank\" || current === \"withdraw\"\n        ? search_bank\n        : search_deposit,\n    form:\n      current === \"wallets\"\n        ? form_wallet\n        : current === \"bank\" || current === \"withdraw\"\n        ? form_bank\n        : form_deposit,\n    buttonActive:\n      current === \"wallets\"\n        ? form_control_wallet\n        : current === \"bank\" || current === \"withdraw\"\n        ? form_control_bank\n        : form_control_deposit,\n    selected:\n      current === \"wallets\"\n        ? search_coin.length === 1\n          ? true\n          : false\n        : current === \"bank\" || current === \"withdraw\"\n        ? search_bank.length === 1\n          ? true\n          : false\n        : search_deposit.length === 1\n        ? true\n        : false,\n    current: current,\n    coins: currencies,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withCoinsendaServices(ItemSelectionContainer));\n","import React from \"react\";\nimport \"./newWallet.css\";\nimport { InputButton, ButtonSuccess } from \"../../widgets/buttons/buttons\";\nimport InputForm from \"../../widgets/inputs\";\nimport ItemSelectionContainer from \"../../widgets/items/ItemSelectionContainer\";\nimport CopyContainer from \"../../widgets/copy/copyContainer\";\nimport { SimpleLoader } from \"../../widgets/loaders\";\nimport availableWalletCreator from \"../../hooks/availableWalletCreator\";\nimport useKeyActionAsClick from \"../../../hooks/useKeyActionAsClick\";\nimport NewWalletSkeleton from './skeleton'\n\nconst NewWalletLayout = (props) => {\n  const {\n    handleSubmit,\n    actualizarEstado,\n    name,\n    currency,\n    step,\n    loader,\n    address,\n    short_currency_name,\n    qr,\n    clearCurrency,\n  } = props;\n\n  const [availableCurrencies] = availableWalletCreator();\n  const idForNewWalletButton = useKeyActionAsClick(true, \"add-new-wallet-button\", 13, false, \"onkeypress\", true);\n\n  return (\n    <div className=\"containerFormWallet newWallet\">\n      {step === 1 && (\n        <div className=\"step1 newWallet\">\n          {availableCurrencies ? (\n            <>\n              <h1 className=\"fuente\"> Nueva billetera </h1>\n              <form onSubmit={handleSubmit} style={{ width: \"100%\" }}>\n                <InputForm\n                  clase=\"nameWallet containerInputComponent\"\n                  type=\"text\"\n                  label=\"Nombra tu nueva billetera\"\n                  placeholder=\"Billetera de trading\"\n                  name=\"name\"\n                  actualizarEstado={actualizarEstado}\n                  active={name && currency}\n                  autoFocus={true}\n                  // value={name}\n                />\n                <ItemSelectionContainer\n                  type=\"coins\"\n                  label=\"¿Cúal moneda manejarás en tu billetera?\"\n                  itemSelect={currency}\n                  actualizarEstado={actualizarEstado}\n                  update_control_form={props.update_control_form}\n                  items={availableCurrencies}\n                  clearItem={clearCurrency}\n                />\n                <InputButton\n                  id={idForNewWalletButton}\n                  label=\"Crear Billetera\"\n                  type=\"primary\"\n                  active={name && currency}\n                />\n              </form>\n            </>\n          ) : (\n            <NewWalletSkeleton />\n          )}\n        </div>\n      )}\n\n      {step === 2 && (\n        <div className=\"step2\">\n          {loader ? (\n            <SimpleLoader label={`Creando wallet ${currency}`} />\n          ) : (\n            <section className=\"stepFinish\">\n              <div className=\"nWCabeza\">\n                <div className=\"icon icon--order-success svg\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"72px\"\n                    height=\"72px\"\n                    alt=\"\"\n                  >\n                    <g fill=\"none\" stroke=\"white\" strokeWidth=\"3\">\n                      <circle cx=\"36\" cy=\"36\" r=\"35\"></circle>\n                      <path\n                        className=\"check\"\n                        d=\"M17.417,37.778l9.93,9.909l25.444-25.393\"\n                      ></path>\n                    </g>\n                  </svg>\n                </div>\n                <p className=\"titleWhite fuente\"> Operación Exitosa</p>\n              </div>\n\n              <div className=\"nWbody fuente\">\n                <div className=\"nWadress\">\n                  <div className=\"nWname\">\n                    {short_currency_name !== \"\" && (\n                      <img\n                        className=\"itemFuera\"\n                        src={require(`../../../assets/coins/${short_currency_name}.png`)}\n                        width=\"30\"\n                        alt=\"\"\n                      />\n                    )}\n                    <p>Nueva wallet de {props.currency} creada</p>\n                  </div>\n                  <p>{name}</p>\n                  <img className=\"itemFuera\" src={qr} width=\"180\" alt=\"\" />\n                  <CopyContainer valueToCopy={address} color=\"white\" />\n                </div>\n              </div>\n\n              <div className=\"nWcta\">\n                <ButtonSuccess\n                  id=\"add-new-wallet-button\"\n                  toggleModal={props.finalizar}\n                >\n                  Finalizar\n                </ButtonSuccess>\n              </div>\n            </section>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NewWalletLayout;\n","import React, { useEffect, useState } from \"react\";\nimport NewWalletLayout from \"./newWalletLayout\";\nimport { connect } from \"react-redux\";\n// import { updateFormControl, FormWallet } from '../../../actions'\nimport { bindActionCreators } from \"redux\";\nimport actions from \"../../../actions\";\nimport { matchItem } from \"../../../utils\";\nimport { useCoinsendaServices } from \"../../../services/useCoinsendaServices\";\nimport useToastMessage from \"../../../hooks/useToastMessage\";\n\nconst NewWallet = (props) => {\n  const [name, setName] = useState();\n  const [currency, setCurrency] = useState(\n    props.search.length && props.search[0].currency\n  );\n  const [address] = useState();\n  const [short_currency_name, setShortCurrencyName] = useState();\n  const [coinsendaServices] = useCoinsendaServices();\n  const [toastMessage] = useToastMessage();\n\n  const update_control_form = (searchMatch) => {\n    // if (!searchMatch || props.search.length > 1) {\n    //   props.action.UpdateFormControl('wallet', false)\n    // }\n    // if (name !== \"\" && props.search.length === 1) {\n    //   props.action.UpdateFormControl('wallet', true)\n    // }\n  };\n\n  const clearCurrency = () => {\n    setCurrency(null);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.action.isAppLoading(true);\n    siguiente();\n    actualizarEstado(event);\n    crearWallet();\n  };\n\n  const crearWallet = async () => {\n    // simulación Endpoint Crear wallet\n    const { user, currencies } = props;\n\n    let get_currency = await matchItem(\n      currencies,\n      { primary: currency },\n      \"currency\"\n    );\n\n    const body = {\n      data: {\n        name: name,\n        description: \"description\",\n        country: user && user.country,\n        enabled: true,\n        currency: {\n          currency: get_currency[0].currency,\n          is_token: get_currency[0].is_token,\n        },\n      },\n    };\n\n    const wallets = await coinsendaServices.createWallet(body);\n\n    if (!wallets) {\n      return errorHandle(\"Error al crear la billetera...\");\n    }\n    await coinsendaServices.getWalletsByUser();\n    const { account } = wallets;\n\n    const dep_prov = await coinsendaServices.createAndInsertDepositProvider(\n      account\n    );\n\n    if (!dep_prov) {\n      return errorHandle(\n        \"Error al crear el proveedor de deposito de la billetera...\"\n      );\n    }\n\n    // si la acción se lleva satisfactoriamente actualizamos el fondo del modal a un color verde\n    let msg = `Nueva wallet ${account.currency.currency} creada!`;\n    toastMessage(msg, \"success\");\n\n    // await props.action.add_item_state('wallets', { ...account, visible: true })\n    // await props.action.get_account_balances(props.user)\n    // return console.log('=================> CREATE WALLET CURRENCIE=>', wallets)\n\n    props.action.isAppLoading(false);\n    props.action.success_sound();\n    await props.action.toggleModal();\n    await props.action.CleanForm(\"wallet\");\n\n    return props.history.push(`/wallets/deposit/${account.id}`);\n  };\n\n  const errorHandle = (msg) => {\n    props.action.ReduceStep(\"wallets\");\n    props.action.isAppLoading(false);\n    return toastMessage(\n      msg ? msg : \"Ups, al parecer esto no podrá ser...\",\n      \"error\"\n    );\n  };\n\n  const actualizarEstado = async (event) => {\n    if (event.target.short_name) {\n      await setShortCurrencyName(event.target.short_name);\n    }\n    const names = event.target.name;\n    const value = event.target.value;\n    // update_control_form(value)\n    // update_form()\n    switch (names) {\n      case \"name\":\n        return setName(value);\n      case \"currency\":\n        return setCurrency(value);\n      default:\n    }\n  };\n\n  const siguiente = () => {\n    return props.action.IncreaseStep(props.current);\n  };\n\n  const finalizar = (event) => {\n    // reiniciamos el estado del formulario(./reducers/form)\n    props.action.toggleModal();\n    props.action.CleanForm(\"wallet\");\n  };\n\n  useEffect(() => {\n    return () => props.action.CurrentForm(\"wallets\");\n  }, []);\n\n  let states = {\n    name,\n    currency,\n    address,\n    short_currency_name,\n  };\n\n  return (\n    <NewWalletLayout\n      clearCurrency={clearCurrency}\n      actualizarEstado={actualizarEstado}\n      handleSubmit={handleSubmit}\n      update_control_form={update_control_form}\n      buttonActive={props.buttonActive}\n      loader={props.loader}\n      finalizar={finalizar}\n      step={props.step}\n      {...states}\n      {...props}\n    />\n  );\n};\n\nfunction mapStateToProps(state, props) {\n  const user = state.modelData.user;\n\n  return {\n    search: state.form.search_coin,\n    form_wallet: state.form.form_wallet,\n    buttonActive: state.form.form_control_wallet,\n    loader: state.isLoading.loader,\n    step: state.form.form_wallet.step,\n    current: state.form.current,\n    user,\n    state: state.modelData,\n    currencies: state.modelData.currencies,\n    wallets: state.modelData.wallets,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    action: bindActionCreators(actions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewWallet);\n"],"sourceRoot":""}